

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sun May 15 15:44:00 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    86  0000                     
    87                           ; Version 2.20
    88                           ; Generated 05/05/2020 GMT
    89                           ; 
    90                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F25K80 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     
   122 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   123  0000                     
   124 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   125  0000                     
   126 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   127  0000                     
   128                           	psect	idataBANK0
   129  002920                     __pidataBANK0:
   130                           	callstack 0
   131                           
   132                           ;initializer for _activation
   133  002920  01                 	db	1
   134                           
   135                           ;initializer for _start
   136  002921  01                 	db	1
   137                           
   138                           ;initializer for _first
   139  002922  02                 	db	2
   140                           
   141                           ;initializer for _plat
   142  002923  02                 	db	2
   143                           
   144                           ;initializer for _minute
   145  002924  02                 	db	2
   146                           
   147                           ;initializer for _sec5
   148  002925  02                 	db	2
   149                           
   150                           ;initializer for _EtatE
   151  002926  03                 	db	3
   152                           
   153                           ;initializer for _EtatN
   154  002927  05                 	db	5
   155  0000                     _TMR2	set	4044
   156  0000                     _T3CON	set	4017
   157  0000                     _TMR3L	set	4018
   158  0000                     _TMR3H	set	4019
   159  0000                     _T3GCON	set	4016
   160  0000                     _TMR0L	set	4054
   161  0000                     _TMR0H	set	4055
   162  0000                     _T1CON	set	4045
   163  0000                     _TMR1L	set	4046
   164  0000                     _TMR1H	set	4047
   165  0000                     _OSCCON2	set	4050
   166  0000                     _OSCCON	set	4051
   167  0000                     _TXREG1	set	4013
   168  0000                     _RCREG1	set	4014
   169  0000                     _SPBRG1	set	4015
   170  0000                     _TXSTA1	set	4012
   171                           
   172                           	psect	nvCOMRAM
   173  000058                     __pnvCOMRAM:
   174                           	callstack 0
   175  000058                     _timer0ReloadVal:
   176                           	callstack 0
   177  000058                     	ds	2
   178                           
   179                           	psect	nvBANK0
   180  0000CE                     __pnvBANK0:
   181                           	callstack 0
   182  0000CE                     _TMR2_InterruptHandler:
   183                           	callstack 0
   184  0000CE                     	ds	2
   185  0000D0                     _TMR3_InterruptHandler:
   186                           	callstack 0
   187  0000D0                     	ds	2
   188  0000D2                     _timer3ReloadVal:
   189                           	callstack 0
   190  0000D2                     	ds	2
   191  0000D4                     _TMR0_InterruptHandler:
   192                           	callstack 0
   193  0000D4                     	ds	2
   194  0000D6                     _TMR1_InterruptHandler:
   195                           	callstack 0
   196  0000D6                     	ds	2
   197  0000D8                     _timer1ReloadVal:
   198                           	callstack 0
   199  0000D8                     	ds	2
   200  0000DA                     _EUSART1_ErrorHandler:
   201                           	callstack 0
   202  0000DA                     	ds	2
   203  0000DC                     _EUSART1_OverrunErrorHandler:
   204                           	callstack 0
   205  0000DC                     	ds	2
   206  0000DE                     _EUSART1_FramingErrorHandler:
   207                           	callstack 0
   208  0000DE                     	ds	2
   209  0000E0                     _LCD_Mode:
   210                           	callstack 0
   211  0000E0                     	ds	1
   212  0000                     _LATBbits	set	3978
   213  0000                     _T2CONbits	set	4042
   214  0000                     _T3GCONbits	set	4016
   215  0000                     _T3CONbits	set	4017
   216  0000                     _T0CON	set	4053
   217  0000                     _T1GCONbits	set	4010
   218  0000                     _T1CONbits	set	4045
   219  0000                     _RCSTA1bits	set	4011
   220  0000                     _TXSTA1bits	set	4012
   221  0000                     _WPUB	set	3931
   222  0000                     _ANCON1	set	3932
   223  0000                     _ANCON0	set	3933
   224  0000                     _LATA	set	3977
   225  0000                     _TRISA	set	3986
   226  0000                     _LATC	set	3979
   227  0000                     _LATB	set	3978
   228  0000                     _REFOCON	set	3994
   229  0000                     _OSCTUNE	set	3995
   230  0000                     _PIR1bits	set	3998
   231  0000                     _BAUDCON1	set	4007
   232  0000                     _INTCON2bits	set	4081
   233  0000                     _TRISC	set	3988
   234  0000                     _TRISB	set	3987
   235  0000                     _SPBRGH1	set	3965
   236  0000                     _INTCONbits	set	4082
   237  0000                     _T1GCON	set	4010
   238  0000                     _RCSTA1	set	4011
   239  0000                     _PORTBbits	set	3969
   240  0000                     _PIE2bits	set	4000
   241  0000                     _PIR2bits	set	4001
   242  0000                     _T0CONbits	set	4053
   243  0000                     _PIE1bits	set	3997
   244  0000                     _RCONbits	set	4048
   245  0000                     _T2CON	set	4042
   246  0000                     _PR2	set	4043
   247                           
   248                           	psect	smallconst
   249  000F00                     __psmallconst:
   250                           	callstack 0
   251  000F00  00                 	db	0
   252  000F01                     STR_1:
   253                           
   254                           ; BSR set to: 0
   255  000F01  20                 	db	32
   256  000F02  20                 	db	32
   257  000F03  20                 	db	32
   258  000F04  20                 	db	32
   259  000F05  20                 	db	32
   260  000F06  20                 	db	32
   261  000F07  50                 	db	80	;'P'
   262  000F08  4F                 	db	79	;'O'
   263  000F09  53                 	db	83	;'S'
   264  000F0A  49                 	db	73	;'I'
   265  000F0B  54                 	db	84	;'T'
   266  000F0C  49                 	db	73	;'I'
   267  000F0D  4F                 	db	79	;'O'
   268  000F0E  4E                 	db	78	;'N'
   269  000F0F  53                 	db	83	;'S'
   270  000F10  20                 	db	32
   271  000F11  20                 	db	32
   272  000F12  20                 	db	32
   273  000F13  20                 	db	32
   274  000F14  20                 	db	32
   275  000F15  00                 	db	0
   276  000F16                     STR_2:
   277                           
   278                           ; BSR set to: 0
   279  000F16  58                 	db	88	;'X'
   280  000F17  20                 	db	32
   281  000F18  3D                 	db	61	;'='
   282  000F19  25                 	db	37
   283  000F1A  30                 	db	48	;'0'
   284  000F1B  34                 	db	52	;'4'
   285  000F1C  58                 	db	88	;'X'
   286  000F1D  20                 	db	32
   287  000F1E  73                 	db	115	;'s'
   288  000F1F  61                 	db	97	;'a'
   289  000F20  76                 	db	118	;'v'
   290  000F21  65                 	db	101	;'e'
   291  000F22  3A                 	db	58	;':'
   292  000F23  25                 	db	37
   293  000F24  30                 	db	48	;'0'
   294  000F25  34                 	db	52	;'4'
   295  000F26  58                 	db	88	;'X'
   296  000F27  00                 	db	0
   297  000F28                     STR_3:
   298                           
   299                           ; BSR set to: 0
   300  000F28  59                 	db	89	;'Y'
   301  000F29  20                 	db	32
   302  000F2A  3D                 	db	61	;'='
   303  000F2B  25                 	db	37
   304  000F2C  30                 	db	48	;'0'
   305  000F2D  34                 	db	52	;'4'
   306  000F2E  58                 	db	88	;'X'
   307  000F2F  20                 	db	32
   308  000F30  73                 	db	115	;'s'
   309  000F31  61                 	db	97	;'a'
   310  000F32  76                 	db	118	;'v'
   311  000F33  65                 	db	101	;'e'
   312  000F34  3A                 	db	58	;':'
   313  000F35  25                 	db	37
   314  000F36  30                 	db	48	;'0'
   315  000F37  34                 	db	52	;'4'
   316  000F38  58                 	db	88	;'X'
   317  000F39  00                 	db	0
   318  000F3A                     STR_4:
   319                           
   320                           ; BSR set to: 0
   321  000F3A  5A                 	db	90	;'Z'
   322  000F3B  20                 	db	32
   323  000F3C  3D                 	db	61	;'='
   324  000F3D  25                 	db	37
   325  000F3E  30                 	db	48	;'0'
   326  000F3F  34                 	db	52	;'4'
   327  000F40  58                 	db	88	;'X'
   328  000F41  20                 	db	32
   329  000F42  73                 	db	115	;'s'
   330  000F43  61                 	db	97	;'a'
   331  000F44  76                 	db	118	;'v'
   332  000F45  65                 	db	101	;'e'
   333  000F46  3A                 	db	58	;':'
   334  000F47  25                 	db	37
   335  000F48  30                 	db	48	;'0'
   336  000F49  34                 	db	52	;'4'
   337  000F4A  58                 	db	88	;'X'
   338  000F4B  00                 	db	0
   339  000F4C  00                 	db	0	; dummy byte at the end
   340  0000                     
   341                           ; #config settings
   342                           
   343                           	psect	cinit
   344  00230E                     __pcinit:
   345                           	callstack 0
   346  00230E                     start_initialization:
   347                           	callstack 0
   348  00230E                     __initialization:
   349                           	callstack 0
   350                           
   351                           ; Initialize objects allocated to BANK0 (8 bytes)
   352                           ; load TBLPTR registers with __pidataBANK0
   353  00230E  0E20               	movlw	low __pidataBANK0
   354  002310  6EF6               	movwf	tblptrl,c
   355  002312  0E29               	movlw	high __pidataBANK0
   356  002314  6EF7               	movwf	tblptrh,c
   357  002316  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   358  002318  6EF8               	movwf	tblptru,c
   359  00231A  EE00  F0F2         	lfsr	0,__pdataBANK0
   360  00231E  EE10 F008          	lfsr	1,8
   361  002322                     copy_data0:
   362  002322  0009               	tblrd		*+
   363  002324  CFF5 FFEE          	movff	tablat,postinc0
   364  002328  50E5               	movf	postdec1,w,c
   365  00232A  50E1               	movf	fsr1l,w,c
   366  00232C  E1FA               	bnz	copy_data0
   367                           
   368                           ; Clear objects allocated to BANK0 (110 bytes)
   369  00232E  EE00  F060         	lfsr	0,__pbssBANK0
   370  002332  0E6E               	movlw	110
   371  002334                     clear_0:
   372  002334  6AEE               	clrf	postinc0,c
   373  002336  06E8               	decf	wreg,f,c
   374  002338  E1FD               	bnz	clear_0
   375                           
   376                           ; Clear objects allocated to COMRAM (3 bytes)
   377  00233A  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   378  00233C  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   379  00233E  6A55               	clrf	__pbssCOMRAM& (0+255),c
   380  002340                     end_of_initialization:
   381                           	callstack 0
   382  002340                     __end_of__initialization:
   383                           	callstack 0
   384  002340  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   385  002342  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   386  002344  0E00               	movlw	low (__Lmediumconst shr (0+16))
   387  002346  6EF8               	movwf	tblptru,c
   388  002348  0100               	movlb	0
   389  00234A  EFAB  F010         	goto	_main	;jump to C main() function
   390                           
   391                           	psect	bssCOMRAM
   392  000055                     __pbssCOMRAM:
   393                           	callstack 0
   394  000055                     _flags:
   395                           	callstack 0
   396  000055                     	ds	2
   397  000057                     _MINUTE:
   398                           	callstack 0
   399  000057                     	ds	1
   400                           
   401                           	psect	bssBANK0
   402  000060                     __pbssBANK0:
   403                           	callstack 0
   404  000060                     _trame:
   405                           	callstack 0
   406  000060                     	ds	19
   407  000073                     _SPZ:
   408                           	callstack 0
   409  000073                     	ds	4
   410  000077                     _SPY:
   411                           	callstack 0
   412  000077                     	ds	4
   413  00007B                     _SPX:
   414                           	callstack 0
   415  00007B                     	ds	4
   416  00007F                     _PZ:
   417                           	callstack 0
   418  00007F                     	ds	4
   419  000083                     _PY:
   420                           	callstack 0
   421  000083                     	ds	4
   422  000087                     _PX:
   423                           	callstack 0
   424  000087                     	ds	4
   425  00008B                     _t3:
   426                           	callstack 0
   427  00008B                     	ds	4
   428  00008F                     _t2:
   429                           	callstack 0
   430  00008F                     	ds	4
   431  000093                     _t1:
   432                           	callstack 0
   433  000093                     	ds	4
   434  000097                     _nout:
   435                           	callstack 0
   436  000097                     	ds	2
   437  000099                     _width:
   438                           	callstack 0
   439  000099                     	ds	2
   440  00009B                     _prec:
   441                           	callstack 0
   442  00009B                     	ds	2
   443  00009D                     _m:
   444                           	callstack 0
   445  00009D                     	ds	2
   446  00009F                     _Hx:
   447                           	callstack 0
   448  00009F                     	ds	2
   449  0000A1                     _i:
   450                           	callstack 0
   451  0000A1                     	ds	2
   452  0000A3                     TMR2_ISR@CountCallBack:
   453                           	callstack 0
   454  0000A3                     	ds	2
   455  0000A5                     TMR3_ISR@CountCallBack:
   456                           	callstack 0
   457  0000A5                     	ds	2
   458  0000A7                     TMR0_ISR@CountCallBack:
   459                           	callstack 0
   460  0000A7                     	ds	2
   461  0000A9                     TMR1_ISR@CountCallBack:
   462                           	callstack 0
   463  0000A9                     	ds	2
   464  0000AB                     _MinInt:
   465                           	callstack 0
   466  0000AB                     	ds	1
   467  0000AC                     _SECONDES_5:
   468                           	callstack 0
   469  0000AC                     	ds	1
   470  0000AD                     _eusart1RxLastError:
   471                           	callstack 0
   472  0000AD                     	ds	1
   473  0000AE                     _dbuf:
   474                           	callstack 0
   475  0000AE                     	ds	32
   476                           
   477                           	psect	dataBANK0
   478  0000F2                     __pdataBANK0:
   479                           	callstack 0
   480  0000F2                     _activation:
   481                           	callstack 0
   482  0000F2                     	ds	1
   483  0000F3                     _start:
   484                           	callstack 0
   485  0000F3                     	ds	1
   486  0000F4                     _first:
   487                           	callstack 0
   488  0000F4                     	ds	1
   489  0000F5                     _plat:
   490                           	callstack 0
   491  0000F5                     	ds	1
   492  0000F6                     _minute:
   493                           	callstack 0
   494  0000F6                     	ds	1
   495  0000F7                     _sec5:
   496                           	callstack 0
   497  0000F7                     	ds	1
   498  0000F8                     _EtatE:
   499                           	callstack 0
   500  0000F8                     	ds	1
   501  0000F9                     _EtatN:
   502                           	callstack 0
   503  0000F9                     	ds	1
   504                           
   505                           	psect	cstackBANK1
   506  000100                     __pcstackBANK1:
   507                           	callstack 0
   508  000100                     ?_printf:
   509                           	callstack 0
   510  000100                     printf@fmt:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x0
   514  000100                     	ds	10
   515                           
   516                           	psect	cstackBANK0
   517  0000E1                     __pcstackBANK0:
   518                           	callstack 0
   519  0000E1                     vfpfcnvrt@llu:
   520                           	callstack 0
   521                           
   522                           ; 8 bytes @ 0x0
   523  0000E1                     	ds	8
   524  0000E9                     vfpfcnvrt@c:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x8
   528  0000E9                     	ds	1
   529  0000EA                     vfpfcnvrt@done:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x9
   533  0000EA                     	ds	2
   534  0000EC                     ?_vfprintf:
   535                           	callstack 0
   536  0000EC                     vfprintf@fp:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0xB
   540  0000EC                     	ds	2
   541  0000EE                     vfprintf@fmt:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0xD
   545  0000EE                     	ds	2
   546  0000F0                     vfprintf@ap:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0xF
   550  0000F0                     	ds	2
   551                           
   552                           	psect	cstackCOMRAM
   553  000001                     __pcstackCOMRAM:
   554                           	callstack 0
   555  000001                     ??_Blink_:
   556  000001                     TMR1_WriteTimer@timerVal:
   557                           	callstack 0
   558  000001                     i2TMR3_WriteTimer@timerVal:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x0
   562  000001                     	ds	2
   563  000003                     ??_INTERRUPT_InterruptManager:
   564  000003                     
   565                           ; 1 bytes @ 0x2
   566  000003                     	ds	2
   567  000005                     ??_lamp_test:
   568  000005                     ?_strlen:
   569                           	callstack 0
   570  000005                     ?_isupper:
   571                           	callstack 0
   572  000005                     ?_isalpha:
   573                           	callstack 0
   574  000005                     ?_isdigit:
   575                           	callstack 0
   576  000005                     ?_isspace:
   577                           	callstack 0
   578  000005                     ?_islower:
   579                           	callstack 0
   580  000005                     ?___wmul:
   581                           	callstack 0
   582  000005                     EUSART1_Write@txData:
   583                           	callstack 0
   584  000005                     TMR2_WriteTimer@timerVal:
   585                           	callstack 0
   586  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   587                           	callstack 0
   588  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   589                           	callstack 0
   590  000005                     EUSART1_SetErrorHandler@interruptHandler:
   591                           	callstack 0
   592  000005                     TMR1_SetInterruptHandler@InterruptHandler:
   593                           	callstack 0
   594  000005                     TMR0_SetInterruptHandler@InterruptHandler:
   595                           	callstack 0
   596  000005                     TMR3_WriteTimer@timerVal:
   597                           	callstack 0
   598  000005                     TMR3_SetInterruptHandler@InterruptHandler:
   599                           	callstack 0
   600  000005                     TMR2_SetInterruptHandler@InterruptHandler:
   601                           	callstack 0
   602  000005                     ___wmul@multiplier:
   603                           	callstack 0
   604  000005                     isalpha@c:
   605                           	callstack 0
   606  000005                     isdigit@c:
   607                           	callstack 0
   608  000005                     isspace@c:
   609                           	callstack 0
   610  000005                     isupper@c:
   611                           	callstack 0
   612  000005                     strlen@s:
   613                           	callstack 0
   614  000005                     islower@c:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x4
   618  000005                     	ds	1
   619  000006                     ??_lecture:
   620  000006                     putch@txData:
   621                           	callstack 0
   622  000006                     EUSART_function@hex:
   623                           	callstack 0
   624                           
   625                           ; 1 bytes @ 0x5
   626  000006                     	ds	1
   627  000007                     ??_TMR3_Initialize:
   628  000007                     ??_TMR1_Initialize:
   629  000007                     ??_TMR0_Initialize:
   630  000007                     ??_isupper:
   631  000007                     ??_isalpha:
   632  000007                     ??_isdigit:
   633  000007                     ??_isspace:
   634  000007                     ??_islower:
   635  000007                     LCD_Function@x:
   636                           	callstack 0
   637  000007                     lamp_test@k:
   638                           	callstack 0
   639  000007                     ___wmul@multiplicand:
   640                           	callstack 0
   641  000007                     fputc@c:
   642                           	callstack 0
   643  000007                     strlen@a:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x6
   647  000007                     	ds	1
   648  000008                     LCD_Function@z:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x7
   652  000008                     	ds	1
   653  000009                     ??_LCD_Function:
   654  000009                     lamp_test@j_1590:
   655                           	callstack 0
   656  000009                     ___wmul@product:
   657                           	callstack 0
   658  000009                     fputc@fp:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x8
   662  000009                     	ds	2
   663  00000B                     ??_fputc:
   664  00000B                     ?_toupper:
   665                           	callstack 0
   666  00000B                     LCD_Function@ordre:
   667                           	callstack 0
   668  00000B                     _isspace$2197:
   669                           	callstack 0
   670  00000B                     lamp_test@j:
   671                           	callstack 0
   672  00000B                     toupper@c:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0xA
   676  00000B                     	ds	1
   677  00000C                     ?_atoi:
   678                           	callstack 0
   679  00000C                     atoi@s:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0xB
   683  00000C                     	ds	1
   684  00000D                     ??_toupper:
   685  00000D                     lamp_test@j_1588:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0xC
   689  00000D                     	ds	1
   690  00000E                     ??_atoi:
   691                           
   692                           ; 1 bytes @ 0xD
   693  00000E                     	ds	2
   694  000010                     fputs@s:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0xF
   698  000010                     	ds	2
   699  000012                     atoi@neg:
   700                           	callstack 0
   701  000012                     fputs@fp:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x11
   705  000012                     	ds	2
   706  000014                     fputs@c:
   707                           	callstack 0
   708  000014                     atoi@n:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x13
   712  000014                     	ds	1
   713  000015                     fputs@i:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x14
   717  000015                     	ds	2
   718  000017                     ?_pad:
   719                           	callstack 0
   720  000017                     pad@fp:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x16
   724  000017                     	ds	2
   725  000019                     pad@buf:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x18
   729  000019                     	ds	2
   730  00001B                     pad@p:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x1A
   734  00001B                     	ds	2
   735  00001D                     ??_pad:
   736                           
   737                           ; 1 bytes @ 0x1C
   738  00001D                     	ds	1
   739  00001E                     pad@i:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x1D
   743  00001E                     	ds	2
   744  000020                     pad@w:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x1F
   748  000020                     	ds	2
   749  000022                     ?_xtoa:
   750                           	callstack 0
   751  000022                     xtoa@fp:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x21
   755  000022                     	ds	2
   756  000024                     xtoa@d:
   757                           	callstack 0
   758                           
   759                           ; 8 bytes @ 0x23
   760  000024                     	ds	8
   761  00002C                     xtoa@x:
   762                           	callstack 0
   763                           
   764                           ; 1 bytes @ 0x2B
   765  00002C                     	ds	1
   766  00002D                     ??_xtoa:
   767                           
   768                           ; 1 bytes @ 0x2C
   769  00002D                     	ds	8
   770  000035                     xtoa@p:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x34
   774  000035                     	ds	2
   775  000037                     xtoa@w:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x36
   779  000037                     	ds	2
   780  000039                     xtoa@n:
   781                           	callstack 0
   782                           
   783                           ; 8 bytes @ 0x38
   784  000039                     	ds	8
   785  000041                     xtoa@i:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x40
   789  000041                     	ds	2
   790  000043                     xtoa@c:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x42
   794  000043                     	ds	2
   795  000045                     ?_vfpfcnvrt:
   796                           	callstack 0
   797  000045                     vfpfcnvrt@fp:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x44
   801  000045                     	ds	2
   802  000047                     vfpfcnvrt@fmt:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x46
   806  000047                     	ds	2
   807  000049                     vfpfcnvrt@ap:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x48
   811  000049                     	ds	2
   812  00004B                     ??_vfpfcnvrt:
   813                           
   814                           ; 1 bytes @ 0x4A
   815  00004B                     	ds	4
   816  00004F                     vfprintf@cfmt:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x4E
   820  00004F                     	ds	2
   821  000051                     printf@ap:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x50
   825  000051                     	ds	2
   826  000053                     ??_traitementEcran:
   827  000053                     ??_traitementNormale:
   828  000053                     
   829                           ; 1 bytes @ 0x52
   830  000053                     	ds	2
   831  000055                     
   832                           ; 1 bytes @ 0x54
   833 ;;
   834 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   835 ;;
   836 ;; *************** function _main *****************
   837 ;; Defined at:
   838 ;;		line 95 in file "main.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;		None
   841 ;; Auto vars:     Size  Location     Type
   842 ;;		None
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   856 ;;Total ram usage:        0 bytes
   857 ;; Hardware stack levels required when called: 16
   858 ;; This function calls:
   859 ;;		_SYSTEM_Initialize
   860 ;;		_TMR0_SetInterruptHandler
   861 ;;		_TMR1_SetInterruptHandler
   862 ;;		_TMR3_SetInterruptHandler
   863 ;;		_affiche
   864 ;;		_lamp_test
   865 ;;		_traitementEcran
   866 ;;		_traitementNormale
   867 ;; This function is called by:
   868 ;;		Startup code after reset
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text0
   873  002156                     __ptext0:
   874                           	callstack 0
   875  002156                     _main:
   876                           	callstack 15
   877  002156                     
   878                           ;main.c: 98:     SYSTEM_Initialize();
   879  002156  EC02  F014         	call	_SYSTEM_Initialize	;wreg free
   880                           
   881                           ;main.c: 101:     TMR0_SetInterruptHandler(Minute);
   882  00215A  0E62               	movlw	low _Minute
   883  00215C  6E05               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   884  00215E  0E28               	movlw	high _Minute
   885  002160  6E06               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   886  002162  EC7C  F014         	call	_TMR0_SetInterruptHandler	;wreg free
   887                           
   888                           ;main.c: 102:     TMR1_SetInterruptHandler(Blink_);
   889  002166  0E5C               	movlw	low _Blink_
   890  002168  6E05               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
   891  00216A  0E15               	movlw	high _Blink_
   892  00216C  6E06               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
   893  00216E  EC77  F014         	call	_TMR1_SetInterruptHandler	;wreg free
   894                           
   895                           ;main.c: 103:     TMR3_SetInterruptHandler(Secondes_5);
   896  002172  0E7E               	movlw	low _Secondes_5
   897  002174  6E05               	movwf	TMR3_SetInterruptHandler@InterruptHandler^0,c
   898  002176  0E28               	movlw	high _Secondes_5
   899  002178  6E06               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)^0,c
   900  00217A  EC6D  F014         	call	_TMR3_SetInterruptHandler	;wreg free
   901  00217E                     
   902                           ;main.c: 105:     (INTCONbits.GIE = 1);
   903  00217E  8EF2               	bsf	242,7,c	;volatile
   904  002180                     
   905                           ;main.c: 106:     (INTCONbits.PEIE = 1);
   906  002180  8CF2               	bsf	242,6,c	;volatile
   907  002182                     
   908                           ;main.c: 108:     LCD_Mode = PORTBbits.RB3 ? 0 : 1;
   909  002182  A681               	btfss	129,3,c	;volatile
   910  002184  EFC6  F010         	goto	u3021
   911  002188  EFC9  F010         	goto	u3020
   912  00218C                     u3021:
   913  00218C  0E01               	movlw	1
   914  00218E  EFCA  F010         	goto	u3030
   915  002192                     u3020:
   916  002192  0E00               	movlw	0
   917  002194                     u3030:
   918  002194  0100               	movlb	0	; () banked
   919  002196  6FE0               	movwf	_LCD_Mode& (0+255),b
   920  002198                     
   921                           ; BSR set to: 0
   922                           ;main.c: 111:     lamp_test();
   923  002198  EC02  F00E         	call	_lamp_test	;wreg free
   924  00219C                     
   925                           ;main.c: 113:         if(LCD_Mode){
   926  00219C  0100               	movlb	0	; () banked
   927  00219E  51E0               	movf	_LCD_Mode& (0+255),w,b
   928  0021A0  B4D8               	btfsc	status,2,c
   929  0021A2  EFD5  F010         	goto	u3041
   930  0021A6  EFD7  F010         	goto	u3040
   931  0021AA                     u3041:
   932  0021AA  EFDF  F010         	goto	l4195
   933  0021AE                     u3040:
   934  0021AE                     
   935                           ; BSR set to: 0
   936                           ;main.c: 114:             EtatE = ReceptionE;
   937  0021AE  0E00               	movlw	0
   938  0021B0  6FF8               	movwf	_EtatE& (0+255),b
   939  0021B2                     l4191:
   940                           
   941                           ;main.c: 116:                 affiche();
   942  0021B2  EC4A  F00F         	call	_affiche	;wreg free
   943  0021B6                     
   944                           ;main.c: 117:                 traitementEcran();
   945  0021B6  ECBF  F00B         	call	_traitementEcran	;wreg free
   946  0021BA  EFD9  F010         	goto	l4191
   947  0021BE                     l4195:
   948                           
   949                           ; BSR set to: 0
   950                           ;main.c: 120:             EtatN = Reception;
   951  0021BE  0E00               	movlw	0
   952  0021C0  6FF9               	movwf	_EtatN& (0+255),b
   953  0021C2                     l4197:
   954                           
   955                           ;main.c: 122:                 affiche();
   956  0021C2  EC4A  F00F         	call	_affiche	;wreg free
   957  0021C6                     
   958                           ;main.c: 123:                 traitementNormale();
   959  0021C6  EC14  F010         	call	_traitementNormale	;wreg free
   960  0021CA  EFE1  F010         	goto	l4197
   961  0021CE  EF5E  F000         	goto	start
   962  0021D2                     __end_of_main:
   963                           	callstack 0
   964                           
   965 ;; *************** function _traitementNormale *****************
   966 ;; Defined at:
   967 ;;		line 246 in file "main.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;		None
   970 ;; Auto vars:     Size  Location     Type
   971 ;;		None
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   983 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   984 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   985 ;;Total ram usage:        2 bytes
   986 ;; Hardware stack levels used: 1
   987 ;; Hardware stack levels required when called: 15
   988 ;; This function calls:
   989 ;;		_TMR3_WriteTimer
   990 ;;		_reception_affichage
   991 ;; This function is called by:
   992 ;;		_main
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text1
   997  002028                     __ptext1:
   998                           	callstack 0
   999  002028                     _traitementNormale:
  1000                           	callstack 15
  1001  002028                     
  1002                           ;main.c: 247:     switch(EtatN){
  1003  002028  EF3D  F010         	goto	l4173
  1004  00202C                     l4155:
  1005                           
  1006                           ;main.c: 250:                     reception_affichage();
  1007  00202C  EC13  F014         	call	_reception_affichage	;wreg free
  1008  002030                     l4157:
  1009                           
  1010                           ;main.c: 249:                 while(PORTBbits.RB3){
  1011  002030  B681               	btfsc	129,3,c	;volatile
  1012  002032  EF1D  F010         	goto	u3001
  1013  002036  EF1F  F010         	goto	u3000
  1014  00203A                     u3001:
  1015  00203A  EF16  F010         	goto	l4155
  1016  00203E                     u3000:
  1017  00203E                     
  1018                           ;main.c: 252:                 EtatN = Actif;
  1019  00203E  0E02               	movlw	2
  1020  002040  0100               	movlb	0	; () banked
  1021  002042  6FF9               	movwf	_EtatN& (0+255),b
  1022                           
  1023                           ;main.c: 253:                 break;
  1024  002044  EF5F  F010         	goto	l659
  1025  002048                     l4161:
  1026                           
  1027                           ; BSR set to: 0
  1028                           ;main.c: 259:                 if(sec5 == idle){
  1029  002048  0E02               	movlw	2
  1030  00204A  19F7               	xorwf	_sec5& (0+255),w,b
  1031  00204C  A4D8               	btfss	status,2,c
  1032  00204E  EF2B  F010         	goto	u3011
  1033  002052  EF2D  F010         	goto	u3010
  1034  002056                     u3011:
  1035  002056  EF39  F010         	goto	l4169
  1036  00205A                     u3010:
  1037  00205A                     
  1038                           ; BSR set to: 0
  1039  00205A  928A               	bcf	138,1,c	;volatile
  1040  00205C                     
  1041                           ; BSR set to: 0
  1042                           ;main.c: 261:                     TMR3_WriteTimer(0);
  1043  00205C  0E00               	movlw	0
  1044  00205E  6E06               	movwf	(TMR3_WriteTimer@timerVal+1)^0,c
  1045  002060  0E00               	movlw	0
  1046  002062  6E05               	movwf	TMR3_WriteTimer@timerVal^0,c
  1047  002064  EC9F  F013         	call	_TMR3_WriteTimer	;wreg free
  1048  002068                     
  1049                           ;main.c: 262:                     sec5 = Oui;
  1050  002068  0E00               	movlw	0
  1051  00206A  0100               	movlb	0	; () banked
  1052  00206C  6FF7               	movwf	_sec5& (0+255),b
  1053  00206E                     
  1054                           ; BSR set to: 0
  1055                           ;main.c: 263:                     minute = Oui;
  1056  00206E  0E00               	movlw	0
  1057  002070  6FF6               	movwf	_minute& (0+255),b
  1058  002072                     l4169:
  1059                           
  1060                           ;main.c: 266:                     reception_affichage();
  1061  002072  EC13  F014         	call	_reception_affichage	;wreg free
  1062  002076  EF39  F010         	goto	l4169
  1063  00207A                     l4173:
  1064  00207A  0100               	movlb	0	; () banked
  1065  00207C  51F9               	movf	_EtatN& (0+255),w,b
  1066  00207E  6E53               	movwf	??_traitementNormale^0,c
  1067  002080  6A54               	clrf	(??_traitementNormale+1)^0,c
  1068                           
  1069                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1070                           ; Switch size 1, requested type "simple"
  1071                           ; Number of cases is 1, Range of values is 0 to 0
  1072                           ; switch strategies available:
  1073                           ; Name         Instructions Cycles
  1074                           ; simple_byte            4     3 (average)
  1075                           ;	Chosen strategy is simple_byte
  1076  002082  5054               	movf	(??_traitementNormale+1)^0,w,c
  1077  002084  0A00               	xorlw	0	; case 0
  1078  002086  B4D8               	btfsc	status,2,c
  1079  002088  EF48  F010         	goto	l4411
  1080  00208C  EF5F  F010         	goto	l659
  1081  002090                     l4411:
  1082                           
  1083                           ; BSR set to: 0
  1084                           ; Switch size 1, requested type "simple"
  1085                           ; Number of cases is 5, Range of values is 0 to 4
  1086                           ; switch strategies available:
  1087                           ; Name         Instructions Cycles
  1088                           ; simple_byte           16     9 (average)
  1089                           ;	Chosen strategy is simple_byte
  1090  002090  5053               	movf	??_traitementNormale^0,w,c
  1091  002092  0A00               	xorlw	0	; case 0
  1092  002094  B4D8               	btfsc	status,2,c
  1093  002096  EF18  F010         	goto	l4157
  1094  00209A  0A01               	xorlw	1	; case 1
  1095  00209C  B4D8               	btfsc	status,2,c
  1096  00209E  EF5F  F010         	goto	l659
  1097  0020A2  0A03               	xorlw	3	; case 2
  1098  0020A4  B4D8               	btfsc	status,2,c
  1099  0020A6  EF24  F010         	goto	l4161
  1100  0020AA  0A01               	xorlw	1	; case 3
  1101  0020AC  B4D8               	btfsc	status,2,c
  1102  0020AE  EF5F  F010         	goto	l659
  1103  0020B2  0A07               	xorlw	7	; case 4
  1104  0020B4  B4D8               	btfsc	status,2,c
  1105  0020B6  EF5F  F010         	goto	l659
  1106  0020BA  EF5F  F010         	goto	l659
  1107  0020BE                     l659:
  1108                           
  1109                           ; BSR set to: 0
  1110  0020BE  0012               	return		;funcret
  1111  0020C0                     __end_of_traitementNormale:
  1112                           	callstack 0
  1113                           
  1114 ;; *************** function _TMR3_WriteTimer *****************
  1115 ;; Defined at:
  1116 ;;		line 120 in file "mcc_generated_files/tmr3.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;  timerVal        2    4[COMRAM] unsigned short 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, status,2
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1133 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1134 ;;Total ram usage:        2 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; Hardware stack levels required when called: 4
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		_traitementNormale
  1141 ;;		_TMR3_Reload
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text2
  1146  00273E                     __ptext2:
  1147                           	callstack 0
  1148  00273E                     _TMR3_WriteTimer:
  1149                           	callstack 25
  1150  00273E                     
  1151                           ;mcc_generated_files/tmr3.c: 120: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 121: {;mcc_generated_files/tmr3.c: 122:     if (T3CONbits.nT3SYNC == 1)
  1152  00273E  A4B1               	btfss	177,2,c	;volatile
  1153  002740  EFA4  F013         	goto	u1961
  1154  002744  EFA6  F013         	goto	u1960
  1155  002748                     u1961:
  1156  002748  EFAE  F013         	goto	l3295
  1157  00274C                     u1960:
  1158  00274C                     
  1159                           ;mcc_generated_files/tmr3.c: 123:     {;mcc_generated_files/tmr3.c: 125:         T3CONbi
      +                          ts.TMR3ON = 0;
  1160  00274C  90B1               	bcf	177,0,c	;volatile
  1161  00274E                     
  1162                           ;mcc_generated_files/tmr3.c: 128:         TMR3H = (uint8_t)(timerVal >> 8);
  1163  00274E  5006               	movf	(TMR3_WriteTimer@timerVal+1)^0,w,c
  1164  002750  6EB3               	movwf	179,c	;volatile
  1165  002752                     
  1166                           ;mcc_generated_files/tmr3.c: 129:         TMR3L = (uint8_t)timerVal;
  1167  002752  C005  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
  1168  002756                     
  1169                           ;mcc_generated_files/tmr3.c: 132:         T3CONbits.TMR3ON =1;
  1170  002756  80B1               	bsf	177,0,c	;volatile
  1171                           
  1172                           ;mcc_generated_files/tmr3.c: 133:     }
  1173  002758  EFB2  F013         	goto	l317
  1174  00275C                     l3295:
  1175                           
  1176                           ;mcc_generated_files/tmr3.c: 135:     {;mcc_generated_files/tmr3.c: 137:         TMR3H =
      +                           (uint8_t)(timerVal >> 8);
  1177  00275C  5006               	movf	(TMR3_WriteTimer@timerVal+1)^0,w,c
  1178  00275E  6EB3               	movwf	179,c	;volatile
  1179  002760                     
  1180                           ;mcc_generated_files/tmr3.c: 138:         TMR3L = (uint8_t)timerVal;
  1181  002760  C005  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
  1182  002764                     l317:
  1183  002764  0012               	return		;funcret
  1184  002766                     __end_of_TMR3_WriteTimer:
  1185                           	callstack 0
  1186                           
  1187 ;; *************** function _traitementEcran *****************
  1188 ;; Defined at:
  1189 ;;		line 284 in file "main.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;		None
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;		None
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1205 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1206 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1207 ;;Total ram usage:        2 bytes
  1208 ;; Hardware stack levels used: 1
  1209 ;; Hardware stack levels required when called: 15
  1210 ;; This function calls:
  1211 ;;		_reception_affichage
  1212 ;; This function is called by:
  1213 ;;		_main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text3
  1218  00177E                     __ptext3:
  1219                           	callstack 0
  1220  00177E                     _traitementEcran:
  1221                           	callstack 15
  1222  00177E                     
  1223                           ;main.c: 285:     switch(EtatE){
  1224  00177E  EF7B  F00C         	goto	l4147
  1225  001782                     l4109:
  1226                           
  1227                           ; BSR set to: 0
  1228                           ;main.c: 287:             plat = idle;
  1229  001782  0E02               	movlw	2
  1230  001784  6FF5               	movwf	_plat& (0+255),b
  1231  001786                     
  1232                           ; BSR set to: 0
  1233                           ;main.c: 288:             reception_affichage();
  1234  001786  EC13  F014         	call	_reception_affichage	;wreg free
  1235  00178A                     
  1236                           ;main.c: 289:             if( (PZ == 0x03ff) && (PX >= 0x0200) && (PX <= 0x0210) && (PY 
      +                          >= 0x0200) && (PY <= 0x0210)){
  1237  00178A  0100               	movlb	0	; () banked
  1238  00178C  297F               	incf	_PZ& (0+255),w,b
  1239  00178E  E109               	bnz	u2891
  1240  001790  0E03               	movlw	3
  1241  001792  1980               	xorwf	(_PZ+1)& (0+255),w,b
  1242  001794  1181               	iorwf	(_PZ+2)& (0+255),w,b
  1243  001796  1182               	iorwf	(_PZ+3)& (0+255),w,b
  1244  001798  A4D8               	btfss	status,2,c
  1245  00179A  EFD1  F00B         	goto	u2891
  1246  00179E  EFD3  F00B         	goto	u2890
  1247  0017A2                     u2891:
  1248  0017A2  EF95  F00C         	goto	l672
  1249  0017A6                     u2890:
  1250  0017A6                     
  1251                           ; BSR set to: 0
  1252  0017A6  BF8A               	btfsc	(_PX+3)& (0+255),7,b
  1253  0017A8  EFE0  F00B         	goto	u2901
  1254  0017AC  518A               	movf	(_PX+3)& (0+255),w,b
  1255  0017AE  1189               	iorwf	(_PX+2)& (0+255),w,b
  1256  0017B0  E109               	bnz	u2900
  1257  0017B2  0E02               	movlw	2
  1258  0017B4  5D88               	subwf	(_PX+1)& (0+255),w,b
  1259  0017B6  A0D8               	btfss	status,0,c
  1260  0017B8  EFE0  F00B         	goto	u2901
  1261  0017BC  EFE2  F00B         	goto	u2900
  1262  0017C0                     u2901:
  1263  0017C0  EF95  F00C         	goto	l672
  1264  0017C4                     u2900:
  1265  0017C4                     
  1266                           ; BSR set to: 0
  1267  0017C4  BF8A               	btfsc	(_PX+3)& (0+255),7,b
  1268  0017C6  EFF3  F00B         	goto	u2910
  1269  0017CA  518A               	movf	(_PX+3)& (0+255),w,b
  1270  0017CC  1189               	iorwf	(_PX+2)& (0+255),w,b
  1271  0017CE  E109               	bnz	u2911
  1272  0017D0  0E11               	movlw	17
  1273  0017D2  5D87               	subwf	_PX& (0+255),w,b
  1274  0017D4  0E02               	movlw	2
  1275  0017D6  5988               	subwfb	(_PX+1)& (0+255),w,b
  1276  0017D8  B0D8               	btfsc	status,0,c
  1277  0017DA  EFF1  F00B         	goto	u2911
  1278  0017DE  EFF3  F00B         	goto	u2910
  1279  0017E2                     u2911:
  1280  0017E2  EF95  F00C         	goto	l672
  1281  0017E6                     u2910:
  1282  0017E6                     
  1283                           ; BSR set to: 0
  1284  0017E6  BF86               	btfsc	(_PY+3)& (0+255),7,b
  1285  0017E8  EF00  F00C         	goto	u2921
  1286  0017EC  5186               	movf	(_PY+3)& (0+255),w,b
  1287  0017EE  1185               	iorwf	(_PY+2)& (0+255),w,b
  1288  0017F0  E109               	bnz	u2920
  1289  0017F2  0E02               	movlw	2
  1290  0017F4  5D84               	subwf	(_PY+1)& (0+255),w,b
  1291  0017F6  A0D8               	btfss	status,0,c
  1292  0017F8  EF00  F00C         	goto	u2921
  1293  0017FC  EF02  F00C         	goto	u2920
  1294  001800                     u2921:
  1295  001800  EF95  F00C         	goto	l672
  1296  001804                     u2920:
  1297  001804                     
  1298                           ; BSR set to: 0
  1299  001804  BF86               	btfsc	(_PY+3)& (0+255),7,b
  1300  001806  EF13  F00C         	goto	u2930
  1301  00180A  5186               	movf	(_PY+3)& (0+255),w,b
  1302  00180C  1185               	iorwf	(_PY+2)& (0+255),w,b
  1303  00180E  E109               	bnz	u2931
  1304  001810  0E11               	movlw	17
  1305  001812  5D83               	subwf	_PY& (0+255),w,b
  1306  001814  0E02               	movlw	2
  1307  001816  5984               	subwfb	(_PY+1)& (0+255),w,b
  1308  001818  B0D8               	btfsc	status,0,c
  1309  00181A  EF11  F00C         	goto	u2931
  1310  00181E  EF13  F00C         	goto	u2930
  1311  001822                     u2931:
  1312  001822  EF95  F00C         	goto	l672
  1313  001826                     u2930:
  1314  001826                     
  1315                           ; BSR set to: 0
  1316                           ;main.c: 290:             EtatE = Plat;
  1317  001826  0E02               	movlw	2
  1318  001828  6FF8               	movwf	_EtatE& (0+255),b
  1319  00182A  EF95  F00C         	goto	l672
  1320  00182E                     l4125:
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;main.c: 295:             plat = idle;
  1324  00182E  0E02               	movlw	2
  1325  001830  6FF5               	movwf	_plat& (0+255),b
  1326                           
  1327                           ;main.c: 298:             break;
  1328  001832  EF95  F00C         	goto	l672
  1329  001836                     l4127:
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;main.c: 300:             if(plat == idle){
  1333  001836  0E02               	movlw	2
  1334  001838  19F5               	xorwf	_plat& (0+255),w,b
  1335  00183A  A4D8               	btfss	status,2,c
  1336  00183C  EF22  F00C         	goto	u2941
  1337  001840  EF24  F00C         	goto	u2940
  1338  001844                     u2941:
  1339  001844  EF27  F00C         	goto	l4131
  1340  001848                     u2940:
  1341  001848                     
  1342                           ; BSR set to: 0
  1343  001848  8A8A               	bsf	138,5,c	;volatile
  1344  00184A                     
  1345                           ; BSR set to: 0
  1346                           ;main.c: 302:                 plat = Oui;
  1347  00184A  0E00               	movlw	0
  1348  00184C  6FF5               	movwf	_plat& (0+255),b
  1349  00184E                     l4131:
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;main.c: 304:                 reception_affichage();
  1353  00184E  EC13  F014         	call	_reception_affichage	;wreg free
  1354  001852                     
  1355                           ;main.c: 305:                 if( ((PZ == 0x03ff) && (PX >= 0x0200) && (PX <= 0x0210) &&
      +                           (PY >= 0x0200) && (PY <= 0x0210))){
  1356  001852  0100               	movlb	0	; () banked
  1357  001854  297F               	incf	_PZ& (0+255),w,b
  1358  001856  E109               	bnz	u2951
  1359  001858  0E03               	movlw	3
  1360  00185A  1980               	xorwf	(_PZ+1)& (0+255),w,b
  1361  00185C  1181               	iorwf	(_PZ+2)& (0+255),w,b
  1362  00185E  1182               	iorwf	(_PZ+3)& (0+255),w,b
  1363  001860  A4D8               	btfss	status,2,c
  1364  001862  EF35  F00C         	goto	u2951
  1365  001866  EF37  F00C         	goto	u2950
  1366  00186A                     u2951:
  1367  00186A  EF95  F00C         	goto	l672
  1368  00186E                     u2950:
  1369  00186E                     
  1370                           ; BSR set to: 0
  1371  00186E  BF8A               	btfsc	(_PX+3)& (0+255),7,b
  1372  001870  EF44  F00C         	goto	u2961
  1373  001874  518A               	movf	(_PX+3)& (0+255),w,b
  1374  001876  1189               	iorwf	(_PX+2)& (0+255),w,b
  1375  001878  E109               	bnz	u2960
  1376  00187A  0E02               	movlw	2
  1377  00187C  5D88               	subwf	(_PX+1)& (0+255),w,b
  1378  00187E  A0D8               	btfss	status,0,c
  1379  001880  EF44  F00C         	goto	u2961
  1380  001884  EF46  F00C         	goto	u2960
  1381  001888                     u2961:
  1382  001888  EF95  F00C         	goto	l672
  1383  00188C                     u2960:
  1384  00188C                     
  1385                           ; BSR set to: 0
  1386  00188C  BF8A               	btfsc	(_PX+3)& (0+255),7,b
  1387  00188E  EF57  F00C         	goto	u2970
  1388  001892  518A               	movf	(_PX+3)& (0+255),w,b
  1389  001894  1189               	iorwf	(_PX+2)& (0+255),w,b
  1390  001896  E109               	bnz	u2971
  1391  001898  0E11               	movlw	17
  1392  00189A  5D87               	subwf	_PX& (0+255),w,b
  1393  00189C  0E02               	movlw	2
  1394  00189E  5988               	subwfb	(_PX+1)& (0+255),w,b
  1395  0018A0  B0D8               	btfsc	status,0,c
  1396  0018A2  EF55  F00C         	goto	u2971
  1397  0018A6  EF57  F00C         	goto	u2970
  1398  0018AA                     u2971:
  1399  0018AA  EF95  F00C         	goto	l672
  1400  0018AE                     u2970:
  1401  0018AE                     
  1402                           ; BSR set to: 0
  1403  0018AE  BF86               	btfsc	(_PY+3)& (0+255),7,b
  1404  0018B0  EF64  F00C         	goto	u2981
  1405  0018B4  5186               	movf	(_PY+3)& (0+255),w,b
  1406  0018B6  1185               	iorwf	(_PY+2)& (0+255),w,b
  1407  0018B8  E109               	bnz	u2980
  1408  0018BA  0E02               	movlw	2
  1409  0018BC  5D84               	subwf	(_PY+1)& (0+255),w,b
  1410  0018BE  A0D8               	btfss	status,0,c
  1411  0018C0  EF64  F00C         	goto	u2981
  1412  0018C4  EF66  F00C         	goto	u2980
  1413  0018C8                     u2981:
  1414  0018C8  EF95  F00C         	goto	l672
  1415  0018CC                     u2980:
  1416  0018CC                     
  1417                           ; BSR set to: 0
  1418  0018CC  BF86               	btfsc	(_PY+3)& (0+255),7,b
  1419  0018CE  EF77  F00C         	goto	u2990
  1420  0018D2  5186               	movf	(_PY+3)& (0+255),w,b
  1421  0018D4  1185               	iorwf	(_PY+2)& (0+255),w,b
  1422  0018D6  E109               	bnz	u2991
  1423  0018D8  0E11               	movlw	17
  1424  0018DA  5D83               	subwf	_PY& (0+255),w,b
  1425  0018DC  0E02               	movlw	2
  1426  0018DE  5984               	subwfb	(_PY+1)& (0+255),w,b
  1427  0018E0  B0D8               	btfsc	status,0,c
  1428  0018E2  EF75  F00C         	goto	u2991
  1429  0018E6  EF77  F00C         	goto	u2990
  1430  0018EA                     u2991:
  1431  0018EA  EF95  F00C         	goto	l672
  1432  0018EE                     u2990:
  1433  0018EE                     
  1434                           ; BSR set to: 0
  1435                           ;main.c: 306:                 EtatE = ReceptionE;
  1436  0018EE  0E00               	movlw	0
  1437  0018F0  6FF8               	movwf	_EtatE& (0+255),b
  1438  0018F2  EF95  F00C         	goto	l672
  1439  0018F6                     l4147:
  1440  0018F6  0100               	movlb	0	; () banked
  1441  0018F8  51F8               	movf	_EtatE& (0+255),w,b
  1442  0018FA  6E53               	movwf	??_traitementEcran^0,c
  1443  0018FC  6A54               	clrf	(??_traitementEcran+1)^0,c
  1444                           
  1445                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1446                           ; Switch size 1, requested type "simple"
  1447                           ; Number of cases is 1, Range of values is 0 to 0
  1448                           ; switch strategies available:
  1449                           ; Name         Instructions Cycles
  1450                           ; simple_byte            4     3 (average)
  1451                           ;	Chosen strategy is simple_byte
  1452  0018FE  5054               	movf	(??_traitementEcran+1)^0,w,c
  1453  001900  0A00               	xorlw	0	; case 0
  1454  001902  B4D8               	btfsc	status,2,c
  1455  001904  EF86  F00C         	goto	l4413
  1456  001908  EF95  F00C         	goto	l672
  1457  00190C                     l4413:
  1458                           
  1459                           ; BSR set to: 0
  1460                           ; Switch size 1, requested type "simple"
  1461                           ; Number of cases is 3, Range of values is 0 to 2
  1462                           ; switch strategies available:
  1463                           ; Name         Instructions Cycles
  1464                           ; simple_byte           10     6 (average)
  1465                           ;	Chosen strategy is simple_byte
  1466  00190C  5053               	movf	??_traitementEcran^0,w,c
  1467  00190E  0A00               	xorlw	0	; case 0
  1468  001910  B4D8               	btfsc	status,2,c
  1469  001912  EFC1  F00B         	goto	l4109
  1470  001916  0A01               	xorlw	1	; case 1
  1471  001918  B4D8               	btfsc	status,2,c
  1472  00191A  EF17  F00C         	goto	l4125
  1473  00191E  0A03               	xorlw	3	; case 2
  1474  001920  B4D8               	btfsc	status,2,c
  1475  001922  EF1B  F00C         	goto	l4127
  1476  001926  EF95  F00C         	goto	l672
  1477  00192A                     l672:
  1478                           
  1479                           ; BSR set to: 0
  1480  00192A  0012               	return		;funcret
  1481  00192C                     __end_of_traitementEcran:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function _reception_affichage *****************
  1485 ;; Defined at:
  1486 ;;		line 319 in file "main.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1504 ;;Total ram usage:        0 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; Hardware stack levels required when called: 14
  1507 ;; This function calls:
  1508 ;;		_affiche
  1509 ;;		_lecture
  1510 ;; This function is called by:
  1511 ;;		_traitementNormale
  1512 ;;		_traitementEcran
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text4
  1517  002826                     __ptext4:
  1518                           	callstack 0
  1519  002826                     _reception_affichage:
  1520                           	callstack 15
  1521  002826                     
  1522                           ;main.c: 320:     RCSTA1bits.CREN = 1;
  1523  002826  88AB               	bsf	171,4,c	;volatile
  1524  002828                     l4103:
  1525  002828  EC96  F00C         	call	_lecture	;wreg free
  1526  00282C  0900               	iorlw	0
  1527  00282E  A4D8               	btfss	status,2,c
  1528  002830  EF1C  F014         	goto	u2881
  1529  002834  EF1E  F014         	goto	u2880
  1530  002838                     u2881:
  1531  002838  EF14  F014         	goto	l4103
  1532  00283C                     u2880:
  1533  00283C                     
  1534                           ;main.c: 322:     RCSTA1bits.CREN = 0;
  1535  00283C  98AB               	bcf	171,4,c	;volatile
  1536  00283E                     
  1537                           ;main.c: 323:     affiche();
  1538  00283E  EC4A  F00F         	call	_affiche	;wreg free
  1539  002842  0012               	return		;funcret
  1540  002844                     __end_of_reception_affichage:
  1541                           	callstack 0
  1542                           
  1543 ;; *************** function _lecture *****************
  1544 ;; Defined at:
  1545 ;;		line 326 in file "main.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      _Bool 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1561 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1562 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1563 ;;Total ram usage:        2 bytes
  1564 ;; Hardware stack levels used: 1
  1565 ;; Hardware stack levels required when called: 5
  1566 ;; This function calls:
  1567 ;;		_EUSART1_Read
  1568 ;;		_TMR2_WriteTimer
  1569 ;; This function is called by:
  1570 ;;		_reception_affichage
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text5
  1575  00192C                     __ptext5:
  1576                           	callstack 0
  1577  00192C                     _lecture:
  1578                           	callstack 23
  1579  00192C                     
  1580                           ;main.c: 327:     RCSTA1bits.CREN = 1;
  1581  00192C  88AB               	bsf	171,4,c	;volatile
  1582                           
  1583                           ;main.c: 328:      if (PIR1bits.RC1IF==1)
  1584  00192E  AA9E               	btfss	158,5,c	;volatile
  1585  001930  EF9C  F00C         	goto	u1861
  1586  001934  EF9E  F00C         	goto	u1860
  1587  001938                     u1861:
  1588  001938  EFA5  F00C         	goto	l3159
  1589  00193C                     u1860:
  1590  00193C                     
  1591                           ;main.c: 329:          Hx = EUSART1_Read();
  1592  00193C  EC75  F013         	call	_EUSART1_Read	;wreg free
  1593  001940  6E06               	movwf	??_lecture^0,c
  1594  001942  5006               	movf	??_lecture^0,w,c
  1595  001944  0100               	movlb	0	; () banked
  1596  001946  6F9F               	movwf	_Hx& (0+255),b
  1597  001948  6BA0               	clrf	(_Hx+1)& (0+255),b
  1598  00194A                     l3159:
  1599                           
  1600                           ;main.c: 330:      if(Hx == 0x7E){
  1601  00194A  0E7E               	movlw	126
  1602  00194C  0100               	movlb	0	; () banked
  1603  00194E  199F               	xorwf	_Hx& (0+255),w,b
  1604  001950  11A0               	iorwf	(_Hx+1)& (0+255),w,b
  1605  001952  A4D8               	btfss	status,2,c
  1606  001954  EFAE  F00C         	goto	u1871
  1607  001958  EFB0  F00C         	goto	u1870
  1608  00195C                     u1871:
  1609  00195C  EF55  F00D         	goto	l3193
  1610  001960                     u1870:
  1611  001960                     
  1612                           ; BSR set to: 0
  1613                           ;main.c: 331:         for(i=0;i<19;i++){
  1614  001960  0E00               	movlw	0
  1615  001962  6FA2               	movwf	(_i+1)& (0+255),b
  1616  001964  0E00               	movlw	0
  1617  001966  6FA1               	movwf	_i& (0+255),b
  1618  001968                     l3167:
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;main.c: 332:             trame[i]= EUSART1_Read();
  1622  001968  0E60               	movlw	low _trame
  1623  00196A  25A1               	addwf	_i& (0+255),w,b
  1624  00196C  6ED9               	movwf	fsr2l,c
  1625  00196E  0E00               	movlw	high _trame
  1626  001970  21A2               	addwfc	(_i+1)& (0+255),w,b
  1627  001972  6EDA               	movwf	fsr2h,c
  1628  001974  EC75  F013         	call	_EUSART1_Read	;wreg free
  1629  001978  6EDF               	movwf	indf2,c
  1630  00197A                     
  1631                           ;main.c: 333:         }
  1632  00197A  0100               	movlb	0	; () banked
  1633  00197C  4BA1               	infsnz	_i& (0+255),f,b
  1634  00197E  2BA2               	incf	(_i+1)& (0+255),f,b
  1635  001980                     
  1636                           ; BSR set to: 0
  1637  001980  BFA2               	btfsc	(_i+1)& (0+255),7,b
  1638  001982  EFCC  F00C         	goto	u1881
  1639  001986  51A2               	movf	(_i+1)& (0+255),w,b
  1640  001988  E109               	bnz	u1880
  1641  00198A  0E13               	movlw	19
  1642  00198C  5DA1               	subwf	_i& (0+255),w,b
  1643  00198E  A0D8               	btfss	status,0,c
  1644  001990  EFCC  F00C         	goto	u1881
  1645  001994  EFCE  F00C         	goto	u1880
  1646  001998                     u1881:
  1647  001998  EFB4  F00C         	goto	l3167
  1648  00199C                     u1880:
  1649  00199C                     
  1650                           ; BSR set to: 0
  1651                           ;main.c: 334:         t1=trame[12]<<8;
  1652  00199C  516C               	movf	(_trame+12)& (0+255),w,b
  1653  00199E  6E07               	movwf	(??_lecture+1)^0,c
  1654  0019A0  6A06               	clrf	??_lecture^0,c
  1655  0019A2  C006  F093         	movff	??_lecture,_t1
  1656  0019A6  C007  F094         	movff	??_lecture+1,_t1+1
  1657  0019AA  0E00               	movlw	0
  1658  0019AC  BF94               	btfsc	(_t1+1)& (0+255),7,b
  1659  0019AE  0EFF               	movlw	-1
  1660  0019B0  6F95               	movwf	(_t1+2)& (0+255),b
  1661  0019B2  6F96               	movwf	(_t1+3)& (0+255),b
  1662                           
  1663                           ;main.c: 335:         t2=trame[14]<<8;
  1664  0019B4  516E               	movf	(_trame+14)& (0+255),w,b
  1665  0019B6  6E07               	movwf	(??_lecture+1)^0,c
  1666  0019B8  6A06               	clrf	??_lecture^0,c
  1667  0019BA  C006  F08F         	movff	??_lecture,_t2
  1668  0019BE  C007  F090         	movff	??_lecture+1,_t2+1
  1669  0019C2  0E00               	movlw	0
  1670  0019C4  BF90               	btfsc	(_t2+1)& (0+255),7,b
  1671  0019C6  0EFF               	movlw	-1
  1672  0019C8  6F91               	movwf	(_t2+2)& (0+255),b
  1673  0019CA  6F92               	movwf	(_t2+3)& (0+255),b
  1674                           
  1675                           ;main.c: 336:         t3=trame[16]<<8;
  1676  0019CC  5170               	movf	(_trame+16)& (0+255),w,b
  1677  0019CE  6E07               	movwf	(??_lecture+1)^0,c
  1678  0019D0  6A06               	clrf	??_lecture^0,c
  1679  0019D2  C006  F08B         	movff	??_lecture,_t3
  1680  0019D6  C007  F08C         	movff	??_lecture+1,_t3+1
  1681  0019DA  0E00               	movlw	0
  1682  0019DC  BF8C               	btfsc	(_t3+1)& (0+255),7,b
  1683  0019DE  0EFF               	movlw	-1
  1684  0019E0  6F8D               	movwf	(_t3+2)& (0+255),b
  1685  0019E2  6F8E               	movwf	(_t3+3)& (0+255),b
  1686  0019E4                     
  1687                           ; BSR set to: 0
  1688                           ;main.c: 338:         if(PORTBbits.RB3==1 && EtatN == Reception){
  1689  0019E4  A681               	btfss	129,3,c	;volatile
  1690  0019E6  EFF7  F00C         	goto	u1891
  1691  0019EA  EFF9  F00C         	goto	u1890
  1692  0019EE                     u1891:
  1693  0019EE  EF27  F00D         	goto	l3181
  1694  0019F2                     u1890:
  1695  0019F2                     
  1696                           ; BSR set to: 0
  1697  0019F2  51F9               	movf	_EtatN& (0+255),w,b
  1698  0019F4  A4D8               	btfss	status,2,c
  1699  0019F6  EFFF  F00C         	goto	u1901
  1700  0019FA  EF01  F00D         	goto	u1900
  1701  0019FE                     u1901:
  1702  0019FE  EF27  F00D         	goto	l3181
  1703  001A02                     u1900:
  1704  001A02                     
  1705                           ; BSR set to: 0
  1706                           ;main.c: 339:             SPX = t1 + trame[13];
  1707  001A02  516D               	movf	(_trame+13)& (0+255),w,b
  1708  001A04  2593               	addwf	_t1& (0+255),w,b
  1709  001A06  6F7B               	movwf	_SPX& (0+255),b
  1710  001A08  0E00               	movlw	0
  1711  001A0A  2194               	addwfc	(_t1+1)& (0+255),w,b
  1712  001A0C  6F7C               	movwf	(_SPX+1)& (0+255),b
  1713  001A0E  0E00               	movlw	0
  1714  001A10  2195               	addwfc	(_t1+2)& (0+255),w,b
  1715  001A12  6F7D               	movwf	(_SPX+2)& (0+255),b
  1716  001A14  0E00               	movlw	0
  1717  001A16  2196               	addwfc	(_t1+3)& (0+255),w,b
  1718  001A18  6F7E               	movwf	(_SPX+3)& (0+255),b
  1719                           
  1720                           ;main.c: 340:             SPY = t2 + trame[15];
  1721  001A1A  516F               	movf	(_trame+15)& (0+255),w,b
  1722  001A1C  258F               	addwf	_t2& (0+255),w,b
  1723  001A1E  6F77               	movwf	_SPY& (0+255),b
  1724  001A20  0E00               	movlw	0
  1725  001A22  2190               	addwfc	(_t2+1)& (0+255),w,b
  1726  001A24  6F78               	movwf	(_SPY+1)& (0+255),b
  1727  001A26  0E00               	movlw	0
  1728  001A28  2191               	addwfc	(_t2+2)& (0+255),w,b
  1729  001A2A  6F79               	movwf	(_SPY+2)& (0+255),b
  1730  001A2C  0E00               	movlw	0
  1731  001A2E  2192               	addwfc	(_t2+3)& (0+255),w,b
  1732  001A30  6F7A               	movwf	(_SPY+3)& (0+255),b
  1733                           
  1734                           ;main.c: 341:             SPZ = t3 + trame[17];
  1735  001A32  5171               	movf	(_trame+17)& (0+255),w,b
  1736  001A34  258B               	addwf	_t3& (0+255),w,b
  1737  001A36  6F73               	movwf	_SPZ& (0+255),b
  1738  001A38  0E00               	movlw	0
  1739  001A3A  218C               	addwfc	(_t3+1)& (0+255),w,b
  1740  001A3C  6F74               	movwf	(_SPZ+1)& (0+255),b
  1741  001A3E  0E00               	movlw	0
  1742  001A40  218D               	addwfc	(_t3+2)& (0+255),w,b
  1743  001A42  6F75               	movwf	(_SPZ+2)& (0+255),b
  1744  001A44  0E00               	movlw	0
  1745  001A46  218E               	addwfc	(_t3+3)& (0+255),w,b
  1746  001A48  6F76               	movwf	(_SPZ+3)& (0+255),b
  1747                           
  1748                           ;main.c: 342:         }else{
  1749  001A4A  EF4B  F00D         	goto	l3183
  1750  001A4E                     l3181:
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;main.c: 343:             PX = t1 + trame[13];
  1754  001A4E  516D               	movf	(_trame+13)& (0+255),w,b
  1755  001A50  2593               	addwf	_t1& (0+255),w,b
  1756  001A52  6F87               	movwf	_PX& (0+255),b
  1757  001A54  0E00               	movlw	0
  1758  001A56  2194               	addwfc	(_t1+1)& (0+255),w,b
  1759  001A58  6F88               	movwf	(_PX+1)& (0+255),b
  1760  001A5A  0E00               	movlw	0
  1761  001A5C  2195               	addwfc	(_t1+2)& (0+255),w,b
  1762  001A5E  6F89               	movwf	(_PX+2)& (0+255),b
  1763  001A60  0E00               	movlw	0
  1764  001A62  2196               	addwfc	(_t1+3)& (0+255),w,b
  1765  001A64  6F8A               	movwf	(_PX+3)& (0+255),b
  1766                           
  1767                           ;main.c: 344:             PY = t2 + trame[15];
  1768  001A66  516F               	movf	(_trame+15)& (0+255),w,b
  1769  001A68  258F               	addwf	_t2& (0+255),w,b
  1770  001A6A  6F83               	movwf	_PY& (0+255),b
  1771  001A6C  0E00               	movlw	0
  1772  001A6E  2190               	addwfc	(_t2+1)& (0+255),w,b
  1773  001A70  6F84               	movwf	(_PY+1)& (0+255),b
  1774  001A72  0E00               	movlw	0
  1775  001A74  2191               	addwfc	(_t2+2)& (0+255),w,b
  1776  001A76  6F85               	movwf	(_PY+2)& (0+255),b
  1777  001A78  0E00               	movlw	0
  1778  001A7A  2192               	addwfc	(_t2+3)& (0+255),w,b
  1779  001A7C  6F86               	movwf	(_PY+3)& (0+255),b
  1780                           
  1781                           ;main.c: 345:             PZ = t3 + trame[17];
  1782  001A7E  5171               	movf	(_trame+17)& (0+255),w,b
  1783  001A80  258B               	addwf	_t3& (0+255),w,b
  1784  001A82  6F7F               	movwf	_PZ& (0+255),b
  1785  001A84  0E00               	movlw	0
  1786  001A86  218C               	addwfc	(_t3+1)& (0+255),w,b
  1787  001A88  6F80               	movwf	(_PZ+1)& (0+255),b
  1788  001A8A  0E00               	movlw	0
  1789  001A8C  218D               	addwfc	(_t3+2)& (0+255),w,b
  1790  001A8E  6F81               	movwf	(_PZ+2)& (0+255),b
  1791  001A90  0E00               	movlw	0
  1792  001A92  218E               	addwfc	(_t3+3)& (0+255),w,b
  1793  001A94  6F82               	movwf	(_PZ+3)& (0+255),b
  1794  001A96                     l3183:
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;main.c: 349:         Hx = 0;
  1798  001A96  0E00               	movlw	0
  1799  001A98  6FA0               	movwf	(_Hx+1)& (0+255),b
  1800  001A9A  0E00               	movlw	0
  1801  001A9C  6F9F               	movwf	_Hx& (0+255),b
  1802  001A9E                     
  1803                           ; BSR set to: 0
  1804                           ;main.c: 350:         TMR2_WriteTimer(0);
  1805  001A9E  0E00               	movlw	0
  1806  001AA0  EC94  F014         	call	_TMR2_WriteTimer
  1807  001AA4                     
  1808                           ;main.c: 351:         return 0;
  1809  001AA4  0E00               	movlw	0
  1810  001AA6  EF56  F00D         	goto	l687
  1811  001AAA                     l3193:
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;main.c: 353:         return 1;
  1815  001AAA  0E01               	movlw	1
  1816  001AAC                     l687:
  1817  001AAC  0012               	return		;funcret
  1818  001AAE                     __end_of_lecture:
  1819                           	callstack 0
  1820                           
  1821 ;; *************** function _TMR2_WriteTimer *****************
  1822 ;; Defined at:
  1823 ;;		line 108 in file "mcc_generated_files/tmr2.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  timerVal        1    wreg     unsigned char 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  timerVal        1    4[COMRAM] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1838 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1841 ;;Total ram usage:        1 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; Hardware stack levels required when called: 4
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_lecture
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text6
  1852  002928                     __ptext6:
  1853                           	callstack 0
  1854  002928                     _TMR2_WriteTimer:
  1855                           	callstack 23
  1856                           
  1857                           ;incstack = 0
  1858                           ;TMR2_WriteTimer@timerVal stored from wreg
  1859  002928  6E05               	movwf	TMR2_WriteTimer@timerVal^0,c
  1860  00292A                     
  1861                           ;mcc_generated_files/tmr2.c: 108: void TMR2_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr2.c: 109: {;mcc_generated_files/tmr2.c: 111:     TMR2 = timerVal;
  1862  00292A  C005  FFCC         	movff	TMR2_WriteTimer@timerVal,4044	;volatile
  1863  00292E  0012               	return		;funcret
  1864  002930                     __end_of_TMR2_WriteTimer:
  1865                           	callstack 0
  1866                           
  1867 ;; *************** function _EUSART1_Read *****************
  1868 ;; Defined at:
  1869 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;		None
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      unsigned char 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1887 ;;Total ram usage:        0 bytes
  1888 ;; Hardware stack levels used: 1
  1889 ;; Hardware stack levels required when called: 4
  1890 ;; This function calls:
  1891 ;;		Nothing
  1892 ;; This function is called by:
  1893 ;;		_lecture
  1894 ;;		_getch
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text7
  1899  0026EA                     __ptext7:
  1900                           	callstack 0
  1901  0026EA                     _EUSART1_Read:
  1902                           	callstack 23
  1903  0026EA                     l88:
  1904                           
  1905                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  1906  0026EA  AA9E               	btfss	158,5,c	;volatile
  1907  0026EC  EF7A  F013         	goto	u1701
  1908  0026F0  EF7C  F013         	goto	u1700
  1909  0026F4                     u1701:
  1910  0026F4  EF75  F013         	goto	l88
  1911  0026F8                     u1700:
  1912  0026F8                     
  1913                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  1914  0026F8  0E00               	movlw	0
  1915  0026FA  0100               	movlb	0	; () banked
  1916  0026FC  6FAD               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  1917  0026FE                     
  1918                           ; BSR set to: 0
  1919                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  1920  0026FE  A2AB               	btfss	171,1,c	;volatile
  1921  002700  EF84  F013         	goto	u1711
  1922  002704  EF86  F013         	goto	u1710
  1923  002708                     u1711:
  1924  002708  EF88  F013         	goto	l3003
  1925  00270C                     u1710:
  1926  00270C                     
  1927                           ; BSR set to: 0
  1928                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  1929  00270C  98AB               	bcf	171,4,c	;volatile
  1930                           
  1931                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  1932  00270E  88AB               	bsf	171,4,c	;volatile
  1933  002710                     l3003:
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  1937  002710  50AE               	movf	174,w,c	;volatile
  1938  002712                     
  1939                           ; BSR set to: 0
  1940  002712  0012               	return		;funcret
  1941  002714                     __end_of_EUSART1_Read:
  1942                           	callstack 0
  1943                           
  1944 ;; *************** function _affiche *****************
  1945 ;; Defined at:
  1946 ;;		line 374 in file "main.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1964 ;;Total ram usage:        0 bytes
  1965 ;; Hardware stack levels used: 1
  1966 ;; Hardware stack levels required when called: 13
  1967 ;; This function calls:
  1968 ;;		_LCD_Function
  1969 ;;		_printf
  1970 ;; This function is called by:
  1971 ;;		_main
  1972 ;;		_reception_affichage
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           	psect	text8
  1977  001E94                     __ptext8:
  1978                           	callstack 0
  1979  001E94                     _affiche:
  1980                           	callstack 15
  1981  001E94                     
  1982                           ;main.c: 375:     LCD_Function(home,0,0);
  1983  001E94  0E00               	movlw	0
  1984  001E96  6E07               	movwf	LCD_Function@x^0,c
  1985  001E98  0E00               	movlw	0
  1986  001E9A  6E08               	movwf	LCD_Function@z^0,c
  1987  001E9C  0E02               	movlw	2
  1988  001E9E  ECAB  F00E         	call	_LCD_Function
  1989  001EA2                     
  1990                           ;main.c: 376:     printf("      POSITIONS     ");
  1991  001EA2  0E01               	movlw	low STR_1
  1992  001EA4  0101               	movlb	1	; () banked
  1993  001EA6  6F00               	movwf	printf@fmt& (0+255),b
  1994  001EA8  0E0F               	movlw	high STR_1
  1995  001EAA  6F01               	movwf	(printf@fmt+1)& (0+255),b
  1996  001EAC  ECB3  F013         	call	_printf	;wreg free
  1997  001EB0                     
  1998                           ;main.c: 378:     LCD_Function(curseur,1,0);
  1999  001EB0  0E01               	movlw	1
  2000  001EB2  6E07               	movwf	LCD_Function@x^0,c
  2001  001EB4  0E00               	movlw	0
  2002  001EB6  6E08               	movwf	LCD_Function@z^0,c
  2003  001EB8  0E01               	movlw	1
  2004  001EBA  ECAB  F00E         	call	_LCD_Function
  2005                           
  2006                           ;main.c: 380:     printf("X =%04X save:%04X",SPX, PX);
  2007  001EBE  0E16               	movlw	low STR_2
  2008  001EC0  0101               	movlb	1	; () banked
  2009  001EC2  6F00               	movwf	printf@fmt& (0+255),b
  2010  001EC4  0E0F               	movlw	high STR_2
  2011  001EC6  6F01               	movwf	(printf@fmt+1)& (0+255),b
  2012  001EC8  C07B  F102         	movff	_SPX,?_printf+2
  2013  001ECC  C07C  F103         	movff	_SPX+1,?_printf+3
  2014  001ED0  C07D  F104         	movff	_SPX+2,?_printf+4
  2015  001ED4  C07E  F105         	movff	_SPX+3,?_printf+5
  2016  001ED8  C087  F106         	movff	_PX,?_printf+6
  2017  001EDC  C088  F107         	movff	_PX+1,?_printf+7
  2018  001EE0  C089  F108         	movff	_PX+2,?_printf+8
  2019  001EE4  C08A  F109         	movff	_PX+3,?_printf+9
  2020  001EE8  ECB3  F013         	call	_printf	;wreg free
  2021  001EEC                     
  2022                           ;main.c: 382:     LCD_Function(curseur,2,0);
  2023  001EEC  0E02               	movlw	2
  2024  001EEE  6E07               	movwf	LCD_Function@x^0,c
  2025  001EF0  0E00               	movlw	0
  2026  001EF2  6E08               	movwf	LCD_Function@z^0,c
  2027  001EF4  0E01               	movlw	1
  2028  001EF6  ECAB  F00E         	call	_LCD_Function
  2029  001EFA                     
  2030                           ;main.c: 384:     printf("Y =%04X save:%04X",SPY, PY);
  2031  001EFA  0E28               	movlw	low STR_3
  2032  001EFC  0101               	movlb	1	; () banked
  2033  001EFE  6F00               	movwf	printf@fmt& (0+255),b
  2034  001F00  0E0F               	movlw	high STR_3
  2035  001F02  6F01               	movwf	(printf@fmt+1)& (0+255),b
  2036  001F04  C077  F102         	movff	_SPY,?_printf+2
  2037  001F08  C078  F103         	movff	_SPY+1,?_printf+3
  2038  001F0C  C079  F104         	movff	_SPY+2,?_printf+4
  2039  001F10  C07A  F105         	movff	_SPY+3,?_printf+5
  2040  001F14  C083  F106         	movff	_PY,?_printf+6
  2041  001F18  C084  F107         	movff	_PY+1,?_printf+7
  2042  001F1C  C085  F108         	movff	_PY+2,?_printf+8
  2043  001F20  C086  F109         	movff	_PY+3,?_printf+9
  2044  001F24  ECB3  F013         	call	_printf	;wreg free
  2045                           
  2046                           ;main.c: 386:     LCD_Function(curseur,3,0);
  2047  001F28  0E03               	movlw	3
  2048  001F2A  6E07               	movwf	LCD_Function@x^0,c
  2049  001F2C  0E00               	movlw	0
  2050  001F2E  6E08               	movwf	LCD_Function@z^0,c
  2051  001F30  0E01               	movlw	1
  2052  001F32  ECAB  F00E         	call	_LCD_Function
  2053  001F36                     
  2054                           ;main.c: 388:     printf("Z =%04X save:%04X",SPZ, PZ);
  2055  001F36  0E3A               	movlw	low STR_4
  2056  001F38  0101               	movlb	1	; () banked
  2057  001F3A  6F00               	movwf	printf@fmt& (0+255),b
  2058  001F3C  0E0F               	movlw	high STR_4
  2059  001F3E  6F01               	movwf	(printf@fmt+1)& (0+255),b
  2060  001F40  C073  F102         	movff	_SPZ,?_printf+2
  2061  001F44  C074  F103         	movff	_SPZ+1,?_printf+3
  2062  001F48  C075  F104         	movff	_SPZ+2,?_printf+4
  2063  001F4C  C076  F105         	movff	_SPZ+3,?_printf+5
  2064  001F50  C07F  F106         	movff	_PZ,?_printf+6
  2065  001F54  C080  F107         	movff	_PZ+1,?_printf+7
  2066  001F58  C081  F108         	movff	_PZ+2,?_printf+8
  2067  001F5C  C082  F109         	movff	_PZ+3,?_printf+9
  2068  001F60  ECB3  F013         	call	_printf	;wreg free
  2069  001F64  0012               	return		;funcret
  2070  001F66                     __end_of_affiche:
  2071                           	callstack 0
  2072                           
  2073 ;; *************** function _printf *****************
  2074 ;; Defined at:
  2075 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\printf.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  2078 ;;		 -> STR_4(18), STR_3(18), STR_2(18), STR_1(21), 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  ap              2   80[COMRAM] PTR void [1]
  2081 ;;		 -> ?_printf(2), 
  2082 ;;  ret             2    0        int 
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  2    0[BANK1 ] int 
  2085 ;; Registers used:
  2086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2092 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2093 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2095 ;;      Totals:         2       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2096 ;;Total ram usage:       12 bytes
  2097 ;; Hardware stack levels used: 1
  2098 ;; Hardware stack levels required when called: 12
  2099 ;; This function calls:
  2100 ;;		_vfprintf
  2101 ;; This function is called by:
  2102 ;;		_affiche
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text9
  2107  002766                     __ptext9:
  2108                           	callstack 0
  2109  002766                     _printf:
  2110                           	callstack 15
  2111  002766  0E02               	movlw	low (?_printf+2)
  2112  002768  6E51               	movwf	printf@ap^0,c
  2113  00276A  0E01               	movlw	high (?_printf+2)
  2114  00276C  6E52               	movwf	(printf@ap+1)^0,c
  2115  00276E  0E00               	movlw	0
  2116  002770  0100               	movlb	0	; () banked
  2117  002772  6FEC               	movwf	vfprintf@fp& (0+255),b
  2118  002774  0E00               	movlw	0
  2119  002776  6FED               	movwf	(vfprintf@fp+1)& (0+255),b
  2120  002778  C100  F0EE         	movff	printf@fmt,vfprintf@fmt
  2121  00277C  C101  F0EF         	movff	printf@fmt+1,vfprintf@fmt+1
  2122  002780  0E51               	movlw	low printf@ap
  2123  002782  6FF0               	movwf	vfprintf@ap& (0+255),b
  2124  002784  0E00               	movlw	high printf@ap
  2125  002786  6FF1               	movwf	(vfprintf@ap+1)& (0+255),b
  2126  002788  ECE9  F010         	call	_vfprintf	;wreg free
  2127  00278C  0012               	return		;funcret
  2128  00278E                     __end_of_printf:
  2129                           	callstack 0
  2130                           
  2131 ;; *************** function _vfprintf *****************
  2132 ;; Defined at:
  2133 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  2136 ;;		 -> NULL(0), 
  2137 ;;  fmt             2   13[BANK0 ] PTR const unsigned char 
  2138 ;;		 -> STR_4(18), STR_3(18), STR_2(18), STR_1(21), 
  2139 ;;  ap              2   15[BANK0 ] PTR PTR void 
  2140 ;;		 -> printf@ap(2), 
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;  cfmt            2   78[COMRAM] PTR unsigned char 
  2143 ;;		 -> STR_4(18), STR_3(18), STR_2(18), STR_1(21), 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  2   11[BANK0 ] int 
  2146 ;; Registers used:
  2147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2153 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2156 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2157 ;;Total ram usage:        8 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 11
  2160 ;; This function calls:
  2161 ;;		_vfpfcnvrt
  2162 ;; This function is called by:
  2163 ;;		_printf
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text10
  2168  0021D2                     __ptext10:
  2169                           	callstack 0
  2170  0021D2                     _vfprintf:
  2171                           	callstack 15
  2172  0021D2                     
  2173                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2174  0021D2  C0EE  F04F         	movff	vfprintf@fmt,vfprintf@cfmt
  2175  0021D6  C0EF  F050         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2176  0021DA                     
  2177                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2178  0021DA  0E00               	movlw	0
  2179  0021DC  0100               	movlb	0	; () banked
  2180  0021DE  6F98               	movwf	(_nout+1)& (0+255),b
  2181  0021E0  0E00               	movlw	0
  2182  0021E2  6F97               	movwf	_nout& (0+255),b
  2183                           
  2184                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2185  0021E4  EF07  F011         	goto	l4037
  2186  0021E8                     l4035:
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2190  0021E8  C0EC  F045         	movff	vfprintf@fp,vfpfcnvrt@fp
  2191  0021EC  C0ED  F046         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2192  0021F0  0E4F               	movlw	low vfprintf@cfmt
  2193  0021F2  6E47               	movwf	vfpfcnvrt@fmt^0,c
  2194  0021F4  0E00               	movlw	high vfprintf@cfmt
  2195  0021F6  6E48               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2196  0021F8  C0F0  F049         	movff	vfprintf@ap,vfpfcnvrt@ap
  2197  0021FC  C0F1  F04A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2198  002200  ECA7  F007         	call	_vfpfcnvrt	;wreg free
  2199  002204  5045               	movf	?_vfpfcnvrt^0,w,c
  2200  002206  0100               	movlb	0	; () banked
  2201  002208  2797               	addwf	_nout& (0+255),f,b
  2202  00220A  5046               	movf	(?_vfpfcnvrt+1)^0,w,c
  2203  00220C  2398               	addwfc	(_nout+1)& (0+255),f,b
  2204  00220E                     l4037:
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2208  00220E  C04F  FFF6         	movff	vfprintf@cfmt,tblptrl
  2209  002212  C050  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2210  002216                     	if	0	;tblptru may be non-zero
  2211  002216                     	endif
  2212  002216                     	if	0	;tblptru may be non-zero
  2213  002216                     	endif
  2214  002216  0008               	tblrd		*
  2215  002218  50F5               	movf	tablat,w,c
  2216  00221A  0900               	iorlw	0
  2217  00221C  A4D8               	btfss	status,2,c
  2218  00221E  EF13  F011         	goto	u2871
  2219  002222  EF15  F011         	goto	u2870
  2220  002226                     u2871:
  2221  002226  EFF4  F010         	goto	l4035
  2222  00222A                     u2870:
  2223  00222A                     
  2224                           ; BSR set to: 0
  2225                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2226  00222A  C097  F0EC         	movff	_nout,?_vfprintf
  2227  00222E  C098  F0ED         	movff	_nout+1,?_vfprintf+1
  2228  002232                     
  2229                           ; BSR set to: 0
  2230  002232  0012               	return		;funcret
  2231  002234                     __end_of_vfprintf:
  2232                           	callstack 0
  2233                           
  2234 ;; *************** function _vfpfcnvrt *****************
  2235 ;; Defined at:
  2236 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
  2239 ;;		 -> NULL(0), 
  2240 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
  2241 ;;		 -> vfprintf@cfmt(2), 
  2242 ;;  ap              2   72[COMRAM] PTR PTR void 
  2243 ;;		 -> printf@ap(2), 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  llu             8    0[BANK0 ] unsigned long long 
  2246 ;;  ll              8    0        long long 
  2247 ;;  f               4    0        long long 
  2248 ;;  vp              3    0        PTR void 
  2249 ;;  ct              3    0        unsigned char [3]
  2250 ;;  cp              3    0        PTR unsigned char 
  2251 ;;  done            2    9[BANK0 ] int 
  2252 ;;  i               2    0        int 
  2253 ;;  c               1    8[BANK0 ] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  2   68[COMRAM] int 
  2256 ;; Registers used:
  2257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2263 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2264 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2265 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2266 ;;      Totals:        10      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2267 ;;Total ram usage:       21 bytes
  2268 ;; Hardware stack levels used: 1
  2269 ;; Hardware stack levels required when called: 10
  2270 ;; This function calls:
  2271 ;;		_atoi
  2272 ;;		_fputc
  2273 ;;		_isdigit
  2274 ;;		_xtoa
  2275 ;; This function is called by:
  2276 ;;		_vfprintf
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text11
  2281  000F4E                     __ptext11:
  2282                           	callstack 0
  2283  000F4E                     _vfpfcnvrt:
  2284                           	callstack 15
  2285  000F4E                     
  2286                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2287  000F4E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2288  000F52  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2289  000F56  CFDE FFF6          	movff	postinc2,tblptrl
  2290  000F5A  CFDD FFF7          	movff	postdec2,tblptrh
  2291  000F5E                     	if	0	;tblptru may be non-zero
  2292  000F5E                     	endif
  2293  000F5E                     	if	0	;tblptru may be non-zero
  2294  000F5E                     	endif
  2295  000F5E  0008               	tblrd		*
  2296  000F60  50F5               	movf	tablat,w,c
  2297  000F62  0A25               	xorlw	37
  2298  000F64  A4D8               	btfss	status,2,c
  2299  000F66  EFB7  F007         	goto	u2781
  2300  000F6A  EFB9  F007         	goto	u2780
  2301  000F6E                     u2781:
  2302  000F6E  EF42  F009         	goto	l4009
  2303  000F72                     u2780:
  2304  000F72                     
  2305                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2306  000F72  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2307  000F76  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2308  000F7A  2ADE               	incf	postinc2,f,c
  2309  000F7C  0E00               	movlw	0
  2310  000F7E  22DD               	addwfc	postdec2,f,c
  2311  000F80                     
  2312                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2313  000F80  0E00               	movlw	0
  2314  000F82  0100               	movlb	0	; () banked
  2315  000F84  6F9A               	movwf	(_width+1)& (0+255),b
  2316  000F86  0E00               	movlw	0
  2317  000F88  6F99               	movwf	_width& (0+255),b
  2318  000F8A  C099  F055         	movff	_width,_flags
  2319  000F8E  C09A  F056         	movff	_width+1,_flags+1
  2320  000F92                     
  2321                           ; BSR set to: 0
  2322                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2323  000F92  699B               	setf	_prec& (0+255),b
  2324  000F94  699C               	setf	(_prec+1)& (0+255),b
  2325  000F96                     
  2326                           ; BSR set to: 0
  2327                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2328  000F96  0E00               	movlw	0
  2329  000F98  6FEB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2330  000F9A  0E00               	movlw	0
  2331  000F9C  6FEA               	movwf	vfpfcnvrt@done& (0+255),b
  2332                           
  2333                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2334  000F9E  EF17  F008         	goto	l3959
  2335  000FA2                     l3933:
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2339  000FA2  8055               	bsf	_flags^0,0,c
  2340  000FA4                     l3935:
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2344  000FA4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2345  000FA8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2346  000FAC  2ADE               	incf	postinc2,f,c
  2347  000FAE  0E00               	movlw	0
  2348  000FB0  22DD               	addwfc	postdec2,f,c
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2351  000FB2  EF17  F008         	goto	l3959
  2352  000FB6                     l3937:
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2356  000FB6  8255               	bsf	_flags^0,1,c
  2357  000FB8  EFD2  F007         	goto	l3935
  2358  000FBC                     l3941:
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2362  000FBC  8455               	bsf	_flags^0,2,c
  2363  000FBE  EFD2  F007         	goto	l3935
  2364  000FC2                     l3945:
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2368  000FC2  8655               	bsf	_flags^0,3,c
  2369  000FC4  EFD2  F007         	goto	l3935
  2370  000FC8                     l3949:
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2374  000FC8  8855               	bsf	_flags^0,4,c
  2375  000FCA  EFD2  F007         	goto	l3935
  2376  000FCE                     l3953:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2380  000FCE  0E00               	movlw	0
  2381  000FD0  6FEB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2382  000FD2  0E01               	movlw	1
  2383  000FD4  6FEA               	movwf	vfpfcnvrt@done& (0+255),b
  2384                           
  2385                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2386  000FD6  EF17  F008         	goto	l3959
  2387  000FDA                     l3957:
  2388                           
  2389                           ; BSR set to: 0
  2390  000FDA  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2391  000FDE  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2392  000FE2  CFDE FFF6          	movff	postinc2,tblptrl
  2393  000FE6  CFDD FFF7          	movff	postdec2,tblptrh
  2394  000FEA                     	if	0	;tblptru may be non-zero
  2395  000FEA                     	endif
  2396  000FEA                     	if	0	;tblptru may be non-zero
  2397  000FEA                     	endif
  2398  000FEA  0008               	tblrd		*
  2399  000FEC  50F5               	movf	tablat,w,c
  2400  000FEE  6E4B               	movwf	??_vfpfcnvrt^0,c
  2401  000FF0  6A4C               	clrf	(??_vfpfcnvrt+1)^0,c
  2402                           
  2403                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2404                           ; Switch size 1, requested type "simple"
  2405                           ; Number of cases is 1, Range of values is 0 to 0
  2406                           ; switch strategies available:
  2407                           ; Name         Instructions Cycles
  2408                           ; simple_byte            4     3 (average)
  2409                           ;	Chosen strategy is simple_byte
  2410  000FF2  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  2411  000FF4  0A00               	xorlw	0	; case 0
  2412  000FF6  B4D8               	btfsc	status,2,c
  2413  000FF8  EF00  F008         	goto	l4415
  2414  000FFC  EFE7  F007         	goto	l3953
  2415  001000                     l4415:
  2416                           
  2417                           ; BSR set to: 0
  2418                           ; Switch size 1, requested type "simple"
  2419                           ; Number of cases is 5, Range of values is 32 to 48
  2420                           ; switch strategies available:
  2421                           ; Name         Instructions Cycles
  2422                           ; simple_byte           16     9 (average)
  2423                           ;	Chosen strategy is simple_byte
  2424  001000  504B               	movf	??_vfpfcnvrt^0,w,c
  2425  001002  0A20               	xorlw	32	; case 32
  2426  001004  B4D8               	btfsc	status,2,c
  2427  001006  EFE1  F007         	goto	l3945
  2428  00100A  0A03               	xorlw	3	; case 35
  2429  00100C  B4D8               	btfsc	status,2,c
  2430  00100E  EFE4  F007         	goto	l3949
  2431  001012  0A08               	xorlw	8	; case 43
  2432  001014  B4D8               	btfsc	status,2,c
  2433  001016  EFDE  F007         	goto	l3941
  2434  00101A  0A06               	xorlw	6	; case 45
  2435  00101C  B4D8               	btfsc	status,2,c
  2436  00101E  EFD1  F007         	goto	l3933
  2437  001022  0A1D               	xorlw	29	; case 48
  2438  001024  B4D8               	btfsc	status,2,c
  2439  001026  EFDB  F007         	goto	l3937
  2440  00102A  EFE7  F007         	goto	l3953
  2441  00102E                     l3959:
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2445  00102E  51EA               	movf	vfpfcnvrt@done& (0+255),w,b
  2446  001030  11EB               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2447  001032  B4D8               	btfsc	status,2,c
  2448  001034  EF1E  F008         	goto	u2791
  2449  001038  EF20  F008         	goto	u2790
  2450  00103C                     u2791:
  2451  00103C  EFED  F007         	goto	l3957
  2452  001040                     u2790:
  2453  001040                     
  2454                           ; BSR set to: 0
  2455                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2456  001040  A055               	btfss	_flags^0,0,c
  2457  001042  EF25  F008         	goto	u2801
  2458  001046  EF27  F008         	goto	u2800
  2459  00104A                     u2801:
  2460  00104A  EF28  F008         	goto	l3963
  2461  00104E                     u2800:
  2462  00104E                     
  2463                           ; BSR set to: 0
  2464                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2465  00104E  9255               	bcf	_flags^0,1,c
  2466  001050                     l3963:
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2470  001050  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2471  001054  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2472  001058  CFDE FFF6          	movff	postinc2,tblptrl
  2473  00105C  CFDD FFF7          	movff	postdec2,tblptrh
  2474  001060                     	if	0	;tblptru may be non-zero
  2475  001060                     	endif
  2476  001060                     	if	0	;tblptru may be non-zero
  2477  001060                     	endif
  2478  001060  0008               	tblrd		*
  2479  001062  50F5               	movf	tablat,w,c
  2480  001064  0A2A               	xorlw	42
  2481  001066  A4D8               	btfss	status,2,c
  2482  001068  EF38  F008         	goto	u2811
  2483  00106C  EF3A  F008         	goto	u2810
  2484  001070                     u2811:
  2485  001070  EF63  F008         	goto	l3971
  2486  001074                     u2810:
  2487  001074                     
  2488                           ; BSR set to: 0
  2489                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2490  001074  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2491  001078  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2492  00107C  2ADE               	incf	postinc2,f,c
  2493  00107E  0E00               	movlw	0
  2494  001080  22DD               	addwfc	postdec2,f,c
  2495                           
  2496                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2497  001082  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2498  001086  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2499  00108A  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2500  00108E  0E02               	movlw	2
  2501  001090  26DE               	addwf	postinc2,f,c
  2502  001092  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2503  001096  0E00               	movlw	0
  2504  001098  22DD               	addwfc	postdec2,f,c
  2505  00109A  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2506  00109E  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2507  0010A2  CFDE F099          	movff	postinc2,_width
  2508  0010A6  CFDD F09A          	movff	postdec2,_width+1
  2509  0010AA                     
  2510                           ; BSR set to: 0
  2511                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2512  0010AA  BF9A               	btfsc	(_width+1)& (0+255),7,b
  2513  0010AC  EF5C  F008         	goto	u2820
  2514  0010B0  EF5A  F008         	goto	u2821
  2515  0010B4                     u2821:
  2516  0010B4  EF99  F008         	goto	l3979
  2517  0010B8                     u2820:
  2518  0010B8                     
  2519                           ; BSR set to: 0
  2520                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2521  0010B8  8055               	bsf	_flags^0,0,c
  2522                           
  2523                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2524  0010BA  6D99               	negf	_width& (0+255),b
  2525  0010BC  1F9A               	comf	(_width+1)& (0+255),f,b
  2526  0010BE  B0D8               	btfsc	status,0,c
  2527  0010C0  2B9A               	incf	(_width+1)& (0+255),f,b
  2528  0010C2  EF99  F008         	goto	l3979
  2529  0010C6                     l3971:
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2533  0010C6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2534  0010CA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2535  0010CE  CFDE F00C          	movff	postinc2,atoi@s
  2536  0010D2  CFDD F00D          	movff	postdec2,atoi@s+1
  2537  0010D6  EC57  F00D         	call	_atoi	;wreg free
  2538  0010DA  C00C  F099         	movff	?_atoi,_width
  2539  0010DE  C00D  F09A         	movff	?_atoi+1,_width+1
  2540                           
  2541                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2542  0010E2  EF7A  F008         	goto	l3977
  2543  0010E6                     l3973:
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2546  0010E6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2547  0010EA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2548  0010EE  2ADE               	incf	postinc2,f,c
  2549  0010F0  0E00               	movlw	0
  2550  0010F2  22DD               	addwfc	postdec2,f,c
  2551  0010F4                     l3977:
  2552  0010F4  0ED0               	movlw	208
  2553  0010F6  6E4B               	movwf	??_vfpfcnvrt^0,c
  2554  0010F8  0EFF               	movlw	255
  2555  0010FA  6E4C               	movwf	(??_vfpfcnvrt+1)^0,c
  2556  0010FC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2557  001100  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2558  001104  CFDE FFF6          	movff	postinc2,tblptrl
  2559  001108  CFDD FFF7          	movff	postdec2,tblptrh
  2560  00110C                     	if	0	;tblptru may be non-zero
  2561  00110C                     	endif
  2562  00110C                     	if	0	;tblptru may be non-zero
  2563  00110C                     	endif
  2564  00110C  0008               	tblrd		*
  2565  00110E  50F5               	movf	tablat,w,c
  2566  001110  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  2567  001112  6A4E               	clrf	(??_vfpfcnvrt+3)^0,c
  2568  001114  504B               	movf	??_vfpfcnvrt^0,w,c
  2569  001116  264D               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2570  001118  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  2571  00111A  224E               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2572  00111C  504E               	movf	(??_vfpfcnvrt+3)^0,w,c
  2573  00111E  E109               	bnz	u2830
  2574  001120  0E0A               	movlw	10
  2575  001122  5C4D               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2576  001124  A0D8               	btfss	status,0,c
  2577  001126  EF97  F008         	goto	u2831
  2578  00112A  EF99  F008         	goto	u2830
  2579  00112E                     u2831:
  2580  00112E  EF73  F008         	goto	l3973
  2581  001132                     u2830:
  2582  001132                     l3979:
  2583                           
  2584                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  2585  001132  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2586  001136  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2587  00113A  CFDE FFF6          	movff	postinc2,tblptrl
  2588  00113E  CFDD FFF7          	movff	postdec2,tblptrh
  2589  001142                     	if	0	;tblptru may be non-zero
  2590  001142                     	endif
  2591  001142                     	if	0	;tblptru may be non-zero
  2592  001142                     	endif
  2593  001142  0008               	tblrd		*
  2594  001144  50F5               	movf	tablat,w,c
  2595  001146  0A78               	xorlw	120
  2596  001148  B4D8               	btfsc	status,2,c
  2597  00114A  EFA9  F008         	goto	u2841
  2598  00114E  EFAB  F008         	goto	u2840
  2599  001152                     u2841:
  2600  001152  EFBD  F008         	goto	l3983
  2601  001156                     u2840:
  2602  001156  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2603  00115A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2604  00115E  CFDE FFF6          	movff	postinc2,tblptrl
  2605  001162  CFDD FFF7          	movff	postdec2,tblptrh
  2606  001166                     	if	0	;tblptru may be non-zero
  2607  001166                     	endif
  2608  001166                     	if	0	;tblptru may be non-zero
  2609  001166                     	endif
  2610  001166  0008               	tblrd		*
  2611  001168  50F5               	movf	tablat,w,c
  2612  00116A  0A58               	xorlw	88
  2613  00116C  A4D8               	btfss	status,2,c
  2614  00116E  EFBB  F008         	goto	u2851
  2615  001172  EFBD  F008         	goto	u2850
  2616  001176                     u2851:
  2617  001176  EF0C  F009         	goto	l3993
  2618  00117A                     u2850:
  2619  00117A                     l3983:
  2620                           
  2621                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  2622  00117A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2623  00117E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2624  001182  CFDE FFF6          	movff	postinc2,tblptrl
  2625  001186  CFDD FFF7          	movff	postdec2,tblptrh
  2626  00118A                     	if	0	;tblptru may be non-zero
  2627  00118A                     	endif
  2628  00118A                     	if	0	;tblptru may be non-zero
  2629  00118A                     	endif
  2630  00118A  0008               	tblrd		*
  2631  00118C  CFF5 F0E9          	movff	tablat,vfpfcnvrt@c
  2632  001190                     
  2633                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  2634  001190  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2635  001194  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2636  001198  2ADE               	incf	postinc2,f,c
  2637  00119A  0E00               	movlw	0
  2638  00119C  22DD               	addwfc	postdec2,f,c
  2639  00119E                     
  2640                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2641  00119E  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2642  0011A2  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2643  0011A6  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  2644  0011AA  0E02               	movlw	2
  2645  0011AC  26DE               	addwf	postinc2,f,c
  2646  0011AE  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  2647  0011B2  0E00               	movlw	0
  2648  0011B4  22DD               	addwfc	postdec2,f,c
  2649  0011B6  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2650  0011BA  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2651  0011BE  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  2652  0011C2  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  2653  0011C6  C04D  F0E1         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2654  0011CA  C04E  F0E2         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2655  0011CE  0100               	movlb	0	; () banked
  2656  0011D0  6BE3               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2657  0011D2  6BE4               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2658  0011D4  6BE5               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2659  0011D6  6BE6               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2660  0011D8  6BE7               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2661  0011DA  6BE8               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2662  0011DC                     
  2663                           ; BSR set to: 0
  2664                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  2665  0011DC  C045  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  2666  0011E0  C046  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2667  0011E4  C0E1  F024         	movff	vfpfcnvrt@llu,xtoa@d
  2668  0011E8  C0E2  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2669  0011EC  C0E3  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2670  0011F0  C0E4  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2671  0011F4  C0E5  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2672  0011F8  C0E6  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2673  0011FC  C0E7  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2674  001200  C0E8  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2675  001204  C0E9  F02C         	movff	vfpfcnvrt@c,xtoa@x
  2676  001208  EC5E  F009         	call	_xtoa	;wreg free
  2677  00120C  C022  F045         	movff	?_xtoa,?_vfpfcnvrt
  2678  001210  C023  F046         	movff	?_xtoa+1,?_vfpfcnvrt+1
  2679  001214  EF5D  F009         	goto	l1488
  2680  001218                     l3993:
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2683  001218  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2684  00121C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2685  001220  CFDE FFF6          	movff	postinc2,tblptrl
  2686  001224  CFDD FFF7          	movff	postdec2,tblptrh
  2687  001228                     	if	0	;tblptru may be non-zero
  2688  001228                     	endif
  2689  001228                     	if	0	;tblptru may be non-zero
  2690  001228                     	endif
  2691  001228  0008               	tblrd		*
  2692  00122A  50F5               	movf	tablat,w,c
  2693  00122C  0A25               	xorlw	37
  2694  00122E  A4D8               	btfss	status,2,c
  2695  001230  EF1C  F009         	goto	u2861
  2696  001234  EF1E  F009         	goto	u2860
  2697  001238                     u2861:
  2698  001238  EF35  F009         	goto	l4003
  2699  00123C                     u2860:
  2700  00123C                     
  2701                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2702  00123C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2703  001240  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2704  001244  2ADE               	incf	postinc2,f,c
  2705  001246  0E00               	movlw	0
  2706  001248  22DD               	addwfc	postdec2,f,c
  2707  00124A                     
  2708                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2709  00124A  0E00               	movlw	0
  2710  00124C  6E08               	movwf	(fputc@c+1)^0,c
  2711  00124E  0E25               	movlw	37
  2712  001250  6E07               	movwf	fputc@c^0,c
  2713  001252  C045  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2714  001256  C046  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2715  00125A  EC60  F010         	call	_fputc	;wreg free
  2716  00125E                     l3999:
  2717                           
  2718                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2719  00125E  0E00               	movlw	0
  2720  001260  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  2721  001262  0E01               	movlw	1
  2722  001264  6E45               	movwf	?_vfpfcnvrt^0,c
  2723  001266  EF5D  F009         	goto	l1488
  2724  00126A                     l4003:
  2725                           
  2726                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2727  00126A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2728  00126E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2729  001272  2ADE               	incf	postinc2,f,c
  2730  001274  0E00               	movlw	0
  2731  001276  22DD               	addwfc	postdec2,f,c
  2732  001278                     
  2733                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2734  001278  0E00               	movlw	0
  2735  00127A  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  2736  00127C  0E00               	movlw	0
  2737  00127E  6E45               	movwf	?_vfpfcnvrt^0,c
  2738  001280  EF5D  F009         	goto	l1488
  2739  001284                     l4009:
  2740                           
  2741                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2742  001284  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2743  001288  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2744  00128C  CFDE FFF6          	movff	postinc2,tblptrl
  2745  001290  CFDD FFF7          	movff	postdec2,tblptrh
  2746  001294                     	if	0	;tblptru may be non-zero
  2747  001294                     	endif
  2748  001294                     	if	0	;tblptru may be non-zero
  2749  001294                     	endif
  2750  001294  0008               	tblrd		*
  2751  001296  50F5               	movf	tablat,w,c
  2752  001298  6E07               	movwf	fputc@c^0,c
  2753  00129A  6A08               	clrf	(fputc@c+1)^0,c
  2754  00129C  C045  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2755  0012A0  C046  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2756  0012A4  EC60  F010         	call	_fputc	;wreg free
  2757  0012A8                     
  2758                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2759  0012A8  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2760  0012AC  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2761  0012B0  2ADE               	incf	postinc2,f,c
  2762  0012B2  0E00               	movlw	0
  2763  0012B4  22DD               	addwfc	postdec2,f,c
  2764  0012B6  EF2F  F009         	goto	l3999
  2765  0012BA                     l1488:
  2766  0012BA  0012               	return		;funcret
  2767  0012BC                     __end_of_vfpfcnvrt:
  2768                           	callstack 0
  2769                           
  2770 ;; *************** function _xtoa *****************
  2771 ;; Defined at:
  2772 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  2775 ;;		 -> NULL(0), 
  2776 ;;  d               8   35[COMRAM] unsigned long long 
  2777 ;;  x               1   43[COMRAM] unsigned char 
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;  n               8   56[COMRAM] unsigned long long 
  2780 ;;  c               2   66[COMRAM] int 
  2781 ;;  i               2   64[COMRAM] int 
  2782 ;;  w               2   54[COMRAM] int 
  2783 ;;  p               2   52[COMRAM] int 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  2   33[COMRAM] int 
  2786 ;; Registers used:
  2787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2793 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2794 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2795 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2796 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2797 ;;Total ram usage:       35 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; Hardware stack levels required when called: 9
  2800 ;; This function calls:
  2801 ;;		_isalpha
  2802 ;;		_isupper
  2803 ;;		_pad
  2804 ;;		_toupper
  2805 ;; This function is called by:
  2806 ;;		_vfpfcnvrt
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text12
  2811  0012BC                     __ptext12:
  2812                           	callstack 0
  2813  0012BC                     _xtoa:
  2814                           	callstack 15
  2815  0012BC                     
  2816                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  2817  0012BC  0100               	movlb	0	; () banked
  2818  0012BE  BF9C               	btfsc	(_prec+1)& (0+255),7,b
  2819  0012C0  EF64  F009         	goto	u2611
  2820  0012C4  EF66  F009         	goto	u2610
  2821  0012C8                     u2611:
  2822  0012C8  EF67  F009         	goto	l3829
  2823  0012CC                     u2610:
  2824  0012CC                     
  2825                           ; BSR set to: 0
  2826                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  2827  0012CC  9255               	bcf	_flags^0,1,c
  2828  0012CE                     l3829:
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  2832  0012CE  BF9C               	btfsc	(_prec+1)& (0+255),7,b
  2833  0012D0  EF74  F009         	goto	u2620
  2834  0012D4  519C               	movf	(_prec+1)& (0+255),w,b
  2835  0012D6  E106               	bnz	u2621
  2836  0012D8  059B               	decf	_prec& (0+255),w,b
  2837  0012DA  B0D8               	btfsc	status,0,c
  2838  0012DC  EF72  F009         	goto	u2621
  2839  0012E0  EF74  F009         	goto	u2620
  2840  0012E4                     u2621:
  2841  0012E4  EF7A  F009         	goto	l1440
  2842  0012E8                     u2620:
  2843  0012E8                     
  2844                           ; BSR set to: 0
  2845  0012E8  0E00               	movlw	0
  2846  0012EA  6E36               	movwf	(xtoa@p+1)^0,c
  2847  0012EC  0E01               	movlw	1
  2848  0012EE  6E35               	movwf	xtoa@p^0,c
  2849  0012F0  EF7E  F009         	goto	l1442
  2850  0012F4                     l1440:
  2851                           
  2852                           ; BSR set to: 0
  2853  0012F4  C09B  F035         	movff	_prec,xtoa@p
  2854  0012F8  C09C  F036         	movff	_prec+1,xtoa@p+1
  2855  0012FC                     l1442:
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  2859  0012FC  C099  F037         	movff	_width,xtoa@w
  2860  001300  C09A  F038         	movff	_width+1,xtoa@w+1
  2861                           
  2862                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  2863  001304  A855               	btfss	_flags^0,4,c
  2864  001306  EF87  F009         	goto	u2631
  2865  00130A  EF89  F009         	goto	u2630
  2866  00130E                     u2631:
  2867  00130E  EF8D  F009         	goto	l3835
  2868  001312                     u2630:
  2869  001312                     
  2870                           ; BSR set to: 0
  2871                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  2872  001312  0EFE               	movlw	254
  2873  001314  2637               	addwf	xtoa@w^0,f,c
  2874  001316  0EFF               	movlw	255
  2875  001318  2238               	addwfc	(xtoa@w+1)^0,f,c
  2876  00131A                     l3835:
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 661:     n = d;
  2880  00131A  C024  F039         	movff	xtoa@d,xtoa@n
  2881  00131E  C025  F03A         	movff	xtoa@d+1,xtoa@n+1
  2882  001322  C026  F03B         	movff	xtoa@d+2,xtoa@n+2
  2883  001326  C027  F03C         	movff	xtoa@d+3,xtoa@n+3
  2884  00132A  C028  F03D         	movff	xtoa@d+4,xtoa@n+4
  2885  00132E  C029  F03E         	movff	xtoa@d+5,xtoa@n+5
  2886  001332  C02A  F03F         	movff	xtoa@d+6,xtoa@n+6
  2887  001336  C02B  F040         	movff	xtoa@d+7,xtoa@n+7
  2888  00133A                     
  2889                           ; BSR set to: 0
  2890                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  2891  00133A  0E00               	movlw	0
  2892  00133C  6E42               	movwf	(xtoa@i+1)^0,c
  2893  00133E  0E1F               	movlw	31
  2894  001340  6E41               	movwf	xtoa@i^0,c
  2895  001342                     
  2896                           ; BSR set to: 0
  2897                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  2898  001342  0E00               	movlw	0
  2899  001344  6FCD               	movwf	(_dbuf+31)& (0+255),b
  2900                           
  2901                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2902  001346  EF3E  F00A         	goto	l3871
  2903  00134A                     l3841:
  2904                           
  2905                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 665:         --i;
  2906  00134A  0641               	decf	xtoa@i^0,f,c
  2907  00134C  A0D8               	btfss	status,0,c
  2908  00134E  0642               	decf	(xtoa@i+1)^0,f,c
  2909  001350                     
  2910                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  2911  001350  0E0F               	movlw	15
  2912  001352  1439               	andwf	xtoa@n^0,w,c
  2913  001354  6E43               	movwf	xtoa@c^0,c
  2914  001356  6A44               	clrf	(xtoa@c+1)^0,c
  2915  001358                     
  2916                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  2917  001358  BE44               	btfsc	(xtoa@c+1)^0,7,c
  2918  00135A  EFB8  F009         	goto	u2641
  2919  00135E  5044               	movf	(xtoa@c+1)^0,w,c
  2920  001360  E109               	bnz	u2640
  2921  001362  0E0A               	movlw	10
  2922  001364  5C43               	subwf	xtoa@c^0,w,c
  2923  001366  A0D8               	btfss	status,0,c
  2924  001368  EFB8  F009         	goto	u2641
  2925  00136C  EFBA  F009         	goto	u2640
  2926  001370                     u2641:
  2927  001370  EFC2  F009         	goto	l3849
  2928  001374                     u2640:
  2929  001374  0E57               	movlw	87
  2930  001376  2443               	addwf	xtoa@c^0,w,c
  2931  001378  6E43               	movwf	xtoa@c^0,c
  2932  00137A  0E00               	movlw	0
  2933  00137C  2044               	addwfc	(xtoa@c+1)^0,w,c
  2934  00137E  6E44               	movwf	(xtoa@c+1)^0,c
  2935  001380  EFC8  F009         	goto	l3853
  2936  001384                     l3849:
  2937  001384  0E30               	movlw	48
  2938  001386  2443               	addwf	xtoa@c^0,w,c
  2939  001388  6E43               	movwf	xtoa@c^0,c
  2940  00138A  0E00               	movlw	0
  2941  00138C  2044               	addwfc	(xtoa@c+1)^0,w,c
  2942  00138E  6E44               	movwf	(xtoa@c+1)^0,c
  2943  001390                     l3853:
  2944  001390  0EBF               	movlw	191
  2945  001392  6E2D               	movwf	??_xtoa^0,c
  2946  001394  0EFF               	movlw	255
  2947  001396  6E2E               	movwf	(??_xtoa+1)^0,c
  2948  001398  502C               	movf	xtoa@x^0,w,c
  2949  00139A  6E2F               	movwf	(??_xtoa+2)^0,c
  2950  00139C  6A30               	clrf	(??_xtoa+3)^0,c
  2951  00139E  502D               	movf	??_xtoa^0,w,c
  2952  0013A0  262F               	addwf	(??_xtoa+2)^0,f,c
  2953  0013A2  502E               	movf	(??_xtoa+1)^0,w,c
  2954  0013A4  2230               	addwfc	(??_xtoa+3)^0,f,c
  2955  0013A6  5030               	movf	(??_xtoa+3)^0,w,c
  2956  0013A8  E107               	bnz	u2651
  2957  0013AA  0E1A               	movlw	26
  2958  0013AC  5C2F               	subwf	(??_xtoa+2)^0,w,c
  2959  0013AE  B0D8               	btfsc	status,0,c
  2960  0013B0  EFDC  F009         	goto	u2651
  2961  0013B4  EFDE  F009         	goto	u2650
  2962  0013B8                     u2651:
  2963  0013B8  EF01  F00A         	goto	l3863
  2964  0013BC                     u2650:
  2965  0013BC  0E9F               	movlw	159
  2966  0013BE  6E2D               	movwf	??_xtoa^0,c
  2967  0013C0  0EFF               	movlw	255
  2968  0013C2  6E2E               	movwf	(??_xtoa+1)^0,c
  2969  0013C4  0E20               	movlw	32
  2970  0013C6  1043               	iorwf	xtoa@c^0,w,c
  2971  0013C8  6E2F               	movwf	(??_xtoa+2)^0,c
  2972  0013CA  0E00               	movlw	0
  2973  0013CC  1044               	iorwf	(xtoa@c+1)^0,w,c
  2974  0013CE  6E30               	movwf	(??_xtoa+3)^0,c
  2975  0013D0  502D               	movf	??_xtoa^0,w,c
  2976  0013D2  262F               	addwf	(??_xtoa+2)^0,f,c
  2977  0013D4  502E               	movf	(??_xtoa+1)^0,w,c
  2978  0013D6  2230               	addwfc	(??_xtoa+3)^0,f,c
  2979  0013D8  5030               	movf	(??_xtoa+3)^0,w,c
  2980  0013DA  E107               	bnz	u2661
  2981  0013DC  0E1A               	movlw	26
  2982  0013DE  5C2F               	subwf	(??_xtoa+2)^0,w,c
  2983  0013E0  B0D8               	btfsc	status,0,c
  2984  0013E2  EFF5  F009         	goto	u2661
  2985  0013E6  EFF7  F009         	goto	u2660
  2986  0013EA                     u2661:
  2987  0013EA  EF01  F00A         	goto	l3863
  2988  0013EE                     u2660:
  2989  0013EE                     
  2990                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  2991  0013EE  C043  F00B         	movff	xtoa@c,toupper@c
  2992  0013F2  C044  F00C         	movff	xtoa@c+1,toupper@c+1
  2993  0013F6  EC43  F011         	call	_toupper	;wreg free
  2994  0013FA  C00B  F043         	movff	?_toupper,xtoa@c
  2995  0013FE  C00C  F044         	movff	?_toupper+1,xtoa@c+1
  2996  001402                     l3863:
  2997                           
  2998                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  2999  001402  0EAE               	movlw	low _dbuf
  3000  001404  2441               	addwf	xtoa@i^0,w,c
  3001  001406  6ED9               	movwf	fsr2l,c
  3002  001408  0E00               	movlw	high _dbuf
  3003  00140A  2042               	addwfc	(xtoa@i+1)^0,w,c
  3004  00140C  6EDA               	movwf	fsr2h,c
  3005  00140E  C043  FFDF         	movff	xtoa@c,indf2
  3006  001412                     
  3007                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 672:         --p;
  3008  001412  0635               	decf	xtoa@p^0,f,c
  3009  001414  A0D8               	btfss	status,0,c
  3010  001416  0636               	decf	(xtoa@p+1)^0,f,c
  3011  001418                     
  3012                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 673:         --w;
  3013  001418  0637               	decf	xtoa@w^0,f,c
  3014  00141A  A0D8               	btfss	status,0,c
  3015  00141C  0638               	decf	(xtoa@w+1)^0,f,c
  3016  00141E                     
  3017                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  3018  00141E  C039  F02D         	movff	xtoa@n,??_xtoa
  3019  001422  C03A  F02E         	movff	xtoa@n+1,??_xtoa+1
  3020  001426  C03B  F02F         	movff	xtoa@n+2,??_xtoa+2
  3021  00142A  C03C  F030         	movff	xtoa@n+3,??_xtoa+3
  3022  00142E  C03D  F031         	movff	xtoa@n+4,??_xtoa+4
  3023  001432  C03E  F032         	movff	xtoa@n+5,??_xtoa+5
  3024  001436  C03F  F033         	movff	xtoa@n+6,??_xtoa+6
  3025  00143A  C040  F034         	movff	xtoa@n+7,??_xtoa+7
  3026  00143E  0E05               	movlw	5
  3027  001440  EF2B  F00A         	goto	u2670
  3028  001444                     u2675:
  3029  001444  90D8               	bcf	status,0,c
  3030  001446  3234               	rrcf	(??_xtoa+7)^0,f,c
  3031  001448  3233               	rrcf	(??_xtoa+6)^0,f,c
  3032  00144A  3232               	rrcf	(??_xtoa+5)^0,f,c
  3033  00144C  3231               	rrcf	(??_xtoa+4)^0,f,c
  3034  00144E  3230               	rrcf	(??_xtoa+3)^0,f,c
  3035  001450  322F               	rrcf	(??_xtoa+2)^0,f,c
  3036  001452  322E               	rrcf	(??_xtoa+1)^0,f,c
  3037  001454  322D               	rrcf	??_xtoa^0,f,c
  3038  001456                     u2670:
  3039  001456  2EE8               	decfsz	wreg,f,c
  3040  001458  EF22  F00A         	goto	u2675
  3041  00145C  C02D  F039         	movff	??_xtoa,xtoa@n
  3042  001460  C02E  F03A         	movff	??_xtoa+1,xtoa@n+1
  3043  001464  C02F  F03B         	movff	??_xtoa+2,xtoa@n+2
  3044  001468  C030  F03C         	movff	??_xtoa+3,xtoa@n+3
  3045  00146C  C031  F03D         	movff	??_xtoa+4,xtoa@n+4
  3046  001470  C032  F03E         	movff	??_xtoa+5,xtoa@n+5
  3047  001474  C033  F03F         	movff	??_xtoa+6,xtoa@n+6
  3048  001478  C034  F040         	movff	??_xtoa+7,xtoa@n+7
  3049  00147C                     l3871:
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3052  00147C  BE42               	btfsc	(xtoa@i+1)^0,7,c
  3053  00147E  EF4A  F00A         	goto	u2681
  3054  001482  5042               	movf	(xtoa@i+1)^0,w,c
  3055  001484  E109               	bnz	u2680
  3056  001486  0E02               	movlw	2
  3057  001488  5C41               	subwf	xtoa@i^0,w,c
  3058  00148A  A0D8               	btfss	status,0,c
  3059  00148C  EF4A  F00A         	goto	u2681
  3060  001490  EF4C  F00A         	goto	u2680
  3061  001494                     u2681:
  3062  001494  EF7C  F00A         	goto	l1459
  3063  001498                     u2680:
  3064  001498  5039               	movf	xtoa@n^0,w,c
  3065  00149A  103A               	iorwf	(xtoa@n+1)^0,w,c
  3066  00149C  103B               	iorwf	(xtoa@n+2)^0,w,c
  3067  00149E  103C               	iorwf	(xtoa@n+3)^0,w,c
  3068  0014A0  103D               	iorwf	(xtoa@n+4)^0,w,c
  3069  0014A2  103E               	iorwf	(xtoa@n+5)^0,w,c
  3070  0014A4  103F               	iorwf	(xtoa@n+6)^0,w,c
  3071  0014A6  1040               	iorwf	(xtoa@n+7)^0,w,c
  3072  0014A8  A4D8               	btfss	status,2,c
  3073  0014AA  EF59  F00A         	goto	u2691
  3074  0014AE  EF5B  F00A         	goto	u2690
  3075  0014B2                     u2691:
  3076  0014B2  EFA5  F009         	goto	l3841
  3077  0014B6                     u2690:
  3078  0014B6  BE36               	btfsc	(xtoa@p+1)^0,7,c
  3079  0014B8  EF68  F00A         	goto	u2700
  3080  0014BC  5036               	movf	(xtoa@p+1)^0,w,c
  3081  0014BE  E106               	bnz	u2701
  3082  0014C0  0435               	decf	xtoa@p^0,w,c
  3083  0014C2  B0D8               	btfsc	status,0,c
  3084  0014C4  EF66  F00A         	goto	u2701
  3085  0014C8  EF68  F00A         	goto	u2700
  3086  0014CC                     u2701:
  3087  0014CC  EFA5  F009         	goto	l3841
  3088  0014D0                     u2700:
  3089  0014D0  BE38               	btfsc	(xtoa@w+1)^0,7,c
  3090  0014D2  EF73  F00A         	goto	u2711
  3091  0014D6  5038               	movf	(xtoa@w+1)^0,w,c
  3092  0014D8  E108               	bnz	u2710
  3093  0014DA  0437               	decf	xtoa@w^0,w,c
  3094  0014DC  A0D8               	btfss	status,0,c
  3095  0014DE  EF73  F00A         	goto	u2711
  3096  0014E2  EF75  F00A         	goto	u2710
  3097  0014E6                     u2711:
  3098  0014E6  EF7C  F00A         	goto	l1459
  3099  0014EA                     u2710:
  3100  0014EA  B255               	btfsc	_flags^0,1,c
  3101  0014EC  EF7A  F00A         	goto	u2721
  3102  0014F0  EF7C  F00A         	goto	u2720
  3103  0014F4                     u2721:
  3104  0014F4  EFA5  F009         	goto	l3841
  3105  0014F8                     u2720:
  3106  0014F8                     l1459:
  3107                           
  3108                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  3109  0014F8  A855               	btfss	_flags^0,4,c
  3110  0014FA  EF81  F00A         	goto	u2731
  3111  0014FE  EF83  F00A         	goto	u2730
  3112  001502                     u2731:
  3113  001502  EF99  F00A         	goto	l3887
  3114  001506                     u2730:
  3115  001506                     
  3116                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 679:         --i;
  3117  001506  0641               	decf	xtoa@i^0,f,c
  3118  001508  A0D8               	btfss	status,0,c
  3119  00150A  0642               	decf	(xtoa@i+1)^0,f,c
  3120  00150C                     
  3121                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  3122  00150C  0EAE               	movlw	low _dbuf
  3123  00150E  2441               	addwf	xtoa@i^0,w,c
  3124  001510  6ED9               	movwf	fsr2l,c
  3125  001512  0E00               	movlw	high _dbuf
  3126  001514  2042               	addwfc	(xtoa@i+1)^0,w,c
  3127  001516  6EDA               	movwf	fsr2h,c
  3128  001518  C02C  FFDF         	movff	xtoa@x,indf2
  3129  00151C                     
  3130                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 681:         --i;
  3131  00151C  0641               	decf	xtoa@i^0,f,c
  3132  00151E  A0D8               	btfss	status,0,c
  3133  001520  0642               	decf	(xtoa@i+1)^0,f,c
  3134                           
  3135                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  3136  001522  0EAE               	movlw	low _dbuf
  3137  001524  2441               	addwf	xtoa@i^0,w,c
  3138  001526  6ED9               	movwf	fsr2l,c
  3139  001528  0E00               	movlw	high _dbuf
  3140  00152A  2042               	addwfc	(xtoa@i+1)^0,w,c
  3141  00152C  6EDA               	movwf	fsr2h,c
  3142  00152E  0E30               	movlw	48
  3143  001530  6EDF               	movwf	indf2,c
  3144  001532                     l3887:
  3145                           
  3146                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  3147  001532  C022  F017         	movff	xtoa@fp,pad@fp
  3148  001536  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  3149  00153A  0EAE               	movlw	low _dbuf
  3150  00153C  2441               	addwf	xtoa@i^0,w,c
  3151  00153E  6E19               	movwf	pad@buf^0,c
  3152  001540  0E00               	movlw	high _dbuf
  3153  001542  2042               	addwfc	(xtoa@i+1)^0,w,c
  3154  001544  6E1A               	movwf	(pad@buf+1)^0,c
  3155  001546  C037  F01B         	movff	xtoa@w,pad@p
  3156  00154A  C038  F01C         	movff	xtoa@w+1,pad@p+1
  3157  00154E  ECB3  F00F         	call	_pad	;wreg free
  3158  001552  C017  F022         	movff	?_pad,?_xtoa
  3159  001556  C018  F023         	movff	?_pad+1,?_xtoa+1
  3160  00155A  0012               	return		;funcret
  3161  00155C                     __end_of_xtoa:
  3162                           	callstack 0
  3163                           
  3164 ;; *************** function _toupper *****************
  3165 ;; Defined at:
  3166 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\toupper.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  c               2   10[COMRAM] int 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;		None
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  2   10[COMRAM] int 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3182 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3183 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3184 ;;Total ram usage:        6 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; Hardware stack levels required when called: 5
  3187 ;; This function calls:
  3188 ;;		_islower
  3189 ;; This function is called by:
  3190 ;;		_xtoa
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text13
  3195  002286                     __ptext13:
  3196                           	callstack 0
  3197  002286                     _toupper:
  3198                           	callstack 18
  3199  002286  0E9F               	movlw	159
  3200  002288  6E0D               	movwf	??_toupper^0,c
  3201  00228A  0EFF               	movlw	255
  3202  00228C  6E0E               	movwf	(??_toupper+1)^0,c
  3203  00228E  C00B  F00F         	movff	toupper@c,??_toupper+2
  3204  002292  C00C  F010         	movff	toupper@c+1,??_toupper+3
  3205  002296  500D               	movf	??_toupper^0,w,c
  3206  002298  260F               	addwf	(??_toupper+2)^0,f,c
  3207  00229A  500E               	movf	(??_toupper+1)^0,w,c
  3208  00229C  2210               	addwfc	(??_toupper+3)^0,f,c
  3209  00229E  5010               	movf	(??_toupper+3)^0,w,c
  3210  0022A0  E107               	bnz	u2561
  3211  0022A2  0E1A               	movlw	26
  3212  0022A4  5C0F               	subwf	(??_toupper+2)^0,w,c
  3213  0022A6  B0D8               	btfsc	status,0,c
  3214  0022A8  EF58  F011         	goto	u2561
  3215  0022AC  EF5A  F011         	goto	u2560
  3216  0022B0                     u2561:
  3217  0022B0  EF60  F011         	goto	l1577
  3218  0022B4                     u2560:
  3219  0022B4  0E5F               	movlw	95
  3220  0022B6  140B               	andwf	toupper@c^0,w,c
  3221  0022B8  6E0B               	movwf	?_toupper^0,c
  3222  0022BA  6A0C               	clrf	(?_toupper+1)^0,c
  3223  0022BC  EF64  F011         	goto	l1580
  3224  0022C0                     l1577:
  3225  0022C0  C00B  F00B         	movff	toupper@c,?_toupper
  3226  0022C4  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  3227  0022C8                     l1580:
  3228  0022C8  0012               	return		;funcret
  3229  0022CA                     __end_of_toupper:
  3230                           	callstack 0
  3231                           
  3232 ;; *************** function _islower *****************
  3233 ;; Defined at:
  3234 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\islower.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  c               2    4[COMRAM] int 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;		None
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  2    4[COMRAM] int 
  3241 ;; Registers used:
  3242 ;;		wreg, status,2, status,0
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3250 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3251 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3252 ;;Total ram usage:        6 bytes
  3253 ;; Hardware stack levels used: 1
  3254 ;; Hardware stack levels required when called: 4
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		_toupper
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           	psect	text14
  3263  0024B2                     __ptext14:
  3264                           	callstack 0
  3265  0024B2                     _islower:
  3266                           	callstack 18
  3267  0024B2  0E9F               	movlw	159
  3268  0024B4  6E07               	movwf	??_islower^0,c
  3269  0024B6  0EFF               	movlw	255
  3270  0024B8  6E08               	movwf	(??_islower+1)^0,c
  3271  0024BA  C005  F009         	movff	islower@c,??_islower+2
  3272  0024BE  C006  F00A         	movff	islower@c+1,??_islower+3
  3273  0024C2  5007               	movf	??_islower^0,w,c
  3274  0024C4  2609               	addwf	(??_islower+2)^0,f,c
  3275  0024C6  5008               	movf	(??_islower+1)^0,w,c
  3276  0024C8  220A               	addwfc	(??_islower+3)^0,f,c
  3277  0024CA  500A               	movf	(??_islower+3)^0,w,c
  3278  0024CC  E10A               	bnz	u2460
  3279  0024CE  0E1A               	movlw	26
  3280  0024D0  5C09               	subwf	(??_islower+2)^0,w,c
  3281  0024D2  A0D8               	btfss	status,0,c
  3282  0024D4  EF6E  F012         	goto	u2461
  3283  0024D8  EF71  F012         	goto	u2460
  3284  0024DC                     u2461:
  3285  0024DC  0E01               	movlw	1
  3286  0024DE  EF72  F012         	goto	u2470
  3287  0024E2                     u2460:
  3288  0024E2  0E00               	movlw	0
  3289  0024E4                     u2470:
  3290  0024E4  6E05               	movwf	?_islower^0,c
  3291  0024E6  6A06               	clrf	(?_islower+1)^0,c
  3292  0024E8  0012               	return		;funcret
  3293  0024EA                     __end_of_islower:
  3294                           	callstack 0
  3295                           
  3296 ;; *************** function _pad *****************
  3297 ;; Defined at:
  3298 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  3301 ;;		 -> NULL(0), 
  3302 ;;  buf             2   24[COMRAM] PTR unsigned char 
  3303 ;;		 -> dbuf(32), 
  3304 ;;  p               2   26[COMRAM] int 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;  w               2   31[COMRAM] int 
  3307 ;;  i               2   29[COMRAM] int 
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  2   22[COMRAM] int 
  3310 ;; Registers used:
  3311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3317 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3318 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3319 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3320 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3321 ;;Total ram usage:       11 bytes
  3322 ;; Hardware stack levels used: 1
  3323 ;; Hardware stack levels required when called: 8
  3324 ;; This function calls:
  3325 ;;		_fputc
  3326 ;;		_fputs
  3327 ;;		_strlen
  3328 ;; This function is called by:
  3329 ;;		_xtoa
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text15
  3334  001F66                     __ptext15:
  3335                           	callstack 0
  3336  001F66                     _pad:
  3337                           	callstack 15
  3338  001F66                     
  3339                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3340  001F66  A055               	btfss	_flags^0,0,c
  3341  001F68  EFB8  F00F         	goto	u2481
  3342  001F6C  EFBA  F00F         	goto	u2480
  3343  001F70                     u2481:
  3344  001F70  EFC4  F00F         	goto	l3773
  3345  001F74                     u2480:
  3346  001F74                     
  3347                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3348  001F74  C019  F010         	movff	pad@buf,fputs@s
  3349  001F78  C01A  F011         	movff	pad@buf+1,fputs@s+1
  3350  001F7C  C017  F012         	movff	pad@fp,fputs@fp
  3351  001F80  C018  F013         	movff	pad@fp+1,fputs@fp+1
  3352  001F84  EC65  F011         	call	_fputs	;wreg free
  3353  001F88                     l3773:
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3356  001F88  BE1C               	btfsc	(pad@p+1)^0,7,c
  3357  001F8A  EFC9  F00F         	goto	u2491
  3358  001F8E  EFCB  F00F         	goto	u2490
  3359  001F92                     u2491:
  3360  001F92  EFD1  F00F         	goto	l3777
  3361  001F96                     u2490:
  3362  001F96  C01B  F020         	movff	pad@p,pad@w
  3363  001F9A  C01C  F021         	movff	pad@p+1,pad@w+1
  3364  001F9E  EFD5  F00F         	goto	l1430
  3365  001FA2                     l3777:
  3366  001FA2  0E00               	movlw	0
  3367  001FA4  6E21               	movwf	(pad@w+1)^0,c
  3368  001FA6  0E00               	movlw	0
  3369  001FA8  6E20               	movwf	pad@w^0,c
  3370  001FAA                     l1430:
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3373  001FAA  0E00               	movlw	0
  3374  001FAC  6E1F               	movwf	(pad@i+1)^0,c
  3375  001FAE  0E00               	movlw	0
  3376  001FB0  6E1E               	movwf	pad@i^0,c
  3377                           
  3378                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3379  001FB2  EFE7  F00F         	goto	l3783
  3380  001FB6                     l3779:
  3381                           
  3382                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3383  001FB6  0E00               	movlw	0
  3384  001FB8  6E08               	movwf	(fputc@c+1)^0,c
  3385  001FBA  0E20               	movlw	32
  3386  001FBC  6E07               	movwf	fputc@c^0,c
  3387  001FBE  C017  F009         	movff	pad@fp,fputc@fp
  3388  001FC2  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  3389  001FC6  EC60  F010         	call	_fputc	;wreg free
  3390  001FCA                     
  3391                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3392  001FCA  4A1E               	infsnz	pad@i^0,f,c
  3393  001FCC  2A1F               	incf	(pad@i+1)^0,f,c
  3394  001FCE                     l3783:
  3395                           
  3396                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3397  001FCE  5020               	movf	pad@w^0,w,c
  3398  001FD0  5C1E               	subwf	pad@i^0,w,c
  3399  001FD2  501F               	movf	(pad@i+1)^0,w,c
  3400  001FD4  0A80               	xorlw	128
  3401  001FD6  6E1D               	movwf	??_pad^0,c
  3402  001FD8  5021               	movf	(pad@w+1)^0,w,c
  3403  001FDA  0A80               	xorlw	128
  3404  001FDC  581D               	subwfb	??_pad^0,w,c
  3405  001FDE  A0D8               	btfss	status,0,c
  3406  001FE0  EFF4  F00F         	goto	u2501
  3407  001FE4  EFF6  F00F         	goto	u2500
  3408  001FE8                     u2501:
  3409  001FE8  EFDB  F00F         	goto	l3779
  3410  001FEC                     u2500:
  3411  001FEC                     
  3412                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3413  001FEC  B055               	btfsc	_flags^0,0,c
  3414  001FEE  EFFB  F00F         	goto	u2511
  3415  001FF2  EFFD  F00F         	goto	u2510
  3416  001FF6                     u2511:
  3417  001FF6  EF07  F010         	goto	l3787
  3418  001FFA                     u2510:
  3419  001FFA                     
  3420                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3421  001FFA  C019  F010         	movff	pad@buf,fputs@s
  3422  001FFE  C01A  F011         	movff	pad@buf+1,fputs@s+1
  3423  002002  C017  F012         	movff	pad@fp,fputs@fp
  3424  002006  C018  F013         	movff	pad@fp+1,fputs@fp+1
  3425  00200A  EC65  F011         	call	_fputs	;wreg free
  3426  00200E                     l3787:
  3427                           
  3428                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3429  00200E  C019  F005         	movff	pad@buf,strlen@s
  3430  002012  C01A  F006         	movff	pad@buf+1,strlen@s+1
  3431  002016  ECAD  F012         	call	_strlen	;wreg free
  3432  00201A  5020               	movf	pad@w^0,w,c
  3433  00201C  2405               	addwf	?_strlen^0,w,c
  3434  00201E  6E17               	movwf	?_pad^0,c
  3435  002020  5021               	movf	(pad@w+1)^0,w,c
  3436  002022  2006               	addwfc	(?_strlen+1)^0,w,c
  3437  002024  6E18               	movwf	(?_pad+1)^0,c
  3438  002026  0012               	return		;funcret
  3439  002028                     __end_of_pad:
  3440                           	callstack 0
  3441                           
  3442 ;; *************** function _strlen *****************
  3443 ;; Defined at:
  3444 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3447 ;;		 -> dbuf(32), 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  a               2    6[COMRAM] PTR const unsigned char 
  3450 ;;		 -> dbuf(32), 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  2    4[COMRAM] unsigned int 
  3453 ;; Registers used:
  3454 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3460 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3461 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3463 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3464 ;;Total ram usage:        4 bytes
  3465 ;; Hardware stack levels used: 1
  3466 ;; Hardware stack levels required when called: 4
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_pad
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text16
  3475  00255A                     __ptext16:
  3476                           	callstack 0
  3477  00255A                     _strlen:
  3478                           	callstack 18
  3479  00255A  C005  F007         	movff	strlen@s,strlen@a
  3480  00255E  C006  F008         	movff	strlen@s+1,strlen@a+1
  3481  002562  EFB5  F012         	goto	l3753
  3482  002566                     l3751:
  3483  002566  4A05               	infsnz	strlen@s^0,f,c
  3484  002568  2A06               	incf	(strlen@s+1)^0,f,c
  3485  00256A                     l3753:
  3486  00256A  C005  FFD9         	movff	strlen@s,fsr2l
  3487  00256E  C006  FFDA         	movff	strlen@s+1,fsr2h
  3488  002572  50DF               	movf	indf2,w,c
  3489  002574  A4D8               	btfss	status,2,c
  3490  002576  EFBF  F012         	goto	u2451
  3491  00257A  EFC1  F012         	goto	u2450
  3492  00257E                     u2451:
  3493  00257E  EFB3  F012         	goto	l3751
  3494  002582                     u2450:
  3495  002582  5007               	movf	strlen@a^0,w,c
  3496  002584  5C05               	subwf	strlen@s^0,w,c
  3497  002586  6E05               	movwf	?_strlen^0,c
  3498  002588  5008               	movf	(strlen@a+1)^0,w,c
  3499  00258A  5806               	subwfb	(strlen@s+1)^0,w,c
  3500  00258C  6E06               	movwf	(?_strlen+1)^0,c
  3501  00258E  0012               	return		;funcret
  3502  002590                     __end_of_strlen:
  3503                           	callstack 0
  3504                           
  3505 ;; *************** function _fputs *****************
  3506 ;; Defined at:
  3507 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  s               2   15[COMRAM] PTR const unsigned char 
  3510 ;;		 -> dbuf(32), 
  3511 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  3512 ;;		 -> NULL(0), 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  i               2   20[COMRAM] int 
  3515 ;;  c               1   19[COMRAM] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  2   15[COMRAM] int 
  3518 ;; Registers used:
  3519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3525 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3526 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3528 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3529 ;;Total ram usage:        7 bytes
  3530 ;; Hardware stack levels used: 1
  3531 ;; Hardware stack levels required when called: 7
  3532 ;; This function calls:
  3533 ;;		_fputc
  3534 ;; This function is called by:
  3535 ;;		_pad
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text17
  3540  0022CA                     __ptext17:
  3541                           	callstack 0
  3542  0022CA                     _fputs:
  3543                           	callstack 15
  3544  0022CA  0E00               	movlw	0
  3545  0022CC  6E16               	movwf	(fputs@i+1)^0,c
  3546  0022CE  0E00               	movlw	0
  3547  0022D0  6E15               	movwf	fputs@i^0,c
  3548  0022D2  EF76  F011         	goto	l3747
  3549  0022D6                     l3743:
  3550  0022D6  C014  F007         	movff	fputs@c,fputc@c
  3551  0022DA  6A08               	clrf	(fputc@c+1)^0,c
  3552  0022DC  C012  F009         	movff	fputs@fp,fputc@fp
  3553  0022E0  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  3554  0022E4  EC60  F010         	call	_fputc	;wreg free
  3555  0022E8  4A15               	infsnz	fputs@i^0,f,c
  3556  0022EA  2A16               	incf	(fputs@i+1)^0,f,c
  3557  0022EC                     l3747:
  3558  0022EC  5015               	movf	fputs@i^0,w,c
  3559  0022EE  2410               	addwf	fputs@s^0,w,c
  3560  0022F0  6ED9               	movwf	fsr2l,c
  3561  0022F2  5016               	movf	(fputs@i+1)^0,w,c
  3562  0022F4  2011               	addwfc	(fputs@s+1)^0,w,c
  3563  0022F6  6EDA               	movwf	fsr2h,c
  3564  0022F8  50DF               	movf	indf2,w,c
  3565  0022FA  6E14               	movwf	fputs@c^0,c
  3566  0022FC  5014               	movf	fputs@c^0,w,c
  3567  0022FE  A4D8               	btfss	status,2,c
  3568  002300  EF84  F011         	goto	u2441
  3569  002304  EF86  F011         	goto	u2440
  3570  002308                     u2441:
  3571  002308  EF6B  F011         	goto	l3743
  3572  00230C                     u2440:
  3573  00230C  0012               	return		;funcret
  3574  00230E                     __end_of_fputs:
  3575                           	callstack 0
  3576                           
  3577 ;; *************** function _fputc *****************
  3578 ;; Defined at:
  3579 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  c               2    6[COMRAM] int 
  3582 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  3583 ;;		 -> NULL(0), 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;		None
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  2    6[COMRAM] int 
  3588 ;; Registers used:
  3589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3595 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3597 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3598 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3599 ;;Total ram usage:        9 bytes
  3600 ;; Hardware stack levels used: 1
  3601 ;; Hardware stack levels required when called: 6
  3602 ;; This function calls:
  3603 ;;		_putch
  3604 ;; This function is called by:
  3605 ;;		_pad
  3606 ;;		_vfpfcnvrt
  3607 ;;		_fputs
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           	psect	text18
  3612  0020C0                     __ptext18:
  3613                           	callstack 0
  3614  0020C0                     _fputc:
  3615                           	callstack 15
  3616  0020C0  5009               	movf	fputc@fp^0,w,c
  3617  0020C2  100A               	iorwf	(fputc@fp+1)^0,w,c
  3618  0020C4  B4D8               	btfsc	status,2,c
  3619  0020C6  EF67  F010         	goto	u2401
  3620  0020CA  EF69  F010         	goto	u2400
  3621  0020CE                     u2401:
  3622  0020CE  EF72  F010         	goto	l3731
  3623  0020D2                     u2400:
  3624  0020D2  5009               	movf	fputc@fp^0,w,c
  3625  0020D4  100A               	iorwf	(fputc@fp+1)^0,w,c
  3626  0020D6  A4D8               	btfss	status,2,c
  3627  0020D8  EF70  F010         	goto	u2411
  3628  0020DC  EF72  F010         	goto	u2410
  3629  0020E0                     u2411:
  3630  0020E0  EF77  F010         	goto	l3733
  3631  0020E4                     u2410:
  3632  0020E4                     l3731:
  3633  0020E4  5007               	movf	fputc@c^0,w,c
  3634  0020E6  EC68  F014         	call	_putch
  3635  0020EA  EFAA  F010         	goto	l1558
  3636  0020EE                     l3733:
  3637  0020EE  EE20 F009          	lfsr	2,9
  3638  0020F2  5009               	movf	fputc@fp^0,w,c
  3639  0020F4  26D9               	addwf	fsr2l,f,c
  3640  0020F6  500A               	movf	(fputc@fp+1)^0,w,c
  3641  0020F8  22DA               	addwfc	fsr2h,f,c
  3642  0020FA  50DE               	movf	postinc2,w,c
  3643  0020FC  10DE               	iorwf	postinc2,w,c
  3644  0020FE  B4D8               	btfsc	status,2,c
  3645  002100  EF84  F010         	goto	u2421
  3646  002104  EF86  F010         	goto	u2420
  3647  002108                     u2421:
  3648  002108  EFA1  F010         	goto	l3737
  3649  00210C                     u2420:
  3650  00210C  EE20 F009          	lfsr	2,9
  3651  002110  5009               	movf	fputc@fp^0,w,c
  3652  002112  26D9               	addwf	fsr2l,f,c
  3653  002114  500A               	movf	(fputc@fp+1)^0,w,c
  3654  002116  22DA               	addwfc	fsr2h,f,c
  3655  002118  EE10 F003          	lfsr	1,3
  3656  00211C  5009               	movf	fputc@fp^0,w,c
  3657  00211E  26E1               	addwf	fsr1l,f,c
  3658  002120  500A               	movf	(fputc@fp+1)^0,w,c
  3659  002122  22E2               	addwfc	fsr1h,f,c
  3660  002124  50DE               	movf	postinc2,w,c
  3661  002126  5CE6               	subwf	postinc1,w,c
  3662  002128  50E6               	movf	postinc1,w,c
  3663  00212A  0A80               	xorlw	128
  3664  00212C  6E0F               	movwf	(??_fputc+4)^0,c
  3665  00212E  50DE               	movf	postinc2,w,c
  3666  002130  0A80               	xorlw	128
  3667  002132  580F               	subwfb	(??_fputc+4)^0,w,c
  3668  002134  B0D8               	btfsc	status,0,c
  3669  002136  EF9F  F010         	goto	u2431
  3670  00213A  EFA1  F010         	goto	u2430
  3671  00213E                     u2431:
  3672  00213E  EFAA  F010         	goto	l1558
  3673  002142                     u2430:
  3674  002142                     l3737:
  3675  002142  EE20 F003          	lfsr	2,3
  3676  002146  5009               	movf	fputc@fp^0,w,c
  3677  002148  26D9               	addwf	fsr2l,f,c
  3678  00214A  500A               	movf	(fputc@fp+1)^0,w,c
  3679  00214C  22DA               	addwfc	fsr2h,f,c
  3680  00214E  2ADE               	incf	postinc2,f,c
  3681  002150  0E00               	movlw	0
  3682  002152  22DD               	addwfc	postdec2,f,c
  3683  002154                     l1558:
  3684  002154  0012               	return		;funcret
  3685  002156                     __end_of_fputc:
  3686                           	callstack 0
  3687                           
  3688 ;; *************** function _putch *****************
  3689 ;; Defined at:
  3690 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  txData          1    wreg     unsigned char 
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;  txData          1    5[COMRAM] unsigned char 
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      void 
  3697 ;; Registers used:
  3698 ;;		wreg, status,2, cstack
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3705 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3707 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3708 ;;Total ram usage:        1 bytes
  3709 ;; Hardware stack levels used: 1
  3710 ;; Hardware stack levels required when called: 5
  3711 ;; This function calls:
  3712 ;;		_EUSART1_Write
  3713 ;; This function is called by:
  3714 ;;		_fputc
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           	psect	text19
  3719  0028D0                     __ptext19:
  3720                           	callstack 0
  3721  0028D0                     _putch:
  3722                           	callstack 15
  3723                           
  3724                           ;incstack = 0
  3725                           ;putch@txData stored from wreg
  3726  0028D0  6E06               	movwf	putch@txData^0,c
  3727  0028D2                     
  3728                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  3729  0028D2  5006               	movf	putch@txData^0,w,c
  3730  0028D4  EC4C  F014         	call	_EUSART1_Write
  3731  0028D8  0012               	return		;funcret
  3732  0028DA                     __end_of_putch:
  3733                           	callstack 0
  3734                           
  3735 ;; *************** function _isupper *****************
  3736 ;; Defined at:
  3737 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\isupper.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  c               2    4[COMRAM] int 
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;		None
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  2    4[COMRAM] int 
  3744 ;; Registers used:
  3745 ;;		wreg, status,2, status,0
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3751 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3753 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3754 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3755 ;;Total ram usage:        6 bytes
  3756 ;; Hardware stack levels used: 1
  3757 ;; Hardware stack levels required when called: 4
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_xtoa
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           	psect	text20
  3766  0024EA                     __ptext20:
  3767                           	callstack 0
  3768  0024EA                     _isupper:
  3769                           	callstack 19
  3770  0024EA  0EBF               	movlw	191
  3771  0024EC  6E07               	movwf	??_isupper^0,c
  3772  0024EE  0EFF               	movlw	255
  3773  0024F0  6E08               	movwf	(??_isupper+1)^0,c
  3774  0024F2  C005  F009         	movff	isupper@c,??_isupper+2
  3775  0024F6  C006  F00A         	movff	isupper@c+1,??_isupper+3
  3776  0024FA  5007               	movf	??_isupper^0,w,c
  3777  0024FC  2609               	addwf	(??_isupper+2)^0,f,c
  3778  0024FE  5008               	movf	(??_isupper+1)^0,w,c
  3779  002500  220A               	addwfc	(??_isupper+3)^0,f,c
  3780  002502  500A               	movf	(??_isupper+3)^0,w,c
  3781  002504  E10A               	bnz	u2520
  3782  002506  0E1A               	movlw	26
  3783  002508  5C09               	subwf	(??_isupper+2)^0,w,c
  3784  00250A  A0D8               	btfss	status,0,c
  3785  00250C  EF8A  F012         	goto	u2521
  3786  002510  EF8D  F012         	goto	u2520
  3787  002514                     u2521:
  3788  002514  0E01               	movlw	1
  3789  002516  EF8E  F012         	goto	u2530
  3790  00251A                     u2520:
  3791  00251A  0E00               	movlw	0
  3792  00251C                     u2530:
  3793  00251C  6E05               	movwf	?_isupper^0,c
  3794  00251E  6A06               	clrf	(?_isupper+1)^0,c
  3795  002520  0012               	return		;funcret
  3796  002522                     __end_of_isupper:
  3797                           	callstack 0
  3798                           
  3799 ;; *************** function _isalpha *****************
  3800 ;; Defined at:
  3801 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\isalpha.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  c               2    4[COMRAM] int 
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  2    4[COMRAM] int 
  3808 ;; Registers used:
  3809 ;;		wreg, status,2, status,0
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3817 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3818 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3819 ;;Total ram usage:        6 bytes
  3820 ;; Hardware stack levels used: 1
  3821 ;; Hardware stack levels required when called: 4
  3822 ;; This function calls:
  3823 ;;		Nothing
  3824 ;; This function is called by:
  3825 ;;		_xtoa
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text21
  3830  00238E                     __ptext21:
  3831                           	callstack 0
  3832  00238E                     _isalpha:
  3833                           	callstack 19
  3834  00238E  0E9F               	movlw	159
  3835  002390  6E07               	movwf	??_isalpha^0,c
  3836  002392  0EFF               	movlw	255
  3837  002394  6E08               	movwf	(??_isalpha+1)^0,c
  3838  002396  0E20               	movlw	32
  3839  002398  1005               	iorwf	isalpha@c^0,w,c
  3840  00239A  6E09               	movwf	(??_isalpha+2)^0,c
  3841  00239C  0E00               	movlw	0
  3842  00239E  1006               	iorwf	(isalpha@c+1)^0,w,c
  3843  0023A0  6E0A               	movwf	(??_isalpha+3)^0,c
  3844  0023A2  5007               	movf	??_isalpha^0,w,c
  3845  0023A4  2609               	addwf	(??_isalpha+2)^0,f,c
  3846  0023A6  5008               	movf	(??_isalpha+1)^0,w,c
  3847  0023A8  220A               	addwfc	(??_isalpha+3)^0,f,c
  3848  0023AA  500A               	movf	(??_isalpha+3)^0,w,c
  3849  0023AC  E10A               	bnz	u2540
  3850  0023AE  0E1A               	movlw	26
  3851  0023B0  5C09               	subwf	(??_isalpha+2)^0,w,c
  3852  0023B2  A0D8               	btfss	status,0,c
  3853  0023B4  EFDE  F011         	goto	u2541
  3854  0023B8  EFE1  F011         	goto	u2540
  3855  0023BC                     u2541:
  3856  0023BC  0E01               	movlw	1
  3857  0023BE  EFE2  F011         	goto	u2550
  3858  0023C2                     u2540:
  3859  0023C2  0E00               	movlw	0
  3860  0023C4                     u2550:
  3861  0023C4  6E05               	movwf	?_isalpha^0,c
  3862  0023C6  6A06               	clrf	(?_isalpha+1)^0,c
  3863  0023C8  0012               	return		;funcret
  3864  0023CA                     __end_of_isalpha:
  3865                           	callstack 0
  3866                           
  3867 ;; *************** function _atoi *****************
  3868 ;; Defined at:
  3869 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\atoi.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3872 ;;		 -> STR_4(18), STR_3(18), STR_2(18), STR_1(21), 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  n               2   19[COMRAM] int 
  3875 ;;  neg             2   17[COMRAM] int 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  2   11[COMRAM] int 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3885 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3886 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3887 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3888 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3889 ;;Total ram usage:       10 bytes
  3890 ;; Hardware stack levels used: 1
  3891 ;; Hardware stack levels required when called: 5
  3892 ;; This function calls:
  3893 ;;		___wmul
  3894 ;;		_isdigit
  3895 ;;		_isspace
  3896 ;; This function is called by:
  3897 ;;		_vfpfcnvrt
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text22
  3902  001AAE                     __ptext22:
  3903                           	callstack 0
  3904  001AAE                     _atoi:
  3905                           	callstack 19
  3906  001AAE  0E00               	movlw	0
  3907  001AB0  6E15               	movwf	(atoi@n+1)^0,c
  3908  001AB2  0E00               	movlw	0
  3909  001AB4  6E14               	movwf	atoi@n^0,c
  3910  001AB6  0E00               	movlw	0
  3911  001AB8  6E13               	movwf	(atoi@neg+1)^0,c
  3912  001ABA  0E00               	movlw	0
  3913  001ABC  6E12               	movwf	atoi@neg^0,c
  3914  001ABE  EF63  F00D         	goto	l3897
  3915  001AC2                     l3893:
  3916  001AC2  4A0C               	infsnz	atoi@s^0,f,c
  3917  001AC4  2A0D               	incf	(atoi@s+1)^0,f,c
  3918  001AC6                     l3897:
  3919  001AC6  C00C  FFF6         	movff	atoi@s,tblptrl
  3920  001ACA  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3921  001ACE                     	if	0	;tblptru may be non-zero
  3922  001ACE                     	endif
  3923  001ACE                     	if	0	;tblptru may be non-zero
  3924  001ACE                     	endif
  3925  001ACE  0008               	tblrd		*
  3926  001AD0  50F5               	movf	tablat,w,c
  3927  001AD2  0A20               	xorlw	32
  3928  001AD4  B4D8               	btfsc	status,2,c
  3929  001AD6  EF6F  F00D         	goto	u2741
  3930  001ADA  EF71  F00D         	goto	u2740
  3931  001ADE                     u2741:
  3932  001ADE  EF61  F00D         	goto	l3893
  3933  001AE2                     u2740:
  3934  001AE2  0EF7               	movlw	247
  3935  001AE4  6E0E               	movwf	??_atoi^0,c
  3936  001AE6  0EFF               	movlw	255
  3937  001AE8  6E0F               	movwf	(??_atoi+1)^0,c
  3938  001AEA  C00C  FFF6         	movff	atoi@s,tblptrl
  3939  001AEE  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3940  001AF2                     	if	0	;tblptru may be non-zero
  3941  001AF2                     	endif
  3942  001AF2                     	if	0	;tblptru may be non-zero
  3943  001AF2                     	endif
  3944  001AF2  0008               	tblrd		*
  3945  001AF4  50F5               	movf	tablat,w,c
  3946  001AF6  6E10               	movwf	(??_atoi+2)^0,c
  3947  001AF8  6A11               	clrf	(??_atoi+3)^0,c
  3948  001AFA  500E               	movf	??_atoi^0,w,c
  3949  001AFC  2610               	addwf	(??_atoi+2)^0,f,c
  3950  001AFE  500F               	movf	(??_atoi+1)^0,w,c
  3951  001B00  2211               	addwfc	(??_atoi+3)^0,f,c
  3952  001B02  5011               	movf	(??_atoi+3)^0,w,c
  3953  001B04  E109               	bnz	u2750
  3954  001B06  0E05               	movlw	5
  3955  001B08  5C10               	subwf	(??_atoi+2)^0,w,c
  3956  001B0A  A0D8               	btfss	status,0,c
  3957  001B0C  EF8A  F00D         	goto	u2751
  3958  001B10  EF8C  F00D         	goto	u2750
  3959  001B14                     u2751:
  3960  001B14  EF61  F00D         	goto	l3893
  3961  001B18                     u2750:
  3962  001B18  EF96  F00D         	goto	l3905
  3963  001B1C                     l3901:
  3964  001B1C  0E00               	movlw	0
  3965  001B1E  6E13               	movwf	(atoi@neg+1)^0,c
  3966  001B20  0E01               	movlw	1
  3967  001B22  6E12               	movwf	atoi@neg^0,c
  3968  001B24                     l3903:
  3969  001B24  4A0C               	infsnz	atoi@s^0,f,c
  3970  001B26  2A0D               	incf	(atoi@s+1)^0,f,c
  3971  001B28  EFCB  F00D         	goto	l3913
  3972  001B2C                     l3905:
  3973  001B2C  C00C  FFF6         	movff	atoi@s,tblptrl
  3974  001B30  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3975  001B34                     	if	0	;tblptru may be non-zero
  3976  001B34                     	endif
  3977  001B34                     	if	0	;tblptru may be non-zero
  3978  001B34                     	endif
  3979  001B34  0008               	tblrd		*
  3980  001B36  50F5               	movf	tablat,w,c
  3981  001B38  6E0E               	movwf	??_atoi^0,c
  3982  001B3A  6A0F               	clrf	(??_atoi+1)^0,c
  3983                           
  3984                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3985                           ; Switch size 1, requested type "simple"
  3986                           ; Number of cases is 1, Range of values is 0 to 0
  3987                           ; switch strategies available:
  3988                           ; Name         Instructions Cycles
  3989                           ; simple_byte            4     3 (average)
  3990                           ;	Chosen strategy is simple_byte
  3991  001B3C  500F               	movf	(??_atoi+1)^0,w,c
  3992  001B3E  0A00               	xorlw	0	; case 0
  3993  001B40  B4D8               	btfsc	status,2,c
  3994  001B42  EFA5  F00D         	goto	l4417
  3995  001B46  EFCB  F00D         	goto	l3913
  3996  001B4A                     l4417:
  3997                           
  3998                           ; Switch size 1, requested type "simple"
  3999                           ; Number of cases is 2, Range of values is 43 to 45
  4000                           ; switch strategies available:
  4001                           ; Name         Instructions Cycles
  4002                           ; simple_byte            7     4 (average)
  4003                           ;	Chosen strategy is simple_byte
  4004  001B4A  500E               	movf	??_atoi^0,w,c
  4005  001B4C  0A2B               	xorlw	43	; case 43
  4006  001B4E  B4D8               	btfsc	status,2,c
  4007  001B50  EF92  F00D         	goto	l3903
  4008  001B54  0A06               	xorlw	6	; case 45
  4009  001B56  B4D8               	btfsc	status,2,c
  4010  001B58  EF8E  F00D         	goto	l3901
  4011  001B5C  EFCB  F00D         	goto	l3913
  4012  001B60                     l3907:
  4013  001B60  C014  F005         	movff	atoi@n,___wmul@multiplier
  4014  001B64  C015  F006         	movff	atoi@n+1,___wmul@multiplier+1
  4015  001B68  0E00               	movlw	0
  4016  001B6A  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  4017  001B6C  0E0A               	movlw	10
  4018  001B6E  6E07               	movwf	___wmul@multiplicand^0,c
  4019  001B70  ECEF  F013         	call	___wmul	;wreg free
  4020  001B74  C00C  FFF6         	movff	atoi@s,tblptrl
  4021  001B78  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4022  001B7C                     	if	0	;tblptru may be non-zero
  4023  001B7C                     	endif
  4024  001B7C                     	if	0	;tblptru may be non-zero
  4025  001B7C                     	endif
  4026  001B7C  0008               	tblrd		*
  4027  001B7E  50F5               	movf	tablat,w,c
  4028  001B80  5E05               	subwf	?___wmul^0,f,c
  4029  001B82  0E00               	movlw	0
  4030  001B84  5A06               	subwfb	(?___wmul+1)^0,f,c
  4031  001B86  0E30               	movlw	48
  4032  001B88  2405               	addwf	?___wmul^0,w,c
  4033  001B8A  6E14               	movwf	atoi@n^0,c
  4034  001B8C  0E00               	movlw	0
  4035  001B8E  2006               	addwfc	(?___wmul+1)^0,w,c
  4036  001B90  6E15               	movwf	(atoi@n+1)^0,c
  4037  001B92  EF92  F00D         	goto	l3903
  4038  001B96                     l3913:
  4039  001B96  0ED0               	movlw	208
  4040  001B98  6E0E               	movwf	??_atoi^0,c
  4041  001B9A  0EFF               	movlw	255
  4042  001B9C  6E0F               	movwf	(??_atoi+1)^0,c
  4043  001B9E  C00C  FFF6         	movff	atoi@s,tblptrl
  4044  001BA2  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4045  001BA6                     	if	0	;tblptru may be non-zero
  4046  001BA6                     	endif
  4047  001BA6                     	if	0	;tblptru may be non-zero
  4048  001BA6                     	endif
  4049  001BA6  0008               	tblrd		*
  4050  001BA8  50F5               	movf	tablat,w,c
  4051  001BAA  6E10               	movwf	(??_atoi+2)^0,c
  4052  001BAC  6A11               	clrf	(??_atoi+3)^0,c
  4053  001BAE  500E               	movf	??_atoi^0,w,c
  4054  001BB0  2610               	addwf	(??_atoi+2)^0,f,c
  4055  001BB2  500F               	movf	(??_atoi+1)^0,w,c
  4056  001BB4  2211               	addwfc	(??_atoi+3)^0,f,c
  4057  001BB6  5011               	movf	(??_atoi+3)^0,w,c
  4058  001BB8  E109               	bnz	u2760
  4059  001BBA  0E0A               	movlw	10
  4060  001BBC  5C10               	subwf	(??_atoi+2)^0,w,c
  4061  001BBE  A0D8               	btfss	status,0,c
  4062  001BC0  EFE4  F00D         	goto	u2761
  4063  001BC4  EFE6  F00D         	goto	u2760
  4064  001BC8                     u2761:
  4065  001BC8  EFB0  F00D         	goto	l3907
  4066  001BCC                     u2760:
  4067  001BCC  5012               	movf	atoi@neg^0,w,c
  4068  001BCE  1013               	iorwf	(atoi@neg+1)^0,w,c
  4069  001BD0  A4D8               	btfss	status,2,c
  4070  001BD2  EFED  F00D         	goto	u2771
  4071  001BD6  EFEF  F00D         	goto	u2770
  4072  001BDA                     u2771:
  4073  001BDA  EFFD  F00D         	goto	l1517
  4074  001BDE                     u2770:
  4075  001BDE  C014  F00E         	movff	atoi@n,??_atoi
  4076  001BE2  C015  F00F         	movff	atoi@n+1,??_atoi+1
  4077  001BE6  1E0E               	comf	??_atoi^0,f,c
  4078  001BE8  1E0F               	comf	(??_atoi+1)^0,f,c
  4079  001BEA  4A0E               	infsnz	??_atoi^0,f,c
  4080  001BEC  2A0F               	incf	(??_atoi+1)^0,f,c
  4081  001BEE  C00E  F00C         	movff	??_atoi,?_atoi
  4082  001BF2  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  4083  001BF6  EF01  F00E         	goto	l1520
  4084  001BFA                     l1517:
  4085  001BFA  C014  F00C         	movff	atoi@n,?_atoi
  4086  001BFE  C015  F00D         	movff	atoi@n+1,?_atoi+1
  4087  001C02                     l1520:
  4088  001C02  0012               	return		;funcret
  4089  001C04                     __end_of_atoi:
  4090                           	callstack 0
  4091                           
  4092 ;; *************** function _isspace *****************
  4093 ;; Defined at:
  4094 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\isspace.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;  c               2    4[COMRAM] int 
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;		None
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  2    4[COMRAM] int 
  4101 ;; Registers used:
  4102 ;;		wreg, status,2, status,0
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4108 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4110 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4111 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4112 ;;Total ram usage:        7 bytes
  4113 ;; Hardware stack levels used: 1
  4114 ;; Hardware stack levels required when called: 4
  4115 ;; This function calls:
  4116 ;;		Nothing
  4117 ;; This function is called by:
  4118 ;;		_atoi
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text23
  4123  002234                     __ptext23:
  4124                           	callstack 0
  4125  002234                     _isspace:
  4126                           	callstack 19
  4127  002234  0E01               	movlw	1
  4128  002236  6E0B               	movwf	_isspace$2197^0,c
  4129  002238  0E20               	movlw	32
  4130  00223A  1805               	xorwf	isspace@c^0,w,c
  4131  00223C  1006               	iorwf	(isspace@c+1)^0,w,c
  4132  00223E  B4D8               	btfsc	status,2,c
  4133  002240  EF24  F011         	goto	u2591
  4134  002244  EF26  F011         	goto	u2590
  4135  002248                     u2591:
  4136  002248  EF3F  F011         	goto	l3821
  4137  00224C                     u2590:
  4138  00224C  0EF7               	movlw	247
  4139  00224E  6E07               	movwf	??_isspace^0,c
  4140  002250  0EFF               	movlw	255
  4141  002252  6E08               	movwf	(??_isspace+1)^0,c
  4142  002254  C005  F009         	movff	isspace@c,??_isspace+2
  4143  002258  C006  F00A         	movff	isspace@c+1,??_isspace+3
  4144  00225C  5007               	movf	??_isspace^0,w,c
  4145  00225E  2609               	addwf	(??_isspace+2)^0,f,c
  4146  002260  5008               	movf	(??_isspace+1)^0,w,c
  4147  002262  220A               	addwfc	(??_isspace+3)^0,f,c
  4148  002264  500A               	movf	(??_isspace+3)^0,w,c
  4149  002266  E109               	bnz	u2600
  4150  002268  0E05               	movlw	5
  4151  00226A  5C09               	subwf	(??_isspace+2)^0,w,c
  4152  00226C  A0D8               	btfss	status,0,c
  4153  00226E  EF3B  F011         	goto	u2601
  4154  002272  EF3D  F011         	goto	u2600
  4155  002276                     u2601:
  4156  002276  EF3F  F011         	goto	l3821
  4157  00227A                     u2600:
  4158  00227A  0E00               	movlw	0
  4159  00227C  6E0B               	movwf	_isspace$2197^0,c
  4160  00227E                     l3821:
  4161  00227E  C00B  F005         	movff	_isspace$2197,?_isspace
  4162  002282  6A06               	clrf	(?_isspace+1)^0,c
  4163  002284  0012               	return		;funcret
  4164  002286                     __end_of_isspace:
  4165                           	callstack 0
  4166                           
  4167 ;; *************** function _isdigit *****************
  4168 ;; Defined at:
  4169 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\isdigit.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  c               2    4[COMRAM] int 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  2    4[COMRAM] int 
  4176 ;; Registers used:
  4177 ;;		wreg, status,2, status,0
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4183 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4185 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4186 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4187 ;;Total ram usage:        6 bytes
  4188 ;; Hardware stack levels used: 1
  4189 ;; Hardware stack levels required when called: 4
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		_vfpfcnvrt
  4194 ;;		_atoi
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text24
  4199  002522                     __ptext24:
  4200                           	callstack 0
  4201  002522                     _isdigit:
  4202                           	callstack 20
  4203  002522  0ED0               	movlw	208
  4204  002524  6E07               	movwf	??_isdigit^0,c
  4205  002526  0EFF               	movlw	255
  4206  002528  6E08               	movwf	(??_isdigit+1)^0,c
  4207  00252A  C005  F009         	movff	isdigit@c,??_isdigit+2
  4208  00252E  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  4209  002532  5007               	movf	??_isdigit^0,w,c
  4210  002534  2609               	addwf	(??_isdigit+2)^0,f,c
  4211  002536  5008               	movf	(??_isdigit+1)^0,w,c
  4212  002538  220A               	addwfc	(??_isdigit+3)^0,f,c
  4213  00253A  500A               	movf	(??_isdigit+3)^0,w,c
  4214  00253C  E10A               	bnz	u2570
  4215  00253E  0E0A               	movlw	10
  4216  002540  5C09               	subwf	(??_isdigit+2)^0,w,c
  4217  002542  A0D8               	btfss	status,0,c
  4218  002544  EFA6  F012         	goto	u2571
  4219  002548  EFA9  F012         	goto	u2570
  4220  00254C                     u2571:
  4221  00254C  0E01               	movlw	1
  4222  00254E  EFAA  F012         	goto	u2580
  4223  002552                     u2570:
  4224  002552  0E00               	movlw	0
  4225  002554                     u2580:
  4226  002554  6E05               	movwf	?_isdigit^0,c
  4227  002556  6A06               	clrf	(?_isdigit+1)^0,c
  4228  002558  0012               	return		;funcret
  4229  00255A                     __end_of_isdigit:
  4230                           	callstack 0
  4231                           
  4232 ;; *************** function ___wmul *****************
  4233 ;; Defined at:
  4234 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  multiplier      2    4[COMRAM] unsigned int 
  4237 ;;  multiplicand    2    6[COMRAM] unsigned int 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  product         2    8[COMRAM] unsigned int 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  2    4[COMRAM] unsigned int 
  4242 ;; Registers used:
  4243 ;;		wreg, status,2, status,0, prodl, prodh
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4249 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4250 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4252 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4253 ;;Total ram usage:        6 bytes
  4254 ;; Hardware stack levels used: 1
  4255 ;; Hardware stack levels required when called: 4
  4256 ;; This function calls:
  4257 ;;		Nothing
  4258 ;; This function is called by:
  4259 ;;		_atoi
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           	psect	text25
  4264  0027DE                     __ptext25:
  4265                           	callstack 0
  4266  0027DE                     ___wmul:
  4267                           	callstack 19
  4268  0027DE  5005               	movf	___wmul@multiplier^0,w,c
  4269  0027E0  0207               	mulwf	___wmul@multiplicand^0,c
  4270  0027E2  CFF3 F009          	movff	prodl,___wmul@product
  4271  0027E6  CFF4 F00A          	movff	prodh,___wmul@product+1
  4272  0027EA  5005               	movf	___wmul@multiplier^0,w,c
  4273  0027EC  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  4274  0027EE  50F3               	movf	243,w,c
  4275  0027F0  260A               	addwf	(___wmul@product+1)^0,f,c
  4276  0027F2  5006               	movf	(___wmul@multiplier+1)^0,w,c
  4277  0027F4  0207               	mulwf	___wmul@multiplicand^0,c
  4278  0027F6  50F3               	movf	243,w,c
  4279  0027F8  260A               	addwf	(___wmul@product+1)^0,f,c
  4280  0027FA  C009  F005         	movff	___wmul@product,?___wmul
  4281  0027FE  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  4282  002802  0012               	return		;funcret
  4283  002804                     __end_of___wmul:
  4284                           	callstack 0
  4285                           
  4286 ;; *************** function _LCD_Function *****************
  4287 ;; Defined at:
  4288 ;;		line 394 in file "main.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  ordre           1    wreg     enum E12617
  4291 ;;  x               1    6[COMRAM] unsigned char 
  4292 ;;  z               1    7[COMRAM] unsigned char 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  ordre           1   10[COMRAM] enum E12617
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      void 
  4297 ;; Registers used:
  4298 ;;		wreg, status,2, status,0, cstack
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4306 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4307 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4308 ;;Total ram usage:        5 bytes
  4309 ;; Hardware stack levels used: 1
  4310 ;; Hardware stack levels required when called: 6
  4311 ;; This function calls:
  4312 ;;		_EUSART1_Write
  4313 ;;		_EUSART_function
  4314 ;; This function is called by:
  4315 ;;		_affiche
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           	psect	text26
  4320  001D56                     __ptext26:
  4321                           	callstack 0
  4322  001D56                     _LCD_Function:
  4323                           	callstack 21
  4324                           
  4325                           ;incstack = 0
  4326                           ;LCD_Function@ordre stored from wreg
  4327  001D56  6E0B               	movwf	LCD_Function@ordre^0,c
  4328  001D58                     
  4329                           ;main.c: 395:     switch (ordre) {
  4330  001D58  EF18  F00F         	goto	l4073
  4331  001D5C                     l4041:
  4332                           
  4333                           ;main.c: 397:             EUSART_function(0x51);
  4334  001D5C  0E51               	movlw	81
  4335  001D5E  EC60  F014         	call	_EUSART_function
  4336                           
  4337                           ;main.c: 398:             break;
  4338  001D62  EF49  F00F         	goto	l714
  4339  001D66                     l4043:
  4340                           
  4341                           ;main.c: 401:             EUSART_function(0x53);
  4342  001D66  0E53               	movlw	83
  4343  001D68  EC60  F014         	call	_EUSART_function
  4344                           
  4345                           ;main.c: 402:             EUSART1_Write(x);
  4346  001D6C  5007               	movf	LCD_Function@x^0,w,c
  4347  001D6E  EC4C  F014         	call	_EUSART1_Write
  4348                           
  4349                           ;main.c: 403:             break;
  4350  001D72  EF49  F00F         	goto	l714
  4351  001D76                     l4045:
  4352                           
  4353                           ;main.c: 406:             EUSART_function(0x41);
  4354  001D76  0E41               	movlw	65
  4355  001D78  EC60  F014         	call	_EUSART_function
  4356                           
  4357                           ;main.c: 407:             break;
  4358  001D7C  EF49  F00F         	goto	l714
  4359  001D80                     l4047:
  4360                           
  4361                           ;main.c: 410:             EUSART_function(0x42);
  4362  001D80  0E42               	movlw	66
  4363  001D82  EC60  F014         	call	_EUSART_function
  4364                           
  4365                           ;main.c: 411:             break;
  4366  001D86  EF49  F00F         	goto	l714
  4367  001D8A                     l4049:
  4368                           
  4369                           ;main.c: 414:             EUSART_function(0x45);;
  4370  001D8A  0E45               	movlw	69
  4371  001D8C  EC60  F014         	call	_EUSART_function
  4372                           
  4373                           ;main.c: 415:             switch (x) {
  4374  001D90  EFE1  F00E         	goto	l4061
  4375  001D94                     l4051:
  4376                           
  4377                           ;main.c: 417:                     EUSART1_Write(0x00 + z);
  4378  001D94  5008               	movf	LCD_Function@z^0,w,c
  4379  001D96  EC4C  F014         	call	_EUSART1_Write
  4380                           
  4381                           ;main.c: 418:                     break;
  4382  001D9A  EF49  F00F         	goto	l714
  4383  001D9E                     l4053:
  4384                           
  4385                           ;main.c: 420:                     EUSART1_Write(0x40 + z);
  4386  001D9E  5008               	movf	LCD_Function@z^0,w,c
  4387  001DA0  0F40               	addlw	64
  4388  001DA2  EC4C  F014         	call	_EUSART1_Write
  4389                           
  4390                           ;main.c: 421:                     break;
  4391  001DA6  EF49  F00F         	goto	l714
  4392  001DAA                     l4055:
  4393                           
  4394                           ;main.c: 423:                     EUSART1_Write(0x14 + z);
  4395  001DAA  5008               	movf	LCD_Function@z^0,w,c
  4396  001DAC  0F14               	addlw	20
  4397  001DAE  EC4C  F014         	call	_EUSART1_Write
  4398                           
  4399                           ;main.c: 424:                     break;
  4400  001DB2  EF49  F00F         	goto	l714
  4401  001DB6                     l4057:
  4402                           
  4403                           ;main.c: 426:                     EUSART1_Write(0x54 + z);
  4404  001DB6  5008               	movf	LCD_Function@z^0,w,c
  4405  001DB8  0F54               	addlw	84
  4406  001DBA  EC4C  F014         	call	_EUSART1_Write
  4407                           
  4408                           ;main.c: 427:                     break;
  4409  001DBE  EF49  F00F         	goto	l714
  4410  001DC2                     l4061:
  4411  001DC2  5007               	movf	LCD_Function@x^0,w,c
  4412  001DC4  6E09               	movwf	??_LCD_Function^0,c
  4413  001DC6  6A0A               	clrf	(??_LCD_Function+1)^0,c
  4414                           
  4415                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4416                           ; Switch size 1, requested type "simple"
  4417                           ; Number of cases is 1, Range of values is 0 to 0
  4418                           ; switch strategies available:
  4419                           ; Name         Instructions Cycles
  4420                           ; simple_byte            4     3 (average)
  4421                           ;	Chosen strategy is simple_byte
  4422  001DC8  500A               	movf	(??_LCD_Function+1)^0,w,c
  4423  001DCA  0A00               	xorlw	0	; case 0
  4424  001DCC  B4D8               	btfsc	status,2,c
  4425  001DCE  EFEB  F00E         	goto	l4419
  4426  001DD2  EF49  F00F         	goto	l714
  4427  001DD6                     l4419:
  4428                           
  4429                           ; Switch size 1, requested type "simple"
  4430                           ; Number of cases is 4, Range of values is 0 to 3
  4431                           ; switch strategies available:
  4432                           ; Name         Instructions Cycles
  4433                           ; simple_byte           13     7 (average)
  4434                           ;	Chosen strategy is simple_byte
  4435  001DD6  5009               	movf	??_LCD_Function^0,w,c
  4436  001DD8  0A00               	xorlw	0	; case 0
  4437  001DDA  B4D8               	btfsc	status,2,c
  4438  001DDC  EFCA  F00E         	goto	l4051
  4439  001DE0  0A01               	xorlw	1	; case 1
  4440  001DE2  B4D8               	btfsc	status,2,c
  4441  001DE4  EFCF  F00E         	goto	l4053
  4442  001DE8  0A03               	xorlw	3	; case 2
  4443  001DEA  B4D8               	btfsc	status,2,c
  4444  001DEC  EFD5  F00E         	goto	l4055
  4445  001DF0  0A01               	xorlw	1	; case 3
  4446  001DF2  B4D8               	btfsc	status,2,c
  4447  001DF4  EFDB  F00E         	goto	l4057
  4448  001DF8  EF49  F00F         	goto	l714
  4449  001DFC                     l4063:
  4450                           
  4451                           ;main.c: 431:              EUSART_function(0x46);
  4452  001DFC  0E46               	movlw	70
  4453  001DFE  EC60  F014         	call	_EUSART_function
  4454                           
  4455                           ;main.c: 432:             break;
  4456  001E02  EF49  F00F         	goto	l714
  4457  001E06                     l4065:
  4458                           
  4459                           ;main.c: 434:             EUSART_function(0x4B);
  4460  001E06  0E4B               	movlw	75
  4461  001E08  EC60  F014         	call	_EUSART_function
  4462                           
  4463                           ;main.c: 435:             break;
  4464  001E0C  EF49  F00F         	goto	l714
  4465  001E10                     l4067:
  4466                           
  4467                           ;main.c: 437:             EUSART_function(0x4C);
  4468  001E10  0E4C               	movlw	76
  4469  001E12  EC60  F014         	call	_EUSART_function
  4470                           
  4471                           ;main.c: 438:             break;
  4472  001E16  EF49  F00F         	goto	l714
  4473  001E1A                     l4069:
  4474                           
  4475                           ;main.c: 440:             EUSART_function(0x41);
  4476  001E1A  0E41               	movlw	65
  4477  001E1C  EC60  F014         	call	_EUSART_function
  4478                           
  4479                           ;main.c: 441:             EUSART_function(0x51);
  4480  001E20  0E51               	movlw	81
  4481  001E22  EC60  F014         	call	_EUSART_function
  4482                           
  4483                           ;main.c: 442:             EUSART_function(0x46);
  4484  001E26  0E46               	movlw	70
  4485  001E28  EC60  F014         	call	_EUSART_function
  4486                           
  4487                           ;main.c: 443:             break;
  4488  001E2C  EF49  F00F         	goto	l714
  4489  001E30                     l4073:
  4490  001E30  500B               	movf	LCD_Function@ordre^0,w,c
  4491  001E32  6E09               	movwf	??_LCD_Function^0,c
  4492  001E34  6A0A               	clrf	(??_LCD_Function+1)^0,c
  4493                           
  4494                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4495                           ; Switch size 1, requested type "simple"
  4496                           ; Number of cases is 1, Range of values is 0 to 0
  4497                           ; switch strategies available:
  4498                           ; Name         Instructions Cycles
  4499                           ; simple_byte            4     3 (average)
  4500                           ;	Chosen strategy is simple_byte
  4501  001E36  500A               	movf	(??_LCD_Function+1)^0,w,c
  4502  001E38  0A00               	xorlw	0	; case 0
  4503  001E3A  B4D8               	btfsc	status,2,c
  4504  001E3C  EF22  F00F         	goto	l4421
  4505  001E40  EF49  F00F         	goto	l714
  4506  001E44                     l4421:
  4507                           
  4508                           ; Switch size 1, requested type "simple"
  4509                           ; Number of cases is 9, Range of values is 0 to 8
  4510                           ; switch strategies available:
  4511                           ; Name         Instructions Cycles
  4512                           ; simple_byte           28    15 (average)
  4513                           ;	Chosen strategy is simple_byte
  4514  001E44  5009               	movf	??_LCD_Function^0,w,c
  4515  001E46  0A00               	xorlw	0	; case 0
  4516  001E48  B4D8               	btfsc	status,2,c
  4517  001E4A  EFAE  F00E         	goto	l4041
  4518  001E4E  0A01               	xorlw	1	; case 1
  4519  001E50  B4D8               	btfsc	status,2,c
  4520  001E52  EFC5  F00E         	goto	l4049
  4521  001E56  0A03               	xorlw	3	; case 2
  4522  001E58  B4D8               	btfsc	status,2,c
  4523  001E5A  EFFE  F00E         	goto	l4063
  4524  001E5E  0A01               	xorlw	1	; case 3
  4525  001E60  B4D8               	btfsc	status,2,c
  4526  001E62  EFB3  F00E         	goto	l4043
  4527  001E66  0A07               	xorlw	7	; case 4
  4528  001E68  B4D8               	btfsc	status,2,c
  4529  001E6A  EFBB  F00E         	goto	l4045
  4530  001E6E  0A01               	xorlw	1	; case 5
  4531  001E70  B4D8               	btfsc	status,2,c
  4532  001E72  EFC0  F00E         	goto	l4047
  4533  001E76  0A03               	xorlw	3	; case 6
  4534  001E78  B4D8               	btfsc	status,2,c
  4535  001E7A  EF03  F00F         	goto	l4065
  4536  001E7E  0A01               	xorlw	1	; case 7
  4537  001E80  B4D8               	btfsc	status,2,c
  4538  001E82  EF08  F00F         	goto	l4067
  4539  001E86  0A0F               	xorlw	15	; case 8
  4540  001E88  B4D8               	btfsc	status,2,c
  4541  001E8A  EF0D  F00F         	goto	l4069
  4542  001E8E  EF49  F00F         	goto	l714
  4543  001E92                     l714:
  4544  001E92  0012               	return		;funcret
  4545  001E94                     __end_of_LCD_Function:
  4546                           	callstack 0
  4547                           
  4548 ;; *************** function _EUSART_function *****************
  4549 ;; Defined at:
  4550 ;;		line 367 in file "main.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;  hex             1    wreg     unsigned char 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  hex             1    5[COMRAM] unsigned char 
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  1    wreg      void 
  4557 ;; Registers used:
  4558 ;;		wreg, status,2, cstack
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4567 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4568 ;;Total ram usage:        1 bytes
  4569 ;; Hardware stack levels used: 1
  4570 ;; Hardware stack levels required when called: 5
  4571 ;; This function calls:
  4572 ;;		_EUSART1_Write
  4573 ;; This function is called by:
  4574 ;;		_LCD_Function
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           	psect	text27
  4579  0028C0                     __ptext27:
  4580                           	callstack 0
  4581  0028C0                     _EUSART_function:
  4582                           	callstack 21
  4583                           
  4584                           ;incstack = 0
  4585                           ;EUSART_function@hex stored from wreg
  4586  0028C0  6E06               	movwf	EUSART_function@hex^0,c
  4587  0028C2                     
  4588                           ;main.c: 368:      EUSART1_Write(0xFE);
  4589  0028C2  0EFE               	movlw	254
  4590  0028C4  EC4C  F014         	call	_EUSART1_Write
  4591  0028C8                     
  4592                           ;main.c: 369:      EUSART1_Write(hex);
  4593  0028C8  5006               	movf	EUSART_function@hex^0,w,c
  4594  0028CA  EC4C  F014         	call	_EUSART1_Write
  4595  0028CE  0012               	return		;funcret
  4596  0028D0                     __end_of_EUSART_function:
  4597                           	callstack 0
  4598                           
  4599 ;; *************** function _EUSART1_Write *****************
  4600 ;; Defined at:
  4601 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  txData          1    wreg     unsigned char 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  txData          1    4[COMRAM] unsigned char 
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4619 ;;Total ram usage:        1 bytes
  4620 ;; Hardware stack levels used: 1
  4621 ;; Hardware stack levels required when called: 4
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_putch
  4626 ;;		_EUSART_function
  4627 ;;		_LCD_Function
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           	psect	text28
  4632  002898                     __ptext28:
  4633                           	callstack 0
  4634  002898                     _EUSART1_Write:
  4635                           	callstack 15
  4636                           
  4637                           ;incstack = 0
  4638                           ;EUSART1_Write@txData stored from wreg
  4639  002898  6E05               	movwf	EUSART1_Write@txData^0,c
  4640  00289A                     l95:
  4641                           
  4642                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  4643  00289A  A89E               	btfss	158,4,c	;volatile
  4644  00289C  EF52  F014         	goto	u2391
  4645  0028A0  EF54  F014         	goto	u2390
  4646  0028A4                     u2391:
  4647  0028A4  EF4D  F014         	goto	l95
  4648  0028A8                     u2390:
  4649  0028A8                     
  4650                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  4651  0028A8  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4652  0028AC  0012               	return		;funcret
  4653  0028AE                     __end_of_EUSART1_Write:
  4654                           	callstack 0
  4655                           
  4656 ;; *************** function _lamp_test *****************
  4657 ;; Defined at:
  4658 ;;		line 136 in file "main.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;		None
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  j               2    8[COMRAM] int 
  4663 ;;  j               2   12[COMRAM] int 
  4664 ;;  j               2   10[COMRAM] int 
  4665 ;;  k               2    6[COMRAM] int 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  1    wreg      void 
  4668 ;; Registers used:
  4669 ;;		wreg, status,2, status,0
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4676 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4677 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4678 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4679 ;;Total ram usage:       10 bytes
  4680 ;; Hardware stack levels used: 1
  4681 ;; Hardware stack levels required when called: 4
  4682 ;; This function calls:
  4683 ;;		Nothing
  4684 ;; This function is called by:
  4685 ;;		_main
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text29
  4690  001C04                     __ptext29:
  4691                           	callstack 0
  4692  001C04                     _lamp_test:
  4693                           	callstack 26
  4694  001C04                     
  4695                           ;main.c: 138:     for(int j=0; j<2; j++){
  4696  001C04  0E00               	movlw	0
  4697  001C06  6E0C               	movwf	(lamp_test@j+1)^0,c
  4698  001C08  0E00               	movlw	0
  4699  001C0A  6E0B               	movwf	lamp_test@j^0,c
  4700  001C0C                     l3389:
  4701  001C0C  B28A               	btfsc	138,1,c	;volatile
  4702  001C0E  EF0B  F00E         	goto	u2071
  4703  001C12  EF0E  F00E         	goto	u2070
  4704  001C16                     u2071:
  4705  001C16  0E01               	movlw	1
  4706  001C18  EF0F  F00E         	goto	u2076
  4707  001C1C                     u2070:
  4708  001C1C  0E00               	movlw	0
  4709  001C1E                     u2076:
  4710  001C1E  0AFF               	xorlw	255
  4711  001C20  6E05               	movwf	??_lamp_test^0,c
  4712  001C22  4605               	rlncf	??_lamp_test^0,f,c
  4713  001C24  508A               	movf	138,w,c	;volatile
  4714  001C26  1805               	xorwf	??_lamp_test^0,w,c
  4715  001C28  0BFD               	andlw	-3
  4716  001C2A  1805               	xorwf	??_lamp_test^0,w,c
  4717  001C2C  6E8A               	movwf	138,c	;volatile
  4718  001C2E                     
  4719                           ;main.c: 140:         _delay((unsigned long)((125)*(20000000/4000.0)));
  4720  001C2E  0E04               	movlw	4
  4721  001C30  6E06               	movwf	(??_lamp_test+1)^0,c
  4722  001C32  0E2C               	movlw	44
  4723  001C34  6E05               	movwf	??_lamp_test^0,c
  4724  001C36  0EAC               	movlw	172
  4725  001C38                     u3057:
  4726  001C38  2EE8               	decfsz	wreg,f,c
  4727  001C3A  D7FE               	bra	u3057
  4728  001C3C  2E05               	decfsz	??_lamp_test^0,f,c
  4729  001C3E  D7FC               	bra	u3057
  4730  001C40  2E06               	decfsz	(??_lamp_test+1)^0,f,c
  4731  001C42  D7FA               	bra	u3057
  4732                           
  4733                           ;main.c: 141:     }
  4734  001C44  4A0B               	infsnz	lamp_test@j^0,f,c
  4735  001C46  2A0C               	incf	(lamp_test@j+1)^0,f,c
  4736  001C48  BE0C               	btfsc	(lamp_test@j+1)^0,7,c
  4737  001C4A  EF30  F00E         	goto	u2081
  4738  001C4E  500C               	movf	(lamp_test@j+1)^0,w,c
  4739  001C50  E109               	bnz	u2080
  4740  001C52  0E02               	movlw	2
  4741  001C54  5C0B               	subwf	lamp_test@j^0,w,c
  4742  001C56  A0D8               	btfss	status,0,c
  4743  001C58  EF30  F00E         	goto	u2081
  4744  001C5C  EF32  F00E         	goto	u2080
  4745  001C60                     u2081:
  4746  001C60  EF06  F00E         	goto	l3389
  4747  001C64                     u2080:
  4748  001C64                     
  4749                           ;main.c: 143:     for(int j=0; j<2; j++){
  4750  001C64  0E00               	movlw	0
  4751  001C66  6E0E               	movwf	(lamp_test@j_1588+1)^0,c
  4752  001C68  0E00               	movlw	0
  4753  001C6A  6E0D               	movwf	lamp_test@j_1588^0,c
  4754  001C6C                     l3401:
  4755  001C6C  B48A               	btfsc	138,2,c	;volatile
  4756  001C6E  EF3B  F00E         	goto	u2091
  4757  001C72  EF3E  F00E         	goto	u2090
  4758  001C76                     u2091:
  4759  001C76  0E01               	movlw	1
  4760  001C78  EF3F  F00E         	goto	u2096
  4761  001C7C                     u2090:
  4762  001C7C  0E00               	movlw	0
  4763  001C7E                     u2096:
  4764  001C7E  0AFF               	xorlw	255
  4765  001C80  6E05               	movwf	??_lamp_test^0,c
  4766  001C82  4605               	rlncf	??_lamp_test^0,f,c
  4767  001C84  4605               	rlncf	??_lamp_test^0,f,c
  4768  001C86  508A               	movf	138,w,c	;volatile
  4769  001C88  1805               	xorwf	??_lamp_test^0,w,c
  4770  001C8A  0BFB               	andlw	-5
  4771  001C8C  1805               	xorwf	??_lamp_test^0,w,c
  4772  001C8E  6E8A               	movwf	138,c	;volatile
  4773  001C90                     
  4774                           ;main.c: 145:         _delay((unsigned long)((125)*(20000000/4000.0)));
  4775  001C90  0E04               	movlw	4
  4776  001C92  6E06               	movwf	(??_lamp_test+1)^0,c
  4777  001C94  0E2C               	movlw	44
  4778  001C96  6E05               	movwf	??_lamp_test^0,c
  4779  001C98  0EAC               	movlw	172
  4780  001C9A                     u3067:
  4781  001C9A  2EE8               	decfsz	wreg,f,c
  4782  001C9C  D7FE               	bra	u3067
  4783  001C9E  2E05               	decfsz	??_lamp_test^0,f,c
  4784  001CA0  D7FC               	bra	u3067
  4785  001CA2  2E06               	decfsz	(??_lamp_test+1)^0,f,c
  4786  001CA4  D7FA               	bra	u3067
  4787                           
  4788                           ;main.c: 146:     }
  4789  001CA6  4A0D               	infsnz	lamp_test@j_1588^0,f,c
  4790  001CA8  2A0E               	incf	(lamp_test@j_1588+1)^0,f,c
  4791  001CAA  BE0E               	btfsc	(lamp_test@j_1588+1)^0,7,c
  4792  001CAC  EF61  F00E         	goto	u2101
  4793  001CB0  500E               	movf	(lamp_test@j_1588+1)^0,w,c
  4794  001CB2  E109               	bnz	u2100
  4795  001CB4  0E02               	movlw	2
  4796  001CB6  5C0D               	subwf	lamp_test@j_1588^0,w,c
  4797  001CB8  A0D8               	btfss	status,0,c
  4798  001CBA  EF61  F00E         	goto	u2101
  4799  001CBE  EF63  F00E         	goto	u2100
  4800  001CC2                     u2101:
  4801  001CC2  EF36  F00E         	goto	l3401
  4802  001CC6                     u2100:
  4803  001CC6                     
  4804                           ;main.c: 148:     int k = LCD_Mode? 12 : 6;
  4805  001CC6  0100               	movlb	0	; () banked
  4806  001CC8  51E0               	movf	_LCD_Mode& (0+255),w,b
  4807  001CCA  A4D8               	btfss	status,2,c
  4808  001CCC  EF6A  F00E         	goto	u2111
  4809  001CD0  EF6C  F00E         	goto	u2110
  4810  001CD4                     u2111:
  4811  001CD4  EF72  F00E         	goto	l3411
  4812  001CD8                     u2110:
  4813  001CD8                     
  4814                           ; BSR set to: 0
  4815  001CD8  0E00               	movlw	0
  4816  001CDA  6E08               	movwf	(lamp_test@k+1)^0,c
  4817  001CDC  0E06               	movlw	6
  4818  001CDE  6E07               	movwf	lamp_test@k^0,c
  4819  001CE0  EF76  F00E         	goto	l564
  4820  001CE4                     l3411:
  4821                           
  4822                           ; BSR set to: 0
  4823  001CE4  0E00               	movlw	0
  4824  001CE6  6E08               	movwf	(lamp_test@k+1)^0,c
  4825  001CE8  0E0C               	movlw	12
  4826  001CEA  6E07               	movwf	lamp_test@k^0,c
  4827  001CEC                     l564:
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;main.c: 150:     for (int j = 0; j < k; j++) {
  4831  001CEC  0E00               	movlw	0
  4832  001CEE  6E0A               	movwf	(lamp_test@j_1590+1)^0,c
  4833  001CF0  0E00               	movlw	0
  4834  001CF2  6E09               	movwf	lamp_test@j_1590^0,c
  4835  001CF4  EF9B  F00E         	goto	l3417
  4836  001CF8                     l3413:
  4837  001CF8  BA8A               	btfsc	138,5,c	;volatile
  4838  001CFA  EF81  F00E         	goto	u2121
  4839  001CFE  EF84  F00E         	goto	u2120
  4840  001D02                     u2121:
  4841  001D02  0E01               	movlw	1
  4842  001D04  EF85  F00E         	goto	u2126
  4843  001D08                     u2120:
  4844  001D08  0E00               	movlw	0
  4845  001D0A                     u2126:
  4846  001D0A  0AFF               	xorlw	255
  4847  001D0C  6E05               	movwf	??_lamp_test^0,c
  4848  001D0E  3A05               	swapf	??_lamp_test^0,f,c
  4849  001D10  4605               	rlncf	??_lamp_test^0,f,c
  4850  001D12  508A               	movf	138,w,c	;volatile
  4851  001D14  1805               	xorwf	??_lamp_test^0,w,c
  4852  001D16  0BDF               	andlw	-33
  4853  001D18  1805               	xorwf	??_lamp_test^0,w,c
  4854  001D1A  6E8A               	movwf	138,c	;volatile
  4855  001D1C                     
  4856                           ;main.c: 152:         _delay((unsigned long)((125)*(20000000/4000.0)));
  4857  001D1C  0E04               	movlw	4
  4858  001D1E  6E06               	movwf	(??_lamp_test+1)^0,c
  4859  001D20  0E2C               	movlw	44
  4860  001D22  6E05               	movwf	??_lamp_test^0,c
  4861  001D24  0EAC               	movlw	172
  4862  001D26                     u3077:
  4863  001D26  2EE8               	decfsz	wreg,f,c
  4864  001D28  D7FE               	bra	u3077
  4865  001D2A  2E05               	decfsz	??_lamp_test^0,f,c
  4866  001D2C  D7FC               	bra	u3077
  4867  001D2E  2E06               	decfsz	(??_lamp_test+1)^0,f,c
  4868  001D30  D7FA               	bra	u3077
  4869                           
  4870                           ;main.c: 153:     }
  4871  001D32  4A09               	infsnz	lamp_test@j_1590^0,f,c
  4872  001D34  2A0A               	incf	(lamp_test@j_1590+1)^0,f,c
  4873  001D36                     l3417:
  4874  001D36  5007               	movf	lamp_test@k^0,w,c
  4875  001D38  5C09               	subwf	lamp_test@j_1590^0,w,c
  4876  001D3A  500A               	movf	(lamp_test@j_1590+1)^0,w,c
  4877  001D3C  0A80               	xorlw	128
  4878  001D3E  6E05               	movwf	??_lamp_test^0,c
  4879  001D40  5008               	movf	(lamp_test@k+1)^0,w,c
  4880  001D42  0A80               	xorlw	128
  4881  001D44  5805               	subwfb	??_lamp_test^0,w,c
  4882  001D46  A0D8               	btfss	status,0,c
  4883  001D48  EFA8  F00E         	goto	u2131
  4884  001D4C  EFAA  F00E         	goto	u2130
  4885  001D50                     u2131:
  4886  001D50  EF7C  F00E         	goto	l3413
  4887  001D54                     u2130:
  4888  001D54  0012               	return		;funcret
  4889  001D56                     __end_of_lamp_test:
  4890                           	callstack 0
  4891                           
  4892 ;; *************** function _SYSTEM_Initialize *****************
  4893 ;; Defined at:
  4894 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;		None
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;		None
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		wreg, status,2, status,0, cstack
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4912 ;;Total ram usage:        0 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; Hardware stack levels required when called: 6
  4915 ;; This function calls:
  4916 ;;		_EUSART1_Initialize
  4917 ;;		_INTERRUPT_Initialize
  4918 ;;		_OSCILLATOR_Initialize
  4919 ;;		_PIN_MANAGER_Initialize
  4920 ;;		_TMR0_Initialize
  4921 ;;		_TMR1_Initialize
  4922 ;;		_TMR2_Initialize
  4923 ;;		_TMR3_Initialize
  4924 ;; This function is called by:
  4925 ;;		_main
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           	psect	text30
  4930  002804                     __ptext30:
  4931                           	callstack 0
  4932  002804                     _SYSTEM_Initialize:
  4933                           	callstack 24
  4934  002804                     
  4935                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4936  002804  EC98  F014         	call	_INTERRUPT_Initialize	;wreg free
  4937  002808                     
  4938                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4939  002808  EC8A  F013         	call	_PIN_MANAGER_Initialize	;wreg free
  4940  00280C                     
  4941                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4942  00280C  EC57  F014         	call	_OSCILLATOR_Initialize	;wreg free
  4943  002810                     
  4944                           ;mcc_generated_files/mcc.c: 56:     TMR3_Initialize();
  4945  002810  ECE5  F011         	call	_TMR3_Initialize	;wreg free
  4946  002814                     
  4947                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  4948  002814  EC22  F014         	call	_TMR2_Initialize	;wreg free
  4949  002818                     
  4950                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  4951  002818  EC02  F012         	call	_TMR1_Initialize	;wreg free
  4952  00281C                     
  4953                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  4954  00281C  ECC8  F012         	call	_TMR0_Initialize	;wreg free
  4955  002820                     
  4956                           ;mcc_generated_files/mcc.c: 60:     EUSART1_Initialize();
  4957  002820  ECA7  F011         	call	_EUSART1_Initialize	;wreg free
  4958  002824  0012               	return		;funcret
  4959  002826                     __end_of_SYSTEM_Initialize:
  4960                           	callstack 0
  4961                           
  4962 ;; *************** function _TMR3_Initialize *****************
  4963 ;; Defined at:
  4964 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;		None
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;		None
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  1    wreg      void 
  4971 ;; Registers used:
  4972 ;;		wreg, status,2, status,0, cstack
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4980 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4981 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4982 ;;Total ram usage:        2 bytes
  4983 ;; Hardware stack levels used: 1
  4984 ;; Hardware stack levels required when called: 5
  4985 ;; This function calls:
  4986 ;;		_TMR3_SetInterruptHandler
  4987 ;; This function is called by:
  4988 ;;		_SYSTEM_Initialize
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992                           	psect	text31
  4993  0023CA                     __ptext31:
  4994                           	callstack 0
  4995  0023CA                     _TMR3_Initialize:
  4996                           	callstack 24
  4997  0023CA                     
  4998                           ;mcc_generated_files/tmr3.c: 69:     T3GCON = 0x00;
  4999  0023CA  0E00               	movlw	0
  5000  0023CC  6EB0               	movwf	176,c	;volatile
  5001                           
  5002                           ;mcc_generated_files/tmr3.c: 72:     TMR3H = 0x0B;
  5003  0023CE  0E0B               	movlw	11
  5004  0023D0  6EB3               	movwf	179,c	;volatile
  5005                           
  5006                           ;mcc_generated_files/tmr3.c: 75:     TMR3L = 0xDC;
  5007  0023D2  0EDC               	movlw	220
  5008  0023D4  6EB2               	movwf	178,c	;volatile
  5009  0023D6                     
  5010                           ;mcc_generated_files/tmr3.c: 78:     PIR2bits.TMR3IF = 0;
  5011  0023D6  92A1               	bcf	161,1,c	;volatile
  5012  0023D8                     
  5013                           ;mcc_generated_files/tmr3.c: 81:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  5014  0023D8  50B2               	movf	178,w,c	;volatile
  5015  0023DA  CFB3 F007          	movff	4019,??_TMR3_Initialize	;volatile
  5016  0023DE  6A08               	clrf	(??_TMR3_Initialize+1)^0,c
  5017  0023E0  C007  F008         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  5018  0023E4  6A07               	clrf	??_TMR3_Initialize^0,c
  5019  0023E6  1007               	iorwf	??_TMR3_Initialize^0,w,c
  5020  0023E8  0100               	movlb	0	; () banked
  5021  0023EA  6FD2               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  5022  0023EC  5008               	movf	(??_TMR3_Initialize+1)^0,w,c
  5023  0023EE  6FD3               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  5024  0023F0                     
  5025                           ; BSR set to: 0
  5026                           ;mcc_generated_files/tmr3.c: 84:     PIE2bits.TMR3IE = 1;
  5027  0023F0  82A0               	bsf	160,1,c	;volatile
  5028  0023F2                     
  5029                           ; BSR set to: 0
  5030                           ;mcc_generated_files/tmr3.c: 87:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
  5031  0023F2  0E34               	movlw	low _TMR3_DefaultInterruptHandler
  5032  0023F4  6E05               	movwf	TMR3_SetInterruptHandler@InterruptHandler^0,c
  5033  0023F6  0E29               	movlw	high _TMR3_DefaultInterruptHandler
  5034  0023F8  6E06               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)^0,c
  5035  0023FA  EC6D  F014         	call	_TMR3_SetInterruptHandler	;wreg free
  5036  0023FE                     
  5037                           ;mcc_generated_files/tmr3.c: 90:     T3CON = 0x31;
  5038  0023FE  0E31               	movlw	49
  5039  002400  6EB1               	movwf	177,c	;volatile
  5040  002402  0012               	return		;funcret
  5041  002404                     __end_of_TMR3_Initialize:
  5042                           	callstack 0
  5043                           
  5044 ;; *************** function _TMR3_SetInterruptHandler *****************
  5045 ;; Defined at:
  5046 ;;		line 185 in file "mcc_generated_files/tmr3.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  5049 ;;		 -> Secondes_5(1), TMR3_DefaultInterruptHandler(1), 
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;		None
  5052 ;; Return value:  Size  Location     Type
  5053 ;;                  1    wreg      void 
  5054 ;; Registers used:
  5055 ;;		wreg, status,2, status,0
  5056 ;; Tracked objects:
  5057 ;;		On entry : 0/0
  5058 ;;		On exit  : 0/0
  5059 ;;		Unchanged: 0/0
  5060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5061 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5064 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5065 ;;Total ram usage:        2 bytes
  5066 ;; Hardware stack levels used: 1
  5067 ;; Hardware stack levels required when called: 4
  5068 ;; This function calls:
  5069 ;;		Nothing
  5070 ;; This function is called by:
  5071 ;;		_TMR3_Initialize
  5072 ;;		_main
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076                           	psect	text32
  5077  0028DA                     __ptext32:
  5078                           	callstack 0
  5079  0028DA                     _TMR3_SetInterruptHandler:
  5080                           	callstack 26
  5081  0028DA                     
  5082                           ;mcc_generated_files/tmr3.c: 186:     TMR3_InterruptHandler = InterruptHandler;
  5083  0028DA  C005  F0D0         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  5084  0028DE  C006  F0D1         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  5085  0028E2  0012               	return		;funcret
  5086  0028E4                     __end_of_TMR3_SetInterruptHandler:
  5087                           	callstack 0
  5088                           
  5089 ;; *************** function _TMR2_Initialize *****************
  5090 ;; Defined at:
  5091 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;		None
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;		None
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  1    wreg      void 
  5098 ;; Registers used:
  5099 ;;		wreg, status,2, status,0, cstack
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5109 ;;Total ram usage:        0 bytes
  5110 ;; Hardware stack levels used: 1
  5111 ;; Hardware stack levels required when called: 5
  5112 ;; This function calls:
  5113 ;;		_TMR2_SetInterruptHandler
  5114 ;; This function is called by:
  5115 ;;		_SYSTEM_Initialize
  5116 ;; This function uses a non-reentrant model
  5117 ;;
  5118                           
  5119                           	psect	text33
  5120  002844                     __ptext33:
  5121                           	callstack 0
  5122  002844                     _TMR2_Initialize:
  5123                           	callstack 24
  5124  002844                     
  5125                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x7C;
  5126  002844  0E7C               	movlw	124
  5127  002846  6ECB               	movwf	203,c	;volatile
  5128                           
  5129                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  5130  002848  0E00               	movlw	0
  5131  00284A  6ECC               	movwf	204,c	;volatile
  5132  00284C                     
  5133                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  5134  00284C  929E               	bcf	158,1,c	;volatile
  5135  00284E                     
  5136                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  5137  00284E  829D               	bsf	157,1,c	;volatile
  5138  002850                     
  5139                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  5140  002850  0E36               	movlw	low _TMR2_DefaultInterruptHandler
  5141  002852  6E05               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
  5142  002854  0E29               	movlw	high _TMR2_DefaultInterruptHandler
  5143  002856  6E06               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
  5144  002858  EC72  F014         	call	_TMR2_SetInterruptHandler	;wreg free
  5145  00285C                     
  5146                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4E;
  5147  00285C  0E4E               	movlw	78
  5148  00285E  6ECA               	movwf	202,c	;volatile
  5149  002860  0012               	return		;funcret
  5150  002862                     __end_of_TMR2_Initialize:
  5151                           	callstack 0
  5152                           
  5153 ;; *************** function _TMR2_SetInterruptHandler *****************
  5154 ;; Defined at:
  5155 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  5158 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;		None
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  1    wreg      void 
  5163 ;; Registers used:
  5164 ;;		wreg, status,2, status,0
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5173 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5174 ;;Total ram usage:        2 bytes
  5175 ;; Hardware stack levels used: 1
  5176 ;; Hardware stack levels required when called: 4
  5177 ;; This function calls:
  5178 ;;		Nothing
  5179 ;; This function is called by:
  5180 ;;		_TMR2_Initialize
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           	psect	text34
  5185  0028E4                     __ptext34:
  5186                           	callstack 0
  5187  0028E4                     _TMR2_SetInterruptHandler:
  5188                           	callstack 24
  5189  0028E4                     
  5190                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  5191  0028E4  C005  F0CE         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  5192  0028E8  C006  F0CF         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  5193  0028EC  0012               	return		;funcret
  5194  0028EE                     __end_of_TMR2_SetInterruptHandler:
  5195                           	callstack 0
  5196                           
  5197 ;; *************** function _TMR1_Initialize *****************
  5198 ;; Defined at:
  5199 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;		None
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0, cstack
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5215 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5217 ;;Total ram usage:        2 bytes
  5218 ;; Hardware stack levels used: 1
  5219 ;; Hardware stack levels required when called: 5
  5220 ;; This function calls:
  5221 ;;		_TMR1_SetInterruptHandler
  5222 ;; This function is called by:
  5223 ;;		_SYSTEM_Initialize
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227                           	psect	text35
  5228  002404                     __ptext35:
  5229                           	callstack 0
  5230  002404                     _TMR1_Initialize:
  5231                           	callstack 24
  5232  002404                     
  5233                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  5234  002404  0E00               	movlw	0
  5235  002406  6EAA               	movwf	170,c	;volatile
  5236                           
  5237                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xE7;
  5238  002408  0EE7               	movlw	231
  5239  00240A  6ECF               	movwf	207,c	;volatile
  5240                           
  5241                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x96;
  5242  00240C  0E96               	movlw	150
  5243  00240E  6ECE               	movwf	206,c	;volatile
  5244  002410                     
  5245                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  5246  002410  909E               	bcf	158,0,c	;volatile
  5247  002412                     
  5248                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5249  002412  50CE               	movf	206,w,c	;volatile
  5250  002414  CFCF F007          	movff	4047,??_TMR1_Initialize	;volatile
  5251  002418  6A08               	clrf	(??_TMR1_Initialize+1)^0,c
  5252  00241A  C007  F008         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  5253  00241E  6A07               	clrf	??_TMR1_Initialize^0,c
  5254  002420  1007               	iorwf	??_TMR1_Initialize^0,w,c
  5255  002422  0100               	movlb	0	; () banked
  5256  002424  6FD8               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  5257  002426  5008               	movf	(??_TMR1_Initialize+1)^0,w,c
  5258  002428  6FD9               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  5259  00242A                     
  5260                           ; BSR set to: 0
  5261                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  5262  00242A  809D               	bsf	157,0,c	;volatile
  5263  00242C                     
  5264                           ; BSR set to: 0
  5265                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  5266  00242C  0E38               	movlw	low _TMR1_DefaultInterruptHandler
  5267  00242E  6E05               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  5268  002430  0E29               	movlw	high _TMR1_DefaultInterruptHandler
  5269  002432  6E06               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  5270  002434  EC77  F014         	call	_TMR1_SetInterruptHandler	;wreg free
  5271  002438                     
  5272                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  5273  002438  0E31               	movlw	49
  5274  00243A  6ECD               	movwf	205,c	;volatile
  5275  00243C  0012               	return		;funcret
  5276  00243E                     __end_of_TMR1_Initialize:
  5277                           	callstack 0
  5278                           
  5279 ;; *************** function _TMR1_SetInterruptHandler *****************
  5280 ;; Defined at:
  5281 ;;		line 185 in file "mcc_generated_files/tmr1.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  5284 ;;		 -> Blink_(1), TMR1_DefaultInterruptHandler(1), 
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  1    wreg      void 
  5289 ;; Registers used:
  5290 ;;		wreg, status,2, status,0
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5299 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5300 ;;Total ram usage:        2 bytes
  5301 ;; Hardware stack levels used: 1
  5302 ;; Hardware stack levels required when called: 4
  5303 ;; This function calls:
  5304 ;;		Nothing
  5305 ;; This function is called by:
  5306 ;;		_TMR1_Initialize
  5307 ;;		_main
  5308 ;; This function uses a non-reentrant model
  5309 ;;
  5310                           
  5311                           	psect	text36
  5312  0028EE                     __ptext36:
  5313                           	callstack 0
  5314  0028EE                     _TMR1_SetInterruptHandler:
  5315                           	callstack 26
  5316  0028EE                     
  5317                           ;mcc_generated_files/tmr1.c: 186:     TMR1_InterruptHandler = InterruptHandler;
  5318  0028EE  C005  F0D6         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  5319  0028F2  C006  F0D7         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  5320  0028F6  0012               	return		;funcret
  5321  0028F8                     __end_of_TMR1_SetInterruptHandler:
  5322                           	callstack 0
  5323                           
  5324 ;; *************** function _TMR0_Initialize *****************
  5325 ;; Defined at:
  5326 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;		None
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;		None
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  1    wreg      void 
  5333 ;; Registers used:
  5334 ;;		wreg, status,2, status,0, cstack
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5342 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5343 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5344 ;;Total ram usage:        2 bytes
  5345 ;; Hardware stack levels used: 1
  5346 ;; Hardware stack levels required when called: 5
  5347 ;; This function calls:
  5348 ;;		_TMR0_SetInterruptHandler
  5349 ;; This function is called by:
  5350 ;;		_SYSTEM_Initialize
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           	psect	text37
  5355  002590                     __ptext37:
  5356                           	callstack 0
  5357  002590                     _TMR0_Initialize:
  5358                           	callstack 24
  5359  002590                     
  5360                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  5361  002590  9CD5               	bcf	213,6,c	;volatile
  5362  002592                     
  5363                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x0B;
  5364  002592  0E0B               	movlw	11
  5365  002594  6ED7               	movwf	215,c	;volatile
  5366                           
  5367                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0xDB;
  5368  002596  0EDB               	movlw	219
  5369  002598  6ED6               	movwf	214,c	;volatile
  5370  00259A                     
  5371                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  5372  00259A  50D6               	movf	214,w,c	;volatile
  5373  00259C  CFD7 F007          	movff	4055,??_TMR0_Initialize	;volatile
  5374  0025A0  6A08               	clrf	(??_TMR0_Initialize+1)^0,c
  5375  0025A2  C007  F008         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  5376  0025A6  6A07               	clrf	??_TMR0_Initialize^0,c
  5377  0025A8  1007               	iorwf	??_TMR0_Initialize^0,w,c
  5378  0025AA  6E58               	movwf	_timer0ReloadVal^0,c	;volatile
  5379  0025AC  5008               	movf	(??_TMR0_Initialize+1)^0,w,c
  5380  0025AE  6E59               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  5381  0025B0                     
  5382                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  5383  0025B0  94F2               	bcf	242,2,c	;volatile
  5384  0025B2                     
  5385                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  5386  0025B2  8AF2               	bsf	242,5,c	;volatile
  5387  0025B4                     
  5388                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5389  0025B4  0E3A               	movlw	low _TMR0_DefaultInterruptHandler
  5390  0025B6  6E05               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  5391  0025B8  0E29               	movlw	high _TMR0_DefaultInterruptHandler
  5392  0025BA  6E06               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  5393  0025BC  EC7C  F014         	call	_TMR0_SetInterruptHandler	;wreg free
  5394  0025C0                     
  5395                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x93;
  5396  0025C0  0E93               	movlw	147
  5397  0025C2  6ED5               	movwf	213,c	;volatile
  5398  0025C4  0012               	return		;funcret
  5399  0025C6                     __end_of_TMR0_Initialize:
  5400                           	callstack 0
  5401                           
  5402 ;; *************** function _TMR0_SetInterruptHandler *****************
  5403 ;; Defined at:
  5404 ;;		line 171 in file "mcc_generated_files/tmr0.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  5407 ;;		 -> Minute(1), TMR0_DefaultInterruptHandler(1), 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;		None
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  1    wreg      void 
  5412 ;; Registers used:
  5413 ;;		wreg, status,2, status,0
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5423 ;;Total ram usage:        2 bytes
  5424 ;; Hardware stack levels used: 1
  5425 ;; Hardware stack levels required when called: 4
  5426 ;; This function calls:
  5427 ;;		Nothing
  5428 ;; This function is called by:
  5429 ;;		_TMR0_Initialize
  5430 ;;		_main
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           	psect	text38
  5435  0028F8                     __ptext38:
  5436                           	callstack 0
  5437  0028F8                     _TMR0_SetInterruptHandler:
  5438                           	callstack 26
  5439  0028F8                     
  5440                           ;mcc_generated_files/tmr0.c: 172:     TMR0_InterruptHandler = InterruptHandler;
  5441  0028F8  C005  F0D4         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  5442  0028FC  C006  F0D5         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  5443  002900  0012               	return		;funcret
  5444  002902                     __end_of_TMR0_SetInterruptHandler:
  5445                           	callstack 0
  5446                           
  5447 ;; *************** function _PIN_MANAGER_Initialize *****************
  5448 ;; Defined at:
  5449 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5450 ;; Parameters:    Size  Location     Type
  5451 ;;		None
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;		None
  5454 ;; Return value:  Size  Location     Type
  5455 ;;                  1    wreg      void 
  5456 ;; Registers used:
  5457 ;;		wreg, status,2
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5467 ;;Total ram usage:        0 bytes
  5468 ;; Hardware stack levels used: 1
  5469 ;; Hardware stack levels required when called: 4
  5470 ;; This function calls:
  5471 ;;		Nothing
  5472 ;; This function is called by:
  5473 ;;		_SYSTEM_Initialize
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           	psect	text39
  5478  002714                     __ptext39:
  5479                           	callstack 0
  5480  002714                     _PIN_MANAGER_Initialize:
  5481                           	callstack 25
  5482  002714                     
  5483                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5484  002714  0E00               	movlw	0
  5485  002716  6E89               	movwf	137,c	;volatile
  5486                           
  5487                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x07;
  5488  002718  0E07               	movlw	7
  5489  00271A  6E8A               	movwf	138,c	;volatile
  5490                           
  5491                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5492  00271C  0E00               	movlw	0
  5493  00271E  6E8B               	movwf	139,c	;volatile
  5494                           
  5495                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xEF;
  5496  002720  0EEF               	movlw	239
  5497  002722  6E92               	movwf	146,c	;volatile
  5498                           
  5499                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x98;
  5500  002724  0E98               	movlw	152
  5501  002726  6E93               	movwf	147,c	;volatile
  5502                           
  5503                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  5504  002728  0EBF               	movlw	191
  5505  00272A  6E94               	movwf	148,c	;volatile
  5506                           
  5507                           ;mcc_generated_files/pin_manager.c: 74:     ANCON0 = 0x1F;
  5508  00272C  0E1F               	movlw	31
  5509  00272E  010F               	movlb	15	; () banked
  5510  002730  6F5D               	movwf	93,b	;volatile
  5511                           
  5512                           ;mcc_generated_files/pin_manager.c: 75:     ANCON1 = 0x05;
  5513  002732  0E05               	movlw	5
  5514  002734  6F5C               	movwf	92,b	;volatile
  5515                           
  5516                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
  5517  002736  0E00               	movlw	0
  5518  002738  6F5B               	movwf	91,b	;volatile
  5519  00273A                     
  5520                           ; BSR set to: 15
  5521                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
  5522  00273A  8EF1               	bsf	241,7,c	;volatile
  5523  00273C                     
  5524                           ; BSR set to: 15
  5525  00273C  0012               	return		;funcret
  5526  00273E                     __end_of_PIN_MANAGER_Initialize:
  5527                           	callstack 0
  5528                           
  5529 ;; *************** function _OSCILLATOR_Initialize *****************
  5530 ;; Defined at:
  5531 ;;		line 63 in file "mcc_generated_files/mcc.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;		None
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;		None
  5536 ;; Return value:  Size  Location     Type
  5537 ;;                  1    wreg      void 
  5538 ;; Registers used:
  5539 ;;		wreg, status,2
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5549 ;;Total ram usage:        0 bytes
  5550 ;; Hardware stack levels used: 1
  5551 ;; Hardware stack levels required when called: 4
  5552 ;; This function calls:
  5553 ;;		Nothing
  5554 ;; This function is called by:
  5555 ;;		_SYSTEM_Initialize
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           	psect	text40
  5560  0028AE                     __ptext40:
  5561                           	callstack 0
  5562  0028AE                     _OSCILLATOR_Initialize:
  5563                           	callstack 25
  5564  0028AE                     
  5565                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x60;
  5566  0028AE  0E60               	movlw	96
  5567  0028B0  6ED3               	movwf	211,c	;volatile
  5568                           
  5569                           ;mcc_generated_files/mcc.c: 68:     OSCCON2 = 0x00;
  5570  0028B2  0E00               	movlw	0
  5571  0028B4  6ED2               	movwf	210,c	;volatile
  5572                           
  5573                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  5574  0028B6  0E00               	movlw	0
  5575  0028B8  6E9B               	movwf	155,c	;volatile
  5576                           
  5577                           ;mcc_generated_files/mcc.c: 72:     REFOCON = 0x00;
  5578  0028BA  0E00               	movlw	0
  5579  0028BC  6E9A               	movwf	154,c	;volatile
  5580  0028BE  0012               	return		;funcret
  5581  0028C0                     __end_of_OSCILLATOR_Initialize:
  5582                           	callstack 0
  5583                           
  5584 ;; *************** function _INTERRUPT_Initialize *****************
  5585 ;; Defined at:
  5586 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;		None
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;		None
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      void 
  5593 ;; Registers used:
  5594 ;;		None
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5604 ;;Total ram usage:        0 bytes
  5605 ;; Hardware stack levels used: 1
  5606 ;; Hardware stack levels required when called: 4
  5607 ;; This function calls:
  5608 ;;		Nothing
  5609 ;; This function is called by:
  5610 ;;		_SYSTEM_Initialize
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           
  5614                           	psect	text41
  5615  002930                     __ptext41:
  5616                           	callstack 0
  5617  002930                     _INTERRUPT_Initialize:
  5618                           	callstack 25
  5619  002930                     
  5620                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5621  002930  9ED0               	bcf	208,7,c	;volatile
  5622  002932  0012               	return		;funcret
  5623  002934                     __end_of_INTERRUPT_Initialize:
  5624                           	callstack 0
  5625                           
  5626 ;; *************** function _EUSART1_Initialize *****************
  5627 ;; Defined at:
  5628 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;		None
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;		None
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  1    wreg      void 
  5635 ;; Registers used:
  5636 ;;		wreg, status,2, status,0, cstack
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5646 ;;Total ram usage:        0 bytes
  5647 ;; Hardware stack levels used: 1
  5648 ;; Hardware stack levels required when called: 5
  5649 ;; This function calls:
  5650 ;;		_EUSART1_SetErrorHandler
  5651 ;;		_EUSART1_SetFramingErrorHandler
  5652 ;;		_EUSART1_SetOverrunErrorHandler
  5653 ;; This function is called by:
  5654 ;;		_SYSTEM_Initialize
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658                           	psect	text42
  5659  00234E                     __ptext42:
  5660                           	callstack 0
  5661  00234E                     _EUSART1_Initialize:
  5662                           	callstack 24
  5663  00234E                     
  5664                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5665  00234E  0E08               	movlw	8
  5666  002350  6EA7               	movwf	167,c	;volatile
  5667                           
  5668                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  5669  002352  0E90               	movlw	144
  5670  002354  6EAB               	movwf	171,c	;volatile
  5671                           
  5672                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5673  002356  0E24               	movlw	36
  5674  002358  6EAC               	movwf	172,c	;volatile
  5675                           
  5676                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x08;
  5677  00235A  0E08               	movlw	8
  5678  00235C  6EAF               	movwf	175,c	;volatile
  5679                           
  5680                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x02;
  5681  00235E  0E02               	movlw	2
  5682  002360  6E7D               	movwf	125,c	;volatile
  5683  002362                     
  5684                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5685  002362  0E00               	movlw	0
  5686  002364  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5687  002366  0E00               	movlw	0
  5688  002368  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5689  00236A  EC86  F014         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5690  00236E                     
  5691                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5692  00236E  0E00               	movlw	0
  5693  002370  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5694  002372  0E00               	movlw	0
  5695  002374  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5696  002376  EC81  F014         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5697  00237A                     
  5698                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5699  00237A  0E00               	movlw	0
  5700  00237C  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5701  00237E  0E00               	movlw	0
  5702  002380  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5703  002382  EC8B  F014         	call	_EUSART1_SetErrorHandler	;wreg free
  5704  002386                     
  5705                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5706  002386  0E00               	movlw	0
  5707  002388  0100               	movlb	0	; () banked
  5708  00238A  6FAD               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5709  00238C                     
  5710                           ; BSR set to: 0
  5711  00238C  0012               	return		;funcret
  5712  00238E                     __end_of_EUSART1_Initialize:
  5713                           	callstack 0
  5714                           
  5715 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5716 ;; Defined at:
  5717 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5720 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;		None
  5723 ;; Return value:  Size  Location     Type
  5724 ;;                  1    wreg      void 
  5725 ;; Registers used:
  5726 ;;		wreg, status,2, status,0
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5735 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5736 ;;Total ram usage:        2 bytes
  5737 ;; Hardware stack levels used: 1
  5738 ;; Hardware stack levels required when called: 4
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_EUSART1_Initialize
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           	psect	text43
  5747  002902                     __ptext43:
  5748                           	callstack 0
  5749  002902                     _EUSART1_SetOverrunErrorHandler:
  5750                           	callstack 24
  5751  002902                     
  5752                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  5753  002902  C005  F0DC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5754  002906  C006  F0DD         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5755  00290A  0012               	return		;funcret
  5756  00290C                     __end_of_EUSART1_SetOverrunErrorHandler:
  5757                           	callstack 0
  5758                           
  5759 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5760 ;; Defined at:
  5761 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5764 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;		None
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      void 
  5769 ;; Registers used:
  5770 ;;		wreg, status,2, status,0
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5779 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5780 ;;Total ram usage:        2 bytes
  5781 ;; Hardware stack levels used: 1
  5782 ;; Hardware stack levels required when called: 4
  5783 ;; This function calls:
  5784 ;;		Nothing
  5785 ;; This function is called by:
  5786 ;;		_EUSART1_Initialize
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text44
  5791  00290C                     __ptext44:
  5792                           	callstack 0
  5793  00290C                     _EUSART1_SetFramingErrorHandler:
  5794                           	callstack 24
  5795  00290C                     
  5796                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  5797  00290C  C005  F0DE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5798  002910  C006  F0DF         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5799  002914  0012               	return		;funcret
  5800  002916                     __end_of_EUSART1_SetFramingErrorHandler:
  5801                           	callstack 0
  5802                           
  5803 ;; *************** function _EUSART1_SetErrorHandler *****************
  5804 ;; Defined at:
  5805 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5808 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;		None
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  1    wreg      void 
  5813 ;; Registers used:
  5814 ;;		wreg, status,2, status,0
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5823 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5824 ;;Total ram usage:        2 bytes
  5825 ;; Hardware stack levels used: 1
  5826 ;; Hardware stack levels required when called: 4
  5827 ;; This function calls:
  5828 ;;		Nothing
  5829 ;; This function is called by:
  5830 ;;		_EUSART1_Initialize
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text45
  5835  002916                     __ptext45:
  5836                           	callstack 0
  5837  002916                     _EUSART1_SetErrorHandler:
  5838                           	callstack 24
  5839  002916                     
  5840                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5841  002916  C005  F0DA         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5842  00291A  C006  F0DB         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5843  00291E  0012               	return		;funcret
  5844  002920                     __end_of_EUSART1_SetErrorHandler:
  5845                           	callstack 0
  5846                           
  5847 ;; *************** function _INTERRUPT_InterruptManager *****************
  5848 ;; Defined at:
  5849 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;		None
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;		None
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  1    wreg      void 
  5856 ;; Registers used:
  5857 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5865 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5866 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5867 ;;Total ram usage:        2 bytes
  5868 ;; Hardware stack levels used: 1
  5869 ;; Hardware stack levels required when called: 3
  5870 ;; This function calls:
  5871 ;;		_TMR0_ISR
  5872 ;;		_TMR1_ISR
  5873 ;;		_TMR2_ISR
  5874 ;;		_TMR3_ISR
  5875 ;; This function is called by:
  5876 ;;		Interrupt level 2
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           	psect	intcode
  5881  000008                     __pintcode:
  5882                           	callstack 0
  5883  000008                     _INTERRUPT_InterruptManager:
  5884                           	callstack 15
  5885                           
  5886                           ;incstack = 0
  5887  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5888  00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
  5889  00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5890  000012                     
  5891                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5892  000012  AAF2               	btfss	242,5,c	;volatile
  5893  000014  EF0E  F000         	goto	i2u227_41
  5894  000018  EF10  F000         	goto	i2u227_40
  5895  00001C                     i2u227_41:
  5896  00001C  EF1B  F000         	goto	i2l424
  5897  000020                     i2u227_40:
  5898  000020  A4F2               	btfss	242,2,c	;volatile
  5899  000022  EF15  F000         	goto	i2u228_41
  5900  000026  EF17  F000         	goto	i2u228_40
  5901  00002A                     i2u228_41:
  5902  00002A  EF1B  F000         	goto	i2l424
  5903  00002E                     i2u228_40:
  5904  00002E                     
  5905                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  5906  00002E  ECE3  F012         	call	_TMR0_ISR	;wreg free
  5907                           
  5908                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  5909  000032  EF58  F000         	goto	i2l434
  5910  000036                     i2l424:
  5911  000036  ACF2               	btfss	242,6,c	;volatile
  5912  000038  EF20  F000         	goto	i2u229_41
  5913  00003C  EF22  F000         	goto	i2u229_40
  5914  000040                     i2u229_41:
  5915  000040  EF58  F000         	goto	i2l434
  5916  000044                     i2u229_40:
  5917  000044                     
  5918                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
  5919  000044  A2A0               	btfss	160,1,c	;volatile
  5920  000046  EF27  F000         	goto	i2u230_41
  5921  00004A  EF29  F000         	goto	i2u230_40
  5922  00004E                     i2u230_41:
  5923  00004E  EF34  F000         	goto	i2l427
  5924  000052                     i2u230_40:
  5925  000052  A2A1               	btfss	161,1,c	;volatile
  5926  000054  EF2E  F000         	goto	i2u231_41
  5927  000058  EF30  F000         	goto	i2u231_40
  5928  00005C                     i2u231_41:
  5929  00005C  EF34  F000         	goto	i2l427
  5930  000060                     i2u231_40:
  5931  000060                     
  5932                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR3_ISR();
  5933  000060  EC1F  F012         	call	_TMR3_ISR	;wreg free
  5934                           
  5935                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  5936  000064  EF58  F000         	goto	i2l434
  5937  000068                     i2l427:
  5938  000068  A29D               	btfss	157,1,c	;volatile
  5939  00006A  EF39  F000         	goto	i2u232_41
  5940  00006E  EF3B  F000         	goto	i2u232_40
  5941  000072                     i2u232_41:
  5942  000072  EF46  F000         	goto	i2l429
  5943  000076                     i2u232_40:
  5944  000076  A29E               	btfss	158,1,c	;volatile
  5945  000078  EF40  F000         	goto	i2u233_41
  5946  00007C  EF42  F000         	goto	i2u233_40
  5947  000080                     i2u233_41:
  5948  000080  EF46  F000         	goto	i2l429
  5949  000084                     i2u233_40:
  5950  000084                     
  5951                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             TMR2_ISR();
  5952  000084  EC5E  F013         	call	_TMR2_ISR	;wreg free
  5953                           
  5954                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  5955  000088  EF58  F000         	goto	i2l434
  5956  00008C                     i2l429:
  5957  00008C  A09D               	btfss	157,0,c	;volatile
  5958  00008E  EF4B  F000         	goto	i2u234_41
  5959  000092  EF4D  F000         	goto	i2u234_40
  5960  000096                     i2u234_41:
  5961  000096  EF58  F000         	goto	i2l428
  5962  00009A                     i2u234_40:
  5963  00009A  A09E               	btfss	158,0,c	;volatile
  5964  00009C  EF52  F000         	goto	i2u235_41
  5965  0000A0  EF54  F000         	goto	i2u235_40
  5966  0000A4                     i2u235_41:
  5967  0000A4  EF58  F000         	goto	i2l428
  5968  0000A8                     i2u235_40:
  5969  0000A8                     
  5970                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
  5971  0000A8  EC3C  F012         	call	_TMR1_ISR	;wreg free
  5972                           
  5973                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  5974  0000AC  EF58  F000         	goto	i2l434
  5975  0000B0                     i2l428:
  5976  0000B0                     i2l434:
  5977  0000B0  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5978  0000B4  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5979  0000B8  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5980  0000BA  0011               	retfie		f
  5981  0000BC                     __end_of_INTERRUPT_InterruptManager:
  5982                           	callstack 0
  5983                           
  5984 ;; *************** function _TMR3_ISR *****************
  5985 ;; Defined at:
  5986 ;;		line 157 in file "mcc_generated_files/tmr3.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;		None
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;		None
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1    wreg      void 
  5993 ;; Registers used:
  5994 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6004 ;;Total ram usage:        0 bytes
  6005 ;; Hardware stack levels used: 1
  6006 ;; Hardware stack levels required when called: 2
  6007 ;; This function calls:
  6008 ;;		_TMR3_CallBack
  6009 ;;		i2_TMR3_WriteTimer
  6010 ;; This function is called by:
  6011 ;;		_INTERRUPT_InterruptManager
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text47
  6016  00243E                     __ptext47:
  6017                           	callstack 0
  6018  00243E                     _TMR3_ISR:
  6019                           	callstack 15
  6020  00243E                     
  6021                           ;mcc_generated_files/tmr3.c: 159:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 162:     PIR2bits.TMR3IF = 0;
  6022  00243E  92A1               	bcf	161,1,c	;volatile
  6023  002440                     
  6024                           ;mcc_generated_files/tmr3.c: 163:     TMR3_WriteTimer(timer3ReloadVal);
  6025  002440  C0D2  F001         	movff	_timer3ReloadVal,i2TMR3_WriteTimer@timerVal	;volatile
  6026  002444  C0D3  F002         	movff	_timer3ReloadVal+1,i2TMR3_WriteTimer@timerVal+1	;volatile
  6027  002448  ECC7  F013         	call	i2_TMR3_WriteTimer	;wreg free
  6028  00244C                     
  6029                           ;mcc_generated_files/tmr3.c: 166:     if (++CountCallBack >= 50)
  6030  00244C  0100               	movlb	0	; () banked
  6031  00244E  4BA5               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
  6032  002450  2BA6               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  6033  002452  51A6               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  6034  002454  E109               	bnz	i2u205_40
  6035  002456  0E32               	movlw	50
  6036  002458  5DA5               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
  6037  00245A  A0D8               	btfss	status,0,c
  6038  00245C  EF32  F012         	goto	i2u205_41
  6039  002460  EF34  F012         	goto	i2u205_40
  6040  002464                     i2u205_41:
  6041  002464  EF3B  F012         	goto	i2l332
  6042  002468                     i2u205_40:
  6043  002468                     
  6044                           ; BSR set to: 0
  6045                           ;mcc_generated_files/tmr3.c: 167:     {;mcc_generated_files/tmr3.c: 169:         TMR3_Ca
      +                          llBack();
  6046  002468  ECFE  F012         	call	_TMR3_CallBack	;wreg free
  6047  00246C                     
  6048                           ;mcc_generated_files/tmr3.c: 172:         CountCallBack = 0;
  6049  00246C  0E00               	movlw	0
  6050  00246E  0100               	movlb	0	; () banked
  6051  002470  6FA6               	movwf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
  6052  002472  0E00               	movlw	0
  6053  002474  6FA5               	movwf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
  6054  002476                     i2l332:
  6055                           
  6056                           ; BSR set to: 0
  6057  002476  0012               	return		;funcret
  6058  002478                     __end_of_TMR3_ISR:
  6059                           	callstack 0
  6060                           
  6061 ;; *************** function i2_TMR3_WriteTimer *****************
  6062 ;; Defined at:
  6063 ;;		line 120 in file "mcc_generated_files/tmr3.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;  timerVal        2    0[COMRAM] unsigned short 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;		None
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  1    wreg      void 
  6070 ;; Registers used:
  6071 ;;		wreg, status,2
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6077 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6080 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6081 ;;Total ram usage:        2 bytes
  6082 ;; Hardware stack levels used: 1
  6083 ;; This function calls:
  6084 ;;		Nothing
  6085 ;; This function is called by:
  6086 ;;		_TMR3_ISR
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           	psect	text48
  6091  00278E                     __ptext48:
  6092                           	callstack 0
  6093  00278E                     i2_TMR3_WriteTimer:
  6094                           	callstack 16
  6095  00278E                     
  6096                           ;mcc_generated_files/tmr3.c: 120: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 121: {;mcc_generated_files/tmr3.c: 122:     if (T3CONbits.nT3SYNC == 1)
  6097  00278E  A4B1               	btfss	177,2,c	;volatile
  6098  002790  EFCC  F013         	goto	i2u202_41
  6099  002794  EFCE  F013         	goto	i2u202_40
  6100  002798                     i2u202_41:
  6101  002798  EFD6  F013         	goto	i2l3323
  6102  00279C                     i2u202_40:
  6103  00279C                     
  6104                           ;mcc_generated_files/tmr3.c: 123:     {;mcc_generated_files/tmr3.c: 125:         T3CONbi
      +                          ts.TMR3ON = 0;
  6105  00279C  90B1               	bcf	177,0,c	;volatile
  6106  00279E                     
  6107                           ;mcc_generated_files/tmr3.c: 128:         TMR3H = (uint8_t)(timerVal >> 8);
  6108  00279E  5002               	movf	(i2TMR3_WriteTimer@timerVal+1)^0,w,c
  6109  0027A0  6EB3               	movwf	179,c	;volatile
  6110  0027A2                     
  6111                           ;mcc_generated_files/tmr3.c: 129:         TMR3L = (uint8_t)timerVal;
  6112  0027A2  C001  FFB2         	movff	i2TMR3_WriteTimer@timerVal,4018	;volatile
  6113  0027A6                     
  6114                           ;mcc_generated_files/tmr3.c: 132:         T3CONbits.TMR3ON =1;
  6115  0027A6  80B1               	bsf	177,0,c	;volatile
  6116                           
  6117                           ;mcc_generated_files/tmr3.c: 133:     }
  6118  0027A8  EFDA  F013         	goto	i2l317
  6119  0027AC                     i2l3323:
  6120                           
  6121                           ;mcc_generated_files/tmr3.c: 135:     {;mcc_generated_files/tmr3.c: 137:         TMR3H =
      +                           (uint8_t)(timerVal >> 8);
  6122  0027AC  5002               	movf	(i2TMR3_WriteTimer@timerVal+1)^0,w,c
  6123  0027AE  6EB3               	movwf	179,c	;volatile
  6124  0027B0                     
  6125                           ;mcc_generated_files/tmr3.c: 138:         TMR3L = (uint8_t)timerVal;
  6126  0027B0  C001  FFB2         	movff	i2TMR3_WriteTimer@timerVal,4018	;volatile
  6127  0027B4                     i2l317:
  6128  0027B4  0012               	return		;funcret
  6129  0027B6                     __end_ofi2_TMR3_WriteTimer:
  6130                           	callstack 0
  6131                           
  6132 ;; *************** function _TMR3_CallBack *****************
  6133 ;; Defined at:
  6134 ;;		line 176 in file "mcc_generated_files/tmr3.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;		None
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;		None
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  1    wreg      void 
  6141 ;; Registers used:
  6142 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6152 ;;Total ram usage:        0 bytes
  6153 ;; Hardware stack levels used: 1
  6154 ;; Hardware stack levels required when called: 1
  6155 ;; This function calls:
  6156 ;;		Absolute function
  6157 ;;		_Secondes_5
  6158 ;;		_TMR3_DefaultInterruptHandler
  6159 ;; This function is called by:
  6160 ;;		_TMR3_ISR
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text49
  6165  0025FC                     __ptext49:
  6166                           	callstack 0
  6167  0025FC                     _TMR3_CallBack:
  6168                           	callstack 15
  6169  0025FC                     
  6170                           ;mcc_generated_files/tmr3.c: 179:     if(TMR3_InterruptHandler)
  6171  0025FC  0100               	movlb	0	; () banked
  6172  0025FE  51D0               	movf	_TMR3_InterruptHandler& (0+255),w,b
  6173  002600  11D1               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
  6174  002602  B4D8               	btfsc	status,2,c
  6175  002604  EF06  F013         	goto	i2u197_41
  6176  002608  EF08  F013         	goto	i2u197_40
  6177  00260C                     i2u197_41:
  6178  00260C  EF15  F013         	goto	i2l336
  6179  002610                     i2u197_40:
  6180  002610                     
  6181                           ; BSR set to: 0
  6182                           ;mcc_generated_files/tmr3.c: 180:     {;mcc_generated_files/tmr3.c: 181:         TMR3_In
      +                          terruptHandler();
  6183  002610  D802               	call	i2u198_48
  6184  002612  EF15  F013         	goto	i2u198_49
  6185  002616                     i2u198_48:
  6186  002616  0005               	push	
  6187  002618  6EFA               	movwf	pclath,c
  6188  00261A  51D0               	movf	_TMR3_InterruptHandler& (0+255),w,b
  6189  00261C  6EFD               	movwf	tosl,c
  6190  00261E  51D1               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
  6191  002620  6EFE               	movwf	tosh,c
  6192  002622  50F8               	movf	tblptru,w,c
  6193  002624  6EFF               	movwf	tosu,c
  6194  002626  50FA               	movf	pclath,w,c
  6195  002628  0012               	return		;indir
  6196  00262A                     i2u198_49:
  6197  00262A                     i2l336:
  6198  00262A  0012               	return		;funcret
  6199  00262C                     __end_of_TMR3_CallBack:
  6200                           	callstack 0
  6201                           
  6202 ;; *************** function _Secondes_5 *****************
  6203 ;; Defined at:
  6204 ;;		line 233 in file "main.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;		None
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;		None
  6209 ;; Return value:  Size  Location     Type
  6210 ;;                  1    wreg      void 
  6211 ;; Registers used:
  6212 ;;		wreg, status,2
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6222 ;;Total ram usage:        0 bytes
  6223 ;; Hardware stack levels used: 1
  6224 ;; This function calls:
  6225 ;;		Nothing
  6226 ;; This function is called by:
  6227 ;;		_main
  6228 ;;		_TMR3_CallBack
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           	psect	text50
  6233  00287E                     __ptext50:
  6234                           	callstack 0
  6235  00287E                     _Secondes_5:
  6236                           	callstack 15
  6237  00287E                     
  6238                           ;main.c: 234:     if(sec5 == Oui){
  6239  00287E  0100               	movlb	0	; () banked
  6240  002880  51F7               	movf	_sec5& (0+255),w,b
  6241  002882  A4D8               	btfss	status,2,c
  6242  002884  EF46  F014         	goto	i2u185_41
  6243  002888  EF48  F014         	goto	i2u185_40
  6244  00288C                     i2u185_41:
  6245  00288C  EF4B  F014         	goto	i2l637
  6246  002890                     i2u185_40:
  6247  002890                     
  6248                           ; BSR set to: 0
  6249  002890  828A               	bsf	138,1,c	;volatile
  6250  002892                     
  6251                           ; BSR set to: 0
  6252                           ;main.c: 236:         sec5 = Non;
  6253  002892  0E01               	movlw	1
  6254  002894  6FF7               	movwf	_sec5& (0+255),b
  6255  002896                     i2l637:
  6256                           
  6257                           ; BSR set to: 0
  6258  002896  0012               	return		;funcret
  6259  002898                     __end_of_Secondes_5:
  6260                           	callstack 0
  6261                           
  6262 ;; *************** function _TMR3_DefaultInterruptHandler *****************
  6263 ;; Defined at:
  6264 ;;		line 189 in file "mcc_generated_files/tmr3.c"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;		None
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;		None
  6269 ;; Return value:  Size  Location     Type
  6270 ;;                  1    wreg      void 
  6271 ;; Registers used:
  6272 ;;		None
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 0/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6282 ;;Total ram usage:        0 bytes
  6283 ;; Hardware stack levels used: 1
  6284 ;; This function calls:
  6285 ;;		Nothing
  6286 ;; This function is called by:
  6287 ;;		_TMR3_Initialize
  6288 ;;		_TMR3_CallBack
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           	psect	text51
  6293  002934                     __ptext51:
  6294                           	callstack 0
  6295  002934                     _TMR3_DefaultInterruptHandler:
  6296                           	callstack 15
  6297  002934  0012               	return		;funcret
  6298  002936                     __end_of_TMR3_DefaultInterruptHandler:
  6299                           	callstack 0
  6300                           
  6301 ;; *************** function _TMR2_ISR *****************
  6302 ;; Defined at:
  6303 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  6304 ;; Parameters:    Size  Location     Type
  6305 ;;		None
  6306 ;; Auto vars:     Size  Location     Type
  6307 ;;		None
  6308 ;; Return value:  Size  Location     Type
  6309 ;;                  1    wreg      void 
  6310 ;; Registers used:
  6311 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6321 ;;Total ram usage:        0 bytes
  6322 ;; Hardware stack levels used: 1
  6323 ;; Hardware stack levels required when called: 2
  6324 ;; This function calls:
  6325 ;;		_TMR2_CallBack
  6326 ;; This function is called by:
  6327 ;;		_INTERRUPT_InterruptManager
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           	psect	text52
  6332  0026BC                     __ptext52:
  6333                           	callstack 0
  6334  0026BC                     _TMR2_ISR:
  6335                           	callstack 15
  6336  0026BC                     
  6337                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  6338  0026BC  929E               	bcf	158,1,c	;volatile
  6339  0026BE                     
  6340                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 250)
  6341  0026BE  0100               	movlb	0	; () banked
  6342  0026C0  4BA3               	infsnz	TMR2_ISR@CountCallBack& (0+255),f,b	;volatile
  6343  0026C2  2BA4               	incf	(TMR2_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  6344  0026C4  51A4               	movf	(TMR2_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  6345  0026C6  E109               	bnz	i2u206_40
  6346  0026C8  0EFA               	movlw	250
  6347  0026CA  5DA3               	subwf	TMR2_ISR@CountCallBack& (0+255),w,b	;volatile
  6348  0026CC  A0D8               	btfss	status,0,c
  6349  0026CE  EF6B  F013         	goto	i2u206_41
  6350  0026D2  EF6D  F013         	goto	i2u206_40
  6351  0026D6                     i2u206_41:
  6352  0026D6  EF74  F013         	goto	i2l386
  6353  0026DA                     i2u206_40:
  6354  0026DA                     
  6355                           ; BSR set to: 0
  6356                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  6357  0026DA  EC16  F013         	call	_TMR2_CallBack	;wreg free
  6358  0026DE                     
  6359                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  6360  0026DE  0E00               	movlw	0
  6361  0026E0  0100               	movlb	0	; () banked
  6362  0026E2  6FA4               	movwf	(TMR2_ISR@CountCallBack+1)& (0+255),b	;volatile
  6363  0026E4  0E00               	movlw	0
  6364  0026E6  6FA3               	movwf	TMR2_ISR@CountCallBack& (0+255),b	;volatile
  6365  0026E8                     i2l386:
  6366                           
  6367                           ; BSR set to: 0
  6368  0026E8  0012               	return		;funcret
  6369  0026EA                     __end_of_TMR2_ISR:
  6370                           	callstack 0
  6371                           
  6372 ;; *************** function _TMR2_CallBack *****************
  6373 ;; Defined at:
  6374 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;		None
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;		None
  6379 ;; Return value:  Size  Location     Type
  6380 ;;                  1    wreg      void 
  6381 ;; Registers used:
  6382 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6383 ;; Tracked objects:
  6384 ;;		On entry : 0/0
  6385 ;;		On exit  : 0/0
  6386 ;;		Unchanged: 0/0
  6387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6392 ;;Total ram usage:        0 bytes
  6393 ;; Hardware stack levels used: 1
  6394 ;; Hardware stack levels required when called: 1
  6395 ;; This function calls:
  6396 ;;		Absolute function
  6397 ;;		_TMR2_DefaultInterruptHandler
  6398 ;; This function is called by:
  6399 ;;		_TMR2_ISR
  6400 ;; This function uses a non-reentrant model
  6401 ;;
  6402                           
  6403                           	psect	text53
  6404  00262C                     __ptext53:
  6405                           	callstack 0
  6406  00262C                     _TMR2_CallBack:
  6407                           	callstack 15
  6408  00262C                     
  6409                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  6410  00262C  0100               	movlb	0	; () banked
  6411  00262E  51CE               	movf	_TMR2_InterruptHandler& (0+255),w,b
  6412  002630  11CF               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  6413  002632  B4D8               	btfsc	status,2,c
  6414  002634  EF1E  F013         	goto	i2u199_41
  6415  002638  EF20  F013         	goto	i2u199_40
  6416  00263C                     i2u199_41:
  6417  00263C  EF2D  F013         	goto	i2l390
  6418  002640                     i2u199_40:
  6419  002640                     
  6420                           ; BSR set to: 0
  6421                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  6422  002640  D802               	call	i2u200_48
  6423  002642  EF2D  F013         	goto	i2u200_49
  6424  002646                     i2u200_48:
  6425  002646  0005               	push	
  6426  002648  6EFA               	movwf	pclath,c
  6427  00264A  51CE               	movf	_TMR2_InterruptHandler& (0+255),w,b
  6428  00264C  6EFD               	movwf	tosl,c
  6429  00264E  51CF               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  6430  002650  6EFE               	movwf	tosh,c
  6431  002652  50F8               	movf	tblptru,w,c
  6432  002654  6EFF               	movwf	tosu,c
  6433  002656  50FA               	movf	pclath,w,c
  6434  002658  0012               	return		;indir
  6435  00265A                     i2u200_49:
  6436  00265A                     i2l390:
  6437  00265A  0012               	return		;funcret
  6438  00265C                     __end_of_TMR2_CallBack:
  6439                           	callstack 0
  6440                           
  6441 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  6442 ;; Defined at:
  6443 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;		None
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;		None
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  1    wreg      void 
  6450 ;; Registers used:
  6451 ;;		None
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6461 ;;Total ram usage:        0 bytes
  6462 ;; Hardware stack levels used: 1
  6463 ;; This function calls:
  6464 ;;		Nothing
  6465 ;; This function is called by:
  6466 ;;		_TMR2_Initialize
  6467 ;;		_TMR2_CallBack
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           	psect	text54
  6472  002936                     __ptext54:
  6473                           	callstack 0
  6474  002936                     _TMR2_DefaultInterruptHandler:
  6475                           	callstack 15
  6476  002936  0012               	return		;funcret
  6477  002938                     __end_of_TMR2_DefaultInterruptHandler:
  6478                           	callstack 0
  6479                           
  6480 ;; *************** function _TMR1_ISR *****************
  6481 ;; Defined at:
  6482 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;		None
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;		None
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  1    wreg      void 
  6489 ;; Registers used:
  6490 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6500 ;;Total ram usage:        0 bytes
  6501 ;; Hardware stack levels used: 1
  6502 ;; Hardware stack levels required when called: 2
  6503 ;; This function calls:
  6504 ;;		_TMR1_CallBack
  6505 ;;		_TMR1_WriteTimer
  6506 ;; This function is called by:
  6507 ;;		_INTERRUPT_InterruptManager
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510                           
  6511                           	psect	text55
  6512  002478                     __ptext55:
  6513                           	callstack 0
  6514  002478                     _TMR1_ISR:
  6515                           	callstack 15
  6516  002478                     
  6517                           ;mcc_generated_files/tmr1.c: 159:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
  6518  002478  909E               	bcf	158,0,c	;volatile
  6519  00247A                     
  6520                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
  6521  00247A  C0D8  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  6522  00247E  C0D9  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  6523  002482  ECDB  F013         	call	_TMR1_WriteTimer	;wreg free
  6524  002486                     
  6525                           ;mcc_generated_files/tmr1.c: 166:     if (++CountCallBack >= 25)
  6526  002486  0100               	movlb	0	; () banked
  6527  002488  4BA9               	infsnz	TMR1_ISR@CountCallBack& (0+255),f,b	;volatile
  6528  00248A  2BAA               	incf	(TMR1_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  6529  00248C  51AA               	movf	(TMR1_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  6530  00248E  E109               	bnz	i2u203_40
  6531  002490  0E19               	movlw	25
  6532  002492  5DA9               	subwf	TMR1_ISR@CountCallBack& (0+255),w,b	;volatile
  6533  002494  A0D8               	btfss	status,0,c
  6534  002496  EF4F  F012         	goto	i2u203_41
  6535  00249A  EF51  F012         	goto	i2u203_40
  6536  00249E                     i2u203_41:
  6537  00249E  EF58  F012         	goto	i2l210
  6538  0024A2                     i2u203_40:
  6539  0024A2                     
  6540                           ; BSR set to: 0
  6541                           ;mcc_generated_files/tmr1.c: 167:     {;mcc_generated_files/tmr1.c: 169:         TMR1_Ca
      +                          llBack();
  6542  0024A2  EC2E  F013         	call	_TMR1_CallBack	;wreg free
  6543  0024A6                     
  6544                           ;mcc_generated_files/tmr1.c: 172:         CountCallBack = 0;
  6545  0024A6  0E00               	movlw	0
  6546  0024A8  0100               	movlb	0	; () banked
  6547  0024AA  6FAA               	movwf	(TMR1_ISR@CountCallBack+1)& (0+255),b	;volatile
  6548  0024AC  0E00               	movlw	0
  6549  0024AE  6FA9               	movwf	TMR1_ISR@CountCallBack& (0+255),b	;volatile
  6550  0024B0                     i2l210:
  6551                           
  6552                           ; BSR set to: 0
  6553  0024B0  0012               	return		;funcret
  6554  0024B2                     __end_of_TMR1_ISR:
  6555                           	callstack 0
  6556                           
  6557 ;; *************** function _TMR1_WriteTimer *****************
  6558 ;; Defined at:
  6559 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;  timerVal        2    0[COMRAM] unsigned short 
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;		None
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  1    wreg      void 
  6566 ;; Registers used:
  6567 ;;		wreg, status,2
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6576 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6577 ;;Total ram usage:        2 bytes
  6578 ;; Hardware stack levels used: 1
  6579 ;; This function calls:
  6580 ;;		Nothing
  6581 ;; This function is called by:
  6582 ;;		_TMR1_ISR
  6583 ;;		_TMR1_Reload
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           	psect	text56
  6588  0027B6                     __ptext56:
  6589                           	callstack 0
  6590  0027B6                     _TMR1_WriteTimer:
  6591                           	callstack 16
  6592  0027B6                     
  6593                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  6594  0027B6  A4CD               	btfss	205,2,c	;volatile
  6595  0027B8  EFE0  F013         	goto	i2u191_41
  6596  0027BC  EFE2  F013         	goto	i2u191_40
  6597  0027C0                     i2u191_41:
  6598  0027C0  EFEA  F013         	goto	i2l3273
  6599  0027C4                     i2u191_40:
  6600  0027C4                     
  6601                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  6602  0027C4  90CD               	bcf	205,0,c	;volatile
  6603  0027C6                     
  6604                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  6605  0027C6  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  6606  0027C8  6ECF               	movwf	207,c	;volatile
  6607  0027CA                     
  6608                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  6609  0027CA  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  6610  0027CE                     
  6611                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  6612  0027CE  80CD               	bsf	205,0,c	;volatile
  6613                           
  6614                           ;mcc_generated_files/tmr1.c: 133:     }
  6615  0027D0  EFEE  F013         	goto	i2l195
  6616  0027D4                     i2l3273:
  6617                           
  6618                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  6619  0027D4  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  6620  0027D6  6ECF               	movwf	207,c	;volatile
  6621  0027D8                     
  6622                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  6623  0027D8  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  6624  0027DC                     i2l195:
  6625  0027DC  0012               	return		;funcret
  6626  0027DE                     __end_of_TMR1_WriteTimer:
  6627                           	callstack 0
  6628                           
  6629 ;; *************** function _TMR1_CallBack *****************
  6630 ;; Defined at:
  6631 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;		None
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6649 ;;Total ram usage:        0 bytes
  6650 ;; Hardware stack levels used: 1
  6651 ;; Hardware stack levels required when called: 1
  6652 ;; This function calls:
  6653 ;;		Absolute function
  6654 ;;		_Blink_
  6655 ;;		_TMR1_DefaultInterruptHandler
  6656 ;; This function is called by:
  6657 ;;		_TMR1_ISR
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text57
  6662  00265C                     __ptext57:
  6663                           	callstack 0
  6664  00265C                     _TMR1_CallBack:
  6665                           	callstack 15
  6666  00265C                     
  6667                           ;mcc_generated_files/tmr1.c: 179:     if(TMR1_InterruptHandler)
  6668  00265C  0100               	movlb	0	; () banked
  6669  00265E  51D6               	movf	_TMR1_InterruptHandler& (0+255),w,b
  6670  002660  11D7               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  6671  002662  B4D8               	btfsc	status,2,c
  6672  002664  EF36  F013         	goto	i2u192_41
  6673  002668  EF38  F013         	goto	i2u192_40
  6674  00266C                     i2u192_41:
  6675  00266C  EF45  F013         	goto	i2l214
  6676  002670                     i2u192_40:
  6677  002670                     
  6678                           ; BSR set to: 0
  6679                           ;mcc_generated_files/tmr1.c: 180:     {;mcc_generated_files/tmr1.c: 181:         TMR1_In
      +                          terruptHandler();
  6680  002670  D802               	call	i2u193_48
  6681  002672  EF45  F013         	goto	i2u193_49
  6682  002676                     i2u193_48:
  6683  002676  0005               	push	
  6684  002678  6EFA               	movwf	pclath,c
  6685  00267A  51D6               	movf	_TMR1_InterruptHandler& (0+255),w,b
  6686  00267C  6EFD               	movwf	tosl,c
  6687  00267E  51D7               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  6688  002680  6EFE               	movwf	tosh,c
  6689  002682  50F8               	movf	tblptru,w,c
  6690  002684  6EFF               	movwf	tosu,c
  6691  002686  50FA               	movf	pclath,w,c
  6692  002688  0012               	return		;indir
  6693  00268A                     i2u193_49:
  6694  00268A                     i2l214:
  6695  00268A  0012               	return		;funcret
  6696  00268C                     __end_of_TMR1_CallBack:
  6697                           	callstack 0
  6698                           
  6699 ;; *************** function _Blink_ *****************
  6700 ;; Defined at:
  6701 ;;		line 162 in file "main.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;		None
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;		None
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  1    wreg      void 
  6708 ;; Registers used:
  6709 ;;		wreg, status,2, status,0
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6718 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6719 ;;Total ram usage:        2 bytes
  6720 ;; Hardware stack levels used: 1
  6721 ;; This function calls:
  6722 ;;		Nothing
  6723 ;; This function is called by:
  6724 ;;		_main
  6725 ;;		_TMR1_CallBack
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text58
  6730  00155C                     __ptext58:
  6731                           	callstack 0
  6732  00155C                     _Blink_:
  6733                           	callstack 15
  6734  00155C                     
  6735                           ;main.c: 163:         if(EtatN != null){
  6736  00155C  0E05               	movlw	5
  6737  00155E  0100               	movlb	0	; () banked
  6738  001560  19F9               	xorwf	_EtatN& (0+255),w,b
  6739  001562  B4D8               	btfsc	status,2,c
  6740  001564  EFB6  F00A         	goto	i2u172_41
  6741  001568  EFB8  F00A         	goto	i2u172_40
  6742  00156C                     i2u172_41:
  6743  00156C  EF3F  F00B         	goto	i2l3111
  6744  001570                     i2u172_40:
  6745  001570  EF1A  F00B         	goto	i2l3109
  6746  001574                     i2l3089:
  6747                           
  6748                           ; BSR set to: 0
  6749  001574  B28A               	btfsc	138,1,c	;volatile
  6750  001576  EFBF  F00A         	goto	i2u173_41
  6751  00157A  EFC2  F00A         	goto	i2u173_40
  6752  00157E                     i2u173_41:
  6753  00157E  0E01               	movlw	1
  6754  001580  EFC3  F00A         	goto	i2u173_46
  6755  001584                     i2u173_40:
  6756  001584  0E00               	movlw	0
  6757  001586                     i2u173_46:
  6758  001586  0AFF               	xorlw	255
  6759  001588  6E01               	movwf	??_Blink_^0,c
  6760  00158A  4601               	rlncf	??_Blink_^0,f,c
  6761  00158C  508A               	movf	138,w,c	;volatile
  6762  00158E  1801               	xorwf	??_Blink_^0,w,c
  6763  001590  0BFD               	andlw	-3
  6764  001592  1801               	xorwf	??_Blink_^0,w,c
  6765  001594  6E8A               	movwf	138,c	;volatile
  6766  001596                     
  6767                           ; BSR set to: 0
  6768  001596  848A               	bsf	138,2,c	;volatile
  6769  001598  EF3F  F00B         	goto	i2l3111
  6770  00159C                     i2l3093:
  6771                           
  6772                           ; BSR set to: 0
  6773  00159C  B48A               	btfsc	138,2,c	;volatile
  6774  00159E  EFD3  F00A         	goto	i2u174_41
  6775  0015A2  EFD6  F00A         	goto	i2u174_40
  6776  0015A6                     i2u174_41:
  6777  0015A6  0E01               	movlw	1
  6778  0015A8  EFD7  F00A         	goto	i2u174_46
  6779  0015AC                     i2u174_40:
  6780  0015AC  0E00               	movlw	0
  6781  0015AE                     i2u174_46:
  6782  0015AE  0AFF               	xorlw	255
  6783  0015B0  6E01               	movwf	??_Blink_^0,c
  6784  0015B2  4601               	rlncf	??_Blink_^0,f,c
  6785  0015B4  4601               	rlncf	??_Blink_^0,f,c
  6786  0015B6  508A               	movf	138,w,c	;volatile
  6787  0015B8  1801               	xorwf	??_Blink_^0,w,c
  6788  0015BA  0BFB               	andlw	-5
  6789  0015BC  1801               	xorwf	??_Blink_^0,w,c
  6790  0015BE  6E8A               	movwf	138,c	;volatile
  6791  0015C0                     
  6792                           ; BSR set to: 0
  6793  0015C0  828A               	bsf	138,1,c	;volatile
  6794  0015C2  EF3F  F00B         	goto	i2l3111
  6795  0015C6                     i2l3097:
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;main.c: 174:                     if(MINUTE){
  6799  0015C6  5057               	movf	_MINUTE^0,w,c
  6800  0015C8  B4D8               	btfsc	status,2,c
  6801  0015CA  EFE9  F00A         	goto	i2u175_41
  6802  0015CE  EFEB  F00A         	goto	i2u175_40
  6803  0015D2                     i2u175_41:
  6804  0015D2  EFFE  F00A         	goto	i2l3103
  6805  0015D6                     i2u175_40:
  6806  0015D6                     
  6807                           ; BSR set to: 0
  6808  0015D6  B28A               	btfsc	138,1,c	;volatile
  6809  0015D8  EFF0  F00A         	goto	i2u176_41
  6810  0015DC  EFF3  F00A         	goto	i2u176_40
  6811  0015E0                     i2u176_41:
  6812  0015E0  0E01               	movlw	1
  6813  0015E2  EFF4  F00A         	goto	i2u176_46
  6814  0015E6                     i2u176_40:
  6815  0015E6  0E00               	movlw	0
  6816  0015E8                     i2u176_46:
  6817  0015E8  0AFF               	xorlw	255
  6818  0015EA  6E01               	movwf	??_Blink_^0,c
  6819  0015EC  4601               	rlncf	??_Blink_^0,f,c
  6820  0015EE  508A               	movf	138,w,c	;volatile
  6821  0015F0  1801               	xorwf	??_Blink_^0,w,c
  6822  0015F2  0BFD               	andlw	-3
  6823  0015F4  1801               	xorwf	??_Blink_^0,w,c
  6824  0015F6  6E8A               	movwf	138,c	;volatile
  6825  0015F8                     
  6826                           ; BSR set to: 0
  6827                           ;main.c: 176:                         m++;
  6828  0015F8  4B9D               	infsnz	_m& (0+255),f,b
  6829  0015FA  2B9E               	incf	(_m+1)& (0+255),f,b
  6830  0015FC                     i2l3103:
  6831                           
  6832                           ; BSR set to: 0
  6833                           ;main.c: 178:                     if(m==2){
  6834  0015FC  0E02               	movlw	2
  6835  0015FE  199D               	xorwf	_m& (0+255),w,b
  6836  001600  119E               	iorwf	(_m+1)& (0+255),w,b
  6837  001602  A4D8               	btfss	status,2,c
  6838  001604  EF06  F00B         	goto	i2u177_41
  6839  001608  EF08  F00B         	goto	i2u177_40
  6840  00160C                     i2u177_41:
  6841  00160C  EF3F  F00B         	goto	i2l3111
  6842  001610                     i2u177_40:
  6843  001610                     
  6844                           ; BSR set to: 0
  6845                           ;main.c: 179:                         MINUTE = 0;
  6846  001610  0E00               	movlw	0
  6847  001612  6E57               	movwf	_MINUTE^0,c
  6848                           
  6849                           ;main.c: 180:                         minute = Oui;
  6850  001614  0E00               	movlw	0
  6851  001616  6FF6               	movwf	_minute& (0+255),b
  6852                           
  6853                           ;main.c: 181:                         m=0;
  6854  001618  0E00               	movlw	0
  6855  00161A  6F9E               	movwf	(_m+1)& (0+255),b
  6856  00161C  0E00               	movlw	0
  6857  00161E  6F9D               	movwf	_m& (0+255),b
  6858  001620  EF3F  F00B         	goto	i2l3111
  6859  001624                     i2l592:
  6860                           
  6861                           ; BSR set to: 0
  6862  001624  828A               	bsf	138,1,c	;volatile
  6863  001626                     
  6864                           ; BSR set to: 0
  6865  001626  948A               	bcf	138,2,c	;volatile
  6866  001628  EF3F  F00B         	goto	i2l3111
  6867  00162C                     i2l597:
  6868                           
  6869                           ; BSR set to: 0
  6870  00162C  928A               	bcf	138,1,c	;volatile
  6871  00162E                     
  6872                           ; BSR set to: 0
  6873  00162E  948A               	bcf	138,2,c	;volatile
  6874  001630  EF3F  F00B         	goto	i2l3111
  6875  001634                     i2l3109:
  6876                           
  6877                           ; BSR set to: 0
  6878  001634  51F9               	movf	_EtatN& (0+255),w,b
  6879  001636  6E01               	movwf	??_Blink_^0,c
  6880  001638  6A02               	clrf	(??_Blink_+1)^0,c
  6881                           
  6882                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6883                           ; Switch size 1, requested type "simple"
  6884                           ; Number of cases is 1, Range of values is 0 to 0
  6885                           ; switch strategies available:
  6886                           ; Name         Instructions Cycles
  6887                           ; simple_byte            4     3 (average)
  6888                           ;	Chosen strategy is simple_byte
  6889  00163A  5002               	movf	(??_Blink_+1)^0,w,c
  6890  00163C  0A00               	xorlw	0	; case 0
  6891  00163E  B4D8               	btfsc	status,2,c
  6892  001640  EF24  F00B         	goto	i2l4423
  6893  001644  EF3F  F00B         	goto	i2l3111
  6894  001648                     i2l4423:
  6895                           
  6896                           ; BSR set to: 0
  6897                           ; Switch size 1, requested type "simple"
  6898                           ; Number of cases is 6, Range of values is 0 to 5
  6899                           ; switch strategies available:
  6900                           ; Name         Instructions Cycles
  6901                           ; simple_byte           19    10 (average)
  6902                           ;	Chosen strategy is simple_byte
  6903  001648  5001               	movf	??_Blink_^0,w,c
  6904  00164A  0A00               	xorlw	0	; case 0
  6905  00164C  B4D8               	btfsc	status,2,c
  6906  00164E  EFBA  F00A         	goto	i2l3089
  6907  001652  0A01               	xorlw	1	; case 1
  6908  001654  B4D8               	btfsc	status,2,c
  6909  001656  EFCE  F00A         	goto	i2l3093
  6910  00165A  0A03               	xorlw	3	; case 2
  6911  00165C  B4D8               	btfsc	status,2,c
  6912  00165E  EFE3  F00A         	goto	i2l3097
  6913  001662  0A01               	xorlw	1	; case 3
  6914  001664  B4D8               	btfsc	status,2,c
  6915  001666  EF16  F00B         	goto	i2l597
  6916  00166A  0A07               	xorlw	7	; case 4
  6917  00166C  B4D8               	btfsc	status,2,c
  6918  00166E  EF12  F00B         	goto	i2l592
  6919  001672  0A01               	xorlw	1	; case 5
  6920  001674  B4D8               	btfsc	status,2,c
  6921  001676  EF3F  F00B         	goto	i2l3111
  6922  00167A  EF3F  F00B         	goto	i2l3111
  6923  00167E                     i2l3111:
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;main.c: 198:         if(EtatE != rien){
  6927  00167E  0E03               	movlw	3
  6928  001680  19F8               	xorwf	_EtatE& (0+255),w,b
  6929  001682  B4D8               	btfsc	status,2,c
  6930  001684  EF46  F00B         	goto	i2u178_41
  6931  001688  EF48  F00B         	goto	i2u178_40
  6932  00168C                     i2u178_41:
  6933  00168C  EFBE  F00B         	goto	i2l627
  6934  001690                     i2u178_40:
  6935  001690  EFA5  F00B         	goto	i2l3133
  6936  001694                     i2l3115:
  6937                           
  6938                           ; BSR set to: 0
  6939                           ;main.c: 201:                     if(plat == Oui){
  6940  001694  51F5               	movf	_plat& (0+255),w,b
  6941  001696  A4D8               	btfss	status,2,c
  6942  001698  EF50  F00B         	goto	i2u179_41
  6943  00169C  EF52  F00B         	goto	i2u179_40
  6944  0016A0                     i2u179_41:
  6945  0016A0  EF57  F00B         	goto	i2l3119
  6946  0016A4                     i2u179_40:
  6947  0016A4                     
  6948                           ; BSR set to: 0
  6949  0016A4  828A               	bsf	138,1,c	;volatile
  6950  0016A6                     
  6951                           ; BSR set to: 0
  6952  0016A6  948A               	bcf	138,2,c	;volatile
  6953  0016A8                     
  6954                           ; BSR set to: 0
  6955  0016A8  9A8A               	bcf	138,5,c	;volatile
  6956  0016AA                     
  6957                           ; BSR set to: 0
  6958                           ;main.c: 205:                         plat = Non;
  6959  0016AA  0E01               	movlw	1
  6960  0016AC  6FF5               	movwf	_plat& (0+255),b
  6961  0016AE                     i2l3119:
  6962                           
  6963                           ; BSR set to: 0
  6964  0016AE  B28A               	btfsc	138,1,c	;volatile
  6965  0016B0  EF5C  F00B         	goto	i2u180_41
  6966  0016B4  EF5F  F00B         	goto	i2u180_40
  6967  0016B8                     i2u180_41:
  6968  0016B8  0E01               	movlw	1
  6969  0016BA  EF60  F00B         	goto	i2u180_46
  6970  0016BE                     i2u180_40:
  6971  0016BE  0E00               	movlw	0
  6972  0016C0                     i2u180_46:
  6973  0016C0  0AFF               	xorlw	255
  6974  0016C2  6E01               	movwf	??_Blink_^0,c
  6975  0016C4  4601               	rlncf	??_Blink_^0,f,c
  6976  0016C6  508A               	movf	138,w,c	;volatile
  6977  0016C8  1801               	xorwf	??_Blink_^0,w,c
  6978  0016CA  0BFD               	andlw	-3
  6979  0016CC  1801               	xorwf	??_Blink_^0,w,c
  6980  0016CE  6E8A               	movwf	138,c	;volatile
  6981  0016D0                     
  6982                           ; BSR set to: 0
  6983  0016D0  B48A               	btfsc	138,2,c	;volatile
  6984  0016D2  EF6D  F00B         	goto	i2u181_41
  6985  0016D6  EF70  F00B         	goto	i2u181_40
  6986  0016DA                     i2u181_41:
  6987  0016DA  0E01               	movlw	1
  6988  0016DC  EF71  F00B         	goto	i2u181_46
  6989  0016E0                     i2u181_40:
  6990  0016E0  0E00               	movlw	0
  6991  0016E2                     i2u181_46:
  6992  0016E2  0AFF               	xorlw	255
  6993  0016E4  6E01               	movwf	??_Blink_^0,c
  6994  0016E6  4601               	rlncf	??_Blink_^0,f,c
  6995  0016E8  4601               	rlncf	??_Blink_^0,f,c
  6996  0016EA  508A               	movf	138,w,c	;volatile
  6997  0016EC  1801               	xorwf	??_Blink_^0,w,c
  6998  0016EE  0BFB               	andlw	-5
  6999  0016F0  1801               	xorwf	??_Blink_^0,w,c
  7000  0016F2  6E8A               	movwf	138,c	;volatile
  7001  0016F4  EFBE  F00B         	goto	i2l627
  7002  0016F8                     i2l3123:
  7003                           
  7004                           ; BSR set to: 0
  7005  0016F8  B28A               	btfsc	138,1,c	;volatile
  7006  0016FA  EF81  F00B         	goto	i2u182_41
  7007  0016FE  EF84  F00B         	goto	i2u182_40
  7008  001702                     i2u182_41:
  7009  001702  0E01               	movlw	1
  7010  001704  EF85  F00B         	goto	i2u182_46
  7011  001708                     i2u182_40:
  7012  001708  0E00               	movlw	0
  7013  00170A                     i2u182_46:
  7014  00170A  0AFF               	xorlw	255
  7015  00170C  6E01               	movwf	??_Blink_^0,c
  7016  00170E  4601               	rlncf	??_Blink_^0,f,c
  7017  001710  508A               	movf	138,w,c	;volatile
  7018  001712  1801               	xorwf	??_Blink_^0,w,c
  7019  001714  0BFD               	andlw	-3
  7020  001716  1801               	xorwf	??_Blink_^0,w,c
  7021  001718  6E8A               	movwf	138,c	;volatile
  7022  00171A                     
  7023                           ; BSR set to: 0
  7024  00171A  848A               	bsf	138,2,c	;volatile
  7025  00171C  EFBE  F00B         	goto	i2l627
  7026  001720                     i2l3127:
  7027                           
  7028                           ; BSR set to: 0
  7029  001720  B48A               	btfsc	138,2,c	;volatile
  7030  001722  EF95  F00B         	goto	i2u183_41
  7031  001726  EF98  F00B         	goto	i2u183_40
  7032  00172A                     i2u183_41:
  7033  00172A  0E01               	movlw	1
  7034  00172C  EF99  F00B         	goto	i2u183_46
  7035  001730                     i2u183_40:
  7036  001730  0E00               	movlw	0
  7037  001732                     i2u183_46:
  7038  001732  0AFF               	xorlw	255
  7039  001734  6E01               	movwf	??_Blink_^0,c
  7040  001736  4601               	rlncf	??_Blink_^0,f,c
  7041  001738  4601               	rlncf	??_Blink_^0,f,c
  7042  00173A  508A               	movf	138,w,c	;volatile
  7043  00173C  1801               	xorwf	??_Blink_^0,w,c
  7044  00173E  0BFB               	andlw	-5
  7045  001740  1801               	xorwf	??_Blink_^0,w,c
  7046  001742  6E8A               	movwf	138,c	;volatile
  7047  001744                     
  7048                           ; BSR set to: 0
  7049  001744  828A               	bsf	138,1,c	;volatile
  7050  001746  EFBE  F00B         	goto	i2l627
  7051  00174A                     i2l3133:
  7052                           
  7053                           ; BSR set to: 0
  7054  00174A  51F8               	movf	_EtatE& (0+255),w,b
  7055  00174C  6E01               	movwf	??_Blink_^0,c
  7056  00174E  6A02               	clrf	(??_Blink_+1)^0,c
  7057                           
  7058                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7059                           ; Switch size 1, requested type "simple"
  7060                           ; Number of cases is 1, Range of values is 0 to 0
  7061                           ; switch strategies available:
  7062                           ; Name         Instructions Cycles
  7063                           ; simple_byte            4     3 (average)
  7064                           ;	Chosen strategy is simple_byte
  7065  001750  5002               	movf	(??_Blink_+1)^0,w,c
  7066  001752  0A00               	xorlw	0	; case 0
  7067  001754  B4D8               	btfsc	status,2,c
  7068  001756  EFAF  F00B         	goto	i2l4425
  7069  00175A  EFBE  F00B         	goto	i2l627
  7070  00175E                     i2l4425:
  7071                           
  7072                           ; BSR set to: 0
  7073                           ; Switch size 1, requested type "simple"
  7074                           ; Number of cases is 3, Range of values is 0 to 2
  7075                           ; switch strategies available:
  7076                           ; Name         Instructions Cycles
  7077                           ; simple_byte           10     6 (average)
  7078                           ;	Chosen strategy is simple_byte
  7079  00175E  5001               	movf	??_Blink_^0,w,c
  7080  001760  0A00               	xorlw	0	; case 0
  7081  001762  B4D8               	btfsc	status,2,c
  7082  001764  EF7C  F00B         	goto	i2l3123
  7083  001768  0A01               	xorlw	1	; case 1
  7084  00176A  B4D8               	btfsc	status,2,c
  7085  00176C  EF90  F00B         	goto	i2l3127
  7086  001770  0A03               	xorlw	3	; case 2
  7087  001772  B4D8               	btfsc	status,2,c
  7088  001774  EF4A  F00B         	goto	i2l3115
  7089  001778  EFBE  F00B         	goto	i2l627
  7090  00177C                     i2l627:
  7091                           
  7092                           ; BSR set to: 0
  7093  00177C  0012               	return		;funcret
  7094  00177E                     __end_of_Blink_:
  7095                           	callstack 0
  7096                           
  7097 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  7098 ;; Defined at:
  7099 ;;		line 189 in file "mcc_generated_files/tmr1.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;		None
  7102 ;; Auto vars:     Size  Location     Type
  7103 ;;		None
  7104 ;; Return value:  Size  Location     Type
  7105 ;;                  1    wreg      void 
  7106 ;; Registers used:
  7107 ;;		None
  7108 ;; Tracked objects:
  7109 ;;		On entry : 0/0
  7110 ;;		On exit  : 0/0
  7111 ;;		Unchanged: 0/0
  7112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7117 ;;Total ram usage:        0 bytes
  7118 ;; Hardware stack levels used: 1
  7119 ;; This function calls:
  7120 ;;		Nothing
  7121 ;; This function is called by:
  7122 ;;		_TMR1_Initialize
  7123 ;;		_TMR1_CallBack
  7124 ;; This function uses a non-reentrant model
  7125 ;;
  7126                           
  7127                           	psect	text59
  7128  002938                     __ptext59:
  7129                           	callstack 0
  7130  002938                     _TMR1_DefaultInterruptHandler:
  7131                           	callstack 15
  7132  002938  0012               	return		;funcret
  7133  00293A                     __end_of_TMR1_DefaultInterruptHandler:
  7134                           	callstack 0
  7135                           
  7136 ;; *************** function _TMR0_ISR *****************
  7137 ;; Defined at:
  7138 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  7139 ;; Parameters:    Size  Location     Type
  7140 ;;		None
  7141 ;; Auto vars:     Size  Location     Type
  7142 ;;		None
  7143 ;; Return value:  Size  Location     Type
  7144 ;;                  1    wreg      void 
  7145 ;; Registers used:
  7146 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7147 ;; Tracked objects:
  7148 ;;		On entry : 0/0
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7156 ;;Total ram usage:        0 bytes
  7157 ;; Hardware stack levels used: 1
  7158 ;; Hardware stack levels required when called: 2
  7159 ;; This function calls:
  7160 ;;		_TMR0_CallBack
  7161 ;; This function is called by:
  7162 ;;		_INTERRUPT_InterruptManager
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           	psect	text60
  7167  0025C6                     __ptext60:
  7168                           	callstack 0
  7169  0025C6                     _TMR0_ISR:
  7170                           	callstack 15
  7171  0025C6                     
  7172                           ;mcc_generated_files/tmr0.c: 138:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 141:     INTCONbits.TMR0IF = 0;
  7173  0025C6  94F2               	bcf	242,2,c	;volatile
  7174  0025C8                     
  7175                           ;mcc_generated_files/tmr0.c: 145:     TMR0H = timer0ReloadVal >> 8;
  7176  0025C8  5059               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  7177  0025CA  6ED7               	movwf	215,c	;volatile
  7178  0025CC                     
  7179                           ;mcc_generated_files/tmr0.c: 146:     TMR0L = (uint8_t) timer0ReloadVal;
  7180  0025CC  C058  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  7181  0025D0                     
  7182                           ;mcc_generated_files/tmr0.c: 149:     if (++CountCallBack >= 50)
  7183  0025D0  0100               	movlb	0	; () banked
  7184  0025D2  4BA7               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
  7185  0025D4  2BA8               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  7186  0025D6  51A8               	movf	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  7187  0025D8  E109               	bnz	i2u204_40
  7188  0025DA  0E32               	movlw	50
  7189  0025DC  5DA7               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
  7190  0025DE  A0D8               	btfss	status,0,c
  7191  0025E0  EFF4  F012         	goto	i2u204_41
  7192  0025E4  EFF6  F012         	goto	i2u204_40
  7193  0025E8                     i2u204_41:
  7194  0025E8  EFFD  F012         	goto	i2l264
  7195  0025EC                     i2u204_40:
  7196  0025EC                     
  7197                           ; BSR set to: 0
  7198                           ;mcc_generated_files/tmr0.c: 150:     {;mcc_generated_files/tmr0.c: 152:         TMR0_Ca
      +                          llBack();
  7199  0025EC  EC46  F013         	call	_TMR0_CallBack	;wreg free
  7200  0025F0                     
  7201                           ;mcc_generated_files/tmr0.c: 155:         CountCallBack = 0;
  7202  0025F0  0E00               	movlw	0
  7203  0025F2  0100               	movlb	0	; () banked
  7204  0025F4  6FA8               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
  7205  0025F6  0E00               	movlw	0
  7206  0025F8  6FA7               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
  7207  0025FA                     i2l264:
  7208                           
  7209                           ; BSR set to: 0
  7210  0025FA  0012               	return		;funcret
  7211  0025FC                     __end_of_TMR0_ISR:
  7212                           	callstack 0
  7213                           
  7214 ;; *************** function _TMR0_CallBack *****************
  7215 ;; Defined at:
  7216 ;;		line 161 in file "mcc_generated_files/tmr0.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;		None
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;		None
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      void 
  7223 ;; Registers used:
  7224 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7234 ;;Total ram usage:        0 bytes
  7235 ;; Hardware stack levels used: 1
  7236 ;; Hardware stack levels required when called: 1
  7237 ;; This function calls:
  7238 ;;		Absolute function
  7239 ;;		_Minute
  7240 ;;		_TMR0_DefaultInterruptHandler
  7241 ;; This function is called by:
  7242 ;;		_TMR0_ISR
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           	psect	text61
  7247  00268C                     __ptext61:
  7248                           	callstack 0
  7249  00268C                     _TMR0_CallBack:
  7250                           	callstack 15
  7251  00268C                     
  7252                           ;mcc_generated_files/tmr0.c: 165:     if(TMR0_InterruptHandler)
  7253  00268C  0100               	movlb	0	; () banked
  7254  00268E  51D4               	movf	_TMR0_InterruptHandler& (0+255),w,b
  7255  002690  11D5               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  7256  002692  B4D8               	btfsc	status,2,c
  7257  002694  EF4E  F013         	goto	i2u194_41
  7258  002698  EF50  F013         	goto	i2u194_40
  7259  00269C                     i2u194_41:
  7260  00269C  EF5D  F013         	goto	i2l268
  7261  0026A0                     i2u194_40:
  7262  0026A0                     
  7263                           ; BSR set to: 0
  7264                           ;mcc_generated_files/tmr0.c: 166:     {;mcc_generated_files/tmr0.c: 167:         TMR0_In
      +                          terruptHandler();
  7265  0026A0  D802               	call	i2u195_48
  7266  0026A2  EF5D  F013         	goto	i2u195_49
  7267  0026A6                     i2u195_48:
  7268  0026A6  0005               	push	
  7269  0026A8  6EFA               	movwf	pclath,c
  7270  0026AA  51D4               	movf	_TMR0_InterruptHandler& (0+255),w,b
  7271  0026AC  6EFD               	movwf	tosl,c
  7272  0026AE  51D5               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  7273  0026B0  6EFE               	movwf	tosh,c
  7274  0026B2  50F8               	movf	tblptru,w,c
  7275  0026B4  6EFF               	movwf	tosu,c
  7276  0026B6  50FA               	movf	pclath,w,c
  7277  0026B8  0012               	return		;indir
  7278  0026BA                     i2u195_49:
  7279  0026BA                     i2l268:
  7280  0026BA  0012               	return		;funcret
  7281  0026BC                     __end_of_TMR0_CallBack:
  7282                           	callstack 0
  7283                           
  7284 ;; *************** function _Minute *****************
  7285 ;; Defined at:
  7286 ;;		line 224 in file "main.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;		None
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;		None
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  1    wreg      void 
  7293 ;; Registers used:
  7294 ;;		wreg, status,2
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7304 ;;Total ram usage:        0 bytes
  7305 ;; Hardware stack levels used: 1
  7306 ;; This function calls:
  7307 ;;		Nothing
  7308 ;; This function is called by:
  7309 ;;		_main
  7310 ;;		_TMR0_CallBack
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314                           	psect	text62
  7315  002862                     __ptext62:
  7316                           	callstack 0
  7317  002862                     _Minute:
  7318                           	callstack 15
  7319  002862                     
  7320                           ;main.c: 225:     if(minute == Oui){
  7321  002862  0100               	movlb	0	; () banked
  7322  002864  51F6               	movf	_minute& (0+255),w,b
  7323  002866  A4D8               	btfss	status,2,c
  7324  002868  EF38  F014         	goto	i2u184_41
  7325  00286C  EF3A  F014         	goto	i2u184_40
  7326  002870                     i2u184_41:
  7327  002870  EF3E  F014         	goto	i2l631
  7328  002874                     i2u184_40:
  7329  002874                     
  7330                           ; BSR set to: 0
  7331                           ;main.c: 226:         MINUTE = 1;
  7332  002874  0E01               	movlw	1
  7333  002876  6E57               	movwf	_MINUTE^0,c
  7334                           
  7335                           ;main.c: 227:         minute = Non;
  7336  002878  0E01               	movlw	1
  7337  00287A  6FF6               	movwf	_minute& (0+255),b
  7338  00287C                     i2l631:
  7339                           
  7340                           ; BSR set to: 0
  7341  00287C  0012               	return		;funcret
  7342  00287E                     __end_of_Minute:
  7343                           	callstack 0
  7344                           
  7345 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7346 ;; Defined at:
  7347 ;;		line 175 in file "mcc_generated_files/tmr0.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;		None
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;		None
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  1    wreg      void 
  7354 ;; Registers used:
  7355 ;;		None
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7365 ;;Total ram usage:        0 bytes
  7366 ;; Hardware stack levels used: 1
  7367 ;; This function calls:
  7368 ;;		Nothing
  7369 ;; This function is called by:
  7370 ;;		_TMR0_Initialize
  7371 ;;		_TMR0_CallBack
  7372 ;; This function uses a non-reentrant model
  7373 ;;
  7374                           
  7375                           	psect	text63
  7376  00293A                     __ptext63:
  7377                           	callstack 0
  7378  00293A                     _TMR0_DefaultInterruptHandler:
  7379                           	callstack 15
  7380  00293A  0012               	return		;funcret
  7381  00293C                     __end_of_TMR0_DefaultInterruptHandler:
  7382                           	callstack 0
  7383                           
  7384                           	psect	text64
  7385  000000                     __ptext64:
  7386                           	callstack 0
  7387  000000                     
  7388                           	psect	rparam
  7389  0000                     
  7390                           	psect	temp
  7391  00005A                     btemp:
  7392                           	callstack 0
  7393  00005A                     	ds	1
  7394  0000                     int$flags	set	btemp
  7395  0000                     wtemp8	set	btemp+1
  7396  0000                     ttemp5	set	btemp+1
  7397  0000                     ttemp6	set	btemp+4
  7398  0000                     ttemp7	set	btemp+8
  7399                           
  7400                           	psect	idloc
  7401                           
  7402                           ;Config register IDLOC0 @ 0x200000
  7403                           ;	unspecified, using default values
  7404  200000                     	org	2097152
  7405  200000  FF                 	db	255
  7406                           
  7407                           ;Config register IDLOC1 @ 0x200001
  7408                           ;	unspecified, using default values
  7409  200001                     	org	2097153
  7410  200001  FF                 	db	255
  7411                           
  7412                           ;Config register IDLOC2 @ 0x200002
  7413                           ;	unspecified, using default values
  7414  200002                     	org	2097154
  7415  200002  FF                 	db	255
  7416                           
  7417                           ;Config register IDLOC3 @ 0x200003
  7418                           ;	unspecified, using default values
  7419  200003                     	org	2097155
  7420  200003  FF                 	db	255
  7421                           
  7422                           ;Config register IDLOC4 @ 0x200004
  7423                           ;	unspecified, using default values
  7424  200004                     	org	2097156
  7425  200004  FF                 	db	255
  7426                           
  7427                           ;Config register IDLOC5 @ 0x200005
  7428                           ;	unspecified, using default values
  7429  200005                     	org	2097157
  7430  200005  FF                 	db	255
  7431                           
  7432                           ;Config register IDLOC6 @ 0x200006
  7433                           ;	unspecified, using default values
  7434  200006                     	org	2097158
  7435  200006  FF                 	db	255
  7436                           
  7437                           ;Config register IDLOC7 @ 0x200007
  7438                           ;	unspecified, using default values
  7439  200007                     	org	2097159
  7440  200007  FF                 	db	255
  7441                           
  7442                           	psect	config
  7443                           
  7444                           ;Config register CONFIG1L @ 0x300000
  7445                           ;	VREG Sleep Enable bit
  7446                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
  7447                           ;	LF-INTOSC Low-power Enable bit
  7448                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  7449                           ;	SOSC Power Selection and mode Configuration bits
  7450                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  7451                           ;	Extended Instruction Set
  7452                           ;	XINST = OFF, Disabled
  7453  300000                     	org	3145728
  7454  300000  15                 	db	21
  7455                           
  7456                           ;Config register CONFIG1H @ 0x300001
  7457                           ;	Oscillator
  7458                           ;	FOSC = HS2, HS oscillator (High power, 16 MHz - 25 MHz)
  7459                           ;	PLL x4 Enable bit
  7460                           ;	PLLCFG = OFF, Disabled
  7461                           ;	Fail-Safe Clock Monitor
  7462                           ;	FCMEN = OFF, Disabled
  7463                           ;	Internal External Oscillator Switch Over Mode
  7464                           ;	IESO = OFF, Disabled
  7465  300001                     	org	3145729
  7466  300001  02                 	db	2
  7467                           
  7468                           ;Config register CONFIG2L @ 0x300002
  7469                           ;	Power Up Timer
  7470                           ;	PWRTEN = OFF, Disabled
  7471                           ;	Brown Out Detect
  7472                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
  7473                           ;	Brown-out Reset Voltage bits
  7474                           ;	BORV = 3, 1.8V
  7475                           ;	BORMV Power level
  7476                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  7477  300002                     	org	3145730
  7478  300002  7F                 	db	127
  7479                           
  7480                           ;Config register CONFIG2H @ 0x300003
  7481                           ;	Watchdog Timer
  7482                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  7483                           ;	Watchdog Postscaler
  7484                           ;	WDTPS = 1048576, 1:1048576
  7485  300003                     	org	3145731
  7486  300003  7C                 	db	124
  7487                           
  7488                           ; Padding undefined space
  7489  300004                     	org	3145732
  7490  300004  FF                 	db	255
  7491                           
  7492                           ;Config register CONFIG3H @ 0x300005
  7493                           ;	ECAN Mux bit
  7494                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
  7495                           ;	MSSP address masking
  7496                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
  7497                           ;	Master Clear Enable
  7498                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
  7499  300005                     	org	3145733
  7500  300005  89                 	db	137
  7501                           
  7502                           ;Config register CONFIG4L @ 0x300006
  7503                           ;	Stack Overflow Reset
  7504                           ;	STVREN = ON, Enabled
  7505                           ;	Boot Block Size
  7506                           ;	BBSIZ = BB2K, 2K word Boot Block size
  7507  300006                     	org	3145734
  7508  300006  91                 	db	145
  7509                           
  7510                           ; Padding undefined space
  7511  300007                     	org	3145735
  7512  300007  FF                 	db	255
  7513                           
  7514                           ;Config register CONFIG5L @ 0x300008
  7515                           ;	Code Protect 00800-01FFF
  7516                           ;	CP0 = OFF, Disabled
  7517                           ;	Code Protect 02000-03FFF
  7518                           ;	CP1 = OFF, Disabled
  7519                           ;	Code Protect 04000-05FFF
  7520                           ;	CP2 = OFF, Disabled
  7521                           ;	Code Protect 06000-07FFF
  7522                           ;	CP3 = OFF, Disabled
  7523  300008                     	org	3145736
  7524  300008  0F                 	db	15
  7525                           
  7526                           ;Config register CONFIG5H @ 0x300009
  7527                           ;	Code Protect Boot
  7528                           ;	CPB = OFF, Disabled
  7529                           ;	Data EE Read Protect
  7530                           ;	CPD = OFF, Disabled
  7531  300009                     	org	3145737
  7532  300009  C0                 	db	192
  7533                           
  7534                           ;Config register CONFIG6L @ 0x30000A
  7535                           ;	Table Write Protect 00800-01FFF
  7536                           ;	WRT0 = OFF, Disabled
  7537                           ;	Table Write Protect 02000-03FFF
  7538                           ;	WRT1 = OFF, Disabled
  7539                           ;	Table Write Protect 04000-05FFF
  7540                           ;	WRT2 = OFF, Disabled
  7541                           ;	Table Write Protect 06000-07FFF
  7542                           ;	WRT3 = OFF, Disabled
  7543  30000A                     	org	3145738
  7544  30000A  0F                 	db	15
  7545                           
  7546                           ;Config register CONFIG6H @ 0x30000B
  7547                           ;	Config. Write Protect
  7548                           ;	WRTC = OFF, Disabled
  7549                           ;	Table Write Protect Boot
  7550                           ;	WRTB = OFF, Disabled
  7551                           ;	Data EE Write Protect
  7552                           ;	WRTD = OFF, Disabled
  7553  30000B                     	org	3145739
  7554  30000B  E0                 	db	224
  7555                           
  7556                           ;Config register CONFIG7L @ 0x30000C
  7557                           ;	Table Read Protect 00800-01FFF
  7558                           ;	EBTR0 = OFF, Disabled
  7559                           ;	Table Read Protect 02000-03FFF
  7560                           ;	EBTR1 = OFF, Disabled
  7561                           ;	Table Read Protect 04000-05FFF
  7562                           ;	EBTR2 = OFF, Disabled
  7563                           ;	Table Read Protect 06000-07FFF
  7564                           ;	EBTR3 = OFF, Disabled
  7565  30000C                     	org	3145740
  7566  30000C  0F                 	db	15
  7567                           
  7568                           ;Config register CONFIG7H @ 0x30000D
  7569                           ;	Table Read Protect Boot
  7570                           ;	EBTRB = OFF, Disabled
  7571  30000D                     	org	3145741
  7572  30000D  40                 	db	64
  7573                           tosu	equ	0xFFF
  7574                           tosh	equ	0xFFE
  7575                           tosl	equ	0xFFD
  7576                           stkptr	equ	0xFFC
  7577                           pclatu	equ	0xFFB
  7578                           pclath	equ	0xFFA
  7579                           pcl	equ	0xFF9
  7580                           tblptru	equ	0xFF8
  7581                           tblptrh	equ	0xFF7
  7582                           tblptrl	equ	0xFF6
  7583                           tablat	equ	0xFF5
  7584                           prodh	equ	0xFF4
  7585                           prodl	equ	0xFF3
  7586                           indf0	equ	0xFEF
  7587                           postinc0	equ	0xFEE
  7588                           postdec0	equ	0xFED
  7589                           preinc0	equ	0xFEC
  7590                           plusw0	equ	0xFEB
  7591                           fsr0h	equ	0xFEA
  7592                           fsr0l	equ	0xFE9
  7593                           wreg	equ	0xFE8
  7594                           indf1	equ	0xFE7
  7595                           postinc1	equ	0xFE6
  7596                           postdec1	equ	0xFE5
  7597                           preinc1	equ	0xFE4
  7598                           plusw1	equ	0xFE3
  7599                           fsr1h	equ	0xFE2
  7600                           fsr1l	equ	0xFE1
  7601                           bsr	equ	0xFE0
  7602                           indf2	equ	0xFDF
  7603                           postinc2	equ	0xFDE
  7604                           postdec2	equ	0xFDD
  7605                           preinc2	equ	0xFDC
  7606                           plusw2	equ	0xFDB
  7607                           fsr2h	equ	0xFDA
  7608                           fsr2l	equ	0xFD9
  7609                           status	equ	0xFD8

Data Sizes:
    Strings     75
    Constant    0
    Data        8
    BSS         113
    Persistent  21
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160     17     154
    BANK1           256     10      10
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2052$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S2052$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[18]), STR_3(CODE[18]), STR_2(CODE[18]), STR_1(CODE[21]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[18]), STR_3(CODE[18]), STR_2(CODE[18]), STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[18]), STR_3(CODE[18]), STR_2(CODE[18]), STR_1(CODE[21]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[18]), STR_3(CODE[18]), STR_2(CODE[18]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Secondes_5(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Secondes_5(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Minute(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Minute(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Blink_(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Blink_(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_traitementEcran
    _main->_traitementNormale
    _lecture->_TMR2_WriteTimer
    _affiche->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _LCD_Function->_EUSART_function
    _EUSART_function->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR3_ISR->i2_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR1_CallBack->_Blink_

Critical Paths under _main in BANK0

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _affiche->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   35864
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
           _TMR3_SetInterruptHandler
                            _affiche
                          _lamp_test
                    _traitementEcran
                  _traitementNormale
 ---------------------------------------------------------------------------------
 (1) _traitementNormale                                    2     2      0   11630
                                             82 COMRAM     2     2      0
                    _TMR3_WriteTimer
                _reception_affichage
 ---------------------------------------------------------------------------------
 (2) _TMR3_WriteTimer                                      2     0      2     290
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _traitementEcran                                      2     2      0   11340
                                             82 COMRAM     2     2      0
                _reception_affichage
 ---------------------------------------------------------------------------------
 (2) _reception_affichage                                  0     0      0   11340
                            _affiche
                            _lecture
 ---------------------------------------------------------------------------------
 (3) _lecture                                              2     2      0      22
                                              5 COMRAM     2     2      0
                       _EUSART1_Read
                    _TMR2_WriteTimer
 ---------------------------------------------------------------------------------
 (4) _TMR2_WriteTimer                                      1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _affiche                                              0     0      0   11318
                       _LCD_Function
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              14     4     10   10288
                                             80 COMRAM     2     2      0
                                              0 BANK1     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6    9841
                                             78 COMRAM     2     2      0
                                             11 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           44    38      6    9308
                                             68 COMRAM    10     4      6
                                              0 BANK0     11    11      0
                               _atoi
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                35    24     11    5274
                                             33 COMRAM    35    24     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              6     4      2     475
                                             10 COMRAM     6     4      2
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    3355
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1506
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               9     5      4    1006
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0      62
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _atoi                                                10     8      2    1504
                                             11 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     512
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _LCD_Function                                         5     3      2    1030
                                              6 COMRAM     5     3      2
                      _EUSART1_Write
                    _EUSART_function
 ---------------------------------------------------------------------------------
 (5) _EUSART_function                                      1     1      0      62
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Write                                       1     1      0      31
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lamp_test                                           10    10      0     140
                                              4 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     914
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0     174
                                              6 COMRAM     2     2      0
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     174
                                              6 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                              6 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          2     2      0     354
                                              2 COMRAM     2     2      0
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                            0     0      0     114
                      _TMR3_CallBack
                  i2_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) i2_TMR3_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0       0
                   Absolute function *
                         _Secondes_5 *
       _TMR3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _Secondes_5                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR2_ISR                                            0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR2_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0       0
                   Absolute function *
                             _Blink_ *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _Blink_                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (14) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
                             _Minute *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _Minute                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR3_SetInterruptHandler
   _affiche
     _LCD_Function
       _EUSART1_Write
       _EUSART_function
         _EUSART1_Write
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
             _toupper
               _islower
   _lamp_test
   _traitementEcran
     _reception_affichage
       _affiche
       _lecture
         _EUSART1_Read
         _TMR2_WriteTimer
   _traitementNormale
     _TMR3_WriteTimer
     _reception_affichage

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _Minute *
       _TMR0_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _Blink_ *
       _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _Secondes_5 *
       _TMR3_DefaultInterruptHandler *
     i2_TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      50        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRll        11A      0       0      39        0.0%
BITBANK13          100      0       0      49        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      48        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      47        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      46        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      45        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      44        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      43        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      42        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      41        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      A       A       7        3.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      9A       5       96.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITBANK14           41      0       0      23        0.0%
BANK14              41      0       0      24        0.0%
BITBIGSFRlhl        1F      0       0      38        0.0%
BITBIGSFRhhlhhh     19      0       0      26        0.0%
BITBIGSFRhhlhhh     16      0       0      29        0.0%
BITBIGSFRhhh         D      0       0      25        0.0%
BITBIGSFRlhhh        7      0       0      36        0.0%
BITBIGSFRhl          6      0       0      35        0.0%
BITBIGSFRhhllhh      5      0       0      31        0.0%
BITBIGSFRhhllll      5      0       0      34        0.0%
BITBIGSFRlhhl        3      0       0      37        0.0%
BITBIGSFRhhlhl       2      0       0      30        0.0%
BITBIGSFRhhlhhh      1      0       0      28        0.0%
BITBIGSFRhhlllh      1      0       0      33        0.0%
BITBIGSFRhhlhhh      1      0       0      27        0.0%
BITBIGSFRhhllhl      1      0       0      32        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FD      40        0.0%
DATA                 0      0      FD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sun May 15 15:44:00 2022

              __end_of_TMR2_SetInterruptHandler 28EE                                               _i 00A1  
                                             _m 009D                     __end_of_reception_affichage 2844  
                                            l25 273C                                              l71 238C  
                                            l92 2712                                              l95 289A  
                                            l88 26EA                                              l98 28AC  
                                            _PX 0087                                              _PY 0083  
                                            _PZ 007F                                              _Hx 009F  
                                            _t1 0093                                              _t2 008F  
                                            _t3 008B                             ___wmul@multiplicand 0007  
                               _timer0ReloadVal 0058                                             l104 28D8  
                                           l122 291E                                             l116 2914  
                                           l119 290A                                             l303 2402  
                                           l152 28BE                                             l217 28F6  
                                           l243 25C4                                             l181 243C  
                                           l149 2824                                             l317 2764  
                                           l271 2900                                             l419 2932  
                                           l339 28E2                                             l365 2860  
                                           l393 28EC                                             l377 292E  
                                           l570 1D54                                             l714 1E92  
                                           l539 219C                                             l564 1CEC  
                                           l717 2802                                             l672 192A  
                                           l649 205A                                             l691 28CE  
                                           l659 20BE                                             l677 283C  
                                           l669 1848                                             l694 1F64  
                                           l678 2842                                             l687 1AAC  
                                           _PR2 000FCB                                             _SPX 007B  
                                           _SPY 0077                                             _SPZ 0073  
                               _timer1ReloadVal 00D8                                             _pad 1F66  
                               _TMR2_Initialize 2844                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                 ?_LCD_Function 0007                                            l3001 270C  
                                          l3003 2710                                            l1430 1FAA  
                                          l3007 292A                                            l1520 1C02  
                                          l1440 12F4                                            l3201 234E  
                                          l1433 1FEC                                            l1442 12FC  
                                          l3203 2362                                            l3211 2930  
                                          l1523 23C8                                            l1435 2026  
                                          l4011 12A8                                            l4003 126A  
                               _timer3ReloadVal 00D2                                            l3061 2902  
                                          l3205 236E                                            l3213 28AE  
                                          l3221 23F0                                            l1517 1BFA  
                                          l1461 155A                                            l4005 1278  
                                          l4101 2826                                            l3063 2916  
                                          l3207 237A                                            l3071 28E4  
                                          l3231 284E                                            l3223 23F2  
                                          l3215 23CA                                            l1543 2520  
                                          l4031 21D2                                            l4103 2828  
                                          l4111 1786                                            l3209 2386  
                                          l3065 28EE                                            l3241 2412  
                                          l3233 2850                                            l3225 23FE  
                                          l3217 23D6                                            l3401 1C6C  
                                          l4041 1D5C                                            l1529 2558  
                                          l1537 2284                                            l4009 1284  
                                          l4033 21DA                                            l3161 1960  
                                          l4105 283E                                            l4121 1804  
                                          l4113 178A                                            l3059 290C  
                                          l3067 28F8                                            l3251 2592  
                                          l3243 242A                                            l3235 285C  
                                          l3227 2844                                            l3219 23D8  
                                          l3331 280C                                            l3411 1CE4  
                                          l3403 1C90                                            l4027 28C2  
                                          l4051 1D94                                            l4043 1D66  
                                          l1459 14F8                                            l1475 1040  
                                          l4035 21E8                                            l1395 278C  
                                          l3171 1980                                            l3155 192C  
                                          l4131 184E                                            l4123 1826  
                                          l4115 17A6                                            l4107 177E  
                                          l1572 258E                                            l1580 22C8  
                                          l3261 25C0                                            l3253 259A  
                                          l3245 242C                                            l3237 2404  
                                          l3229 284C                                            l3069 28DA  
                                          l3341 2820                                            l3333 2810  
                                          l3413 1CF8                                            l3405 1CAA  
                                          l4029 28C8                                            l4053 1D9E  
                                          l4061 1DC2                                            l4045 1D76  
                                          l4037 220E                                            l3181 1A4E  
                                          l3173 199C                                            l3157 193C  
                                          l4141 18CC                                            l4133 1852  
                                          l4125 182E                                            l4117 17C4  
                                          l4109 1782                                            l1558 2154  
                                          l1566 230C                                            l1494 222A  
                                          l3255 25B0                                            l3247 2438  
                                          l3239 2410                                            l3335 2814  
                                          l3327 2804                                            l3415 1D1C  
                                          l3407 1CC6                                            l4063 1DFC  
                                          l4055 1DAA                                            l4047 1D80  
                                          l4039 1D58                                            l1495 2232  
                                          l3183 1A96                                            l3175 19E4  
                                          l3167 1968                                            l3159 194A  
                                          l4143 18EE                                            l4135 186E  
                                          l4127 1836                                            l4119 17E6  
                                          l1488 12BA                                            l3257 25B2  
                                          l3249 2590                                            l3337 2818  
                                          l3329 2808                                            l3417 1D36  
                                          l3409 1CD8                                            l4065 1E06  
                                          l4057 1DB6                                            l4049 1D8A  
                                          l4073 1E30                                            l1577 22C0  
                                          l3185 1A9E                                            l3177 19F2  
                                          l3169 197A                                            l3193 1AAA  
                                          l4137 188C                                            l4129 184A  
                                          l4161 2048                                            l4153 2028  
                                          l1586 24E8                                            l3259 25B4  
                                          l3339 281C                                            l4067 1E10  
                                          l4083 2766                                            l4091 1EA2  
                                          l3187 1AA4                                            l3179 1A02  
                                          l4139 18AE                                            l4147 18F6  
                                          l3291 2752                                            l4411 2090  
                                          l4163 205C                                            l4155 202C  
                                          l3197 2714                                            l4421 1E44  
                                          l4069 1E1A                                            l4085 276E  
                                          l4093 1EB0                                            l4413 190C  
                                          l3293 2756                                            l3285 273E  
                                          l4165 2068                                            l4157 2030  
                                          l4173 207A                                            l4181 217E  
                                          l3199 273A                                            l3391 1C2E  
                                          l3383 1C04                                            l4415 1000  
                                          l4095 1EEC                                            l3287 274C  
                                          l3295 275C                                            l4167 206E  
                                          l4159 203E                                            l4191 21B2  
                                          l4183 2180                                            l3393 1C48  
                                          l3721 289A                                            l4417 1B4A  
                                          l4097 1EFA                                            l4089 1E94  
                                          l3297 2760                                            l3289 274E  
                                          l4169 2072                                            l4193 21B6  
                                          l4185 2182                                            l3395 1C64  
                                          l3723 28A8                                            l4419 1DD6  
                                          l3731 20E4                                            l3803 2286  
                                          l4099 1F36                                            l4195 21BE  
                                          l4187 2198                                            l4179 2156  
                                          l3389 1C0C                                            l3821 227E  
                                          l3813 2234                                            l3901 1B1C  
                                          l3725 28D2                                            l3733 20EE  
                                          l3741 22CA                                            l3805 22B4  
                                          l4197 21C2                                            l4189 21AE  
                                          ?_pad 0017                                            l3815 2238  
                                          l3903 1B24                                            l3735 210C  
                                          l3727 20C0                                            l3743 22D6  
                                          l3751 2566                                            l3831 12E8  
                                          l4199 21C6                                            l3809 2522  
                                          l3817 224C                                            l3913 1B96  
                                          l3905 1B2C                                            l3737 2142  
                                          l3729 20D2                                            l3745 22E8  
                                          l3753 256A                                            l3841 134A  
                                          l3833 1312                                            l3825 12BC  
                                          l3763 27DE                                            l3819 227A  
                                          l3915 1BCC                                            l3907 1B60  
                                          l3747 22EC                                            l3755 2582  
                                          l3771 1F74                                            l3843 1350  
                                          l3835 131A                                            l3827 12CC  
                                          l3931 0F96                                            l3923 0F4E  
                                          l3765 27FA                                            l3917 1BDE  
                                          l3749 255A                                            l3781 1FCA  
                                          l3773 1F88                                            l3861 13EE  
                                          l3853 1390                                            l3845 1358  
                                          l3837 133A                                            l3829 12CE  
                                          l3941 0FBC                                            l3933 0FA2  
                                          l3925 0F72                                            l3791 24EA  
                                          l3783 1FCE                                            l3775 1F96  
                                          l3759 24B2                                            l3863 1402  
                                          l3847 1374                                            l3871 147C  
                                          l3839 1342                                            l3935 0FA4  
                                          l3927 0F80                                            l3785 1FFA  
                                          l3777 1FA2                                            l3769 1F66  
                                          l3881 1506                                            l3873 1498  
                                          l3865 1412                                            l3849 1384  
                                          l3961 104E                                            l3953 0FCE  
                                          l3945 0FC2                                            l3937 0FB6  
                                          l3929 0F92                                            l3891 1AAE  
                                          l3795 238E                                            l3787 200E  
                                          l3779 1FB6                                            l3883 150C  
                                          l3875 14B6                                            l3867 1418  
                                          l3859 13BC                                            l3971 10C6  
                                          l3963 1050                                            l2995 26EA  
                                          l3893 1AC2                                            l3885 151C  
                                          l3877 14D0                                            l3869 141E  
                                          l3981 1156                                            l3973 10E6  
                                          l3965 1074                                            l3957 0FDA  
                                          l3949 0FC8                                            l2997 26F8  
                                          l3799 2286                                            l3887 1532  
                                          l3879 14EA                                            l3983 117A  
                                          l3967 10AA                                            l3959 102E  
                                          l2999 26FE                                            l3897 1AC6  
                                          l3985 1190                                            l3993 1218  
                                          l3977 10F4                                            l3969 10B8  
                                          l3899 1AE2                                            l3995 123C  
                                          l3987 119E                                            l3979 1132  
                                          l3997 124A                                            l3989 11DC  
                                          l3999 125E                                            STR_1 0F01  
                                          STR_2 0F16                                            STR_3 0F28  
                                          STR_4 0F3A                                            u2100 1CC6  
                                          u2101 1CC2                                            u2110 1CD8  
                                          u2111 1CD4                                            u2120 1D08  
                                          u3000 203E                                            u2121 1D02  
                                          u3001 203A                                            u2130 1D54  
                                          u3010 205A                                            u2131 1D50  
                                          u3011 2056                                            u3020 2192  
                                          u3021 218C                                            _LATA 000F89  
                                          u2126 1D0A                                            u2070 1C1C  
                                          u3030 2194                                            _LATB 000F8A  
                                          u2071 1C16                                            _LATC 000F8B  
                                          u2080 1C64                                            u2400 20D2  
                                          u3040 21AE                                            u2081 1C60  
                                          u2401 20CE                                            u3041 21AA  
                                          u2090 1C7C                                            u2410 20E4  
                                          u2091 1C76                                            u2411 20E0  
                                          u2076 1C1E                                            u2420 210C  
                                          u2500 1FEC                                            u1700 26F8  
                                          u2421 2108                                            u2501 1FE8  
                                          u1701 26F4                                            u2430 2142  
                                          u2510 1FFA                                            u1710 270C  
                                          u2431 213E                                            u2511 1FF6  
                                          u1711 2708                                            u2096 1C7E  
                                          u2600 227A                                            u2520 251A  
                                          u2440 230C                                            u3057 1C38  
                                          u2601 2276                                            u2521 2514  
                                          u2441 2308                                            u2530 251C  
                                          u2450 2582                                            u2610 12CC  
                                          u3067 1C9A                                            u2451 257E  
                                          u2611 12C8                                            u2540 23C2  
                                          u2460 24E2                                            u2700 14D0  
                                          u2620 12E8                                            u1900 1A02  
                                          u3077 1D26                                            u2541 23BC  
                                          u2461 24DC                                            u2701 14CC  
                                          u2621 12E4                                            u1901 19FE  
                                          u2390 28A8                                            u2550 23C4  
                                          u2470 24E4                                            u2710 14EA  
                                          u2630 1312                                            u2391 28A4  
                                          u2711 14E6                                            u2631 130E  
                                          u2480 1F74                                            u2560 22B4  
                                          u2720 14F8                                            u2640 1374  
                                          u2800 104E                                            u2481 1F70  
                                          u2561 22B0                                            u2721 14F4  
                                          u2641 1370                                            u2801 104A  
                                          u2570 2552                                            u2490 1F96  
                                          u2730 1506                                            u2650 13BC  
                                          u2810 1074                                            u2571 254C  
                                          u2491 1F92                                            u2731 1502  
                                          u2651 13B8                                            u2811 1070  
                                          u2580 2554                                            u2740 1AE2  
                                          u2660 13EE                                            u2820 10B8  
                                          u1860 193C                                            u2900 17C4  
                                          u2741 1ADE                                            u2661 13EA  
                                          u2821 10B4                                            u1861 1938  
                                          u2901 17C0                                            u2590 224C  
                                          u2750 1B18                                            u2670 1456  
                                          u2830 1132                                            u1870 1960  
                                          u2910 17E6                                            u2591 2248  
                                          u2751 1B14                                            u2831 112E  
                                          u1871 195C                                            u2911 17E2  
                                          u2760 1BCC                                            u2680 1498  
                                          u2840 1156                                            u1880 199C  
                                          u2920 1804                                            u1960 274C  
                                          u2761 1BC8                                            u2681 1494  
                                          u2841 1152                                            u1881 1998  
                                          u2921 1800                                            u1961 2748  
                                          u2770 1BDE                                            u2690 14B6  
                                          u2850 117A                                            u1890 19F2  
                                          u2930 1826                                            u2771 1BDA  
                                          u2691 14B2                                            u2675 1444  
                                          u2851 1176                                            u1891 19EE  
                                          u2931 1822                                            u2860 123C  
                                          u2780 0F72                                            u2940 1848  
                                          u2861 1238                                            u2781 0F6E  
                                          u2941 1844                                            u2790 1040  
                                          u2870 222A                                            u2950 186E  
                                          u2791 103C                                            u2871 2226  
                                          u2951 186A                                            u2880 283C  
                                          u2960 188C                                            u2881 2838  
                                          u2961 1888                                            u2970 18AE  
                                          u2890 17A6                                            u2971 18AA  
                                          u2891 17A2                                            u2980 18CC  
                                          u2981 18C8                                            u2990 18EE  
                                          u2991 18EA                                            _TMR2 000FCC  
                                          _WPUB 000F5B                                 lamp_test@j_1590 0009  
                               lamp_test@j_1588 000D                                   _EUSART1_Write 2898  
                                          _dbuf 00AE                                            _atoi 1AAE  
                                          _sec5 00F7                                            _main 2156  
                                 ?_EUSART1_Read 0001                                            _plat 00F5  
                                          _prec 009B                                            _nout 0097  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          btemp 005A                                            _xtoa 12BC  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 00BC                                 _TMR3_Initialize 23CA  
                    ??_TMR1_SetInterruptHandler 0007                                    ___param_bank 000000  
                                         ??_pad 001D                         __end_of_TMR0_Initialize 25C6  
                ??_TMR0_DefaultInterruptHandler 0001                   __end_of_OSCILLATOR_Initialize 28C0  
                                         ?_atoi 000C                                           ?_main 0001  
                                         _T0CON 000FD5                                           ?_xtoa 0022  
                                         _T1CON 000FCD                                           _T2CON 000FCA  
                                         _T3CON 000FB1                                           i2l210 24B0  
                                         i2l220 2938                                           i2l214 268A  
                                         i2l332 2476                                           i2l317 27B4  
                                         i2l342 2934                                           i2l264 25FA  
                                         i2l336 262A                                           i2l424 0036  
                                         i2l274 293A                                           i2l610 16A8  
                                         i2l434 00B0                                           i2l195 27DC  
                                         i2l427 0068                                           i2l268 26BA  
                                         i2l428 00B0                                           i2l429 008C  
                                         i2l606 16A4                                           i2l390 265A  
                                         i2l631 287C                                           i2l608 16A6  
                                         i2l386 26E8                                           i2l627 177C  
                                         i2l635 2890                                           i2l396 2936  
                                         i2l637 2896                                           i2l592 1624  
                                         i2l594 1626                                           i2l597 162C  
                                         i2l599 162E                                 __end_of_affiche 1F66  
                                  vfpfcnvrt@fmt 0047                                           _TMR0H 000FD7  
                                  vfpfcnvrt@llu 00E1                                           _TMR1H 000FCF  
                                         _TMR0L 000FD6                                           _TMR1L 000FCE  
                                         _TMR3H 000FB3                                           _TMR3L 000FB2  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _EtatE 00F8  
                                         _EtatN 00F9                       ?_TMR0_SetInterruptHandler 0005  
                                ??_LCD_Function 0009                       ?_TMR3_SetInterruptHandler 0005  
                              __end_of_TMR0_ISR 25FC                                __end_of_TMR1_ISR 24B2  
                              __end_of_TMR2_ISR 26EA                                __end_of_TMR3_ISR 2478  
                ??_TMR3_DefaultInterruptHandler 0001                                           _flags 0055  
                               __end_of_lecture 1AAE                                           _first 00F4  
                                         _fputc 20C0                                 __end_of_isalpha 23CA  
                                         _fputs 22CA                                 __end_of_isdigit 255A  
                                         atoi@n 0014                                           pad@fp 0017  
                                         atoi@s 000C                                           _trame 0060  
                                         _width 0099                                           _putch 28D0  
                                         _start 00F3                                 __end_of_islower 24EA  
                               __end_of_isspace 2286                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 243E                                 __end_of_isupper 2522  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                  ??_EUSART1_Read 0005  
                                         ttemp5 005B                                           ttemp6 005E  
                                         ttemp7 0062                                           status 000FD8  
                                         wtemp8 005B                                           xtoa@c 0043  
                                         xtoa@d 0024                                           xtoa@i 0041  
                                         xtoa@n 0039                                           xtoa@p 0035  
                                         xtoa@w 0037                                           xtoa@x 002C  
                               __end_of_toupper 22CA              _EUSART1_DefaultFramingErrorHandler 000000  
                               _TMR1_WriteTimer 27B6                                 __initialization 230E  
                                  __end_of_atoi 1C04                      __end_of_EUSART1_Initialize 238E  
                                  __end_of_main 21D2                                    __end_of_xtoa 155C  
                       __end_of_TMR2_Initialize 2862                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_atoi 000E                        _TMR2_SetInterruptHandler 28E4  
                                        ??_main 0055                                 _traitementEcran 177E  
                                        ??_xtoa 002D                                   __activetblptr 000002  
                         _TMR3_InterruptHandler 00D0                                 _TMR2_WriteTimer 2928  
                                        ?_fputc 0007                                          ?_fputs 0010  
                                        _ANCON0 000F5D                                          _ANCON1 000F5C  
                                    _Secondes_5 287E                                          ?_putch 0001  
                                        _T1GCON 000FAA                                          _T3GCON 000FB0  
                       TMR1_WriteTimer@timerVal 0001                         __end_of_TMR3_Initialize 2404  
                                        i2l3101 15F8                                          i2l3103 15FC  
                                        i2l3111 167E                                          i2l3121 16D0  
                                        i2l3105 1610                                          i2l3123 16F8  
                                        i2l3115 1694                                          i2l3125 171A  
                                        i2l3117 16AA                                          i2l3133 174A  
                                        i2l3109 1634                                          i2l3301 2610  
                                        i2l3127 1720                                          i2l3119 16AE  
                                        i2l3303 262C                                          i2l3151 287E  
                                        i2l3129 1744                                          i2l3305 2640  
                                        i2l3153 2892                                          i2l3321 27A6  
                                        i2l3313 278E                                          i2l3147 2862  
                                        i2l3091 1596                                          i2l3315 279C  
                                        i2l3323 27AC                                          i2l3149 2874  
                                        i2l3093 159C                                          i2l3085 155C  
                                        i2l3325 27B0                                          i2l3317 279E  
                                        i2l3501 0020                                          i2l3095 15C0  
                                        i2l3271 27CE                                          i2l3263 27B6  
                                        i2l3351 24A6                                          i2l3343 2478  
                                        i2l3319 27A2                                          i2l3511 0076  
                                        i2l3503 002E                                          i2l3281 268C  
                                        i2l3361 25EC                                          i2l3353 25C6  
                                        i2l3097 15C6                                          i2l3089 1574  
                                        i2l3265 27C4                                          i2l3273 27D4  
                                        i2l3345 247A                                          i2l3513 0084  
                                        i2l3505 0044                                          i2l3283 26A0  
                                        i2l3363 25F0                                          i2l3355 25C8  
                                        i2l3099 15D6                                          i2l3275 27D8  
                                        i2l3267 27C6                                          i2l3347 2486  
                                        i2l3371 2468                                          i2l3515 009A  
                                        i2l3507 0052                                          i2l3357 25CC  
                                        i2l3277 265C                                          i2l3269 27CA  
                                        i2l3349 24A2                                          i2l3381 26DE  
                                        i2l3373 246C                                          i2l3365 243E  
                                        i2l3517 00A8                                          i2l3509 0060  
                                        i2l3359 25D0                                          i2l4423 1648  
                                        i2l3279 2670                                          i2l3375 26BC  
                                        i2l3367 2440                                          i2l4425 175E  
                                        i2l3377 26BE                                          i2l3369 244C  
                                        i2l3379 26DA                                          i2l3299 25FC  
                                        i2l3499 0012                                          _RCREG1 000FAE  
                                        _MINUTE 0057                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                   vfpfcnvrt@done 00EA  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                               ??_EUSART_function 0006  
                                        _Blink_ 155C                                 _TMR3_WriteTimer 273E  
                                        _MinInt 00AB                                          _Minute 2862  
          __end_of_TMR1_DefaultInterruptHandler 293A                    _TMR1_DefaultInterruptHandler 2938  
                                  vfprintf@cfmt 004F                                          ___wmul 27DE  
                                     ??_affiche 0053                        ?_EUSART1_SetErrorHandler 0005  
                     i2TMR3_WriteTimer@timerVal 0001                                ?_TMR0_Initialize 0001  
                                        clear_0 2334                                          _minute 00F6  
                                        isa$std 000001                                          _printf 2766  
                                        pad@buf 0019                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                          _strlen 255A  
                                     ??_lecture 0006                                          fputc@c 0007  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                       ??_islower 0007  
                                  __mediumconst 0000                                       ??_isspace 0007  
                                        tblptrh 000FF7                                       ??_isupper 0007  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                         __end_of_TMR0_CallBack 26BC                                __end_of_vfprintf 2234  
                               ??_EUSART1_Write 0005        TMR2_SetInterruptHandler@InterruptHandler 0005  
      TMR3_SetInterruptHandler@InterruptHandler 0005        TMR0_SetInterruptHandler@InterruptHandler 0005  
      TMR1_SetInterruptHandler@InterruptHandler 0005                         __end_of_TMR1_WriteTimer 27DE  
                                        xtoa@fp 0022                                       ??_toupper 000D  
                         __end_of_TMR1_CallBack 268C                                ?_TMR1_Initialize 0001  
                             _SYSTEM_Initialize 2804                                      __accesstop 0060  
                       __end_of__initialization 2340                           __end_of_TMR2_CallBack 265C  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                         __end_of_TMR3_CallBack 262C                            __end_of_LCD_Function 1E94  
                                __pcstackCOMRAM 0001                         __end_of_traitementEcran 192C  
                                  __pidataBANK0 2920                             ??_SYSTEM_Initialize 0009  
                                     ?_TMR0_ISR 0001                                       ?_TMR1_ISR 0001  
                                     ?_TMR2_ISR 0001                 fp__TMR1_DefaultInterruptHandler 0000  
                 ?_TMR1_DefaultInterruptHandler 0001                                       ?_TMR3_ISR 0001  
                       __end_of_TMR2_WriteTimer 2930                                   __end_of_fputc 2156  
                                 __end_of_fputs 230E                                   __end_of_putch 28DA  
                                 LCD_Function@x 0007                                   LCD_Function@z 0008  
                              ?_TMR2_Initialize 0001                            __end_of_EUSART1_Read 2714  
                         TMR0_ISR@CountCallBack 00A7                           TMR3_ISR@CountCallBack 00A5  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 2826  
                                       ??_fputs 0014                                     ?_Secondes_5 0001  
                       __end_of_TMR3_WriteTimer 2766                                         ??_putch 0006  
                                    __pbssBANK0 0060                                ?_TMR3_Initialize 0001  
                                    __pnvCOMRAM 0058                                      _activation 00F2  
                                       ?_Blink_ 0001                                         ?_Minute 0001  
               __end_of_EUSART1_SetErrorHandler 2920                __end_of_TMR0_SetInterruptHandler 2902  
              __end_of_TMR3_SetInterruptHandler 28E4                                         ?___wmul 0005  
                                    ??_TMR0_ISR 0001                                      ??_TMR1_ISR 0003  
                                    ??_TMR2_ISR 0001                                      ??_TMR3_ISR 0003  
                                       ?_printf 0100                                         ?_strlen 0005  
        __end_of_EUSART1_SetFramingErrorHandler 2916                  _EUSART1_SetFramingErrorHandler 290C  
                                       _REFOCON 000F9A                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000F7D  
                              ?_TMR1_WriteTimer 0001                                         __Hparam 0000  
                                       __Lparam 0000                      ??_TMR2_SetInterruptHandler 0007  
                              ?_traitementEcran 0001                                ?_TMR2_WriteTimer 0001  
                                     ?_vfprintf 00EC                                    __psmallconst 0F00  
                                       _affiche 1E94                                         __pcinit 230E  
                             __end_of_lamp_test 1D56                                         __ramtop 0F00  
                                       __ptext0 2156                                         __ptext1 2028  
                                       __ptext2 273E                                         __ptext3 177E  
                                       __ptext4 2826                                         __ptext5 192C  
                                       __ptext6 2928                                         __ptext7 26EA  
                                       __ptext8 1E94                                         __ptext9 2766  
                                     _T0CONbits 000FD5                  ??_TMR1_DefaultInterruptHandler 0001  
                                     _T1CONbits 000FCD                                         _lecture 192C  
                         _OSCILLATOR_Initialize 28AE                                       _T2CONbits 000FCA  
                                       _isalpha 238E                                         _isdigit 2522  
                                     _T3CONbits 000FB1                              _EUSART1_Initialize 234E  
                                       _islower 24B2                        ??_PIN_MANAGER_Initialize 0005  
                                       _isspace 2234                       ?_TMR1_SetInterruptHandler 0005  
                                       _isupper 24EA                                 _EUSART_function 28C0  
                                       atoi@neg 0012                                         _toupper 2286  
                          end_of_initialization 2340                                ?_TMR3_WriteTimer 0005  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0009  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 00DC  
                                       fputs@fp 0012                               __end_of_vfpfcnvrt 12BC  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                                      ??_vfprintf 004F  
                          ??_EUSART1_Initialize 0007                                         strlen@a 0007  
                                       strlen@s 0005                        _TMR0_SetInterruptHandler 28F8  
                                     _PORTBbits 000F81                        _TMR3_SetInterruptHandler 28DA  
                             LCD_Function@ordre 000B                                    _LCD_Function 1D56  
                           EUSART1_Write@txData 0005                         TMR2_WriteTimer@timerVal 0005  
                                  _EUSART1_Read 26EA                                  __end_of_Blink_ 177E  
                                __end_of_Minute 287E                    __end_of_INTERRUPT_Initialize 2934  
          __end_of_TMR2_DefaultInterruptHandler 2938                    _TMR2_DefaultInterruptHandler 2936  
                                   vfpfcnvrt@ap 0049                                     vfpfcnvrt@fp 0045  
                                __end_of___wmul 2804                         __end_of_EUSART_function 28D0  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 278E  
                                __end_of_strlen 2590                             start_initialization 230E  
                                    lamp_test@j 000B                                      lamp_test@k 0007  
                                   __end_of_pad 2028                                    ??_Secondes_5 0001  
                                   putch@txData 0006                              EUSART_function@hex 0006  
                         __end_of_EUSART1_Write 28AE                                        ??_Blink_ 0001  
                           _reception_affichage 2826                                        ??_Minute 0001  
                                   vfprintf@fmt 00EE                                        ??___wmul 0009  
                                   __pdataBANK0 00F2                 fp__TMR2_DefaultInterruptHandler 0000  
                 ?_TMR2_DefaultInterruptHandler 0001                              __end_of_Secondes_5 2898  
                                      ??_printf 0051                                        ??_strlen 0007  
                          ?_reception_affichage 0001                           TMR1_ISR@CountCallBack 00A9  
                                   __pbssCOMRAM 0055                                   __pcstackBANK0 00E1  
                                 __pcstackBANK1 0100                               _traitementNormale 2028  
                            ?_traitementNormale 0001                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                           _TMR0_InterruptHandler 00D4  
                                     __pnvBANK0 00CE                             ??_traitementNormale 0053  
                        _PIN_MANAGER_Initialize 2714                                       __pintcode 0008  
              __end_of_TMR1_SetInterruptHandler 28F8                                        ?_affiche 0001  
                  ??_INTERRUPT_InterruptManager 0003                                ?_EUSART_function 0001  
                         ??_reception_affichage 0053                                     __smallconst 0F00  
                                      ?_lecture 0001                                        _BAUDCON1 000FA7  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isalpha 0005  
                                      ?_isdigit 0005                       __end_of_traitementNormale 20C0  
                                     _lamp_test 1C04                            _EUSART1_ErrorHandler 00DA  
                                      ?_islower 0005                                        ?_isspace 0005  
                                      ?_isupper 0005                         _EUSART1_SetErrorHandler 2916  
                                 _TMR0_CallBack 268C                                        ?_toupper 000B  
                          _INTERRUPT_Initialize 2930                                   _TMR1_CallBack 265C  
                             ??_TMR0_Initialize 0007                                        _LCD_Mode 00E0  
                                ___wmul@product 0009         EUSART1_SetErrorHandler@interruptHandler 0005  
                                      _LATBbits 000F8A                                   _TMR2_CallBack 262C  
                                      _PIE1bits 000F9D                                        _PIE2bits 000FA0  
                                      i2u200_48 2646                                        i2u200_49 265A  
                                      i2u202_40 279C                                        i2u202_41 2798  
                                     fp__Blink_ 0000                                        i2u203_40 24A2  
                                      i2u203_41 249E                                        i2u204_40 25EC  
                                      i2u204_41 25E8                                        i2u205_40 2468  
                                      i2u205_41 2464                                        i2u206_40 26DA  
                                      i2u230_40 0052                                        i2u206_41 26D6  
                                      i2u230_41 004E                                        i2u231_40 0060  
                                      i2u231_41 005C                                        i2u232_40 0076  
                                      i2u232_41 0072                                        i2u233_40 0084  
                                      i2u233_41 0080                                        i2u234_40 009A  
                                      i2u234_41 0096                                        i2u235_40 00A8  
                                      i2u227_40 0020                                        i2u235_41 00A4  
                                      i2u227_41 001C                                        i2u180_40 16BE  
                                      i2u172_40 1570                                        i2u228_40 002E  
                                      i2u180_41 16B8                                        i2u172_41 156C  
                                      i2u228_41 002A                                        i2u180_46 16C0  
                                      i2u181_40 16E0                                        i2u173_40 1584  
                                      i2u229_40 0044                      ??_TMR0_SetInterruptHandler 0007  
                                      i2u181_41 16DA                                        i2u173_41 157E  
                                      i2u229_41 0040                                        i2u181_46 16E2  
                                      i2u173_46 1586                                        i2u182_40 1708  
                                      i2u174_40 15AC                                        i2u182_41 1702  
                                      i2u174_41 15A6                                        i2u182_46 170A  
                                      i2u174_46 15AE                                        i2u183_40 1730  
                                      i2u175_40 15D6                                        i2u191_40 27C4  
                                      i2u183_41 172A                                        i2u175_41 15D2  
                                      i2u191_41 27C0                                        i2u183_46 1732  
                                      i2u184_40 2874                                        i2u176_40 15E6  
                                      i2u192_40 2670                                        i2u184_41 2870  
                                      i2u176_41 15E0                                        i2u192_41 266C  
                                      i2u176_46 15E8                                        i2u177_40 1610  
                                      i2u185_40 2890                                        i2u177_41 160C  
                                      i2u185_41 288C                                        _PIR1bits 000F9E  
                                      i2u194_40 26A0                                        i2u178_40 1690  
                                      i2u193_48 2676                                        i2u194_41 269C  
                                      i2u178_41 168C                                        i2u193_49 268A  
                                      i2u179_40 16A4                                        i2u179_41 16A0  
                                      _PIR2bits 000FA1                                        i2u195_48 26A6  
                                      i2u195_49 26BA                                        i2u197_40 2610  
                                      i2u197_41 260C                                        i2u199_40 2640  
                                      i2u198_48 2616                                        i2u199_41 263C  
                                      i2u198_49 262A                      ??_TMR3_SetInterruptHandler 0007  
                                 _TMR3_CallBack 25FC                                        _RCONbits 000FD0  
                                     fp__Minute 0000                                        _TMR0_ISR 25C6  
                                      _TMR1_ISR 2478                                        _TMR2_ISR 26BC  
                                      _TMR3_ISR 243E                                       _vfpfcnvrt 0F4E  
                             ??_TMR1_Initialize 0007                               ___wmul@multiplier 0005  
                                    ?_lamp_test 0001                  ??_TMR2_DefaultInterruptHandler 0001  
                     ?_TMR2_SetInterruptHandler 0005                                    _isspace$2197 000B  
                                ?_TMR0_CallBack 0001                                      vfpfcnvrt@c 00E9  
                                   _INTCON2bits 000FF1                                       copy_data0 2322  
                         ?_INTERRUPT_Initialize 0001                                  ?_TMR1_CallBack 0001  
                             ??_TMR2_Initialize 0007                                  ?_TMR2_CallBack 0001  
                                 fp__Secondes_5 0000                                  ?_TMR3_CallBack 0001  
                                      __Hrparam 0000                                      vfprintf@ap 00F0  
                                      __Lrparam 0000                                      vfprintf@fp 00EC  
                       ??_OSCILLATOR_Initialize 0005                                      ?_vfpfcnvrt 0045  
                             ??_TMR3_Initialize 0007                        _TMR1_SetInterruptHandler 28EE  
                         _TMR1_InterruptHandler 00D6                       ??_EUSART1_SetErrorHandler 0007  
                   _EUSART1_DefaultErrorHandler 000000                                        __ptext10 21D2  
                                      __ptext11 0F4E                                        __ptext20 24EA  
                                      __ptext12 12BC                                        __ptext21 238E  
                                      __ptext13 2286                                      _T1GCONbits 000FAA  
                                      __ptext30 2804                                        __ptext22 1AAE  
                                      __ptext14 24B2                                        __ptext31 23CA  
                                      __ptext23 2234                                        __ptext15 1F66  
                                      __ptext40 28AE                                        __ptext32 28DA  
                                      __ptext24 2522                                        __ptext16 255A  
                                      __ptext41 2930                                        __ptext33 2844  
                                      __ptext25 27DE                                        __ptext17 22CA  
                                      __ptext50 287E                                        __ptext42 234E  
                                      __ptext34 28E4                                        __ptext26 1D56  
                                      __ptext18 20C0                                        __ptext51 2934  
                                      __ptext43 2902                                        __ptext35 2404  
                                      __ptext27 28C0                                        __ptext19 28D0  
                                      __ptext60 25C6                                        __ptext52 26BC  
                                      __ptext44 290C                                        __ptext36 28EE  
                                      __ptext28 2898                                        __ptext61 268C  
                                      __ptext53 262C                                        __ptext45 2916  
                                      __ptext37 2590                                        __ptext29 1C04  
                                      __ptext62 2862                                        __ptext54 2936  
                                      __ptext38 28F8                                        __ptext63 293A  
                                      __ptext55 2478                                        __ptext47 243E  
                                      __ptext39 2714                                        __ptext64 0000  
                                      __ptext56 27B6                                        __ptext48 278E  
                                      __ptext57 265C                                        __ptext49 25FC  
                                      __ptext58 155C                                        __ptext59 2938  
                                    _T3GCONbits 000FB0                         TMR3_WriteTimer@timerVal 0005  
          __end_of_TMR0_DefaultInterruptHandler 293C                    _TMR0_DefaultInterruptHandler 293A  
                             i2_TMR3_WriteTimer 278E  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
                                      isa$xinst 000000                                        int$flags 005A  
                            ?i2_TMR3_WriteTimer 0001                                        _vfprintf 21D2  
            __end_of_INTERRUPT_InterruptManager 00BC                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 0100                               ??_TMR1_WriteTimer 0003  
          __end_of_TMR3_DefaultInterruptHandler 2936                    _TMR3_DefaultInterruptHandler 2934  
                   _EUSART1_FramingErrorHandler 00DE                             ??i2_TMR3_WriteTimer 0003  
                                    _INTCONbits 000FF2                                     ??_lamp_test 0005  
                               ??_TMR0_CallBack 0001                                        isalpha@c 0005  
                                      isdigit@c 0005                          ??_INTERRUPT_Initialize 0005  
                               ??_TMR1_CallBack 0003                                      _SECONDES_5 00AC  
                             ??_traitementEcran 0053                                        intlevel2 0000  
                               ??_TMR2_CallBack 0001                               ??_TMR2_WriteTimer 0005  
                                      islower@c 0005                                        isspace@c 0005  
                       ?_PIN_MANAGER_Initialize 0001                                 ??_TMR3_CallBack 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 290C                  _EUSART1_SetOverrunErrorHandler 2902  
                                    _RCSTA1bits 000FAB                       __end_ofi2_TMR3_WriteTimer 27B6  
                                      isupper@c 0005                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                        printf@ap 0051  
EUSART1_SetFramingErrorHandler@interruptHandler 0005                                     ??_vfpfcnvrt 004B  
                             ??_TMR3_WriteTimer 0007                              _eusart1RxLastError 00AD  
               fp__TMR3_DefaultInterruptHandler 0000                   ?_TMR3_DefaultInterruptHandler 0001  
                         TMR2_ISR@CountCallBack 00A3                                 _TMR0_Initialize 2590  
                                      toupper@c 000B                  __end_of_PIN_MANAGER_Initialize 273E  
                         _TMR2_InterruptHandler 00CE                                 _TMR1_Initialize 2404  
