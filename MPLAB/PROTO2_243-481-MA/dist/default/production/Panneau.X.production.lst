

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue May 17 18:35:56 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    88                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    89                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    90                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    91  0000                     
    92                           ; Version 2.20
    93                           ; Generated 05/05/2020 GMT
    94                           ; 
    95                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    96                           ; All rights reserved.
    97                           ; 
    98                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    99                           ; 
   100                           ; Redistribution and use in source and binary forms, with or without modification, are
   101                           ; permitted provided that the following conditions are met:
   102                           ; 
   103                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   104                           ;        conditions and the following disclaimer.
   105                           ; 
   106                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   107                           ;        of conditions and the following disclaimer in the documentation and/or other
   108                           ;        materials provided with the distribution.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F25K80 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126  0000                     
   127 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   128  0000                     
   129 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   130  0000                     
   131 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   132  0000                     
   133                           	psect	idataCOMRAM
   134  002D9E                     __pidataCOMRAM:
   135                           	callstack 0
   136                           
   137                           ;initializer for _connexion
   138  002D9E  02                 	db	2
   139                           
   140                           ;initializer for _perte
   141  002D9F  02                 	db	2
   142                           
   143                           ;initializer for _EtatE
   144  002DA0  03                 	db	3
   145                           
   146                           ;initializer for _EtatN
   147  002DA1  05                 	db	5
   148                           
   149                           	psect	idataBANK0
   150  002D98                     __pidataBANK0:
   151                           	callstack 0
   152                           
   153                           ;initializer for _saving
   154  002D98  01                 	db	1
   155                           
   156                           ;initializer for _plat
   157  002D99  02                 	db	2
   158                           
   159                           ;initializer for _minute
   160  002D9A  02                 	db	2
   161                           
   162                           ;initializer for _sec5
   163  002D9B  02                 	db	2
   164                           
   165                           ;initializer for _goback
   166  002D9C  03                 	db	3
   167                           
   168                           ;initializer for _GoBack
   169  002D9D  05                 	db	5
   170                           
   171                           	psect	nvBANK0
   172  0000E2                     __pnvBANK0:
   173                           	callstack 0
   174  0000E2                     _TMR4_InterruptHandler:
   175                           	callstack 0
   176  0000E2                     	ds	2
   177  0000E4                     _TMR2_InterruptHandler:
   178                           	callstack 0
   179  0000E4                     	ds	2
   180  0000E6                     _TMR3_InterruptHandler:
   181                           	callstack 0
   182  0000E6                     	ds	2
   183  0000E8                     _timer3ReloadVal:
   184                           	callstack 0
   185  0000E8                     	ds	2
   186  0000EA                     _timer0ReloadVal:
   187                           	callstack 0
   188  0000EA                     	ds	2
   189  0000EC                     _TMR0_InterruptHandler:
   190                           	callstack 0
   191  0000EC                     	ds	2
   192  0000EE                     _TMR1_InterruptHandler:
   193                           	callstack 0
   194  0000EE                     	ds	2
   195  0000F0                     _timer1ReloadVal:
   196                           	callstack 0
   197  0000F0                     	ds	2
   198  0000F2                     _EUSART1_ErrorHandler:
   199                           	callstack 0
   200  0000F2                     	ds	2
   201  0000F4                     _EUSART1_OverrunErrorHandler:
   202                           	callstack 0
   203  0000F4                     	ds	2
   204  0000F6                     _EUSART1_FramingErrorHandler:
   205                           	callstack 0
   206  0000F6                     	ds	2
   207  0000F8                     _LCD_Mode:
   208                           	callstack 0
   209  0000F8                     	ds	1
   210  0000                     _WPUB	set	3931
   211  0000                     _ANCON1	set	3932
   212  0000                     _ANCON0	set	3933
   213  0000                     _LATBbits	set	3978
   214  0000                     _PORTBbits	set	3969
   215  0000                     _T4CONbits	set	3976
   216  0000                     _T4CON	set	3976
   217  0000                     _TMR4	set	3975
   218  0000                     _PR4	set	4009
   219  0000                     _PIR4bits	set	4023
   220  0000                     _PIE4bits	set	4022
   221  0000                     _RCONbits	set	4048
   222  0000                     _T2CONbits	set	4042
   223  0000                     _T2CON	set	4042
   224  0000                     _TMR2	set	4044
   225  0000                     _PR2	set	4043
   226  0000                     _T3GCONbits	set	4016
   227  0000                     _T3CONbits	set	4017
   228  0000                     _T3CON	set	4017
   229  0000                     _PIE2bits	set	4000
   230  0000                     _PIR2bits	set	4001
   231  0000                     _TMR3L	set	4018
   232  0000                     _TMR3H	set	4019
   233  0000                     _T3GCON	set	4016
   234  0000                     _T0CON	set	4053
   235  0000                     _TMR0L	set	4054
   236  0000                     _TMR0H	set	4055
   237  0000                     _T0CONbits	set	4053
   238  0000                     _T1GCONbits	set	4010
   239  0000                     _T1CONbits	set	4045
   240  0000                     _T1CON	set	4045
   241  0000                     _PIE1bits	set	3997
   242  0000                     _TMR1L	set	4046
   243  0000                     _TMR1H	set	4047
   244  0000                     _T1GCON	set	4010
   245  0000                     _REFOCON	set	3994
   246  0000                     _OSCTUNE	set	3995
   247  0000                     _OSCCON2	set	4050
   248  0000                     _OSCCON	set	4051
   249  0000                     _TXREG1	set	4013
   250  0000                     _RCREG1	set	4014
   251  0000                     _RCSTA1bits	set	4011
   252  0000                     _TXSTA1bits	set	4012
   253  0000                     _PIR1bits	set	3998
   254  0000                     _SPBRGH1	set	3965
   255  0000                     _SPBRG1	set	4015
   256  0000                     _TXSTA1	set	4012
   257  0000                     _RCSTA1	set	4011
   258  0000                     _BAUDCON1	set	4007
   259  0000                     _INTCONbits	set	4082
   260  0000                     _INTCON2bits	set	4081
   261  0000                     _TRISC	set	3988
   262  0000                     _TRISB	set	3987
   263  0000                     _TRISA	set	3986
   264  0000                     _LATC	set	3979
   265  0000                     _LATB	set	3978
   266  0000                     _LATA	set	3977
   267                           
   268                           	psect	smallconst
   269  000F00                     __psmallconst:
   270                           	callstack 0
   271  000F00  00                 	db	0
   272  000F01                     STR_1:
   273                           
   274                           ; BSR set to: 0
   275  000F01  20                 	db	32
   276  000F02  20                 	db	32
   277  000F03  20                 	db	32
   278  000F04  20                 	db	32
   279  000F05  20                 	db	32
   280  000F06  20                 	db	32
   281  000F07  50                 	db	80	;'P'
   282  000F08  4F                 	db	79	;'O'
   283  000F09  53                 	db	83	;'S'
   284  000F0A  49                 	db	73	;'I'
   285  000F0B  54                 	db	84	;'T'
   286  000F0C  49                 	db	73	;'I'
   287  000F0D  4F                 	db	79	;'O'
   288  000F0E  4E                 	db	78	;'N'
   289  000F0F  53                 	db	83	;'S'
   290  000F10  20                 	db	32
   291  000F11  20                 	db	32
   292  000F12  20                 	db	32
   293  000F13  20                 	db	32
   294  000F14  20                 	db	32
   295  000F15  00                 	db	0
   296  000F16                     STR_2:
   297                           
   298                           ; BSR set to: 0
   299  000F16  58                 	db	88	;'X'
   300  000F17  20                 	db	32
   301  000F18  3D                 	db	61	;'='
   302  000F19  20                 	db	32
   303  000F1A  25                 	db	37
   304  000F1B  30                 	db	48	;'0'
   305  000F1C  32                 	db	50	;'2'
   306  000F1D  58                 	db	88	;'X'
   307  000F1E  20                 	db	32
   308  000F1F  25                 	db	37
   309  000F20  30                 	db	48	;'0'
   310  000F21  32                 	db	50	;'2'
   311  000F22  58                 	db	88	;'X'
   312  000F23  00                 	db	0
   313  000F24                     STR_3:
   314                           
   315                           ; BSR set to: 0
   316  000F24  59                 	db	89	;'Y'
   317  000F25  20                 	db	32
   318  000F26  3D                 	db	61	;'='
   319  000F27  20                 	db	32
   320  000F28  25                 	db	37
   321  000F29  30                 	db	48	;'0'
   322  000F2A  32                 	db	50	;'2'
   323  000F2B  58                 	db	88	;'X'
   324  000F2C  20                 	db	32
   325  000F2D  25                 	db	37
   326  000F2E  30                 	db	48	;'0'
   327  000F2F  32                 	db	50	;'2'
   328  000F30  58                 	db	88	;'X'
   329  000F31  00                 	db	0
   330  000F32                     STR_5:
   331                           
   332                           ; BSR set to: 0
   333  000F32  5A                 	db	90	;'Z'
   334  000F33  20                 	db	32
   335  000F34  3D                 	db	61	;'='
   336  000F35  20                 	db	32
   337  000F36  25                 	db	37
   338  000F37  30                 	db	48	;'0'
   339  000F38  32                 	db	50	;'2'
   340  000F39  58                 	db	88	;'X'
   341  000F3A  20                 	db	32
   342  000F3B  25                 	db	37
   343  000F3C  30                 	db	48	;'0'
   344  000F3D  32                 	db	50	;'2'
   345  000F3E  58                 	db	88	;'X'
   346  000F3F  00                 	db	0
   347  000F40                     STR_4:
   348                           
   349                           ; BSR set to: 0
   350  000F40  20                 	db	32
   351  000F41  20                 	db	32
   352  000F42  5F                 	db	95	;'_'
   353  000F43  2D                 	db	45
   354  000F44  50                 	db	80	;'P'
   355  000F45  6C                 	db	108	;'l'
   356  000F46  61                 	db	97	;'a'
   357  000F47  74                 	db	116	;'t'
   358  000F48  2D                 	db	45
   359  000F49  5F                 	db	95	;'_'
   360  000F4A  00                 	db	0
   361  000F4B  00                 	db	0	; dummy byte at the end
   362  0000                     
   363                           ; #config settings
   364                           
   365                           	psect	cinit
   366  002630                     __pcinit:
   367                           	callstack 0
   368  002630                     start_initialization:
   369                           	callstack 0
   370  002630                     __initialization:
   371                           	callstack 0
   372                           
   373                           ; Initialize objects allocated to BANK0 (6 bytes)
   374                           ; load TBLPTR registers with __pidataBANK0
   375  002630  0E98               	movlw	low __pidataBANK0
   376  002632  6EF6               	movwf	tblptrl,c
   377  002634  0E2D               	movlw	high __pidataBANK0
   378  002636  6EF7               	movwf	tblptrh,c
   379  002638  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   380  00263A  6EF8               	movwf	tblptru,c
   381  00263C  EE00  F0F9         	lfsr	0,__pdataBANK0
   382  002640  EE10 F006          	lfsr	1,6
   383  002644                     copy_data0:
   384  002644  0009               	tblrd		*+
   385  002646  CFF5 FFEE          	movff	tablat,postinc0
   386  00264A  50E5               	movf	postdec1,w,c
   387  00264C  50E1               	movf	fsr1l,w,c
   388  00264E  E1FA               	bnz	copy_data0
   389                           
   390                           ; Initialize objects allocated to COMRAM (4 bytes)
   391                           ; load TBLPTR registers with __pidataCOMRAM
   392  002650  0E9E               	movlw	low __pidataCOMRAM
   393  002652  6EF6               	movwf	tblptrl,c
   394  002654  0E2D               	movlw	high __pidataCOMRAM
   395  002656  6EF7               	movwf	tblptrh,c
   396  002658  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   397  00265A  6EF8               	movwf	tblptru,c
   398  00265C  EE00  F057         	lfsr	0,__pdataCOMRAM
   399  002660  EE10 F004          	lfsr	1,4
   400  002664                     copy_data1:
   401  002664  0009               	tblrd		*+
   402  002666  CFF5 FFEE          	movff	tablat,postinc0
   403  00266A  50E5               	movf	postdec1,w,c
   404  00266C  50E1               	movf	fsr1l,w,c
   405  00266E  E1FA               	bnz	copy_data1
   406                           
   407                           ; Clear objects allocated to BANK0 (97 bytes)
   408  002670  EE00  F060         	lfsr	0,__pbssBANK0
   409  002674  0E61               	movlw	97
   410  002676                     clear_0:
   411  002676  6AEE               	clrf	postinc0,c
   412  002678  06E8               	decf	wreg,f,c
   413  00267A  E1FD               	bnz	clear_0
   414  00267C                     end_of_initialization:
   415                           	callstack 0
   416  00267C                     __end_of__initialization:
   417                           	callstack 0
   418  00267C  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   419  00267E  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   420  002680  0E00               	movlw	low (__Lmediumconst shr (0+16))
   421  002682  6EF8               	movwf	tblptru,c
   422  002684  0100               	movlb	0
   423  002686  EF1E  F012         	goto	_main	;jump to C main() function
   424                           
   425                           	psect	dataCOMRAM
   426  000057                     __pdataCOMRAM:
   427                           	callstack 0
   428  000057                     _connexion:
   429                           	callstack 0
   430  000057                     	ds	1
   431  000058                     _perte:
   432                           	callstack 0
   433  000058                     	ds	1
   434  000059                     _EtatE:
   435                           	callstack 0
   436  000059                     	ds	1
   437  00005A                     _EtatN:
   438                           	callstack 0
   439  00005A                     	ds	1
   440                           
   441                           	psect	bssBANK0
   442  000060                     __pbssBANK0:
   443                           	callstack 0
   444  000060                     _trame:
   445                           	callstack 0
   446  000060                     	ds	19
   447  000073                     _nout:
   448                           	callstack 0
   449  000073                     	ds	2
   450  000075                     _width:
   451                           	callstack 0
   452  000075                     	ds	2
   453  000077                     _prec:
   454                           	callstack 0
   455  000077                     	ds	2
   456  000079                     _flags:
   457                           	callstack 0
   458  000079                     	ds	2
   459  00007B                     _c:
   460                           	callstack 0
   461  00007B                     	ds	2
   462  00007D                     _SPZ:
   463                           	callstack 0
   464  00007D                     	ds	2
   465  00007F                     _SPY:
   466                           	callstack 0
   467  00007F                     	ds	2
   468  000081                     _SPX:
   469                           	callstack 0
   470  000081                     	ds	2
   471  000083                     _PZ:
   472                           	callstack 0
   473  000083                     	ds	2
   474  000085                     _PY:
   475                           	callstack 0
   476  000085                     	ds	2
   477  000087                     _PX:
   478                           	callstack 0
   479  000087                     	ds	2
   480  000089                     _t3:
   481                           	callstack 0
   482  000089                     	ds	2
   483  00008B                     _t2:
   484                           	callstack 0
   485  00008B                     	ds	2
   486  00008D                     _t1:
   487                           	callstack 0
   488  00008D                     	ds	2
   489  00008F                     _m:
   490                           	callstack 0
   491  00008F                     	ds	2
   492  000091                     _Hx:
   493                           	callstack 0
   494  000091                     	ds	2
   495  000093                     _i:
   496                           	callstack 0
   497  000093                     	ds	2
   498  000095                     TMR4_ISR@CountCallBack:
   499                           	callstack 0
   500  000095                     	ds	2
   501  000097                     TMR2_ISR@CountCallBack:
   502                           	callstack 0
   503  000097                     	ds	2
   504  000099                     TMR3_ISR@CountCallBack:
   505                           	callstack 0
   506  000099                     	ds	2
   507  00009B                     TMR0_ISR@CountCallBack:
   508                           	callstack 0
   509  00009B                     	ds	2
   510  00009D                     TMR1_ISR@CountCallBack:
   511                           	callstack 0
   512  00009D                     	ds	2
   513  00009F                     _MINUTE:
   514                           	callstack 0
   515  00009F                     	ds	1
   516  0000A0                     _eusart1RxLastError:
   517                           	callstack 0
   518  0000A0                     	ds	1
   519  0000A1                     _dbuf:
   520                           	callstack 0
   521  0000A1                     	ds	32
   522                           
   523                           	psect	dataBANK0
   524  0000F9                     __pdataBANK0:
   525                           	callstack 0
   526  0000F9                     _saving:
   527                           	callstack 0
   528  0000F9                     	ds	1
   529  0000FA                     _plat:
   530                           	callstack 0
   531  0000FA                     	ds	1
   532  0000FB                     _minute:
   533                           	callstack 0
   534  0000FB                     	ds	1
   535  0000FC                     _sec5:
   536                           	callstack 0
   537  0000FC                     	ds	1
   538  0000FD                     _goback:
   539                           	callstack 0
   540  0000FD                     	ds	1
   541  0000FE                     _GoBack:
   542                           	callstack 0
   543  0000FE                     	ds	1
   544                           
   545                           	psect	cstackBANK0
   546  0000C1                     __pcstackBANK0:
   547                           	callstack 0
   548  0000C1                     vfpfcnvrt@llu:
   549                           	callstack 0
   550                           
   551                           ; 8 bytes @ 0x0
   552  0000C1                     	ds	8
   553  0000C9                     vfpfcnvrt@done:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x8
   557  0000C9                     	ds	2
   558  0000CB                     _vfpfcnvrt$2326:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0xA
   562  0000CB                     	ds	2
   563  0000CD                     vfpfcnvrt@c:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0xC
   567  0000CD                     	ds	1
   568  0000CE                     ?_vfprintf:
   569                           	callstack 0
   570  0000CE                     vfprintf@fp:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0xD
   574  0000CE                     	ds	2
   575  0000D0                     vfprintf@fmt:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0xF
   579  0000D0                     	ds	2
   580  0000D2                     vfprintf@ap:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x11
   584  0000D2                     	ds	2
   585  0000D4                     ?_printf:
   586                           	callstack 0
   587  0000D4                     printf@fmt:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x13
   591  0000D4                     	ds	8
   592  0000DC                     printf@ap:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x1B
   596  0000DC                     	ds	2
   597  0000DE                     ??_traitementNormale:
   598                           
   599                           ; 1 bytes @ 0x1D
   600  0000DE                     	ds	4
   601                           
   602                           	psect	cstackCOMRAM
   603  000001                     __pcstackCOMRAM:
   604                           	callstack 0
   605  000001                     ??_Blink_:
   606  000001                     TMR1_WriteTimer@timerVal:
   607                           	callstack 0
   608  000001                     i2TMR3_WriteTimer@timerVal:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x0
   612  000001                     	ds	2
   613  000003                     ??_INTERRUPT_InterruptManager:
   614  000003                     
   615                           ; 1 bytes @ 0x2
   616  000003                     	ds	2
   617  000005                     ??_lamp_test:
   618  000005                     ??_lecture:
   619  000005                     ?_strlen:
   620                           	callstack 0
   621  000005                     ?_isupper:
   622                           	callstack 0
   623  000005                     ?_isalpha:
   624                           	callstack 0
   625  000005                     ?_isdigit:
   626                           	callstack 0
   627  000005                     ?_isspace:
   628                           	callstack 0
   629  000005                     ?_islower:
   630                           	callstack 0
   631  000005                     ?___wmul:
   632                           	callstack 0
   633  000005                     EUSART1_Write@txData:
   634                           	callstack 0
   635  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   636                           	callstack 0
   637  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   638                           	callstack 0
   639  000005                     EUSART1_SetErrorHandler@interruptHandler:
   640                           	callstack 0
   641  000005                     TMR1_SetInterruptHandler@InterruptHandler:
   642                           	callstack 0
   643  000005                     TMR0_SetInterruptHandler@InterruptHandler:
   644                           	callstack 0
   645  000005                     TMR3_WriteTimer@timerVal:
   646                           	callstack 0
   647  000005                     TMR3_SetInterruptHandler@InterruptHandler:
   648                           	callstack 0
   649  000005                     TMR2_SetInterruptHandler@InterruptHandler:
   650                           	callstack 0
   651  000005                     TMR4_SetInterruptHandler@InterruptHandler:
   652                           	callstack 0
   653  000005                     ___wmul@multiplier:
   654                           	callstack 0
   655  000005                     isalpha@c:
   656                           	callstack 0
   657  000005                     isdigit@c:
   658                           	callstack 0
   659  000005                     isspace@c:
   660                           	callstack 0
   661  000005                     isupper@c:
   662                           	callstack 0
   663  000005                     strlen@s:
   664                           	callstack 0
   665  000005                     islower@c:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x4
   669  000005                     	ds	1
   670  000006                     putch@txData:
   671                           	callstack 0
   672  000006                     EUSART_function@hex:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x5
   676  000006                     	ds	1
   677  000007                     ??_TMR3_Initialize:
   678  000007                     ??_TMR1_Initialize:
   679  000007                     ??_TMR0_Initialize:
   680  000007                     ??_isupper:
   681  000007                     ??_isalpha:
   682  000007                     ??_isdigit:
   683  000007                     ??_isspace:
   684  000007                     ??_islower:
   685  000007                     LCD_Function@x:
   686                           	callstack 0
   687  000007                     lamp_test@k:
   688                           	callstack 0
   689  000007                     ___wmul@multiplicand:
   690                           	callstack 0
   691  000007                     fputc@c:
   692                           	callstack 0
   693  000007                     strlen@a:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x6
   697  000007                     	ds	1
   698  000008                     LCD_Function@z:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x7
   702  000008                     	ds	1
   703  000009                     ??_LCD_Function:
   704  000009                     lamp_test@j_1761:
   705                           	callstack 0
   706  000009                     ___wmul@product:
   707                           	callstack 0
   708  000009                     fputc@fp:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x8
   712  000009                     	ds	2
   713  00000B                     ??_fputc:
   714  00000B                     ?_toupper:
   715                           	callstack 0
   716  00000B                     LCD_Function@ordre:
   717                           	callstack 0
   718  00000B                     _isspace$2371:
   719                           	callstack 0
   720  00000B                     lamp_test@j:
   721                           	callstack 0
   722  00000B                     toupper@c:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0xA
   726  00000B                     	ds	1
   727  00000C                     ?_atoi:
   728                           	callstack 0
   729  00000C                     atoi@s:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0xB
   733  00000C                     	ds	1
   734  00000D                     ??_toupper:
   735  00000D                     lamp_test@j_1759:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0xC
   739  00000D                     	ds	1
   740  00000E                     ??_atoi:
   741                           
   742                           ; 1 bytes @ 0xD
   743  00000E                     	ds	2
   744  000010                     fputs@s:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0xF
   748  000010                     	ds	1
   749  000011                     _toupper$2420:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x10
   753  000011                     	ds	1
   754  000012                     atoi@neg:
   755                           	callstack 0
   756  000012                     fputs@fp:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x11
   760  000012                     	ds	2
   761  000014                     fputs@c:
   762                           	callstack 0
   763  000014                     _atoi$2344:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x13
   767  000014                     	ds	1
   768  000015                     fputs@i:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x14
   772  000015                     	ds	1
   773  000016                     _atoi$2346:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x15
   777  000016                     	ds	1
   778  000017                     ?_pad:
   779                           	callstack 0
   780  000017                     pad@fp:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x16
   784  000017                     	ds	1
   785  000018                     _atoi$2345:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0x17
   789  000018                     	ds	1
   790  000019                     pad@buf:
   791                           	callstack 0
   792  000019                     atoi@n:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x18
   796  000019                     	ds	2
   797  00001B                     pad@p:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x1A
   801  00001B                     	ds	2
   802  00001D                     ??_pad:
   803                           
   804                           ; 1 bytes @ 0x1C
   805  00001D                     	ds	1
   806  00001E                     pad@i:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x1D
   810  00001E                     	ds	2
   811  000020                     pad@w:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x1F
   815  000020                     	ds	2
   816  000022                     ?_xtoa:
   817                           	callstack 0
   818  000022                     xtoa@fp:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x21
   822  000022                     	ds	2
   823  000024                     xtoa@d:
   824                           	callstack 0
   825                           
   826                           ; 8 bytes @ 0x23
   827  000024                     	ds	8
   828  00002C                     xtoa@x:
   829                           	callstack 0
   830                           
   831                           ; 1 bytes @ 0x2B
   832  00002C                     	ds	1
   833  00002D                     ??_xtoa:
   834                           
   835                           ; 1 bytes @ 0x2C
   836  00002D                     	ds	8
   837  000035                     _xtoa$2310:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x34
   841  000035                     	ds	2
   842  000037                     _xtoa$2311:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x36
   846  000037                     	ds	2
   847  000039                     xtoa@p:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x38
   851  000039                     	ds	2
   852  00003B                     xtoa@w:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x3A
   856  00003B                     	ds	2
   857  00003D                     xtoa@n:
   858                           	callstack 0
   859                           
   860                           ; 8 bytes @ 0x3C
   861  00003D                     	ds	8
   862  000045                     xtoa@i:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x44
   866  000045                     	ds	2
   867  000047                     xtoa@c:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x46
   871  000047                     	ds	2
   872  000049                     ?_vfpfcnvrt:
   873                           	callstack 0
   874  000049                     vfpfcnvrt@fp:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x48
   878  000049                     	ds	2
   879  00004B                     vfpfcnvrt@fmt:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0x4A
   883  00004B                     	ds	2
   884  00004D                     vfpfcnvrt@ap:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x4C
   888  00004D                     	ds	2
   889  00004F                     ??_vfpfcnvrt:
   890                           
   891                           ; 1 bytes @ 0x4E
   892  00004F                     	ds	4
   893  000053                     vfprintf@cfmt:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x52
   897  000053                     	ds	2
   898  000055                     ??_traitementEcran:
   899  000055                     
   900                           ; 1 bytes @ 0x54
   901  000055                     	ds	2
   902  000057                     
   903                           ; 1 bytes @ 0x56
   904 ;;
   905 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   906 ;;
   907 ;; *************** function _main *****************
   908 ;; Defined at:
   909 ;;		line 94 in file "main.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   927 ;;Total ram usage:        0 bytes
   928 ;; Hardware stack levels required when called:   17
   929 ;; This function calls:
   930 ;;		_SYSTEM_Initialize
   931 ;;		_TMR0_SetInterruptHandler
   932 ;;		_TMR1_SetInterruptHandler
   933 ;;		_TMR3_Initialize
   934 ;;		_TMR3_SetInterruptHandler
   935 ;;		_TMR4_SetInterruptHandler
   936 ;;		_lamp_test
   937 ;;		_traitementEcran
   938 ;;		_traitementNormale
   939 ;; This function is called by:
   940 ;;		Startup code after reset
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text0
   945  00243C                     __ptext0:
   946                           	callstack 0
   947  00243C                     _main:
   948                           	callstack 14
   949  00243C                     
   950                           ;main.c: 96:     SYSTEM_Initialize();
   951  00243C  EC1B  F016         	call	_SYSTEM_Initialize	;wreg free
   952                           
   953                           ;main.c: 97:     TMR3_Initialize();
   954  002440  ECCE  F013         	call	_TMR3_Initialize	;wreg free
   955                           
   956                           ;main.c: 98:     TMR4_SetInterruptHandler(connect);
   957  002444  0E18               	movlw	low _connect
   958  002446  6E05               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
   959  002448  0E1A               	movlw	high _connect
   960  00244A  6E06               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
   961  00244C  ECA4  F016         	call	_TMR4_SetInterruptHandler	;wreg free
   962                           
   963                           ;main.c: 99:     TMR0_SetInterruptHandler(Minute);
   964  002450  0EB6               	movlw	low _Minute
   965  002452  6E05               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   966  002454  0E2C               	movlw	high _Minute
   967  002456  6E06               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   968  002458  ECB8  F016         	call	_TMR0_SetInterruptHandler	;wreg free
   969                           
   970                           ;main.c: 100:     TMR1_SetInterruptHandler(Blink_);
   971  00245C  0EAC               	movlw	low _Blink_
   972  00245E  6E05               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
   973  002460  0E15               	movlw	high _Blink_
   974  002462  6E06               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
   975  002464  ECB3  F016         	call	_TMR1_SetInterruptHandler	;wreg free
   976                           
   977                           ;main.c: 101:     TMR3_SetInterruptHandler(Secondes_5);
   978  002468  0EEC               	movlw	low _Secondes_5
   979  00246A  6E05               	movwf	TMR3_SetInterruptHandler@InterruptHandler^0,c
   980  00246C  0E2C               	movlw	high _Secondes_5
   981  00246E  6E06               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)^0,c
   982  002470  ECA9  F016         	call	_TMR3_SetInterruptHandler	;wreg free
   983  002474                     
   984                           ;main.c: 104:     LCD_Mode = PORTBbits.RB3 ? 0 : 1;
   985  002474  A681               	btfss	129,3,c	;volatile
   986  002476  EF3F  F012         	goto	u3701
   987  00247A  EF42  F012         	goto	u3700
   988  00247E                     u3701:
   989  00247E  0E01               	movlw	1
   990  002480  EF43  F012         	goto	u3710
   991  002484                     u3700:
   992  002484  0E00               	movlw	0
   993  002486                     u3710:
   994  002486  0100               	movlb	0	; () banked
   995  002488  6FF8               	movwf	_LCD_Mode& (0+255),b
   996  00248A                     
   997                           ; BSR set to: 0
   998                           ;main.c: 105:     lamp_test();
   999  00248A  EC7D  F00F         	call	_lamp_test	;wreg free
  1000  00248E                     
  1001                           ;main.c: 107:     (INTCONbits.GIE = 1);
  1002  00248E  8EF2               	bsf	242,7,c	;volatile
  1003  002490                     
  1004                           ;main.c: 108:     (INTCONbits.PEIE = 1);
  1005  002490  8CF2               	bsf	242,6,c	;volatile
  1006  002492                     l607:
  1007                           
  1008                           ;main.c: 112:         if (LCD_Mode) {
  1009  002492  0100               	movlb	0	; () banked
  1010  002494  51F8               	movf	_LCD_Mode& (0+255),w,b
  1011  002496  B4D8               	btfsc	status,2,c
  1012  002498  EF50  F012         	goto	u3721
  1013  00249C  EF52  F012         	goto	u3720
  1014  0024A0                     u3721:
  1015  0024A0  EF63  F012         	goto	l4389
  1016  0024A4                     u3720:
  1017  0024A4                     
  1018                           ; BSR set to: 0
  1019                           ;main.c: 113:             EtatE = ReceptionE;
  1020  0024A4  0E00               	movlw	0
  1021  0024A6  6E59               	movwf	_EtatE^0,c
  1022                           
  1023                           ;main.c: 114:             goback = ReceptionE;
  1024  0024A8  0E00               	movlw	0
  1025  0024AA  6FFD               	movwf	_goback& (0+255),b
  1026  0024AC                     l4383:
  1027                           
  1028                           ; BSR set to: 0
  1029                           ;main.c: 116:                 traitementEcran();
  1030  0024AC  ECE4  F00D         	call	_traitementEcran	;wreg free
  1031  0024B0                     
  1032                           ;main.c: 117:                 if(LCD_Mode == 0)break;
  1033  0024B0  0100               	movlb	0	; () banked
  1034  0024B2  51F8               	movf	_LCD_Mode& (0+255),w,b
  1035  0024B4  A4D8               	btfss	status,2,c
  1036  0024B6  EF5F  F012         	goto	u3731
  1037  0024BA  EF61  F012         	goto	u3730
  1038  0024BE                     u3731:
  1039  0024BE  EF56  F012         	goto	l4383
  1040  0024C2                     u3730:
  1041  0024C2  EF49  F012         	goto	l607
  1042  0024C6                     l4389:
  1043                           
  1044                           ; BSR set to: 0
  1045                           ;main.c: 120:             EtatN = Reception;
  1046  0024C6  0E00               	movlw	0
  1047  0024C8  6E5A               	movwf	_EtatN^0,c
  1048                           
  1049                           ;main.c: 121:             GoBack = Reception;
  1050  0024CA  0E00               	movlw	0
  1051  0024CC  6FFE               	movwf	_GoBack& (0+255),b
  1052  0024CE                     l4391:
  1053                           
  1054                           ;main.c: 123:                 traitementNormale();
  1055  0024CE  ECF4  F00B         	call	_traitementNormale	;wreg free
  1056  0024D2  EF67  F012         	goto	l4391
  1057  0024D6  EF66  F000         	goto	start
  1058  0024DA                     __end_of_main:
  1059                           	callstack 0
  1060                           
  1061 ;; *************** function _traitementNormale *****************
  1062 ;; Defined at:
  1063 ;;		line 304 in file "main.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1079 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1080 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1081 ;;Total ram usage:        4 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; Hardware stack levels required when called:   16
  1084 ;; This function calls:
  1085 ;;		_TMR3_WriteTimer
  1086 ;;		_lecture
  1087 ;;		_reception_
  1088 ;;		_reception_affichage
  1089 ;; This function is called by:
  1090 ;;		_main
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text1
  1095  0017E8                     __ptext1:
  1096                           	callstack 0
  1097  0017E8                     _traitementNormale:
  1098                           	callstack 14
  1099  0017E8                     
  1100                           ;main.c: 305:     switch (EtatN) {
  1101  0017E8  EFE5  F00C         	goto	l4363
  1102  0017EC                     l4307:
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;main.c: 307:             connexion = Oui;
  1106  0017EC  0E00               	movlw	0
  1107  0017EE  6E57               	movwf	_connexion^0,c
  1108  0017F0                     
  1109                           ; BSR set to: 0
  1110                           ;main.c: 308:             reception_();
  1111  0017F0  EC69  F016         	call	_reception_	;wreg free
  1112  0017F4                     
  1113                           ;main.c: 309:             if (saving == Non && !PORTBbits.RB3)
  1114  0017F4  0100               	movlb	0	; () banked
  1115  0017F6  05F9               	decf	_saving& (0+255),w,b
  1116  0017F8  A4D8               	btfss	status,2,c
  1117  0017FA  EF01  F00C         	goto	u3571
  1118  0017FE  EF03  F00C         	goto	u3570
  1119  001802                     u3571:
  1120  001802  EF0C  F00C         	goto	l4317
  1121  001806                     u3570:
  1122  001806                     
  1123                           ; BSR set to: 0
  1124  001806  B681               	btfsc	129,3,c	;volatile
  1125  001808  EF08  F00C         	goto	u3581
  1126  00180C  EF0A  F00C         	goto	u3580
  1127  001810                     u3581:
  1128  001810  EF0C  F00C         	goto	l4317
  1129  001814                     u3580:
  1130  001814                     
  1131                           ; BSR set to: 0
  1132                           ;main.c: 310:                 saving = Oui;
  1133  001814  0E00               	movlw	0
  1134  001816  6FF9               	movwf	_saving& (0+255),b
  1135  001818                     l4317:
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;main.c: 311:             if (saving == idle) {
  1139  001818  0E02               	movlw	2
  1140  00181A  19F9               	xorwf	_saving& (0+255),w,b
  1141  00181C  A4D8               	btfss	status,2,c
  1142  00181E  EF13  F00C         	goto	u3591
  1143  001822  EF15  F00C         	goto	u3590
  1144  001826                     u3591:
  1145  001826  EF0B  F00D         	goto	l759
  1146  00182A                     u3590:
  1147  00182A                     
  1148                           ; BSR set to: 0
  1149                           ;main.c: 312:                 EtatN = Armed;
  1150  00182A  0E02               	movlw	2
  1151  00182C  6E5A               	movwf	_EtatN^0,c
  1152                           
  1153                           ;main.c: 313:                 saving = Non;
  1154  00182E  0E01               	movlw	1
  1155  001830  6FF9               	movwf	_saving& (0+255),b
  1156                           
  1157                           ;main.c: 314:                 sec5 = Oui;
  1158  001832  0E00               	movlw	0
  1159  001834  6FFC               	movwf	_sec5& (0+255),b
  1160                           
  1161                           ;main.c: 315:                 minute = Oui;
  1162  001836  0E00               	movlw	0
  1163  001838  6FFB               	movwf	_minute& (0+255),b
  1164  00183A                     
  1165                           ; BSR set to: 0
  1166                           ;main.c: 316:                 TMR3_WriteTimer(0);
  1167  00183A  0E00               	movlw	0
  1168  00183C  6E06               	movwf	(TMR3_WriteTimer@timerVal+1)^0,c
  1169  00183E  0E00               	movlw	0
  1170  001840  6E05               	movwf	TMR3_WriteTimer@timerVal^0,c
  1171  001842  ECB8  F015         	call	_TMR3_WriteTimer	;wreg free
  1172  001846  928A               	bcf	138,1,c	;volatile
  1173  001848  EF0B  F00D         	goto	l759
  1174  00184C                     l4325:
  1175                           
  1176                           ; BSR set to: 0
  1177                           ;main.c: 321:             if (lecture() == 1){
  1178  00184C  ECDB  F010         	call	_lecture	;wreg free
  1179  001850  06E8               	decf	wreg,f,c
  1180  001852  A4D8               	btfss	status,2,c
  1181  001854  EF2E  F00C         	goto	u3601
  1182  001858  EF30  F00C         	goto	u3600
  1183  00185C                     u3601:
  1184  00185C  EF34  F00C         	goto	l4329
  1185  001860                     u3600:
  1186  001860                     l4327:
  1187                           
  1188                           ;main.c: 322:                 connexion = Oui;
  1189  001860  0E00               	movlw	0
  1190  001862  6E57               	movwf	_connexion^0,c
  1191                           
  1192                           ;main.c: 323:             }else{
  1193  001864  EF0B  F00D         	goto	l759
  1194  001868                     l4329:
  1195                           
  1196                           ;main.c: 324:                 connexion = Non;
  1197  001868  0E01               	movlw	1
  1198  00186A  6E57               	movwf	_connexion^0,c
  1199  00186C  EF0B  F00D         	goto	l759
  1200  001870                     l744:
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;main.c: 329:             if (!PORTBbits.RB4) {
  1204  001870  B881               	btfsc	129,4,c	;volatile
  1205  001872  EF3D  F00C         	goto	u3611
  1206  001876  EF3F  F00C         	goto	u3610
  1207  00187A                     u3611:
  1208  00187A  EF4D  F00C         	goto	l4333
  1209  00187E                     u3610:
  1210  00187E                     
  1211                           ; BSR set to: 0
  1212                           ;main.c: 330:                 SPZ = 0;
  1213  00187E  0E00               	movlw	0
  1214  001880  6F7E               	movwf	(_SPZ+1)& (0+255),b
  1215  001882  0E00               	movlw	0
  1216  001884  6F7D               	movwf	_SPZ& (0+255),b
  1217                           
  1218                           ;main.c: 331:                 SPX = 0;
  1219  001886  0E00               	movlw	0
  1220  001888  6F82               	movwf	(_SPX+1)& (0+255),b
  1221  00188A  0E00               	movlw	0
  1222  00188C  6F81               	movwf	_SPX& (0+255),b
  1223                           
  1224                           ;main.c: 332:                 SPY = 0;
  1225  00188E  0E00               	movlw	0
  1226  001890  6F80               	movwf	(_SPY+1)& (0+255),b
  1227  001892  0E00               	movlw	0
  1228  001894  6F7F               	movwf	_SPY& (0+255),b
  1229                           
  1230                           ;main.c: 333:                 EtatN = Reception;
  1231  001896  0E00               	movlw	0
  1232  001898  6E5A               	movwf	_EtatN^0,c
  1233  00189A                     l4333:
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;main.c: 335:                 reception_affichage();
  1237  00189A  EC2E  F016         	call	_reception_affichage	;wreg free
  1238  00189E                     
  1239                           ;main.c: 337:                 if (!((PZ < (SPZ + 0x1f))&&(PZ > (SPZ - 0x1f))&&(PX < (SPX
      +                           + 0x1f))&&(PX > (SPX - 0x1f))&&(PY < (SPY + 0x1f))&&(PY > (SPY - 0x1f)))) {
  1240  00189E  0E1F               	movlw	31
  1241  0018A0  0100               	movlb	0	; () banked
  1242  0018A2  257D               	addwf	_SPZ& (0+255),w,b
  1243  0018A4  6FDE               	movwf	??_traitementNormale& (0+255),b
  1244  0018A6  0E00               	movlw	0
  1245  0018A8  217E               	addwfc	(_SPZ+1)& (0+255),w,b
  1246  0018AA  6FDF               	movwf	(??_traitementNormale+1)& (0+255),b
  1247  0018AC  51DE               	movf	??_traitementNormale& (0+255),w,b
  1248  0018AE  5D83               	subwf	_PZ& (0+255),w,b
  1249  0018B0  51DF               	movf	(??_traitementNormale+1)& (0+255),w,b
  1250  0018B2  5984               	subwfb	(_PZ+1)& (0+255),w,b
  1251  0018B4  B0D8               	btfsc	status,0,c
  1252  0018B6  EF5F  F00C         	goto	u3621
  1253  0018BA  EF61  F00C         	goto	u3620
  1254  0018BE                     u3621:
  1255  0018BE  EFC8  F00C         	goto	l4347
  1256  0018C2                     u3620:
  1257  0018C2                     
  1258                           ; BSR set to: 0
  1259  0018C2  0EE1               	movlw	225
  1260  0018C4  6FDE               	movwf	??_traitementNormale& (0+255),b
  1261  0018C6  0EFF               	movlw	255
  1262  0018C8  6FDF               	movwf	(??_traitementNormale+1)& (0+255),b
  1263  0018CA  C07D  F0E0         	movff	_SPZ,??_traitementNormale+2
  1264  0018CE  C07E  F0E1         	movff	_SPZ+1,??_traitementNormale+3
  1265  0018D2  51DE               	movf	??_traitementNormale& (0+255),w,b
  1266  0018D4  27E0               	addwf	(??_traitementNormale+2)& (0+255),f,b
  1267  0018D6  51DF               	movf	(??_traitementNormale+1)& (0+255),w,b
  1268  0018D8  23E1               	addwfc	(??_traitementNormale+3)& (0+255),f,b
  1269  0018DA  5183               	movf	_PZ& (0+255),w,b
  1270  0018DC  5DE0               	subwf	(??_traitementNormale+2)& (0+255),w,b
  1271  0018DE  5184               	movf	(_PZ+1)& (0+255),w,b
  1272  0018E0  59E1               	subwfb	(??_traitementNormale+3)& (0+255),w,b
  1273  0018E2  B0D8               	btfsc	status,0,c
  1274  0018E4  EF76  F00C         	goto	u3631
  1275  0018E8  EF78  F00C         	goto	u3630
  1276  0018EC                     u3631:
  1277  0018EC  EFC8  F00C         	goto	l4347
  1278  0018F0                     u3630:
  1279  0018F0                     
  1280                           ; BSR set to: 0
  1281  0018F0  0E1F               	movlw	31
  1282  0018F2  2581               	addwf	_SPX& (0+255),w,b
  1283  0018F4  6FDE               	movwf	??_traitementNormale& (0+255),b
  1284  0018F6  0E00               	movlw	0
  1285  0018F8  2182               	addwfc	(_SPX+1)& (0+255),w,b
  1286  0018FA  6FDF               	movwf	(??_traitementNormale+1)& (0+255),b
  1287  0018FC  51DE               	movf	??_traitementNormale& (0+255),w,b
  1288  0018FE  5D87               	subwf	_PX& (0+255),w,b
  1289  001900  51DF               	movf	(??_traitementNormale+1)& (0+255),w,b
  1290  001902  5988               	subwfb	(_PX+1)& (0+255),w,b
  1291  001904  B0D8               	btfsc	status,0,c
  1292  001906  EF87  F00C         	goto	u3641
  1293  00190A  EF89  F00C         	goto	u3640
  1294  00190E                     u3641:
  1295  00190E  EFC8  F00C         	goto	l4347
  1296  001912                     u3640:
  1297  001912                     
  1298                           ; BSR set to: 0
  1299  001912  0EE1               	movlw	225
  1300  001914  6FDE               	movwf	??_traitementNormale& (0+255),b
  1301  001916  0EFF               	movlw	255
  1302  001918  6FDF               	movwf	(??_traitementNormale+1)& (0+255),b
  1303  00191A  C081  F0E0         	movff	_SPX,??_traitementNormale+2
  1304  00191E  C082  F0E1         	movff	_SPX+1,??_traitementNormale+3
  1305  001922  51DE               	movf	??_traitementNormale& (0+255),w,b
  1306  001924  27E0               	addwf	(??_traitementNormale+2)& (0+255),f,b
  1307  001926  51DF               	movf	(??_traitementNormale+1)& (0+255),w,b
  1308  001928  23E1               	addwfc	(??_traitementNormale+3)& (0+255),f,b
  1309  00192A  5187               	movf	_PX& (0+255),w,b
  1310  00192C  5DE0               	subwf	(??_traitementNormale+2)& (0+255),w,b
  1311  00192E  5188               	movf	(_PX+1)& (0+255),w,b
  1312  001930  59E1               	subwfb	(??_traitementNormale+3)& (0+255),w,b
  1313  001932  B0D8               	btfsc	status,0,c
  1314  001934  EF9E  F00C         	goto	u3651
  1315  001938  EFA0  F00C         	goto	u3650
  1316  00193C                     u3651:
  1317  00193C  EFC8  F00C         	goto	l4347
  1318  001940                     u3650:
  1319  001940                     
  1320                           ; BSR set to: 0
  1321  001940  0E1F               	movlw	31
  1322  001942  257F               	addwf	_SPY& (0+255),w,b
  1323  001944  6FDE               	movwf	??_traitementNormale& (0+255),b
  1324  001946  0E00               	movlw	0
  1325  001948  2180               	addwfc	(_SPY+1)& (0+255),w,b
  1326  00194A  6FDF               	movwf	(??_traitementNormale+1)& (0+255),b
  1327  00194C  51DE               	movf	??_traitementNormale& (0+255),w,b
  1328  00194E  5D85               	subwf	_PY& (0+255),w,b
  1329  001950  51DF               	movf	(??_traitementNormale+1)& (0+255),w,b
  1330  001952  5986               	subwfb	(_PY+1)& (0+255),w,b
  1331  001954  B0D8               	btfsc	status,0,c
  1332  001956  EFAF  F00C         	goto	u3661
  1333  00195A  EFB1  F00C         	goto	u3660
  1334  00195E                     u3661:
  1335  00195E  EFC8  F00C         	goto	l4347
  1336  001962                     u3660:
  1337  001962                     
  1338                           ; BSR set to: 0
  1339  001962  0EE1               	movlw	225
  1340  001964  6FDE               	movwf	??_traitementNormale& (0+255),b
  1341  001966  0EFF               	movlw	255
  1342  001968  6FDF               	movwf	(??_traitementNormale+1)& (0+255),b
  1343  00196A  C07F  F0E0         	movff	_SPY,??_traitementNormale+2
  1344  00196E  C080  F0E1         	movff	_SPY+1,??_traitementNormale+3
  1345  001972  51DE               	movf	??_traitementNormale& (0+255),w,b
  1346  001974  27E0               	addwf	(??_traitementNormale+2)& (0+255),f,b
  1347  001976  51DF               	movf	(??_traitementNormale+1)& (0+255),w,b
  1348  001978  23E1               	addwfc	(??_traitementNormale+3)& (0+255),f,b
  1349  00197A  5185               	movf	_PY& (0+255),w,b
  1350  00197C  5DE0               	subwf	(??_traitementNormale+2)& (0+255),w,b
  1351  00197E  5186               	movf	(_PY+1)& (0+255),w,b
  1352  001980  59E1               	subwfb	(??_traitementNormale+3)& (0+255),w,b
  1353  001982  A0D8               	btfss	status,0,c
  1354  001984  EFC6  F00C         	goto	u3671
  1355  001988  EFC8  F00C         	goto	u3670
  1356  00198C                     u3671:
  1357  00198C  EF0B  F00D         	goto	l759
  1358  001990                     u3670:
  1359  001990                     l4347:
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;main.c: 338:                     EtatN = Alarme;
  1363  001990  0E04               	movlw	4
  1364  001992  6E5A               	movwf	_EtatN^0,c
  1365  001994                     
  1366                           ; BSR set to: 0
  1367  001994  8A8A               	bsf	138,5,c	;volatile
  1368  001996  EF0B  F00D         	goto	l759
  1369  00199A                     l4351:
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;main.c: 345:             if (lecture() == 1){
  1373  00199A  ECDB  F010         	call	_lecture	;wreg free
  1374  00199E  06E8               	decf	wreg,f,c
  1375  0019A0  A4D8               	btfss	status,2,c
  1376  0019A2  EFD5  F00C         	goto	u3681
  1377  0019A6  EFD7  F00C         	goto	u3680
  1378  0019AA                     u3681:
  1379  0019AA  EF34  F00C         	goto	l4329
  1380  0019AE                     u3680:
  1381  0019AE  EF30  F00C         	goto	l4327
  1382  0019B2                     l754:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;main.c: 352:             if(!PORTBbits.RB4){
  1386  0019B2  B881               	btfsc	129,4,c	;volatile
  1387  0019B4  EFDE  F00C         	goto	u3691
  1388  0019B8  EFE0  F00C         	goto	u3690
  1389  0019BC                     u3691:
  1390  0019BC  EF0B  F00D         	goto	l759
  1391  0019C0                     u3690:
  1392  0019C0                     
  1393                           ; BSR set to: 0
  1394                           ;main.c: 353:                 EtatN = Reception;
  1395  0019C0  0E00               	movlw	0
  1396  0019C2  6E5A               	movwf	_EtatN^0,c
  1397  0019C4                     
  1398                           ; BSR set to: 0
  1399  0019C4  9A8A               	bcf	138,5,c	;volatile
  1400  0019C6  EF0B  F00D         	goto	l759
  1401  0019CA                     l4363:
  1402  0019CA  505A               	movf	_EtatN^0,w,c
  1403  0019CC  0100               	movlb	0	; () banked
  1404  0019CE  6FDE               	movwf	??_traitementNormale& (0+255),b
  1405  0019D0  6BDF               	clrf	(??_traitementNormale+1)& (0+255),b
  1406                           
  1407                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1408                           ; Switch size 1, requested type "simple"
  1409                           ; Number of cases is 1, Range of values is 0 to 0
  1410                           ; switch strategies available:
  1411                           ; Name         Instructions Cycles
  1412                           ; simple_byte            4     3 (average)
  1413                           ;	Chosen strategy is simple_byte
  1414  0019D2  51DF               	movf	(??_traitementNormale+1)& (0+255),w,b
  1415  0019D4  0A00               	xorlw	0	; case 0
  1416  0019D6  B4D8               	btfsc	status,2,c
  1417  0019D8  EFF0  F00C         	goto	l4573
  1418  0019DC  EF0B  F00D         	goto	l759
  1419  0019E0                     l4573:
  1420                           
  1421                           ; BSR set to: 0
  1422                           ; Switch size 1, requested type "simple"
  1423                           ; Number of cases is 6, Range of values is 0 to 5
  1424                           ; switch strategies available:
  1425                           ; Name         Instructions Cycles
  1426                           ; simple_byte           19    10 (average)
  1427                           ;	Chosen strategy is simple_byte
  1428  0019E0  51DE               	movf	??_traitementNormale& (0+255),w,b
  1429  0019E2  0A00               	xorlw	0	; case 0
  1430  0019E4  B4D8               	btfsc	status,2,c
  1431  0019E6  EFF6  F00B         	goto	l4307
  1432  0019EA  0A01               	xorlw	1	; case 1
  1433  0019EC  B4D8               	btfsc	status,2,c
  1434  0019EE  EF26  F00C         	goto	l4325
  1435  0019F2  0A03               	xorlw	3	; case 2
  1436  0019F4  B4D8               	btfsc	status,2,c
  1437  0019F6  EF38  F00C         	goto	l744
  1438  0019FA  0A01               	xorlw	1	; case 3
  1439  0019FC  B4D8               	btfsc	status,2,c
  1440  0019FE  EFCD  F00C         	goto	l4351
  1441  001A02  0A07               	xorlw	7	; case 4
  1442  001A04  B4D8               	btfsc	status,2,c
  1443  001A06  EFD9  F00C         	goto	l754
  1444  001A0A  0A01               	xorlw	1	; case 5
  1445  001A0C  B4D8               	btfsc	status,2,c
  1446  001A0E  EF0B  F00D         	goto	l759
  1447  001A12  EF0B  F00D         	goto	l759
  1448  001A16                     l759:
  1449  001A16  0012               	return		;funcret
  1450  001A18                     __end_of_traitementNormale:
  1451                           	callstack 0
  1452                           
  1453 ;; *************** function _reception_ *****************
  1454 ;; Defined at:
  1455 ;;		line 418 in file "main.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;		None
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;		None
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1473 ;;Total ram usage:        0 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:    7
  1476 ;; This function calls:
  1477 ;;		_lecture
  1478 ;; This function is called by:
  1479 ;;		_traitementNormale
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text2
  1484  002CD2                     __ptext2:
  1485                           	callstack 0
  1486  002CD2                     _reception_:
  1487                           	callstack 22
  1488  002CD2                     
  1489                           ;main.c: 419:     RCSTA1bits.CREN = 1;
  1490  002CD2  88AB               	bsf	171,4,c	;volatile
  1491  002CD4                     l3715:
  1492  002CD4  ECDB  F010         	call	_lecture	;wreg free
  1493  002CD8  0900               	iorlw	0
  1494  002CDA  B4D8               	btfsc	status,2,c
  1495  002CDC  EF72  F016         	goto	u2851
  1496  002CE0  EF74  F016         	goto	u2850
  1497  002CE4                     u2851:
  1498  002CE4  EF6A  F016         	goto	l3715
  1499  002CE8                     u2850:
  1500  002CE8                     
  1501                           ;main.c: 421:     RCSTA1bits.CREN = 0;
  1502  002CE8  98AB               	bcf	171,4,c	;volatile
  1503  002CEA  0012               	return		;funcret
  1504  002CEC                     __end_of_reception_:
  1505                           	callstack 0
  1506                           
  1507 ;; *************** function _TMR3_WriteTimer *****************
  1508 ;; Defined at:
  1509 ;;		line 120 in file "mcc_generated_files/tmr3.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  timerVal        2    4[COMRAM] unsigned short 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;		None
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, status,2
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1523 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1526 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1527 ;;Total ram usage:        2 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; Hardware stack levels required when called:    5
  1530 ;; This function calls:
  1531 ;;		Nothing
  1532 ;; This function is called by:
  1533 ;;		_traitementNormale
  1534 ;;		_TMR3_Reload
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text3
  1539  002B70                     __ptext3:
  1540                           	callstack 0
  1541  002B70                     _TMR3_WriteTimer:
  1542                           	callstack 24
  1543  002B70                     
  1544                           ;mcc_generated_files/tmr3.c: 120: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 121: {;mcc_generated_files/tmr3.c: 122:     if (T3CONbits.nT3SYNC == 1)
  1545  002B70  A4B1               	btfss	177,2,c	;volatile
  1546  002B72  EFBD  F015         	goto	u2781
  1547  002B76  EFBF  F015         	goto	u2780
  1548  002B7A                     u2781:
  1549  002B7A  EFC7  F015         	goto	l3697
  1550  002B7E                     u2780:
  1551  002B7E                     
  1552                           ;mcc_generated_files/tmr3.c: 123:     {;mcc_generated_files/tmr3.c: 125:         T3CONbi
      +                          ts.TMR3ON = 0;
  1553  002B7E  90B1               	bcf	177,0,c	;volatile
  1554  002B80                     
  1555                           ;mcc_generated_files/tmr3.c: 128:         TMR3H = (uint8_t)(timerVal >> 8);
  1556  002B80  5006               	movf	(TMR3_WriteTimer@timerVal+1)^0,w,c
  1557  002B82  6EB3               	movwf	179,c	;volatile
  1558  002B84                     
  1559                           ;mcc_generated_files/tmr3.c: 129:         TMR3L = (uint8_t)timerVal;
  1560  002B84  C005  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
  1561  002B88                     
  1562                           ;mcc_generated_files/tmr3.c: 132:         T3CONbits.TMR3ON =1;
  1563  002B88  80B1               	bsf	177,0,c	;volatile
  1564                           
  1565                           ;mcc_generated_files/tmr3.c: 133:     }
  1566  002B8A  EFCB  F015         	goto	l319
  1567  002B8E                     l3697:
  1568                           
  1569                           ;mcc_generated_files/tmr3.c: 135:     {;mcc_generated_files/tmr3.c: 137:         TMR3H =
      +                           (uint8_t)(timerVal >> 8);
  1570  002B8E  5006               	movf	(TMR3_WriteTimer@timerVal+1)^0,w,c
  1571  002B90  6EB3               	movwf	179,c	;volatile
  1572  002B92                     
  1573                           ;mcc_generated_files/tmr3.c: 138:         TMR3L = (uint8_t)timerVal;
  1574  002B92  C005  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
  1575  002B96                     l319:
  1576  002B96  0012               	return		;funcret
  1577  002B98                     __end_of_TMR3_WriteTimer:
  1578                           	callstack 0
  1579                           
  1580 ;; *************** function _traitementEcran *****************
  1581 ;; Defined at:
  1582 ;;		line 365 in file "main.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1598 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1599 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1600 ;;Total ram usage:        2 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:   16
  1603 ;; This function calls:
  1604 ;;		_LCD_Function
  1605 ;;		_lecture
  1606 ;;		_reception_affichage
  1607 ;; This function is called by:
  1608 ;;		_main
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text4
  1613  001BC8                     __ptext4:
  1614                           	callstack 0
  1615  001BC8                     _traitementEcran:
  1616                           	callstack 14
  1617  001BC8                     
  1618                           ;main.c: 366:     if(!PORTBbits.RB4){
  1619  001BC8  B881               	btfsc	129,4,c	;volatile
  1620  001BCA  EFE9  F00D         	goto	u3441
  1621  001BCE  EFEB  F00D         	goto	u3440
  1622  001BD2                     u3441:
  1623  001BD2  EF97  F00E         	goto	l4299
  1624  001BD6                     u3440:
  1625  001BD6                     
  1626                           ;main.c: 367:         EtatE = rien;
  1627  001BD6  0E03               	movlw	3
  1628  001BD8  6E59               	movwf	_EtatE^0,c
  1629                           
  1630                           ;main.c: 368:         EtatN = Reception;
  1631  001BDA  0E00               	movlw	0
  1632  001BDC  6E5A               	movwf	_EtatN^0,c
  1633                           
  1634                           ;main.c: 369:         LCD_Mode = 0;
  1635  001BDE  0E00               	movlw	0
  1636  001BE0  0100               	movlb	0	; () banked
  1637  001BE2  6FF8               	movwf	_LCD_Mode& (0+255),b
  1638  001BE4                     
  1639                           ; BSR set to: 0
  1640                           ;main.c: 370:         LCD_Function(clear,0,0);
  1641  001BE4  0E00               	movlw	0
  1642  001BE6  6E07               	movwf	LCD_Function@x^0,c
  1643  001BE8  0E00               	movlw	0
  1644  001BEA  6E08               	movwf	LCD_Function@z^0,c
  1645  001BEC  0E00               	movlw	0
  1646  001BEE  EC3C  F010         	call	_LCD_Function
  1647  001BF2                     
  1648                           ;main.c: 371:         LCD_Function(off,0,0);
  1649  001BF2  0E00               	movlw	0
  1650  001BF4  6E07               	movwf	LCD_Function@x^0,c
  1651  001BF6  0E00               	movlw	0
  1652  001BF8  6E08               	movwf	LCD_Function@z^0,c
  1653  001BFA  0E05               	movlw	5
  1654  001BFC  EC3C  F010         	call	_LCD_Function
  1655  001C00  EF97  F00E         	goto	l4299
  1656  001C04                     l4257:
  1657                           
  1658                           ;main.c: 375:             plat = idle;
  1659  001C04  0E02               	movlw	2
  1660  001C06  0100               	movlb	0	; () banked
  1661  001C08  6FFA               	movwf	_plat& (0+255),b
  1662  001C0A                     
  1663                           ; BSR set to: 0
  1664                           ;main.c: 376:             reception_affichage();
  1665  001C0A  EC2E  F016         	call	_reception_affichage	;wreg free
  1666  001C0E                     
  1667                           ;main.c: 377:             if ((PZ == 0x03ff) && (PX >= 0x0200) && (PX <= 0x0210) && (PY 
      +                          >= 0x0200) && (PY <= 0x0210)) {
  1668  001C0E  0100               	movlb	0	; () banked
  1669  001C10  2983               	incf	_PZ& (0+255),w,b
  1670  001C12  E107               	bnz	u3451
  1671  001C14  0E03               	movlw	3
  1672  001C16  1984               	xorwf	(_PZ+1)& (0+255),w,b
  1673  001C18  A4D8               	btfss	status,2,c
  1674  001C1A  EF11  F00E         	goto	u3451
  1675  001C1E  EF13  F00E         	goto	u3450
  1676  001C22                     u3451:
  1677  001C22  EFB4  F00E         	goto	l776
  1678  001C26                     u3450:
  1679  001C26                     
  1680                           ; BSR set to: 0
  1681  001C26  0E02               	movlw	2
  1682  001C28  5D88               	subwf	(_PX+1)& (0+255),w,b
  1683  001C2A  A0D8               	btfss	status,0,c
  1684  001C2C  EF1A  F00E         	goto	u3461
  1685  001C30  EF1C  F00E         	goto	u3460
  1686  001C34                     u3461:
  1687  001C34  EFB4  F00E         	goto	l776
  1688  001C38                     u3460:
  1689  001C38                     
  1690                           ; BSR set to: 0
  1691  001C38  0E11               	movlw	17
  1692  001C3A  5D87               	subwf	_PX& (0+255),w,b
  1693  001C3C  0E02               	movlw	2
  1694  001C3E  5988               	subwfb	(_PX+1)& (0+255),w,b
  1695  001C40  B0D8               	btfsc	status,0,c
  1696  001C42  EF25  F00E         	goto	u3471
  1697  001C46  EF27  F00E         	goto	u3470
  1698  001C4A                     u3471:
  1699  001C4A  EFB4  F00E         	goto	l776
  1700  001C4E                     u3470:
  1701  001C4E                     
  1702                           ; BSR set to: 0
  1703  001C4E  0E02               	movlw	2
  1704  001C50  5D86               	subwf	(_PY+1)& (0+255),w,b
  1705  001C52  A0D8               	btfss	status,0,c
  1706  001C54  EF2E  F00E         	goto	u3481
  1707  001C58  EF30  F00E         	goto	u3480
  1708  001C5C                     u3481:
  1709  001C5C  EFB4  F00E         	goto	l776
  1710  001C60                     u3480:
  1711  001C60                     
  1712                           ; BSR set to: 0
  1713  001C60  0E11               	movlw	17
  1714  001C62  5D85               	subwf	_PY& (0+255),w,b
  1715  001C64  0E02               	movlw	2
  1716  001C66  5986               	subwfb	(_PY+1)& (0+255),w,b
  1717  001C68  B0D8               	btfsc	status,0,c
  1718  001C6A  EF39  F00E         	goto	u3491
  1719  001C6E  EF3B  F00E         	goto	u3490
  1720  001C72                     u3491:
  1721  001C72  EFB4  F00E         	goto	l776
  1722  001C76                     u3490:
  1723  001C76                     
  1724                           ; BSR set to: 0
  1725                           ;main.c: 378:                 EtatE = Plat;
  1726  001C76  0E02               	movlw	2
  1727  001C78  6E59               	movwf	_EtatE^0,c
  1728  001C7A  EFB4  F00E         	goto	l776
  1729  001C7E                     l4273:
  1730                           
  1731                           ;main.c: 382:             if (lecture() == 1){
  1732  001C7E  ECDB  F010         	call	_lecture	;wreg free
  1733  001C82  06E8               	decf	wreg,f,c
  1734  001C84  A4D8               	btfss	status,2,c
  1735  001C86  EF47  F00E         	goto	u3501
  1736  001C8A  EF49  F00E         	goto	u3500
  1737  001C8E                     u3501:
  1738  001C8E  EF4D  F00E         	goto	l4277
  1739  001C92                     u3500:
  1740  001C92                     
  1741                           ;main.c: 383:                 connexion = Oui;
  1742  001C92  0E00               	movlw	0
  1743  001C94  6E57               	movwf	_connexion^0,c
  1744                           
  1745                           ;main.c: 384:             }else{
  1746  001C96  EFB4  F00E         	goto	l776
  1747  001C9A                     l4277:
  1748                           
  1749                           ;main.c: 385:                 connexion = Non;
  1750  001C9A  0E01               	movlw	1
  1751  001C9C  6E57               	movwf	_connexion^0,c
  1752  001C9E  EFB4  F00E         	goto	l776
  1753  001CA2                     l4279:
  1754                           
  1755                           ;main.c: 389:             if (plat == idle) {
  1756  001CA2  0E02               	movlw	2
  1757  001CA4  0100               	movlb	0	; () banked
  1758  001CA6  19FA               	xorwf	_plat& (0+255),w,b
  1759  001CA8  A4D8               	btfss	status,2,c
  1760  001CAA  EF59  F00E         	goto	u3511
  1761  001CAE  EF5B  F00E         	goto	u3510
  1762  001CB2                     u3511:
  1763  001CB2  EF5D  F00E         	goto	l4283
  1764  001CB6                     u3510:
  1765  001CB6                     
  1766                           ; BSR set to: 0
  1767                           ;main.c: 390:                 plat = Oui;
  1768  001CB6  0E00               	movlw	0
  1769  001CB8  6FFA               	movwf	_plat& (0+255),b
  1770  001CBA                     l4283:
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;main.c: 392:             reception_affichage();
  1774  001CBA  EC2E  F016         	call	_reception_affichage	;wreg free
  1775  001CBE                     
  1776                           ;main.c: 393:             if (!((PZ == 0x03ff) && (PX >= 0x0200) && (PX <= 0x0210) && (P
      +                          Y >= 0x0200) && (PY <= 0x0210))) {
  1777  001CBE  0100               	movlb	0	; () banked
  1778  001CC0  2983               	incf	_PZ& (0+255),w,b
  1779  001CC2  E107               	bnz	u3521
  1780  001CC4  0E03               	movlw	3
  1781  001CC6  1984               	xorwf	(_PZ+1)& (0+255),w,b
  1782  001CC8  A4D8               	btfss	status,2,c
  1783  001CCA  EF69  F00E         	goto	u3521
  1784  001CCE  EF6B  F00E         	goto	u3520
  1785  001CD2                     u3521:
  1786  001CD2  EF93  F00E         	goto	l4295
  1787  001CD6                     u3520:
  1788  001CD6                     
  1789                           ; BSR set to: 0
  1790  001CD6  0E02               	movlw	2
  1791  001CD8  5D88               	subwf	(_PX+1)& (0+255),w,b
  1792  001CDA  A0D8               	btfss	status,0,c
  1793  001CDC  EF72  F00E         	goto	u3531
  1794  001CE0  EF74  F00E         	goto	u3530
  1795  001CE4                     u3531:
  1796  001CE4  EF93  F00E         	goto	l4295
  1797  001CE8                     u3530:
  1798  001CE8                     
  1799                           ; BSR set to: 0
  1800  001CE8  0E11               	movlw	17
  1801  001CEA  5D87               	subwf	_PX& (0+255),w,b
  1802  001CEC  0E02               	movlw	2
  1803  001CEE  5988               	subwfb	(_PX+1)& (0+255),w,b
  1804  001CF0  B0D8               	btfsc	status,0,c
  1805  001CF2  EF7D  F00E         	goto	u3541
  1806  001CF6  EF7F  F00E         	goto	u3540
  1807  001CFA                     u3541:
  1808  001CFA  EF93  F00E         	goto	l4295
  1809  001CFE                     u3540:
  1810  001CFE                     
  1811                           ; BSR set to: 0
  1812  001CFE  0E02               	movlw	2
  1813  001D00  5D86               	subwf	(_PY+1)& (0+255),w,b
  1814  001D02  A0D8               	btfss	status,0,c
  1815  001D04  EF86  F00E         	goto	u3551
  1816  001D08  EF88  F00E         	goto	u3550
  1817  001D0C                     u3551:
  1818  001D0C  EF93  F00E         	goto	l4295
  1819  001D10                     u3550:
  1820  001D10                     
  1821                           ; BSR set to: 0
  1822  001D10  0E11               	movlw	17
  1823  001D12  5D85               	subwf	_PY& (0+255),w,b
  1824  001D14  0E02               	movlw	2
  1825  001D16  5986               	subwfb	(_PY+1)& (0+255),w,b
  1826  001D18  A0D8               	btfss	status,0,c
  1827  001D1A  EF91  F00E         	goto	u3561
  1828  001D1E  EF93  F00E         	goto	u3560
  1829  001D22                     u3561:
  1830  001D22  EFB4  F00E         	goto	l776
  1831  001D26                     u3560:
  1832  001D26                     l4295:
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;main.c: 394:                 EtatE = ReceptionE;
  1836  001D26  0E00               	movlw	0
  1837  001D28  6E59               	movwf	_EtatE^0,c
  1838  001D2A  EFB4  F00E         	goto	l776
  1839  001D2E                     l4299:
  1840  001D2E  5059               	movf	_EtatE^0,w,c
  1841  001D30  6E55               	movwf	??_traitementEcran^0,c
  1842  001D32  6A56               	clrf	(??_traitementEcran+1)^0,c
  1843                           
  1844                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1845                           ; Switch size 1, requested type "simple"
  1846                           ; Number of cases is 1, Range of values is 0 to 0
  1847                           ; switch strategies available:
  1848                           ; Name         Instructions Cycles
  1849                           ; simple_byte            4     3 (average)
  1850                           ;	Chosen strategy is simple_byte
  1851  001D34  5056               	movf	(??_traitementEcran+1)^0,w,c
  1852  001D36  0A00               	xorlw	0	; case 0
  1853  001D38  B4D8               	btfsc	status,2,c
  1854  001D3A  EFA1  F00E         	goto	l4575
  1855  001D3E  EFB4  F00E         	goto	l776
  1856  001D42                     l4575:
  1857                           
  1858                           ; Switch size 1, requested type "simple"
  1859                           ; Number of cases is 4, Range of values is 0 to 3
  1860                           ; switch strategies available:
  1861                           ; Name         Instructions Cycles
  1862                           ; simple_byte           13     7 (average)
  1863                           ;	Chosen strategy is simple_byte
  1864  001D42  5055               	movf	??_traitementEcran^0,w,c
  1865  001D44  0A00               	xorlw	0	; case 0
  1866  001D46  B4D8               	btfsc	status,2,c
  1867  001D48  EF02  F00E         	goto	l4257
  1868  001D4C  0A01               	xorlw	1	; case 1
  1869  001D4E  B4D8               	btfsc	status,2,c
  1870  001D50  EF3F  F00E         	goto	l4273
  1871  001D54  0A03               	xorlw	3	; case 2
  1872  001D56  B4D8               	btfsc	status,2,c
  1873  001D58  EF51  F00E         	goto	l4279
  1874  001D5C  0A01               	xorlw	1	; case 3
  1875  001D5E  B4D8               	btfsc	status,2,c
  1876  001D60  EFB4  F00E         	goto	l776
  1877  001D64  EFB4  F00E         	goto	l776
  1878  001D68                     l776:
  1879  001D68  0012               	return		;funcret
  1880  001D6A                     __end_of_traitementEcran:
  1881                           	callstack 0
  1882                           
  1883 ;; *************** function _reception_affichage *****************
  1884 ;; Defined at:
  1885 ;;		line 409 in file "main.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1903 ;;Total ram usage:        0 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; Hardware stack levels required when called:   15
  1906 ;; This function calls:
  1907 ;;		_affiche
  1908 ;;		_lecture
  1909 ;; This function is called by:
  1910 ;;		_traitementNormale
  1911 ;;		_traitementEcran
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text5
  1916  002C5C                     __ptext5:
  1917                           	callstack 0
  1918  002C5C                     _reception_affichage:
  1919                           	callstack 14
  1920  002C5C                     
  1921                           ;main.c: 410:     RCSTA1bits.CREN = 1;
  1922  002C5C  88AB               	bsf	171,4,c	;volatile
  1923  002C5E                     l4245:
  1924  002C5E  ECDB  F010         	call	_lecture	;wreg free
  1925  002C62  0900               	iorlw	0
  1926  002C64  B4D8               	btfsc	status,2,c
  1927  002C66  EF37  F016         	goto	u3431
  1928  002C6A  EF39  F016         	goto	u3430
  1929  002C6E                     u3431:
  1930  002C6E  EF2F  F016         	goto	l4245
  1931  002C72                     u3430:
  1932  002C72                     
  1933                           ;main.c: 412:     RCSTA1bits.CREN = 0;
  1934  002C72  98AB               	bcf	171,4,c	;volatile
  1935  002C74                     
  1936                           ;main.c: 413:     affiche();
  1937  002C74  ECC3  F011         	call	_affiche	;wreg free
  1938  002C78  0012               	return		;funcret
  1939  002C7A                     __end_of_reception_affichage:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function _lecture *****************
  1943 ;; Defined at:
  1944 ;;		line 426 in file "main.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      unsigned char 
  1951 ;; Registers used:
  1952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1960 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1961 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1962 ;;Total ram usage:        1 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; Hardware stack levels required when called:    6
  1965 ;; This function calls:
  1966 ;;		_EUSART1_Read
  1967 ;; This function is called by:
  1968 ;;		_traitementNormale
  1969 ;;		_traitementEcran
  1970 ;;		_reception_affichage
  1971 ;;		_reception_
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text6
  1976  0021B6                     __ptext6:
  1977                           	callstack 0
  1978  0021B6                     _lecture:
  1979                           	callstack 22
  1980  0021B6                     
  1981                           ;main.c: 428:     if (PIR1bits.RC1IF == 1)
  1982  0021B6  AA9E               	btfss	158,5,c	;volatile
  1983  0021B8  EFE0  F010         	goto	u2681
  1984  0021BC  EFE2  F010         	goto	u2680
  1985  0021C0                     u2681:
  1986  0021C0  EFE9  F010         	goto	l3545
  1987  0021C4                     u2680:
  1988  0021C4                     
  1989                           ;main.c: 429:         Hx = EUSART1_Read();
  1990  0021C4  EC8E  F015         	call	_EUSART1_Read	;wreg free
  1991  0021C8  6E05               	movwf	??_lecture^0,c
  1992  0021CA  5005               	movf	??_lecture^0,w,c
  1993  0021CC  0100               	movlb	0	; () banked
  1994  0021CE  6F91               	movwf	_Hx& (0+255),b
  1995  0021D0  6B92               	clrf	(_Hx+1)& (0+255),b
  1996  0021D2                     l3545:
  1997                           
  1998                           ;main.c: 430:     if (Hx == 0x7E) {
  1999  0021D2  0E7E               	movlw	126
  2000  0021D4  0100               	movlb	0	; () banked
  2001  0021D6  1991               	xorwf	_Hx& (0+255),w,b
  2002  0021D8  1192               	iorwf	(_Hx+1)& (0+255),w,b
  2003  0021DA  A4D8               	btfss	status,2,c
  2004  0021DC  EFF2  F010         	goto	u2691
  2005  0021E0  EFF4  F010         	goto	u2690
  2006  0021E4                     u2691:
  2007  0021E4  EF5E  F011         	goto	l3581
  2008  0021E8                     u2690:
  2009  0021E8                     
  2010                           ; BSR set to: 0
  2011                           ;main.c: 431:         for (i = 0; i < 19; i++) {
  2012  0021E8  0E00               	movlw	0
  2013  0021EA  6F94               	movwf	(_i+1)& (0+255),b
  2014  0021EC  0E00               	movlw	0
  2015  0021EE  6F93               	movwf	_i& (0+255),b
  2016  0021F0                     l3553:
  2017                           
  2018                           ; BSR set to: 0
  2019                           ;main.c: 432:             trame[i] = EUSART1_Read();
  2020  0021F0  0E60               	movlw	low _trame
  2021  0021F2  2593               	addwf	_i& (0+255),w,b
  2022  0021F4  6ED9               	movwf	fsr2l,c
  2023  0021F6  0E00               	movlw	high _trame
  2024  0021F8  2194               	addwfc	(_i+1)& (0+255),w,b
  2025  0021FA  6EDA               	movwf	fsr2h,c
  2026  0021FC  EC8E  F015         	call	_EUSART1_Read	;wreg free
  2027  002200  6EDF               	movwf	indf2,c
  2028  002202                     
  2029                           ;main.c: 433:         }
  2030  002202  0100               	movlb	0	; () banked
  2031  002204  4B93               	infsnz	_i& (0+255),f,b
  2032  002206  2B94               	incf	(_i+1)& (0+255),f,b
  2033  002208                     
  2034                           ; BSR set to: 0
  2035  002208  BF94               	btfsc	(_i+1)& (0+255),7,b
  2036  00220A  EF10  F011         	goto	u2701
  2037  00220E  5194               	movf	(_i+1)& (0+255),w,b
  2038  002210  E109               	bnz	u2700
  2039  002212  0E13               	movlw	19
  2040  002214  5D93               	subwf	_i& (0+255),w,b
  2041  002216  A0D8               	btfss	status,0,c
  2042  002218  EF10  F011         	goto	u2701
  2043  00221C  EF12  F011         	goto	u2700
  2044  002220                     u2701:
  2045  002220  EFF8  F010         	goto	l3553
  2046  002224                     u2700:
  2047  002224                     
  2048                           ; BSR set to: 0
  2049                           ;main.c: 434:         t1 = trame[12] << 8;
  2050  002224  516C               	movf	(_trame+12)& (0+255),w,b
  2051  002226  6F8E               	movwf	(_t1+1)& (0+255),b
  2052  002228  6B8D               	clrf	_t1& (0+255),b
  2053                           
  2054                           ;main.c: 435:         t2 = trame[14] << 8;
  2055  00222A  516E               	movf	(_trame+14)& (0+255),w,b
  2056  00222C  6F8C               	movwf	(_t2+1)& (0+255),b
  2057  00222E  6B8B               	clrf	_t2& (0+255),b
  2058                           
  2059                           ;main.c: 436:         t3 = trame[16] << 8;
  2060  002230  5170               	movf	(_trame+16)& (0+255),w,b
  2061  002232  6F8A               	movwf	(_t3+1)& (0+255),b
  2062  002234  6B89               	clrf	_t3& (0+255),b
  2063  002236                     
  2064                           ; BSR set to: 0
  2065                           ;main.c: 438:         if (saving == Non) {
  2066  002236  05F9               	decf	_saving& (0+255),w,b
  2067  002238  A4D8               	btfss	status,2,c
  2068  00223A  EF21  F011         	goto	u2711
  2069  00223E  EF23  F011         	goto	u2710
  2070  002242                     u2711:
  2071  002242  EF37  F011         	goto	l3565
  2072  002246                     u2710:
  2073  002246                     
  2074                           ; BSR set to: 0
  2075                           ;main.c: 439:             PX = t1 + trame[13];
  2076  002246  516D               	movf	(_trame+13)& (0+255),w,b
  2077  002248  258D               	addwf	_t1& (0+255),w,b
  2078  00224A  6F87               	movwf	_PX& (0+255),b
  2079  00224C  0E00               	movlw	0
  2080  00224E  218E               	addwfc	(_t1+1)& (0+255),w,b
  2081  002250  6F88               	movwf	(_PX+1)& (0+255),b
  2082                           
  2083                           ;main.c: 440:             PY = t2 + trame[15];
  2084  002252  516F               	movf	(_trame+15)& (0+255),w,b
  2085  002254  258B               	addwf	_t2& (0+255),w,b
  2086  002256  6F85               	movwf	_PY& (0+255),b
  2087  002258  0E00               	movlw	0
  2088  00225A  218C               	addwfc	(_t2+1)& (0+255),w,b
  2089  00225C  6F86               	movwf	(_PY+1)& (0+255),b
  2090                           
  2091                           ;main.c: 441:             PZ = t3 + trame[17];
  2092  00225E  5171               	movf	(_trame+17)& (0+255),w,b
  2093  002260  2589               	addwf	_t3& (0+255),w,b
  2094  002262  6F83               	movwf	_PZ& (0+255),b
  2095  002264  0E00               	movlw	0
  2096  002266  218A               	addwfc	(_t3+1)& (0+255),w,b
  2097  002268  6F84               	movwf	(_PZ+1)& (0+255),b
  2098                           
  2099                           ;main.c: 442:         } else if (saving == Oui) {
  2100  00226A  EF53  F011         	goto	l3571
  2101  00226E                     l3565:
  2102                           
  2103                           ; BSR set to: 0
  2104  00226E  51F9               	movf	_saving& (0+255),w,b
  2105  002270  A4D8               	btfss	status,2,c
  2106  002272  EF3D  F011         	goto	u2721
  2107  002276  EF3F  F011         	goto	u2720
  2108  00227A                     u2721:
  2109  00227A  EF53  F011         	goto	l3571
  2110  00227E                     u2720:
  2111  00227E                     
  2112                           ; BSR set to: 0
  2113                           ;main.c: 443:             SPX = t1 + trame[13];
  2114  00227E  516D               	movf	(_trame+13)& (0+255),w,b
  2115  002280  258D               	addwf	_t1& (0+255),w,b
  2116  002282  6F81               	movwf	_SPX& (0+255),b
  2117  002284  0E00               	movlw	0
  2118  002286  218E               	addwfc	(_t1+1)& (0+255),w,b
  2119  002288  6F82               	movwf	(_SPX+1)& (0+255),b
  2120                           
  2121                           ;main.c: 444:             SPY = t2 + trame[15];
  2122  00228A  516F               	movf	(_trame+15)& (0+255),w,b
  2123  00228C  258B               	addwf	_t2& (0+255),w,b
  2124  00228E  6F7F               	movwf	_SPY& (0+255),b
  2125  002290  0E00               	movlw	0
  2126  002292  218C               	addwfc	(_t2+1)& (0+255),w,b
  2127  002294  6F80               	movwf	(_SPY+1)& (0+255),b
  2128                           
  2129                           ;main.c: 445:             SPZ = t3 + trame[17];
  2130  002296  5171               	movf	(_trame+17)& (0+255),w,b
  2131  002298  2589               	addwf	_t3& (0+255),w,b
  2132  00229A  6F7D               	movwf	_SPZ& (0+255),b
  2133  00229C  0E00               	movlw	0
  2134  00229E  218A               	addwfc	(_t3+1)& (0+255),w,b
  2135  0022A0  6F7E               	movwf	(_SPZ+1)& (0+255),b
  2136  0022A2                     
  2137                           ; BSR set to: 0
  2138                           ;main.c: 446:             saving = idle;
  2139  0022A2  0E02               	movlw	2
  2140  0022A4  6FF9               	movwf	_saving& (0+255),b
  2141  0022A6                     l3571:
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;main.c: 448:         c = 0;
  2145  0022A6  0E00               	movlw	0
  2146  0022A8  6F7C               	movwf	(_c+1)& (0+255),b
  2147  0022AA  0E00               	movlw	0
  2148  0022AC  6F7B               	movwf	_c& (0+255),b
  2149  0022AE                     
  2150                           ; BSR set to: 0
  2151                           ;main.c: 449:         Hx = 0;
  2152  0022AE  0E00               	movlw	0
  2153  0022B0  6F92               	movwf	(_Hx+1)& (0+255),b
  2154  0022B2  0E00               	movlw	0
  2155  0022B4  6F91               	movwf	_Hx& (0+255),b
  2156  0022B6                     
  2157                           ; BSR set to: 0
  2158                           ;main.c: 451:         return 1;
  2159  0022B6  0E01               	movlw	1
  2160  0022B8  EF5F  F011         	goto	l798
  2161  0022BC                     l3581:
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;main.c: 454:         return 0;
  2165  0022BC  0E00               	movlw	0
  2166  0022BE                     l798:
  2167                           
  2168                           ; BSR set to: 0
  2169  0022BE  0012               	return		;funcret
  2170  0022C0                     __end_of_lecture:
  2171                           	callstack 0
  2172                           
  2173 ;; *************** function _EUSART1_Read *****************
  2174 ;; Defined at:
  2175 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      unsigned char 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;Total ram usage:        0 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    5
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_lecture
  2200 ;;		_getch
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text7
  2205  002B1C                     __ptext7:
  2206                           	callstack 0
  2207  002B1C                     _EUSART1_Read:
  2208                           	callstack 22
  2209  002B1C                     l88:
  2210                           
  2211                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  2212  002B1C  AA9E               	btfss	158,5,c	;volatile
  2213  002B1E  EF93  F015         	goto	u2321
  2214  002B22  EF95  F015         	goto	u2320
  2215  002B26                     u2321:
  2216  002B26  EF8E  F015         	goto	l88
  2217  002B2A                     u2320:
  2218  002B2A                     
  2219                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  2220  002B2A  0E00               	movlw	0
  2221  002B2C  0100               	movlb	0	; () banked
  2222  002B2E  6FA0               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  2223  002B30                     
  2224                           ; BSR set to: 0
  2225                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  2226  002B30  A2AB               	btfss	171,1,c	;volatile
  2227  002B32  EF9D  F015         	goto	u2331
  2228  002B36  EF9F  F015         	goto	u2330
  2229  002B3A                     u2331:
  2230  002B3A  EFA1  F015         	goto	l3329
  2231  002B3E                     u2330:
  2232  002B3E                     
  2233                           ; BSR set to: 0
  2234                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  2235  002B3E  98AB               	bcf	171,4,c	;volatile
  2236                           
  2237                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  2238  002B40  88AB               	bsf	171,4,c	;volatile
  2239  002B42                     l3329:
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  2243  002B42  50AE               	movf	174,w,c	;volatile
  2244  002B44                     
  2245                           ; BSR set to: 0
  2246  002B44  0012               	return		;funcret
  2247  002B46                     __end_of_EUSART1_Read:
  2248                           	callstack 0
  2249                           
  2250 ;; *************** function _affiche *****************
  2251 ;; Defined at:
  2252 ;;		line 472 in file "main.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2270 ;;Total ram usage:        0 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:   14
  2273 ;; This function calls:
  2274 ;;		_LCD_Function
  2275 ;;		_printf
  2276 ;; This function is called by:
  2277 ;;		_reception_affichage
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text8
  2282  002386                     __ptext8:
  2283                           	callstack 0
  2284  002386                     _affiche:
  2285                           	callstack 14
  2286  002386                     
  2287                           ;main.c: 473:     LCD_Function(Initialise, 0, 0);
  2288  002386  0E00               	movlw	0
  2289  002388  6E07               	movwf	LCD_Function@x^0,c
  2290  00238A  0E00               	movlw	0
  2291  00238C  6E08               	movwf	LCD_Function@z^0,c
  2292  00238E  0E08               	movlw	8
  2293  002390  EC3C  F010         	call	_LCD_Function
  2294  002394                     
  2295                           ;main.c: 474:     printf("      POSITIONS     ");
  2296  002394  0E01               	movlw	low STR_1
  2297  002396  0100               	movlb	0	; () banked
  2298  002398  6FD4               	movwf	printf@fmt& (0+255),b
  2299  00239A  0E0F               	movlw	high STR_1
  2300  00239C  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  2301  00239E  ECCC  F015         	call	_printf	;wreg free
  2302  0023A2                     
  2303                           ;main.c: 476:     LCD_Function(curseur, 1, 0);
  2304  0023A2  0E01               	movlw	1
  2305  0023A4  6E07               	movwf	LCD_Function@x^0,c
  2306  0023A6  0E00               	movlw	0
  2307  0023A8  6E08               	movwf	LCD_Function@z^0,c
  2308  0023AA  0E01               	movlw	1
  2309  0023AC  EC3C  F010         	call	_LCD_Function
  2310                           
  2311                           ;main.c: 477:     printf("X = %02X %02X", trame[12], trame[13]);
  2312  0023B0  0E16               	movlw	low STR_2
  2313  0023B2  0100               	movlb	0	; () banked
  2314  0023B4  6FD4               	movwf	printf@fmt& (0+255),b
  2315  0023B6  0E0F               	movlw	high STR_2
  2316  0023B8  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  2317  0023BA  C06C  F0D6         	movff	_trame+12,?_printf+2
  2318  0023BE  6BD7               	clrf	(?_printf+3)& (0+255),b
  2319  0023C0  C06D  F0D8         	movff	_trame+13,?_printf+4
  2320  0023C4  6BD9               	clrf	(?_printf+5)& (0+255),b
  2321  0023C6  ECCC  F015         	call	_printf	;wreg free
  2322  0023CA                     
  2323                           ;main.c: 479:     LCD_Function(curseur, 2, 0);
  2324  0023CA  0E02               	movlw	2
  2325  0023CC  6E07               	movwf	LCD_Function@x^0,c
  2326  0023CE  0E00               	movlw	0
  2327  0023D0  6E08               	movwf	LCD_Function@z^0,c
  2328  0023D2  0E01               	movlw	1
  2329  0023D4  EC3C  F010         	call	_LCD_Function
  2330  0023D8                     
  2331                           ;main.c: 480:     printf("Y = %02X %02X", trame[14], trame[15]);
  2332  0023D8  0E24               	movlw	low STR_3
  2333  0023DA  0100               	movlb	0	; () banked
  2334  0023DC  6FD4               	movwf	printf@fmt& (0+255),b
  2335  0023DE  0E0F               	movlw	high STR_3
  2336  0023E0  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  2337  0023E2  C06E  F0D6         	movff	_trame+14,?_printf+2
  2338  0023E6  6BD7               	clrf	(?_printf+3)& (0+255),b
  2339  0023E8  C06F  F0D8         	movff	_trame+15,?_printf+4
  2340  0023EC  6BD9               	clrf	(?_printf+5)& (0+255),b
  2341  0023EE  ECCC  F015         	call	_printf	;wreg free
  2342  0023F2                     
  2343                           ;main.c: 481:     if (EtatE == Plat) printf("  _-Plat-_");
  2344  0023F2  0E02               	movlw	2
  2345  0023F4  1859               	xorwf	_EtatE^0,w,c
  2346  0023F6  A4D8               	btfss	status,2,c
  2347  0023F8  EF00  F012         	goto	u3421
  2348  0023FC  EF02  F012         	goto	u3420
  2349  002400                     u3421:
  2350  002400  EF09  F012         	goto	l4239
  2351  002404                     u3420:
  2352  002404  0E40               	movlw	low STR_4
  2353  002406  0100               	movlb	0	; () banked
  2354  002408  6FD4               	movwf	printf@fmt& (0+255),b
  2355  00240A  0E0F               	movlw	high STR_4
  2356  00240C  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  2357  00240E  ECCC  F015         	call	_printf	;wreg free
  2358  002412                     l4239:
  2359                           
  2360                           ;main.c: 484:     LCD_Function(curseur, 3, 0);
  2361  002412  0E03               	movlw	3
  2362  002414  6E07               	movwf	LCD_Function@x^0,c
  2363  002416  0E00               	movlw	0
  2364  002418  6E08               	movwf	LCD_Function@z^0,c
  2365  00241A  0E01               	movlw	1
  2366  00241C  EC3C  F010         	call	_LCD_Function
  2367  002420                     
  2368                           ;main.c: 485:     printf("Z = %02X %02X", trame[16], trame[17]);
  2369  002420  0E32               	movlw	low STR_5
  2370  002422  0100               	movlb	0	; () banked
  2371  002424  6FD4               	movwf	printf@fmt& (0+255),b
  2372  002426  0E0F               	movlw	high STR_5
  2373  002428  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  2374  00242A  C070  F0D6         	movff	_trame+16,?_printf+2
  2375  00242E  6BD7               	clrf	(?_printf+3)& (0+255),b
  2376  002430  C071  F0D8         	movff	_trame+17,?_printf+4
  2377  002434  6BD9               	clrf	(?_printf+5)& (0+255),b
  2378  002436  ECCC  F015         	call	_printf	;wreg free
  2379  00243A  0012               	return		;funcret
  2380  00243C                     __end_of_affiche:
  2381                           	callstack 0
  2382                           
  2383 ;; *************** function _printf *****************
  2384 ;; Defined at:
  2385 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\printf.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  fmt             2   19[BANK0 ] PTR const unsigned char 
  2388 ;;		 -> STR_5(14), STR_4(11), STR_3(14), STR_2(14), 
  2389 ;;		 -> STR_1(21), 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  ap              2   27[BANK0 ] PTR void [1]
  2392 ;;		 -> ?_printf(2), 
  2393 ;;  ret             2    0        int 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  2   19[BANK0 ] int 
  2396 ;; Registers used:
  2397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2403 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2404 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2406 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2407 ;;Total ram usage:       10 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:   13
  2410 ;; This function calls:
  2411 ;;		_vfprintf
  2412 ;; This function is called by:
  2413 ;;		_affiche
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           	psect	text9
  2418  002B98                     __ptext9:
  2419                           	callstack 0
  2420  002B98                     _printf:
  2421                           	callstack 14
  2422  002B98  0ED6               	movlw	low (?_printf+2)
  2423  002B9A  0100               	movlb	0	; () banked
  2424  002B9C  6FDC               	movwf	printf@ap& (0+255),b
  2425  002B9E  0E00               	movlw	high (?_printf+2)
  2426  002BA0  6FDD               	movwf	(printf@ap+1)& (0+255),b
  2427  002BA2                     
  2428                           ; BSR set to: 0
  2429  002BA2  0E00               	movlw	0
  2430  002BA4  6FCE               	movwf	vfprintf@fp& (0+255),b
  2431  002BA6  0E00               	movlw	0
  2432  002BA8  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  2433  002BAA  C0D4  F0D0         	movff	printf@fmt,vfprintf@fmt
  2434  002BAE  C0D5  F0D1         	movff	printf@fmt+1,vfprintf@fmt+1
  2435  002BB2  0EDC               	movlw	low printf@ap
  2436  002BB4  6FD2               	movwf	vfprintf@ap& (0+255),b
  2437  002BB6  0E00               	movlw	high printf@ap
  2438  002BB8  6FD3               	movwf	(vfprintf@ap+1)& (0+255),b
  2439  002BBA  ECB8  F012         	call	_vfprintf	;wreg free
  2440  002BBE  0012               	return		;funcret
  2441  002BC0                     __end_of_printf:
  2442                           	callstack 0
  2443                           
  2444 ;; *************** function _vfprintf *****************
  2445 ;; Defined at:
  2446 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  2449 ;;		 -> NULL(0), 
  2450 ;;  fmt             2   15[BANK0 ] PTR const unsigned char 
  2451 ;;		 -> STR_5(14), STR_4(11), STR_3(14), STR_2(14), 
  2452 ;;		 -> STR_1(21), 
  2453 ;;  ap              2   17[BANK0 ] PTR PTR void 
  2454 ;;		 -> printf@ap(2), 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  2457 ;;		 -> STR_5(14), STR_4(11), STR_3(14), STR_2(14), 
  2458 ;;		 -> STR_1(21), 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  2   13[BANK0 ] int 
  2461 ;; Registers used:
  2462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2468 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2471 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2472 ;;Total ram usage:        8 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:   12
  2475 ;; This function calls:
  2476 ;;		_vfpfcnvrt
  2477 ;; This function is called by:
  2478 ;;		_printf
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           	psect	text10
  2483  002570                     __ptext10:
  2484                           	callstack 0
  2485  002570                     _vfprintf:
  2486                           	callstack 14
  2487  002570                     
  2488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2489  002570  C0D0  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  2490  002574  C0D1  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2491  002578                     
  2492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2493  002578  0E00               	movlw	0
  2494  00257A  0100               	movlb	0	; () banked
  2495  00257C  6F74               	movwf	(_nout+1)& (0+255),b
  2496  00257E  0E00               	movlw	0
  2497  002580  6F73               	movwf	_nout& (0+255),b
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2500  002582  EFD6  F012         	goto	l4217
  2501  002586                     l4215:
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2505  002586  C0CE  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  2506  00258A  C0CF  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2507  00258E  0E53               	movlw	low vfprintf@cfmt
  2508  002590  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  2509  002592  0E00               	movlw	high vfprintf@cfmt
  2510  002594  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2511  002596  C0D2  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2512  00259A  C0D3  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2513  00259E  ECA6  F007         	call	_vfpfcnvrt	;wreg free
  2514  0025A2  5049               	movf	?_vfpfcnvrt^0,w,c
  2515  0025A4  0100               	movlb	0	; () banked
  2516  0025A6  2773               	addwf	_nout& (0+255),f,b
  2517  0025A8  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  2518  0025AA  2374               	addwfc	(_nout+1)& (0+255),f,b
  2519  0025AC                     l4217:
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2523  0025AC  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  2524  0025B0  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2525  0025B4                     	if	0	;tblptru may be non-zero
  2526  0025B4                     	endif
  2527  0025B4                     	if	0	;tblptru may be non-zero
  2528  0025B4                     	endif
  2529  0025B4  0008               	tblrd		*
  2530  0025B6  50F5               	movf	tablat,w,c
  2531  0025B8  0900               	iorlw	0
  2532  0025BA  A4D8               	btfss	status,2,c
  2533  0025BC  EFE2  F012         	goto	u3411
  2534  0025C0  EFE4  F012         	goto	u3410
  2535  0025C4                     u3411:
  2536  0025C4  EFC3  F012         	goto	l4215
  2537  0025C8                     u3410:
  2538  0025C8                     
  2539                           ; BSR set to: 0
  2540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2541  0025C8  C073  F0CE         	movff	_nout,?_vfprintf
  2542  0025CC  C074  F0CF         	movff	_nout+1,?_vfprintf+1
  2543  0025D0                     
  2544                           ; BSR set to: 0
  2545  0025D0  0012               	return		;funcret
  2546  0025D2                     __end_of_vfprintf:
  2547                           	callstack 0
  2548                           
  2549 ;; *************** function _vfpfcnvrt *****************
  2550 ;; Defined at:
  2551 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  2554 ;;		 -> NULL(0), 
  2555 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  2556 ;;		 -> vfprintf@cfmt(2), 
  2557 ;;  ap              2   76[COMRAM] PTR PTR void 
  2558 ;;		 -> printf@ap(2), 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  llu             8    0[BANK0 ] unsigned long long 
  2561 ;;  ll              8    0        long long 
  2562 ;;  f               4    0        long long 
  2563 ;;  vp              3    0        PTR void 
  2564 ;;  ct              3    0        unsigned char [3]
  2565 ;;  cp              3    0        PTR unsigned char 
  2566 ;;  done            2    8[BANK0 ] int 
  2567 ;;  i               2    0        int 
  2568 ;;  c               1   12[BANK0 ] unsigned char 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  2   72[COMRAM] int 
  2571 ;; Registers used:
  2572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2578 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2579 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2580 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2581 ;;      Totals:        10      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2582 ;;Total ram usage:       23 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:   11
  2585 ;; This function calls:
  2586 ;;		_atoi
  2587 ;;		_fputc
  2588 ;;		_isdigit
  2589 ;;		_xtoa
  2590 ;; This function is called by:
  2591 ;;		_vfprintf
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text11
  2596  000F4C                     __ptext11:
  2597                           	callstack 0
  2598  000F4C                     _vfpfcnvrt:
  2599                           	callstack 14
  2600  000F4C                     
  2601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2602  000F4C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2603  000F50  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2604  000F54  CFDE FFF6          	movff	postinc2,tblptrl
  2605  000F58  CFDD FFF7          	movff	postdec2,tblptrh
  2606  000F5C                     	if	0	;tblptru may be non-zero
  2607  000F5C                     	endif
  2608  000F5C                     	if	0	;tblptru may be non-zero
  2609  000F5C                     	endif
  2610  000F5C  0008               	tblrd		*
  2611  000F5E  50F5               	movf	tablat,w,c
  2612  000F60  0A25               	xorlw	37
  2613  000F62  A4D8               	btfss	status,2,c
  2614  000F64  EFB6  F007         	goto	u2201
  2615  000F68  EFB8  F007         	goto	u2200
  2616  000F6C                     u2201:
  2617  000F6C  EF4E  F009         	goto	l3295
  2618  000F70                     u2200:
  2619  000F70                     
  2620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2621  000F70  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2622  000F74  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2623  000F78  2ADE               	incf	postinc2,f,c
  2624  000F7A  0E00               	movlw	0
  2625  000F7C  22DD               	addwfc	postdec2,f,c
  2626  000F7E                     
  2627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2628  000F7E  0E00               	movlw	0
  2629  000F80  0100               	movlb	0	; () banked
  2630  000F82  6F76               	movwf	(_width+1)& (0+255),b
  2631  000F84  0E00               	movlw	0
  2632  000F86  6F75               	movwf	_width& (0+255),b
  2633  000F88  C075  F079         	movff	_width,_flags
  2634  000F8C  C076  F07A         	movff	_width+1,_flags+1
  2635  000F90                     
  2636                           ; BSR set to: 0
  2637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2638  000F90  6977               	setf	_prec& (0+255),b
  2639  000F92  6978               	setf	(_prec+1)& (0+255),b
  2640  000F94                     
  2641                           ; BSR set to: 0
  2642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2643  000F94  0E00               	movlw	0
  2644  000F96  6FCA               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2645  000F98  0E00               	movlw	0
  2646  000F9A  6FC9               	movwf	vfpfcnvrt@done& (0+255),b
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2649  000F9C  EF16  F008         	goto	l3243
  2650  000FA0                     l3217:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2654  000FA0  8179               	bsf	_flags& (0+255),0,b
  2655  000FA2                     l3219:
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2659  000FA2  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2660  000FA6  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2661  000FAA  2ADE               	incf	postinc2,f,c
  2662  000FAC  0E00               	movlw	0
  2663  000FAE  22DD               	addwfc	postdec2,f,c
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2666  000FB0  EF16  F008         	goto	l3243
  2667  000FB4                     l3221:
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2671  000FB4  8379               	bsf	_flags& (0+255),1,b
  2672  000FB6  EFD1  F007         	goto	l3219
  2673  000FBA                     l3225:
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2677  000FBA  8579               	bsf	_flags& (0+255),2,b
  2678  000FBC  EFD1  F007         	goto	l3219
  2679  000FC0                     l3229:
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2683  000FC0  8779               	bsf	_flags& (0+255),3,b
  2684  000FC2  EFD1  F007         	goto	l3219
  2685  000FC6                     l3233:
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2689  000FC6  8979               	bsf	_flags& (0+255),4,b
  2690  000FC8  EFD1  F007         	goto	l3219
  2691  000FCC                     l3237:
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2695  000FCC  0E00               	movlw	0
  2696  000FCE  6FCA               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2697  000FD0  0E01               	movlw	1
  2698  000FD2  6FC9               	movwf	vfpfcnvrt@done& (0+255),b
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2701  000FD4  EF16  F008         	goto	l3243
  2702  000FD8                     l3241:
  2703                           
  2704                           ; BSR set to: 0
  2705  000FD8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2706  000FDC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2707  000FE0  CFDE FFF6          	movff	postinc2,tblptrl
  2708  000FE4  CFDD FFF7          	movff	postdec2,tblptrh
  2709  000FE8                     	if	0	;tblptru may be non-zero
  2710  000FE8                     	endif
  2711  000FE8                     	if	0	;tblptru may be non-zero
  2712  000FE8                     	endif
  2713  000FE8  0008               	tblrd		*
  2714  000FEA  50F5               	movf	tablat,w,c
  2715  000FEC  6E4F               	movwf	??_vfpfcnvrt^0,c
  2716  000FEE  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  2717                           
  2718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2719                           ; Switch size 1, requested type "simple"
  2720                           ; Number of cases is 1, Range of values is 0 to 0
  2721                           ; switch strategies available:
  2722                           ; Name         Instructions Cycles
  2723                           ; simple_byte            4     3 (average)
  2724                           ;	Chosen strategy is simple_byte
  2725  000FF0  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  2726  000FF2  0A00               	xorlw	0	; case 0
  2727  000FF4  B4D8               	btfsc	status,2,c
  2728  000FF6  EFFF  F007         	goto	l4577
  2729  000FFA  EFE6  F007         	goto	l3237
  2730  000FFE                     l4577:
  2731                           
  2732                           ; BSR set to: 0
  2733                           ; Switch size 1, requested type "simple"
  2734                           ; Number of cases is 5, Range of values is 32 to 48
  2735                           ; switch strategies available:
  2736                           ; Name         Instructions Cycles
  2737                           ; simple_byte           16     9 (average)
  2738                           ;	Chosen strategy is simple_byte
  2739  000FFE  504F               	movf	??_vfpfcnvrt^0,w,c
  2740  001000  0A20               	xorlw	32	; case 32
  2741  001002  B4D8               	btfsc	status,2,c
  2742  001004  EFE0  F007         	goto	l3229
  2743  001008  0A03               	xorlw	3	; case 35
  2744  00100A  B4D8               	btfsc	status,2,c
  2745  00100C  EFE3  F007         	goto	l3233
  2746  001010  0A08               	xorlw	8	; case 43
  2747  001012  B4D8               	btfsc	status,2,c
  2748  001014  EFDD  F007         	goto	l3225
  2749  001018  0A06               	xorlw	6	; case 45
  2750  00101A  B4D8               	btfsc	status,2,c
  2751  00101C  EFD0  F007         	goto	l3217
  2752  001020  0A1D               	xorlw	29	; case 48
  2753  001022  B4D8               	btfsc	status,2,c
  2754  001024  EFDA  F007         	goto	l3221
  2755  001028  EFE6  F007         	goto	l3237
  2756  00102C                     l3243:
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2760  00102C  51C9               	movf	vfpfcnvrt@done& (0+255),w,b
  2761  00102E  11CA               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2762  001030  B4D8               	btfsc	status,2,c
  2763  001032  EF1D  F008         	goto	u2211
  2764  001036  EF1F  F008         	goto	u2210
  2765  00103A                     u2211:
  2766  00103A  EFEC  F007         	goto	l3241
  2767  00103E                     u2210:
  2768  00103E                     
  2769                           ; BSR set to: 0
  2770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2771  00103E  A179               	btfss	_flags& (0+255),0,b
  2772  001040  EF24  F008         	goto	u2221
  2773  001044  EF26  F008         	goto	u2220
  2774  001048                     u2221:
  2775  001048  EF27  F008         	goto	l3247
  2776  00104C                     u2220:
  2777  00104C                     
  2778                           ; BSR set to: 0
  2779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2780  00104C  9379               	bcf	_flags& (0+255),1,b
  2781  00104E                     l3247:
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2785  00104E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2786  001052  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2787  001056  CFDE FFF6          	movff	postinc2,tblptrl
  2788  00105A  CFDD FFF7          	movff	postdec2,tblptrh
  2789  00105E                     	if	0	;tblptru may be non-zero
  2790  00105E                     	endif
  2791  00105E                     	if	0	;tblptru may be non-zero
  2792  00105E                     	endif
  2793  00105E  0008               	tblrd		*
  2794  001060  50F5               	movf	tablat,w,c
  2795  001062  0A2A               	xorlw	42
  2796  001064  A4D8               	btfss	status,2,c
  2797  001066  EF37  F008         	goto	u2231
  2798  00106A  EF39  F008         	goto	u2230
  2799  00106E                     u2231:
  2800  00106E  EF62  F008         	goto	l3255
  2801  001072                     u2230:
  2802  001072                     
  2803                           ; BSR set to: 0
  2804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2805  001072  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2806  001076  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2807  00107A  2ADE               	incf	postinc2,f,c
  2808  00107C  0E00               	movlw	0
  2809  00107E  22DD               	addwfc	postdec2,f,c
  2810                           
  2811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2812  001080  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2813  001084  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2814  001088  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2815  00108C  0E02               	movlw	2
  2816  00108E  26DE               	addwf	postinc2,f,c
  2817  001090  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2818  001094  0E00               	movlw	0
  2819  001096  22DD               	addwfc	postdec2,f,c
  2820  001098  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2821  00109C  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2822  0010A0  CFDE F075          	movff	postinc2,_width
  2823  0010A4  CFDD F076          	movff	postdec2,_width+1
  2824  0010A8                     
  2825                           ; BSR set to: 0
  2826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2827  0010A8  BF76               	btfsc	(_width+1)& (0+255),7,b
  2828  0010AA  EF5B  F008         	goto	u2240
  2829  0010AE  EF59  F008         	goto	u2241
  2830  0010B2                     u2241:
  2831  0010B2  EFA6  F008         	goto	l3265
  2832  0010B6                     u2240:
  2833  0010B6                     
  2834                           ; BSR set to: 0
  2835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2836  0010B6  8179               	bsf	_flags& (0+255),0,b
  2837                           
  2838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2839  0010B8  6D75               	negf	_width& (0+255),b
  2840  0010BA  1F76               	comf	(_width+1)& (0+255),f,b
  2841  0010BC  B0D8               	btfsc	status,0,c
  2842  0010BE  2B76               	incf	(_width+1)& (0+255),f,b
  2843  0010C0  EFA6  F008         	goto	l3265
  2844  0010C4                     l3255:
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2848  0010C4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2849  0010C8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2850  0010CC  CFDE F00C          	movff	postinc2,atoi@s
  2851  0010D0  CFDD F00D          	movff	postdec2,atoi@s+1
  2852  0010D4  ECB5  F00E         	call	_atoi	;wreg free
  2853  0010D8  C00C  F075         	movff	?_atoi,_width
  2854  0010DC  C00D  F076         	movff	?_atoi+1,_width+1
  2855                           
  2856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2857  0010E0  EF79  F008         	goto	l3259
  2858  0010E4                     l3257:
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2862  0010E4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2863  0010E8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2864  0010EC  2ADE               	incf	postinc2,f,c
  2865  0010EE  0E00               	movlw	0
  2866  0010F0  22DD               	addwfc	postdec2,f,c
  2867  0010F2                     l3259:
  2868  0010F2  0ED0               	movlw	208
  2869  0010F4  6E4F               	movwf	??_vfpfcnvrt^0,c
  2870  0010F6  0EFF               	movlw	255
  2871  0010F8  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  2872  0010FA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2873  0010FE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2874  001102  CFDE FFF6          	movff	postinc2,tblptrl
  2875  001106  CFDD FFF7          	movff	postdec2,tblptrh
  2876  00110A                     	if	0	;tblptru may be non-zero
  2877  00110A                     	endif
  2878  00110A                     	if	0	;tblptru may be non-zero
  2879  00110A                     	endif
  2880  00110A  0008               	tblrd		*
  2881  00110C  50F5               	movf	tablat,w,c
  2882  00110E  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  2883  001110  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  2884  001112  504F               	movf	??_vfpfcnvrt^0,w,c
  2885  001114  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2886  001116  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  2887  001118  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2888  00111A  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  2889  00111C  E10A               	bnz	u2250
  2890  00111E  0E0A               	movlw	10
  2891  001120  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2892  001122  A0D8               	btfss	status,0,c
  2893  001124  EF96  F008         	goto	u2251
  2894  001128  EF99  F008         	goto	u2250
  2895  00112C                     u2251:
  2896  00112C  0E01               	movlw	1
  2897  00112E  EF9A  F008         	goto	u2260
  2898  001132                     u2250:
  2899  001132  0E00               	movlw	0
  2900  001134                     u2260:
  2901  001134  0100               	movlb	0	; () banked
  2902  001136  6FCB               	movwf	_vfpfcnvrt$2326& (0+255),b
  2903  001138  6BCC               	clrf	(_vfpfcnvrt$2326+1)& (0+255),b
  2904  00113A                     
  2905                           ; BSR set to: 0
  2906  00113A  51CB               	movf	_vfpfcnvrt$2326& (0+255),w,b
  2907  00113C  11CC               	iorwf	(_vfpfcnvrt$2326+1)& (0+255),w,b
  2908  00113E  A4D8               	btfss	status,2,c
  2909  001140  EFA4  F008         	goto	u2271
  2910  001144  EFA6  F008         	goto	u2270
  2911  001148                     u2271:
  2912  001148  EF72  F008         	goto	l3257
  2913  00114C                     u2270:
  2914  00114C                     l3265:
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  2918  00114C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2919  001150  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2920  001154  CFDE FFF6          	movff	postinc2,tblptrl
  2921  001158  CFDD FFF7          	movff	postdec2,tblptrh
  2922  00115C                     	if	0	;tblptru may be non-zero
  2923  00115C                     	endif
  2924  00115C                     	if	0	;tblptru may be non-zero
  2925  00115C                     	endif
  2926  00115C  0008               	tblrd		*
  2927  00115E  50F5               	movf	tablat,w,c
  2928  001160  0A78               	xorlw	120
  2929  001162  B4D8               	btfsc	status,2,c
  2930  001164  EFB6  F008         	goto	u2281
  2931  001168  EFB8  F008         	goto	u2280
  2932  00116C                     u2281:
  2933  00116C  EFCA  F008         	goto	l3269
  2934  001170                     u2280:
  2935  001170                     
  2936                           ; BSR set to: 0
  2937  001170  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2938  001174  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2939  001178  CFDE FFF6          	movff	postinc2,tblptrl
  2940  00117C  CFDD FFF7          	movff	postdec2,tblptrh
  2941  001180                     	if	0	;tblptru may be non-zero
  2942  001180                     	endif
  2943  001180                     	if	0	;tblptru may be non-zero
  2944  001180                     	endif
  2945  001180  0008               	tblrd		*
  2946  001182  50F5               	movf	tablat,w,c
  2947  001184  0A58               	xorlw	88
  2948  001186  A4D8               	btfss	status,2,c
  2949  001188  EFC8  F008         	goto	u2291
  2950  00118C  EFCA  F008         	goto	u2290
  2951  001190                     u2291:
  2952  001190  EF18  F009         	goto	l3279
  2953  001194                     u2290:
  2954  001194                     l3269:
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  2958  001194  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2959  001198  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2960  00119C  CFDE FFF6          	movff	postinc2,tblptrl
  2961  0011A0  CFDD FFF7          	movff	postdec2,tblptrh
  2962  0011A4                     	if	0	;tblptru may be non-zero
  2963  0011A4                     	endif
  2964  0011A4                     	if	0	;tblptru may be non-zero
  2965  0011A4                     	endif
  2966  0011A4  0008               	tblrd		*
  2967  0011A6  CFF5 F0CD          	movff	tablat,vfpfcnvrt@c
  2968  0011AA                     
  2969                           ; BSR set to: 0
  2970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  2971  0011AA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2972  0011AE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2973  0011B2  2ADE               	incf	postinc2,f,c
  2974  0011B4  0E00               	movlw	0
  2975  0011B6  22DD               	addwfc	postdec2,f,c
  2976  0011B8                     
  2977                           ; BSR set to: 0
  2978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2979  0011B8  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2980  0011BC  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2981  0011C0  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2982  0011C4  0E02               	movlw	2
  2983  0011C6  26DE               	addwf	postinc2,f,c
  2984  0011C8  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2985  0011CC  0E00               	movlw	0
  2986  0011CE  22DD               	addwfc	postdec2,f,c
  2987  0011D0  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2988  0011D4  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2989  0011D8  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  2990  0011DC  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  2991  0011E0  C051  F0C1         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2992  0011E4  C052  F0C2         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2993  0011E8  6BC3               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2994  0011EA  6BC4               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2995  0011EC  6BC5               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2996  0011EE  6BC6               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2997  0011F0  6BC7               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2998  0011F2  6BC8               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2999  0011F4                     
  3000                           ; BSR set to: 0
  3001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  3002  0011F4  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  3003  0011F8  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3004  0011FC  C0C1  F024         	movff	vfpfcnvrt@llu,xtoa@d
  3005  001200  C0C2  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3006  001204  C0C3  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3007  001208  C0C4  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3008  00120C  C0C5  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3009  001210  C0C6  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3010  001214  C0C7  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3011  001218  C0C8  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3012  00121C  C0CD  F02C         	movff	vfpfcnvrt@c,xtoa@x
  3013  001220  EC6A  F009         	call	_xtoa	;wreg free
  3014  001224  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  3015  001228  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3016  00122C  EF69  F009         	goto	l1606
  3017  001230                     l3279:
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3021  001230  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3022  001234  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3023  001238  CFDE FFF6          	movff	postinc2,tblptrl
  3024  00123C  CFDD FFF7          	movff	postdec2,tblptrh
  3025  001240                     	if	0	;tblptru may be non-zero
  3026  001240                     	endif
  3027  001240                     	if	0	;tblptru may be non-zero
  3028  001240                     	endif
  3029  001240  0008               	tblrd		*
  3030  001242  50F5               	movf	tablat,w,c
  3031  001244  0A25               	xorlw	37
  3032  001246  A4D8               	btfss	status,2,c
  3033  001248  EF28  F009         	goto	u2301
  3034  00124C  EF2A  F009         	goto	u2300
  3035  001250                     u2301:
  3036  001250  EF41  F009         	goto	l3289
  3037  001254                     u2300:
  3038  001254                     
  3039                           ; BSR set to: 0
  3040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3041  001254  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3042  001258  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3043  00125C  2ADE               	incf	postinc2,f,c
  3044  00125E  0E00               	movlw	0
  3045  001260  22DD               	addwfc	postdec2,f,c
  3046  001262                     
  3047                           ; BSR set to: 0
  3048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3049  001262  0E00               	movlw	0
  3050  001264  6E08               	movwf	(fputc@c+1)^0,c
  3051  001266  0E25               	movlw	37
  3052  001268  6E07               	movwf	fputc@c^0,c
  3053  00126A  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3054  00126E  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3055  001272  EC6D  F012         	call	_fputc	;wreg free
  3056  001276                     l3285:
  3057                           
  3058                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3059  001276  0E00               	movlw	0
  3060  001278  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  3061  00127A  0E01               	movlw	1
  3062  00127C  6E49               	movwf	?_vfpfcnvrt^0,c
  3063  00127E  EF69  F009         	goto	l1606
  3064  001282                     l3289:
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3068  001282  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3069  001286  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3070  00128A  2ADE               	incf	postinc2,f,c
  3071  00128C  0E00               	movlw	0
  3072  00128E  22DD               	addwfc	postdec2,f,c
  3073  001290                     
  3074                           ; BSR set to: 0
  3075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3076  001290  0E00               	movlw	0
  3077  001292  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  3078  001294  0E00               	movlw	0
  3079  001296  6E49               	movwf	?_vfpfcnvrt^0,c
  3080  001298  EF69  F009         	goto	l1606
  3081  00129C                     l3295:
  3082                           
  3083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3084  00129C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3085  0012A0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3086  0012A4  CFDE FFF6          	movff	postinc2,tblptrl
  3087  0012A8  CFDD FFF7          	movff	postdec2,tblptrh
  3088  0012AC                     	if	0	;tblptru may be non-zero
  3089  0012AC                     	endif
  3090  0012AC                     	if	0	;tblptru may be non-zero
  3091  0012AC                     	endif
  3092  0012AC  0008               	tblrd		*
  3093  0012AE  50F5               	movf	tablat,w,c
  3094  0012B0  6E07               	movwf	fputc@c^0,c
  3095  0012B2  6A08               	clrf	(fputc@c+1)^0,c
  3096  0012B4  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3097  0012B8  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3098  0012BC  EC6D  F012         	call	_fputc	;wreg free
  3099  0012C0                     
  3100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3101  0012C0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3102  0012C4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3103  0012C8  2ADE               	incf	postinc2,f,c
  3104  0012CA  0E00               	movlw	0
  3105  0012CC  22DD               	addwfc	postdec2,f,c
  3106  0012CE  EF3B  F009         	goto	l3285
  3107  0012D2                     l1606:
  3108  0012D2  0012               	return		;funcret
  3109  0012D4                     __end_of_vfpfcnvrt:
  3110                           	callstack 0
  3111                           
  3112 ;; *************** function _xtoa *****************
  3113 ;; Defined at:
  3114 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  3117 ;;		 -> NULL(0), 
  3118 ;;  d               8   35[COMRAM] unsigned long long 
  3119 ;;  x               1   43[COMRAM] unsigned char 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  n               8   60[COMRAM] unsigned long long 
  3122 ;;  c               2   70[COMRAM] int 
  3123 ;;  i               2   68[COMRAM] int 
  3124 ;;  w               2   58[COMRAM] int 
  3125 ;;  p               2   56[COMRAM] int 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  2   33[COMRAM] int 
  3128 ;; Registers used:
  3129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3135 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3136 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3137 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3138 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3139 ;;Total ram usage:       39 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; Hardware stack levels required when called:   10
  3142 ;; This function calls:
  3143 ;;		_isalpha
  3144 ;;		_isupper
  3145 ;;		_pad
  3146 ;;		_toupper
  3147 ;; This function is called by:
  3148 ;;		_vfpfcnvrt
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           	psect	text12
  3153  0012D4                     __ptext12:
  3154                           	callstack 0
  3155  0012D4                     _xtoa:
  3156                           	callstack 14
  3157  0012D4                     
  3158                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  3159  0012D4  0100               	movlb	0	; () banked
  3160  0012D6  BF78               	btfsc	(_prec+1)& (0+255),7,b
  3161  0012D8  EF70  F009         	goto	u1961
  3162  0012DC  EF72  F009         	goto	u1960
  3163  0012E0                     u1961:
  3164  0012E0  EF73  F009         	goto	l3103
  3165  0012E4                     u1960:
  3166  0012E4                     
  3167                           ; BSR set to: 0
  3168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  3169  0012E4  9379               	bcf	_flags& (0+255),1,b
  3170  0012E6                     l3103:
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  3174  0012E6  BF78               	btfsc	(_prec+1)& (0+255),7,b
  3175  0012E8  EF80  F009         	goto	u1970
  3176  0012EC  5178               	movf	(_prec+1)& (0+255),w,b
  3177  0012EE  E106               	bnz	u1971
  3178  0012F0  0577               	decf	_prec& (0+255),w,b
  3179  0012F2  B0D8               	btfsc	status,0,c
  3180  0012F4  EF7E  F009         	goto	u1971
  3181  0012F8  EF80  F009         	goto	u1970
  3182  0012FC                     u1971:
  3183  0012FC  EF86  F009         	goto	l1552
  3184  001300                     u1970:
  3185  001300                     
  3186                           ; BSR set to: 0
  3187  001300  0E00               	movlw	0
  3188  001302  6E3A               	movwf	(xtoa@p+1)^0,c
  3189  001304  0E01               	movlw	1
  3190  001306  6E39               	movwf	xtoa@p^0,c
  3191  001308  EF8A  F009         	goto	l1554
  3192  00130C                     l1552:
  3193                           
  3194                           ; BSR set to: 0
  3195  00130C  C077  F039         	movff	_prec,xtoa@p
  3196  001310  C078  F03A         	movff	_prec+1,xtoa@p+1
  3197  001314                     l1554:
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  3201  001314  C075  F03B         	movff	_width,xtoa@w
  3202  001318  C076  F03C         	movff	_width+1,xtoa@w+1
  3203                           
  3204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  3205  00131C  A979               	btfss	_flags& (0+255),4,b
  3206  00131E  EF93  F009         	goto	u1981
  3207  001322  EF95  F009         	goto	u1980
  3208  001326                     u1981:
  3209  001326  EF99  F009         	goto	l3109
  3210  00132A                     u1980:
  3211  00132A                     
  3212                           ; BSR set to: 0
  3213                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  3214  00132A  0EFE               	movlw	254
  3215  00132C  263B               	addwf	xtoa@w^0,f,c
  3216  00132E  0EFF               	movlw	255
  3217  001330  223C               	addwfc	(xtoa@w+1)^0,f,c
  3218  001332                     l3109:
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  3222  001332  C024  F03D         	movff	xtoa@d,xtoa@n
  3223  001336  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  3224  00133A  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  3225  00133E  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  3226  001342  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  3227  001346  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  3228  00134A  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  3229  00134E  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  3230  001352                     
  3231                           ; BSR set to: 0
  3232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  3233  001352  0E00               	movlw	0
  3234  001354  6E46               	movwf	(xtoa@i+1)^0,c
  3235  001356  0E1F               	movlw	31
  3236  001358  6E45               	movwf	xtoa@i^0,c
  3237  00135A                     
  3238                           ; BSR set to: 0
  3239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  3240  00135A  0E00               	movlw	0
  3241  00135C  6FC0               	movwf	(_dbuf+31)& (0+255),b
  3242                           
  3243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3244  00135E  EF64  F00A         	goto	l3145
  3245  001362                     l3115:
  3246                           
  3247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  3248  001362  0645               	decf	xtoa@i^0,f,c
  3249  001364  A0D8               	btfss	status,0,c
  3250  001366  0646               	decf	(xtoa@i+1)^0,f,c
  3251  001368                     
  3252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  3253  001368  0E0F               	movlw	15
  3254  00136A  143D               	andwf	xtoa@n^0,w,c
  3255  00136C  6E47               	movwf	xtoa@c^0,c
  3256  00136E  6A48               	clrf	(xtoa@c+1)^0,c
  3257  001370                     
  3258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  3259  001370  BE48               	btfsc	(xtoa@c+1)^0,7,c
  3260  001372  EFC4  F009         	goto	u1991
  3261  001376  5048               	movf	(xtoa@c+1)^0,w,c
  3262  001378  E109               	bnz	u1990
  3263  00137A  0E0A               	movlw	10
  3264  00137C  5C47               	subwf	xtoa@c^0,w,c
  3265  00137E  A0D8               	btfss	status,0,c
  3266  001380  EFC4  F009         	goto	u1991
  3267  001384  EFC6  F009         	goto	u1990
  3268  001388                     u1991:
  3269  001388  EFCE  F009         	goto	l3123
  3270  00138C                     u1990:
  3271  00138C  0E57               	movlw	87
  3272  00138E  2447               	addwf	xtoa@c^0,w,c
  3273  001390  6E47               	movwf	xtoa@c^0,c
  3274  001392  0E00               	movlw	0
  3275  001394  2048               	addwfc	(xtoa@c+1)^0,w,c
  3276  001396  6E48               	movwf	(xtoa@c+1)^0,c
  3277  001398  EFD4  F009         	goto	l1561
  3278  00139C                     l3123:
  3279  00139C  0E30               	movlw	48
  3280  00139E  2447               	addwf	xtoa@c^0,w,c
  3281  0013A0  6E47               	movwf	xtoa@c^0,c
  3282  0013A2  0E00               	movlw	0
  3283  0013A4  2048               	addwfc	(xtoa@c+1)^0,w,c
  3284  0013A6  6E48               	movwf	(xtoa@c+1)^0,c
  3285  0013A8                     l1561:
  3286  0013A8  0EBF               	movlw	191
  3287  0013AA  6E2D               	movwf	??_xtoa^0,c
  3288  0013AC  0EFF               	movlw	255
  3289  0013AE  6E2E               	movwf	(??_xtoa+1)^0,c
  3290  0013B0  502C               	movf	xtoa@x^0,w,c
  3291  0013B2  6E2F               	movwf	(??_xtoa+2)^0,c
  3292  0013B4  6A30               	clrf	(??_xtoa+3)^0,c
  3293  0013B6  502D               	movf	??_xtoa^0,w,c
  3294  0013B8  262F               	addwf	(??_xtoa+2)^0,f,c
  3295  0013BA  502E               	movf	(??_xtoa+1)^0,w,c
  3296  0013BC  2230               	addwfc	(??_xtoa+3)^0,f,c
  3297  0013BE  5030               	movf	(??_xtoa+3)^0,w,c
  3298  0013C0  E10A               	bnz	u2000
  3299  0013C2  0E1A               	movlw	26
  3300  0013C4  5C2F               	subwf	(??_xtoa+2)^0,w,c
  3301  0013C6  A0D8               	btfss	status,0,c
  3302  0013C8  EFE8  F009         	goto	u2001
  3303  0013CC  EFEB  F009         	goto	u2000
  3304  0013D0                     u2001:
  3305  0013D0  0E01               	movlw	1
  3306  0013D2  EFEC  F009         	goto	u2010
  3307  0013D6                     u2000:
  3308  0013D6  0E00               	movlw	0
  3309  0013D8                     u2010:
  3310  0013D8  6E35               	movwf	_xtoa$2310^0,c
  3311  0013DA  6A36               	clrf	(_xtoa$2310+1)^0,c
  3312  0013DC  5035               	movf	_xtoa$2310^0,w,c
  3313  0013DE  1036               	iorwf	(_xtoa$2310+1)^0,w,c
  3314  0013E0  B4D8               	btfsc	status,2,c
  3315  0013E2  EFF5  F009         	goto	u2021
  3316  0013E6  EFF7  F009         	goto	u2020
  3317  0013EA                     u2021:
  3318  0013EA  EF27  F00A         	goto	l3137
  3319  0013EE                     u2020:
  3320  0013EE  0E9F               	movlw	159
  3321  0013F0  6E2D               	movwf	??_xtoa^0,c
  3322  0013F2  0EFF               	movlw	255
  3323  0013F4  6E2E               	movwf	(??_xtoa+1)^0,c
  3324  0013F6  0E20               	movlw	32
  3325  0013F8  1047               	iorwf	xtoa@c^0,w,c
  3326  0013FA  6E2F               	movwf	(??_xtoa+2)^0,c
  3327  0013FC  0E00               	movlw	0
  3328  0013FE  1048               	iorwf	(xtoa@c+1)^0,w,c
  3329  001400  6E30               	movwf	(??_xtoa+3)^0,c
  3330  001402  502D               	movf	??_xtoa^0,w,c
  3331  001404  262F               	addwf	(??_xtoa+2)^0,f,c
  3332  001406  502E               	movf	(??_xtoa+1)^0,w,c
  3333  001408  2230               	addwfc	(??_xtoa+3)^0,f,c
  3334  00140A  5030               	movf	(??_xtoa+3)^0,w,c
  3335  00140C  E10A               	bnz	u2030
  3336  00140E  0E1A               	movlw	26
  3337  001410  5C2F               	subwf	(??_xtoa+2)^0,w,c
  3338  001412  A0D8               	btfss	status,0,c
  3339  001414  EF0E  F00A         	goto	u2031
  3340  001418  EF11  F00A         	goto	u2030
  3341  00141C                     u2031:
  3342  00141C  0E01               	movlw	1
  3343  00141E  EF12  F00A         	goto	u2040
  3344  001422                     u2030:
  3345  001422  0E00               	movlw	0
  3346  001424                     u2040:
  3347  001424  6E37               	movwf	_xtoa$2311^0,c
  3348  001426  6A38               	clrf	(_xtoa$2311+1)^0,c
  3349  001428  5037               	movf	_xtoa$2311^0,w,c
  3350  00142A  1038               	iorwf	(_xtoa$2311+1)^0,w,c
  3351  00142C  B4D8               	btfsc	status,2,c
  3352  00142E  EF1B  F00A         	goto	u2051
  3353  001432  EF1D  F00A         	goto	u2050
  3354  001436                     u2051:
  3355  001436  EF27  F00A         	goto	l3137
  3356  00143A                     u2050:
  3357  00143A                     
  3358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  3359  00143A  C047  F00B         	movff	xtoa@c,toupper@c
  3360  00143E  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  3361  001442  ECE9  F012         	call	_toupper	;wreg free
  3362  001446  C00B  F047         	movff	?_toupper,xtoa@c
  3363  00144A  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  3364  00144E                     l3137:
  3365                           
  3366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  3367  00144E  0EA1               	movlw	low _dbuf
  3368  001450  2445               	addwf	xtoa@i^0,w,c
  3369  001452  6ED9               	movwf	fsr2l,c
  3370  001454  0E00               	movlw	high _dbuf
  3371  001456  2046               	addwfc	(xtoa@i+1)^0,w,c
  3372  001458  6EDA               	movwf	fsr2h,c
  3373  00145A  C047  FFDF         	movff	xtoa@c,indf2
  3374  00145E                     
  3375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  3376  00145E  0639               	decf	xtoa@p^0,f,c
  3377  001460  A0D8               	btfss	status,0,c
  3378  001462  063A               	decf	(xtoa@p+1)^0,f,c
  3379  001464                     
  3380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  3381  001464  063B               	decf	xtoa@w^0,f,c
  3382  001466  A0D8               	btfss	status,0,c
  3383  001468  063C               	decf	(xtoa@w+1)^0,f,c
  3384  00146A                     
  3385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  3386  00146A  C03D  F02D         	movff	xtoa@n,??_xtoa
  3387  00146E  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  3388  001472  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  3389  001476  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  3390  00147A  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  3391  00147E  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  3392  001482  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  3393  001486  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  3394  00148A  0E05               	movlw	5
  3395  00148C  EF51  F00A         	goto	u2060
  3396  001490                     u2065:
  3397  001490  90D8               	bcf	status,0,c
  3398  001492  3234               	rrcf	(??_xtoa+7)^0,f,c
  3399  001494  3233               	rrcf	(??_xtoa+6)^0,f,c
  3400  001496  3232               	rrcf	(??_xtoa+5)^0,f,c
  3401  001498  3231               	rrcf	(??_xtoa+4)^0,f,c
  3402  00149A  3230               	rrcf	(??_xtoa+3)^0,f,c
  3403  00149C  322F               	rrcf	(??_xtoa+2)^0,f,c
  3404  00149E  322E               	rrcf	(??_xtoa+1)^0,f,c
  3405  0014A0  322D               	rrcf	??_xtoa^0,f,c
  3406  0014A2                     u2060:
  3407  0014A2  2EE8               	decfsz	wreg,f,c
  3408  0014A4  EF48  F00A         	goto	u2065
  3409  0014A8  C02D  F03D         	movff	??_xtoa,xtoa@n
  3410  0014AC  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  3411  0014B0  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  3412  0014B4  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  3413  0014B8  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  3414  0014BC  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  3415  0014C0  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  3416  0014C4  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  3417  0014C8                     l3145:
  3418                           
  3419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3420  0014C8  BE46               	btfsc	(xtoa@i+1)^0,7,c
  3421  0014CA  EF70  F00A         	goto	u2071
  3422  0014CE  5046               	movf	(xtoa@i+1)^0,w,c
  3423  0014D0  E109               	bnz	u2070
  3424  0014D2  0E02               	movlw	2
  3425  0014D4  5C45               	subwf	xtoa@i^0,w,c
  3426  0014D6  A0D8               	btfss	status,0,c
  3427  0014D8  EF70  F00A         	goto	u2071
  3428  0014DC  EF72  F00A         	goto	u2070
  3429  0014E0                     u2071:
  3430  0014E0  EFA3  F00A         	goto	l1575
  3431  0014E4                     u2070:
  3432  0014E4  503D               	movf	xtoa@n^0,w,c
  3433  0014E6  103E               	iorwf	(xtoa@n+1)^0,w,c
  3434  0014E8  103F               	iorwf	(xtoa@n+2)^0,w,c
  3435  0014EA  1040               	iorwf	(xtoa@n+3)^0,w,c
  3436  0014EC  1041               	iorwf	(xtoa@n+4)^0,w,c
  3437  0014EE  1042               	iorwf	(xtoa@n+5)^0,w,c
  3438  0014F0  1043               	iorwf	(xtoa@n+6)^0,w,c
  3439  0014F2  1044               	iorwf	(xtoa@n+7)^0,w,c
  3440  0014F4  A4D8               	btfss	status,2,c
  3441  0014F6  EF7F  F00A         	goto	u2081
  3442  0014FA  EF81  F00A         	goto	u2080
  3443  0014FE                     u2081:
  3444  0014FE  EFB1  F009         	goto	l3115
  3445  001502                     u2080:
  3446  001502  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  3447  001504  EF8E  F00A         	goto	u2090
  3448  001508  503A               	movf	(xtoa@p+1)^0,w,c
  3449  00150A  E106               	bnz	u2091
  3450  00150C  0439               	decf	xtoa@p^0,w,c
  3451  00150E  B0D8               	btfsc	status,0,c
  3452  001510  EF8C  F00A         	goto	u2091
  3453  001514  EF8E  F00A         	goto	u2090
  3454  001518                     u2091:
  3455  001518  EFB1  F009         	goto	l3115
  3456  00151C                     u2090:
  3457  00151C  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  3458  00151E  EF99  F00A         	goto	u2101
  3459  001522  503C               	movf	(xtoa@w+1)^0,w,c
  3460  001524  E108               	bnz	u2100
  3461  001526  043B               	decf	xtoa@w^0,w,c
  3462  001528  A0D8               	btfss	status,0,c
  3463  00152A  EF99  F00A         	goto	u2101
  3464  00152E  EF9B  F00A         	goto	u2100
  3465  001532                     u2101:
  3466  001532  EFA3  F00A         	goto	l1575
  3467  001536                     u2100:
  3468  001536  0100               	movlb	0	; () banked
  3469  001538  B379               	btfsc	_flags& (0+255),1,b
  3470  00153A  EFA1  F00A         	goto	u2111
  3471  00153E  EFA3  F00A         	goto	u2110
  3472  001542                     u2111:
  3473  001542  EFB1  F009         	goto	l3115
  3474  001546                     u2110:
  3475  001546                     l1575:
  3476                           
  3477                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  3478  001546  0100               	movlb	0	; () banked
  3479  001548  A979               	btfss	_flags& (0+255),4,b
  3480  00154A  EFA9  F00A         	goto	u2121
  3481  00154E  EFAB  F00A         	goto	u2120
  3482  001552                     u2121:
  3483  001552  EFC1  F00A         	goto	l3161
  3484  001556                     u2120:
  3485  001556                     
  3486                           ; BSR set to: 0
  3487                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  3488  001556  0645               	decf	xtoa@i^0,f,c
  3489  001558  A0D8               	btfss	status,0,c
  3490  00155A  0646               	decf	(xtoa@i+1)^0,f,c
  3491  00155C                     
  3492                           ; BSR set to: 0
  3493                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  3494  00155C  0EA1               	movlw	low _dbuf
  3495  00155E  2445               	addwf	xtoa@i^0,w,c
  3496  001560  6ED9               	movwf	fsr2l,c
  3497  001562  0E00               	movlw	high _dbuf
  3498  001564  2046               	addwfc	(xtoa@i+1)^0,w,c
  3499  001566  6EDA               	movwf	fsr2h,c
  3500  001568  C02C  FFDF         	movff	xtoa@x,indf2
  3501  00156C                     
  3502                           ; BSR set to: 0
  3503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  3504  00156C  0645               	decf	xtoa@i^0,f,c
  3505  00156E  A0D8               	btfss	status,0,c
  3506  001570  0646               	decf	(xtoa@i+1)^0,f,c
  3507                           
  3508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  3509  001572  0EA1               	movlw	low _dbuf
  3510  001574  2445               	addwf	xtoa@i^0,w,c
  3511  001576  6ED9               	movwf	fsr2l,c
  3512  001578  0E00               	movlw	high _dbuf
  3513  00157A  2046               	addwfc	(xtoa@i+1)^0,w,c
  3514  00157C  6EDA               	movwf	fsr2h,c
  3515  00157E  0E30               	movlw	48
  3516  001580  6EDF               	movwf	indf2,c
  3517  001582                     l3161:
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  3521  001582  C022  F017         	movff	xtoa@fp,pad@fp
  3522  001586  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  3523  00158A  0EA1               	movlw	low _dbuf
  3524  00158C  2445               	addwf	xtoa@i^0,w,c
  3525  00158E  6E19               	movwf	pad@buf^0,c
  3526  001590  0E00               	movlw	high _dbuf
  3527  001592  2046               	addwfc	(xtoa@i+1)^0,w,c
  3528  001594  6E1A               	movwf	(pad@buf+1)^0,c
  3529  001596  C03B  F01B         	movff	xtoa@w,pad@p
  3530  00159A  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  3531  00159E  EC60  F011         	call	_pad	;wreg free
  3532  0015A2  C017  F022         	movff	?_pad,?_xtoa
  3533  0015A6  C018  F023         	movff	?_pad+1,?_xtoa+1
  3534  0015AA  0012               	return		;funcret
  3535  0015AC                     __end_of_xtoa:
  3536                           	callstack 0
  3537                           
  3538 ;; *************** function _toupper *****************
  3539 ;; Defined at:
  3540 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;  c               2   10[COMRAM] int 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  2   10[COMRAM] int 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3554 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3555 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3556 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3557 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3558 ;;Total ram usage:        8 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    6
  3561 ;; This function calls:
  3562 ;;		_islower
  3563 ;; This function is called by:
  3564 ;;		_xtoa
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text13
  3569  0025D2                     __ptext13:
  3570                           	callstack 0
  3571  0025D2                     _toupper:
  3572                           	callstack 17
  3573  0025D2  0E9F               	movlw	159
  3574  0025D4  6E0D               	movwf	??_toupper^0,c
  3575  0025D6  0EFF               	movlw	255
  3576  0025D8  6E0E               	movwf	(??_toupper+1)^0,c
  3577  0025DA  C00B  F00F         	movff	toupper@c,??_toupper+2
  3578  0025DE  C00C  F010         	movff	toupper@c+1,??_toupper+3
  3579  0025E2  500D               	movf	??_toupper^0,w,c
  3580  0025E4  260F               	addwf	(??_toupper+2)^0,f,c
  3581  0025E6  500E               	movf	(??_toupper+1)^0,w,c
  3582  0025E8  2210               	addwfc	(??_toupper+3)^0,f,c
  3583  0025EA  5010               	movf	(??_toupper+3)^0,w,c
  3584  0025EC  E10A               	bnz	u1890
  3585  0025EE  0E1A               	movlw	26
  3586  0025F0  5C0F               	subwf	(??_toupper+2)^0,w,c
  3587  0025F2  A0D8               	btfss	status,0,c
  3588  0025F4  EFFE  F012         	goto	u1891
  3589  0025F8  EF01  F013         	goto	u1890
  3590  0025FC                     u1891:
  3591  0025FC  0E01               	movlw	1
  3592  0025FE  EF02  F013         	goto	u1900
  3593  002602                     u1890:
  3594  002602  0E00               	movlw	0
  3595  002604                     u1900:
  3596  002604  6E11               	movwf	_toupper$2420^0,c
  3597  002606  6A12               	clrf	(_toupper$2420+1)^0,c
  3598  002608  5011               	movf	_toupper$2420^0,w,c
  3599  00260A  1012               	iorwf	(_toupper$2420+1)^0,w,c
  3600  00260C  B4D8               	btfsc	status,2,c
  3601  00260E  EF0B  F013         	goto	u1911
  3602  002612  EF0D  F013         	goto	u1910
  3603  002616                     u1911:
  3604  002616  EF13  F013         	goto	l1701
  3605  00261A                     u1910:
  3606  00261A  0E5F               	movlw	95
  3607  00261C  140B               	andwf	toupper@c^0,w,c
  3608  00261E  6E0B               	movwf	?_toupper^0,c
  3609  002620  6A0C               	clrf	(?_toupper+1)^0,c
  3610  002622  EF17  F013         	goto	l1706
  3611  002626                     l1701:
  3612  002626  C00B  F00B         	movff	toupper@c,?_toupper
  3613  00262A  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  3614  00262E                     l1706:
  3615  00262E  0012               	return		;funcret
  3616  002630                     __end_of_toupper:
  3617                           	callstack 0
  3618                           
  3619 ;; *************** function _islower *****************
  3620 ;; Defined at:
  3621 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  c               2    4[COMRAM] int 
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  2    4[COMRAM] int 
  3628 ;; Registers used:
  3629 ;;		wreg, status,2, status,0
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3637 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3638 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3639 ;;Total ram usage:        6 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:    5
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_toupper
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text14
  3650  002884                     __ptext14:
  3651                           	callstack 0
  3652  002884                     _islower:
  3653                           	callstack 17
  3654  002884  0E9F               	movlw	159
  3655  002886  6E07               	movwf	??_islower^0,c
  3656  002888  0EFF               	movlw	255
  3657  00288A  6E08               	movwf	(??_islower+1)^0,c
  3658  00288C  C005  F009         	movff	islower@c,??_islower+2
  3659  002890  C006  F00A         	movff	islower@c+1,??_islower+3
  3660  002894  5007               	movf	??_islower^0,w,c
  3661  002896  2609               	addwf	(??_islower+2)^0,f,c
  3662  002898  5008               	movf	(??_islower+1)^0,w,c
  3663  00289A  220A               	addwfc	(??_islower+3)^0,f,c
  3664  00289C  500A               	movf	(??_islower+3)^0,w,c
  3665  00289E  E10A               	bnz	u1790
  3666  0028A0  0E1A               	movlw	26
  3667  0028A2  5C09               	subwf	(??_islower+2)^0,w,c
  3668  0028A4  A0D8               	btfss	status,0,c
  3669  0028A6  EF57  F014         	goto	u1791
  3670  0028AA  EF5A  F014         	goto	u1790
  3671  0028AE                     u1791:
  3672  0028AE  0E01               	movlw	1
  3673  0028B0  EF5B  F014         	goto	u1800
  3674  0028B4                     u1790:
  3675  0028B4  0E00               	movlw	0
  3676  0028B6                     u1800:
  3677  0028B6  6E05               	movwf	?_islower^0,c
  3678  0028B8  6A06               	clrf	(?_islower+1)^0,c
  3679  0028BA  0012               	return		;funcret
  3680  0028BC                     __end_of_islower:
  3681                           	callstack 0
  3682                           
  3683 ;; *************** function _pad *****************
  3684 ;; Defined at:
  3685 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  3688 ;;		 -> NULL(0), 
  3689 ;;  buf             2   24[COMRAM] PTR unsigned char 
  3690 ;;		 -> dbuf(32), 
  3691 ;;  p               2   26[COMRAM] int 
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  w               2   31[COMRAM] int 
  3694 ;;  i               2   29[COMRAM] int 
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  2   22[COMRAM] int 
  3697 ;; Registers used:
  3698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3704 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3705 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3707 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3708 ;;Total ram usage:       11 bytes
  3709 ;; Hardware stack levels used:    1
  3710 ;; Hardware stack levels required when called:    9
  3711 ;; This function calls:
  3712 ;;		_fputc
  3713 ;;		_fputs
  3714 ;;		_strlen
  3715 ;; This function is called by:
  3716 ;;		_xtoa
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           	psect	text15
  3721  0022C0                     __ptext15:
  3722                           	callstack 0
  3723  0022C0                     _pad:
  3724                           	callstack 14
  3725  0022C0                     
  3726                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3727  0022C0  0100               	movlb	0	; () banked
  3728  0022C2  A179               	btfss	_flags& (0+255),0,b
  3729  0022C4  EF66  F011         	goto	u1811
  3730  0022C8  EF68  F011         	goto	u1810
  3731  0022CC                     u1811:
  3732  0022CC  EF72  F011         	goto	l3047
  3733  0022D0                     u1810:
  3734  0022D0                     
  3735                           ; BSR set to: 0
  3736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3737  0022D0  C019  F010         	movff	pad@buf,fputs@s
  3738  0022D4  C01A  F011         	movff	pad@buf+1,fputs@s+1
  3739  0022D8  C017  F012         	movff	pad@fp,fputs@fp
  3740  0022DC  C018  F013         	movff	pad@fp+1,fputs@fp+1
  3741  0022E0  EC6E  F013         	call	_fputs	;wreg free
  3742  0022E4                     l3047:
  3743                           
  3744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3745  0022E4  BE1C               	btfsc	(pad@p+1)^0,7,c
  3746  0022E6  EF77  F011         	goto	u1821
  3747  0022EA  EF79  F011         	goto	u1820
  3748  0022EE                     u1821:
  3749  0022EE  EF7F  F011         	goto	l3051
  3750  0022F2                     u1820:
  3751  0022F2  C01B  F020         	movff	pad@p,pad@w
  3752  0022F6  C01C  F021         	movff	pad@p+1,pad@w+1
  3753  0022FA  EF83  F011         	goto	l1542
  3754  0022FE                     l3051:
  3755  0022FE  0E00               	movlw	0
  3756  002300  6E21               	movwf	(pad@w+1)^0,c
  3757  002302  0E00               	movlw	0
  3758  002304  6E20               	movwf	pad@w^0,c
  3759  002306                     l1542:
  3760                           
  3761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3762  002306  0E00               	movlw	0
  3763  002308  6E1F               	movwf	(pad@i+1)^0,c
  3764  00230A  0E00               	movlw	0
  3765  00230C  6E1E               	movwf	pad@i^0,c
  3766                           
  3767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3768  00230E  EF95  F011         	goto	l3057
  3769  002312                     l3053:
  3770                           
  3771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3772  002312  0E00               	movlw	0
  3773  002314  6E08               	movwf	(fputc@c+1)^0,c
  3774  002316  0E20               	movlw	32
  3775  002318  6E07               	movwf	fputc@c^0,c
  3776  00231A  C017  F009         	movff	pad@fp,fputc@fp
  3777  00231E  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  3778  002322  EC6D  F012         	call	_fputc	;wreg free
  3779  002326                     
  3780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3781  002326  4A1E               	infsnz	pad@i^0,f,c
  3782  002328  2A1F               	incf	(pad@i+1)^0,f,c
  3783  00232A                     l3057:
  3784                           
  3785                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3786  00232A  5020               	movf	pad@w^0,w,c
  3787  00232C  5C1E               	subwf	pad@i^0,w,c
  3788  00232E  501F               	movf	(pad@i+1)^0,w,c
  3789  002330  0A80               	xorlw	128
  3790  002332  6E1D               	movwf	??_pad^0,c
  3791  002334  5021               	movf	(pad@w+1)^0,w,c
  3792  002336  0A80               	xorlw	128
  3793  002338  581D               	subwfb	??_pad^0,w,c
  3794  00233A  A0D8               	btfss	status,0,c
  3795  00233C  EFA2  F011         	goto	u1831
  3796  002340  EFA4  F011         	goto	u1830
  3797  002344                     u1831:
  3798  002344  EF89  F011         	goto	l3053
  3799  002348                     u1830:
  3800  002348                     
  3801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3802  002348  0100               	movlb	0	; () banked
  3803  00234A  B179               	btfsc	_flags& (0+255),0,b
  3804  00234C  EFAA  F011         	goto	u1841
  3805  002350  EFAC  F011         	goto	u1840
  3806  002354                     u1841:
  3807  002354  EFB6  F011         	goto	l3061
  3808  002358                     u1840:
  3809  002358                     
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3812  002358  C019  F010         	movff	pad@buf,fputs@s
  3813  00235C  C01A  F011         	movff	pad@buf+1,fputs@s+1
  3814  002360  C017  F012         	movff	pad@fp,fputs@fp
  3815  002364  C018  F013         	movff	pad@fp+1,fputs@fp+1
  3816  002368  EC6E  F013         	call	_fputs	;wreg free
  3817  00236C                     l3061:
  3818                           
  3819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3820  00236C  C019  F005         	movff	pad@buf,strlen@s
  3821  002370  C01A  F006         	movff	pad@buf+1,strlen@s+1
  3822  002374  ECB2  F014         	call	_strlen	;wreg free
  3823  002378  5020               	movf	pad@w^0,w,c
  3824  00237A  2405               	addwf	?_strlen^0,w,c
  3825  00237C  6E17               	movwf	?_pad^0,c
  3826  00237E  5021               	movf	(pad@w+1)^0,w,c
  3827  002380  2006               	addwfc	(?_strlen+1)^0,w,c
  3828  002382  6E18               	movwf	(?_pad+1)^0,c
  3829  002384  0012               	return		;funcret
  3830  002386                     __end_of_pad:
  3831                           	callstack 0
  3832                           
  3833 ;; *************** function _strlen *****************
  3834 ;; Defined at:
  3835 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3838 ;;		 -> dbuf(32), 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  a               2    6[COMRAM] PTR const unsigned char 
  3841 ;;		 -> dbuf(32), 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  2    4[COMRAM] unsigned int 
  3844 ;; Registers used:
  3845 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3852 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3854 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3855 ;;Total ram usage:        4 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    5
  3858 ;; This function calls:
  3859 ;;		Nothing
  3860 ;; This function is called by:
  3861 ;;		_pad
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text16
  3866  002964                     __ptext16:
  3867                           	callstack 0
  3868  002964                     _strlen:
  3869                           	callstack 17
  3870  002964  C005  F007         	movff	strlen@s,strlen@a
  3871  002968  C006  F008         	movff	strlen@s+1,strlen@a+1
  3872  00296C  EFBA  F014         	goto	l3027
  3873  002970                     l3025:
  3874  002970  4A05               	infsnz	strlen@s^0,f,c
  3875  002972  2A06               	incf	(strlen@s+1)^0,f,c
  3876  002974                     l3027:
  3877  002974  C005  FFD9         	movff	strlen@s,fsr2l
  3878  002978  C006  FFDA         	movff	strlen@s+1,fsr2h
  3879  00297C  50DF               	movf	indf2,w,c
  3880  00297E  A4D8               	btfss	status,2,c
  3881  002980  EFC4  F014         	goto	u1781
  3882  002984  EFC6  F014         	goto	u1780
  3883  002988                     u1781:
  3884  002988  EFB8  F014         	goto	l3025
  3885  00298C                     u1780:
  3886  00298C  5007               	movf	strlen@a^0,w,c
  3887  00298E  5C05               	subwf	strlen@s^0,w,c
  3888  002990  6E05               	movwf	?_strlen^0,c
  3889  002992  5008               	movf	(strlen@a+1)^0,w,c
  3890  002994  5806               	subwfb	(strlen@s+1)^0,w,c
  3891  002996  6E06               	movwf	(?_strlen+1)^0,c
  3892  002998  0012               	return		;funcret
  3893  00299A                     __end_of_strlen:
  3894                           	callstack 0
  3895                           
  3896 ;; *************** function _fputs *****************
  3897 ;; Defined at:
  3898 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;  s               2   15[COMRAM] PTR const unsigned char 
  3901 ;;		 -> dbuf(32), 
  3902 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  3903 ;;		 -> NULL(0), 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;  i               2   20[COMRAM] int 
  3906 ;;  c               1   19[COMRAM] unsigned char 
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  2   15[COMRAM] int 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3916 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3917 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3919 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3920 ;;Total ram usage:        7 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:    8
  3923 ;; This function calls:
  3924 ;;		_fputc
  3925 ;; This function is called by:
  3926 ;;		_pad
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text17
  3931  0026DC                     __ptext17:
  3932                           	callstack 0
  3933  0026DC                     _fputs:
  3934                           	callstack 14
  3935  0026DC  0E00               	movlw	0
  3936  0026DE  6E16               	movwf	(fputs@i+1)^0,c
  3937  0026E0  0E00               	movlw	0
  3938  0026E2  6E15               	movwf	fputs@i^0,c
  3939  0026E4  EF7F  F013         	goto	l3021
  3940  0026E8                     l3017:
  3941  0026E8  C014  F007         	movff	fputs@c,fputc@c
  3942  0026EC  6A08               	clrf	(fputc@c+1)^0,c
  3943  0026EE  C012  F009         	movff	fputs@fp,fputc@fp
  3944  0026F2  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  3945  0026F6  EC6D  F012         	call	_fputc	;wreg free
  3946  0026FA  4A15               	infsnz	fputs@i^0,f,c
  3947  0026FC  2A16               	incf	(fputs@i+1)^0,f,c
  3948  0026FE                     l3021:
  3949  0026FE  5015               	movf	fputs@i^0,w,c
  3950  002700  2410               	addwf	fputs@s^0,w,c
  3951  002702  6ED9               	movwf	fsr2l,c
  3952  002704  5016               	movf	(fputs@i+1)^0,w,c
  3953  002706  2011               	addwfc	(fputs@s+1)^0,w,c
  3954  002708  6EDA               	movwf	fsr2h,c
  3955  00270A  50DF               	movf	indf2,w,c
  3956  00270C  6E14               	movwf	fputs@c^0,c
  3957  00270E  5014               	movf	fputs@c^0,w,c
  3958  002710  A4D8               	btfss	status,2,c
  3959  002712  EF8D  F013         	goto	u1771
  3960  002716  EF8F  F013         	goto	u1770
  3961  00271A                     u1771:
  3962  00271A  EF74  F013         	goto	l3017
  3963  00271E                     u1770:
  3964  00271E  0012               	return		;funcret
  3965  002720                     __end_of_fputs:
  3966                           	callstack 0
  3967                           
  3968 ;; *************** function _fputc *****************
  3969 ;; Defined at:
  3970 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  c               2    6[COMRAM] int 
  3973 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  3974 ;;		 -> NULL(0), 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  2    6[COMRAM] int 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3986 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3988 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3989 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3990 ;;Total ram usage:        9 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:    7
  3993 ;; This function calls:
  3994 ;;		_putch
  3995 ;; This function is called by:
  3996 ;;		_pad
  3997 ;;		_vfpfcnvrt
  3998 ;;		_fputs
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text18
  4003  0024DA                     __ptext18:
  4004                           	callstack 0
  4005  0024DA                     _fputc:
  4006                           	callstack 14
  4007  0024DA  5009               	movf	fputc@fp^0,w,c
  4008  0024DC  100A               	iorwf	(fputc@fp+1)^0,w,c
  4009  0024DE  B4D8               	btfsc	status,2,c
  4010  0024E0  EF74  F012         	goto	u1731
  4011  0024E4  EF76  F012         	goto	u1730
  4012  0024E8                     u1731:
  4013  0024E8  EF7F  F012         	goto	l3005
  4014  0024EC                     u1730:
  4015  0024EC  5009               	movf	fputc@fp^0,w,c
  4016  0024EE  100A               	iorwf	(fputc@fp+1)^0,w,c
  4017  0024F0  A4D8               	btfss	status,2,c
  4018  0024F2  EF7D  F012         	goto	u1741
  4019  0024F6  EF7F  F012         	goto	u1740
  4020  0024FA                     u1741:
  4021  0024FA  EF84  F012         	goto	l3007
  4022  0024FE                     u1740:
  4023  0024FE                     l3005:
  4024  0024FE  5007               	movf	fputc@c^0,w,c
  4025  002500  EC9F  F016         	call	_putch
  4026  002504  EFB7  F012         	goto	l1682
  4027  002508                     l3007:
  4028  002508  EE20 F004          	lfsr	2,4
  4029  00250C  5009               	movf	fputc@fp^0,w,c
  4030  00250E  26D9               	addwf	fsr2l,f,c
  4031  002510  500A               	movf	(fputc@fp+1)^0,w,c
  4032  002512  22DA               	addwfc	fsr2h,f,c
  4033  002514  50DE               	movf	postinc2,w,c
  4034  002516  10DE               	iorwf	postinc2,w,c
  4035  002518  B4D8               	btfsc	status,2,c
  4036  00251A  EF91  F012         	goto	u1751
  4037  00251E  EF93  F012         	goto	u1750
  4038  002522                     u1751:
  4039  002522  EFAE  F012         	goto	l3011
  4040  002526                     u1750:
  4041  002526  EE20 F004          	lfsr	2,4
  4042  00252A  5009               	movf	fputc@fp^0,w,c
  4043  00252C  26D9               	addwf	fsr2l,f,c
  4044  00252E  500A               	movf	(fputc@fp+1)^0,w,c
  4045  002530  22DA               	addwfc	fsr2h,f,c
  4046  002532  EE10 F002          	lfsr	1,2
  4047  002536  5009               	movf	fputc@fp^0,w,c
  4048  002538  26E1               	addwf	fsr1l,f,c
  4049  00253A  500A               	movf	(fputc@fp+1)^0,w,c
  4050  00253C  22E2               	addwfc	fsr1h,f,c
  4051  00253E  50DE               	movf	postinc2,w,c
  4052  002540  5CE6               	subwf	postinc1,w,c
  4053  002542  50E6               	movf	postinc1,w,c
  4054  002544  0A80               	xorlw	128
  4055  002546  6E0F               	movwf	(??_fputc+4)^0,c
  4056  002548  50DE               	movf	postinc2,w,c
  4057  00254A  0A80               	xorlw	128
  4058  00254C  580F               	subwfb	(??_fputc+4)^0,w,c
  4059  00254E  B0D8               	btfsc	status,0,c
  4060  002550  EFAC  F012         	goto	u1761
  4061  002554  EFAE  F012         	goto	u1760
  4062  002558                     u1761:
  4063  002558  EFB7  F012         	goto	l1682
  4064  00255C                     u1760:
  4065  00255C                     l3011:
  4066  00255C  EE20 F002          	lfsr	2,2
  4067  002560  5009               	movf	fputc@fp^0,w,c
  4068  002562  26D9               	addwf	fsr2l,f,c
  4069  002564  500A               	movf	(fputc@fp+1)^0,w,c
  4070  002566  22DA               	addwfc	fsr2h,f,c
  4071  002568  2ADE               	incf	postinc2,f,c
  4072  00256A  0E00               	movlw	0
  4073  00256C  22DD               	addwfc	postdec2,f,c
  4074  00256E                     l1682:
  4075  00256E  0012               	return		;funcret
  4076  002570                     __end_of_fputc:
  4077                           	callstack 0
  4078                           
  4079 ;; *************** function _putch *****************
  4080 ;; Defined at:
  4081 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  txData          1    wreg     unsigned char 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  txData          1    5[COMRAM] unsigned char 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg, status,2, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4096 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4098 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4099 ;;Total ram usage:        1 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:    6
  4102 ;; This function calls:
  4103 ;;		_EUSART1_Write
  4104 ;; This function is called by:
  4105 ;;		_fputc
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           	psect	text19
  4110  002D3E                     __ptext19:
  4111                           	callstack 0
  4112  002D3E                     _putch:
  4113                           	callstack 14
  4114                           
  4115                           ;incstack = 0
  4116                           ;putch@txData stored from wreg
  4117  002D3E  6E06               	movwf	putch@txData^0,c
  4118  002D40                     
  4119                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  4120  002D40  5006               	movf	putch@txData^0,w,c
  4121  002D42  EC83  F016         	call	_EUSART1_Write
  4122  002D46  0012               	return		;funcret
  4123  002D48                     __end_of_putch:
  4124                           	callstack 0
  4125                           
  4126 ;; *************** function _isupper *****************
  4127 ;; Defined at:
  4128 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;  c               2    4[COMRAM] int 
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;		None
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  2    4[COMRAM] int 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4144 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4145 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4146 ;;Total ram usage:        6 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:    5
  4149 ;; This function calls:
  4150 ;;		Nothing
  4151 ;; This function is called by:
  4152 ;;		_xtoa
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text20
  4157  0028BC                     __ptext20:
  4158                           	callstack 0
  4159  0028BC                     _isupper:
  4160                           	callstack 18
  4161  0028BC  0EBF               	movlw	191
  4162  0028BE  6E07               	movwf	??_isupper^0,c
  4163  0028C0  0EFF               	movlw	255
  4164  0028C2  6E08               	movwf	(??_isupper+1)^0,c
  4165  0028C4  C005  F009         	movff	isupper@c,??_isupper+2
  4166  0028C8  C006  F00A         	movff	isupper@c+1,??_isupper+3
  4167  0028CC  5007               	movf	??_isupper^0,w,c
  4168  0028CE  2609               	addwf	(??_isupper+2)^0,f,c
  4169  0028D0  5008               	movf	(??_isupper+1)^0,w,c
  4170  0028D2  220A               	addwfc	(??_isupper+3)^0,f,c
  4171  0028D4  500A               	movf	(??_isupper+3)^0,w,c
  4172  0028D6  E10A               	bnz	u1850
  4173  0028D8  0E1A               	movlw	26
  4174  0028DA  5C09               	subwf	(??_isupper+2)^0,w,c
  4175  0028DC  A0D8               	btfss	status,0,c
  4176  0028DE  EF73  F014         	goto	u1851
  4177  0028E2  EF76  F014         	goto	u1850
  4178  0028E6                     u1851:
  4179  0028E6  0E01               	movlw	1
  4180  0028E8  EF77  F014         	goto	u1860
  4181  0028EC                     u1850:
  4182  0028EC  0E00               	movlw	0
  4183  0028EE                     u1860:
  4184  0028EE  6E05               	movwf	?_isupper^0,c
  4185  0028F0  6A06               	clrf	(?_isupper+1)^0,c
  4186  0028F2  0012               	return		;funcret
  4187  0028F4                     __end_of_isupper:
  4188                           	callstack 0
  4189                           
  4190 ;; *************** function _isalpha *****************
  4191 ;; Defined at:
  4192 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  c               2    4[COMRAM] int 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;		None
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  2    4[COMRAM] int 
  4199 ;; Registers used:
  4200 ;;		wreg, status,2, status,0
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4208 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4209 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4210 ;;Total ram usage:        6 bytes
  4211 ;; Hardware stack levels used:    1
  4212 ;; Hardware stack levels required when called:    5
  4213 ;; This function calls:
  4214 ;;		Nothing
  4215 ;; This function is called by:
  4216 ;;		_xtoa
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text21
  4221  002760                     __ptext21:
  4222                           	callstack 0
  4223  002760                     _isalpha:
  4224                           	callstack 18
  4225  002760  0E9F               	movlw	159
  4226  002762  6E07               	movwf	??_isalpha^0,c
  4227  002764  0EFF               	movlw	255
  4228  002766  6E08               	movwf	(??_isalpha+1)^0,c
  4229  002768  0E20               	movlw	32
  4230  00276A  1005               	iorwf	isalpha@c^0,w,c
  4231  00276C  6E09               	movwf	(??_isalpha+2)^0,c
  4232  00276E  0E00               	movlw	0
  4233  002770  1006               	iorwf	(isalpha@c+1)^0,w,c
  4234  002772  6E0A               	movwf	(??_isalpha+3)^0,c
  4235  002774  5007               	movf	??_isalpha^0,w,c
  4236  002776  2609               	addwf	(??_isalpha+2)^0,f,c
  4237  002778  5008               	movf	(??_isalpha+1)^0,w,c
  4238  00277A  220A               	addwfc	(??_isalpha+3)^0,f,c
  4239  00277C  500A               	movf	(??_isalpha+3)^0,w,c
  4240  00277E  E10A               	bnz	u1870
  4241  002780  0E1A               	movlw	26
  4242  002782  5C09               	subwf	(??_isalpha+2)^0,w,c
  4243  002784  A0D8               	btfss	status,0,c
  4244  002786  EFC7  F013         	goto	u1871
  4245  00278A  EFCA  F013         	goto	u1870
  4246  00278E                     u1871:
  4247  00278E  0E01               	movlw	1
  4248  002790  EFCB  F013         	goto	u1880
  4249  002794                     u1870:
  4250  002794  0E00               	movlw	0
  4251  002796                     u1880:
  4252  002796  6E05               	movwf	?_isalpha^0,c
  4253  002798  6A06               	clrf	(?_isalpha+1)^0,c
  4254  00279A  0012               	return		;funcret
  4255  00279C                     __end_of_isalpha:
  4256                           	callstack 0
  4257                           
  4258 ;; *************** function _atoi *****************
  4259 ;; Defined at:
  4260 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4263 ;;		 -> STR_5(14), STR_4(11), STR_3(14), STR_2(14), 
  4264 ;;		 -> STR_1(21), 
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;  n               2   24[COMRAM] int 
  4267 ;;  neg             2   17[COMRAM] int 
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  2   11[COMRAM] int 
  4270 ;; Registers used:
  4271 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4278 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4279 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4280 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4281 ;;Total ram usage:       15 bytes
  4282 ;; Hardware stack levels used:    1
  4283 ;; Hardware stack levels required when called:    6
  4284 ;; This function calls:
  4285 ;;		___wmul
  4286 ;;		_isdigit
  4287 ;;		_isspace
  4288 ;; This function is called by:
  4289 ;;		_vfpfcnvrt
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text22
  4294  001D6A                     __ptext22:
  4295                           	callstack 0
  4296  001D6A                     _atoi:
  4297                           	callstack 18
  4298  001D6A  0E00               	movlw	0
  4299  001D6C  6E1A               	movwf	(atoi@n+1)^0,c
  4300  001D6E  0E00               	movlw	0
  4301  001D70  6E19               	movwf	atoi@n^0,c
  4302  001D72  0E00               	movlw	0
  4303  001D74  6E13               	movwf	(atoi@neg+1)^0,c
  4304  001D76  0E00               	movlw	0
  4305  001D78  6E12               	movwf	atoi@neg^0,c
  4306  001D7A  EFC1  F00E         	goto	l3169
  4307  001D7E                     l3167:
  4308  001D7E  4A0C               	infsnz	atoi@s^0,f,c
  4309  001D80  2A0D               	incf	(atoi@s+1)^0,f,c
  4310  001D82                     l3169:
  4311  001D82  0E01               	movlw	1
  4312  001D84  6E18               	movwf	_atoi$2345^0,c
  4313  001D86  C00C  FFF6         	movff	atoi@s,tblptrl
  4314  001D8A  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4315  001D8E                     	if	0	;tblptru may be non-zero
  4316  001D8E                     	endif
  4317  001D8E                     	if	0	;tblptru may be non-zero
  4318  001D8E                     	endif
  4319  001D8E  0008               	tblrd		*
  4320  001D90  50F5               	movf	tablat,w,c
  4321  001D92  0A20               	xorlw	32
  4322  001D94  B4D8               	btfsc	status,2,c
  4323  001D96  EFCF  F00E         	goto	u2131
  4324  001D9A  EFD1  F00E         	goto	u2130
  4325  001D9E                     u2131:
  4326  001D9E  EFEE  F00E         	goto	l3177
  4327  001DA2                     u2130:
  4328  001DA2  0EF7               	movlw	247
  4329  001DA4  6E0E               	movwf	??_atoi^0,c
  4330  001DA6  0EFF               	movlw	255
  4331  001DA8  6E0F               	movwf	(??_atoi+1)^0,c
  4332  001DAA  C00C  FFF6         	movff	atoi@s,tblptrl
  4333  001DAE  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4334  001DB2                     	if	0	;tblptru may be non-zero
  4335  001DB2                     	endif
  4336  001DB2                     	if	0	;tblptru may be non-zero
  4337  001DB2                     	endif
  4338  001DB2  0008               	tblrd		*
  4339  001DB4  50F5               	movf	tablat,w,c
  4340  001DB6  6E10               	movwf	(??_atoi+2)^0,c
  4341  001DB8  6A11               	clrf	(??_atoi+3)^0,c
  4342  001DBA  500E               	movf	??_atoi^0,w,c
  4343  001DBC  2610               	addwf	(??_atoi+2)^0,f,c
  4344  001DBE  500F               	movf	(??_atoi+1)^0,w,c
  4345  001DC0  2211               	addwfc	(??_atoi+3)^0,f,c
  4346  001DC2  5011               	movf	(??_atoi+3)^0,w,c
  4347  001DC4  E109               	bnz	u2140
  4348  001DC6  0E05               	movlw	5
  4349  001DC8  5C10               	subwf	(??_atoi+2)^0,w,c
  4350  001DCA  A0D8               	btfss	status,0,c
  4351  001DCC  EFEA  F00E         	goto	u2141
  4352  001DD0  EFEC  F00E         	goto	u2140
  4353  001DD4                     u2141:
  4354  001DD4  EFEE  F00E         	goto	l3177
  4355  001DD8                     u2140:
  4356  001DD8  0E00               	movlw	0
  4357  001DDA  6E18               	movwf	_atoi$2345^0,c
  4358  001DDC                     l3177:
  4359  001DDC  C018  F014         	movff	_atoi$2345,_atoi$2344
  4360  001DE0  6A15               	clrf	(_atoi$2344+1)^0,c
  4361  001DE2  5014               	movf	_atoi$2344^0,w,c
  4362  001DE4  1015               	iorwf	(_atoi$2344+1)^0,w,c
  4363  001DE6  A4D8               	btfss	status,2,c
  4364  001DE8  EFF8  F00E         	goto	u2151
  4365  001DEC  EFFA  F00E         	goto	u2150
  4366  001DF0                     u2151:
  4367  001DF0  EFBF  F00E         	goto	l3167
  4368  001DF4                     u2150:
  4369  001DF4  EF04  F00F         	goto	l3187
  4370  001DF8                     l3183:
  4371  001DF8  0E00               	movlw	0
  4372  001DFA  6E13               	movwf	(atoi@neg+1)^0,c
  4373  001DFC  0E01               	movlw	1
  4374  001DFE  6E12               	movwf	atoi@neg^0,c
  4375  001E00                     l3185:
  4376  001E00  4A0C               	infsnz	atoi@s^0,f,c
  4377  001E02  2A0D               	incf	(atoi@s+1)^0,f,c
  4378  001E04  EF39  F00F         	goto	l3193
  4379  001E08                     l3187:
  4380  001E08  C00C  FFF6         	movff	atoi@s,tblptrl
  4381  001E0C  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4382  001E10                     	if	0	;tblptru may be non-zero
  4383  001E10                     	endif
  4384  001E10                     	if	0	;tblptru may be non-zero
  4385  001E10                     	endif
  4386  001E10  0008               	tblrd		*
  4387  001E12  50F5               	movf	tablat,w,c
  4388  001E14  6E0E               	movwf	??_atoi^0,c
  4389  001E16  6A0F               	clrf	(??_atoi+1)^0,c
  4390                           
  4391                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4392                           ; Switch size 1, requested type "simple"
  4393                           ; Number of cases is 1, Range of values is 0 to 0
  4394                           ; switch strategies available:
  4395                           ; Name         Instructions Cycles
  4396                           ; simple_byte            4     3 (average)
  4397                           ;	Chosen strategy is simple_byte
  4398  001E18  500F               	movf	(??_atoi+1)^0,w,c
  4399  001E1A  0A00               	xorlw	0	; case 0
  4400  001E1C  B4D8               	btfsc	status,2,c
  4401  001E1E  EF13  F00F         	goto	l4579
  4402  001E22  EF39  F00F         	goto	l3193
  4403  001E26                     l4579:
  4404                           
  4405                           ; Switch size 1, requested type "simple"
  4406                           ; Number of cases is 2, Range of values is 43 to 45
  4407                           ; switch strategies available:
  4408                           ; Name         Instructions Cycles
  4409                           ; simple_byte            7     4 (average)
  4410                           ;	Chosen strategy is simple_byte
  4411  001E26  500E               	movf	??_atoi^0,w,c
  4412  001E28  0A2B               	xorlw	43	; case 43
  4413  001E2A  B4D8               	btfsc	status,2,c
  4414  001E2C  EF00  F00F         	goto	l3185
  4415  001E30  0A06               	xorlw	6	; case 45
  4416  001E32  B4D8               	btfsc	status,2,c
  4417  001E34  EFFC  F00E         	goto	l3183
  4418  001E38  EF39  F00F         	goto	l3193
  4419  001E3C                     l3189:
  4420  001E3C  C019  F005         	movff	atoi@n,___wmul@multiplier
  4421  001E40  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  4422  001E44  0E00               	movlw	0
  4423  001E46  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  4424  001E48  0E0A               	movlw	10
  4425  001E4A  6E07               	movwf	___wmul@multiplicand^0,c
  4426  001E4C  EC08  F016         	call	___wmul	;wreg free
  4427  001E50  C00C  FFF6         	movff	atoi@s,tblptrl
  4428  001E54  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4429  001E58                     	if	0	;tblptru may be non-zero
  4430  001E58                     	endif
  4431  001E58                     	if	0	;tblptru may be non-zero
  4432  001E58                     	endif
  4433  001E58  0008               	tblrd		*
  4434  001E5A  50F5               	movf	tablat,w,c
  4435  001E5C  5E05               	subwf	?___wmul^0,f,c
  4436  001E5E  0E00               	movlw	0
  4437  001E60  5A06               	subwfb	(?___wmul+1)^0,f,c
  4438  001E62  0E30               	movlw	48
  4439  001E64  2405               	addwf	?___wmul^0,w,c
  4440  001E66  6E19               	movwf	atoi@n^0,c
  4441  001E68  0E00               	movlw	0
  4442  001E6A  2006               	addwfc	(?___wmul+1)^0,w,c
  4443  001E6C  6E1A               	movwf	(atoi@n+1)^0,c
  4444  001E6E  EF00  F00F         	goto	l3185
  4445  001E72                     l3193:
  4446  001E72  0ED0               	movlw	208
  4447  001E74  6E0E               	movwf	??_atoi^0,c
  4448  001E76  0EFF               	movlw	255
  4449  001E78  6E0F               	movwf	(??_atoi+1)^0,c
  4450  001E7A  C00C  FFF6         	movff	atoi@s,tblptrl
  4451  001E7E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4452  001E82                     	if	0	;tblptru may be non-zero
  4453  001E82                     	endif
  4454  001E82                     	if	0	;tblptru may be non-zero
  4455  001E82                     	endif
  4456  001E82  0008               	tblrd		*
  4457  001E84  50F5               	movf	tablat,w,c
  4458  001E86  6E10               	movwf	(??_atoi+2)^0,c
  4459  001E88  6A11               	clrf	(??_atoi+3)^0,c
  4460  001E8A  500E               	movf	??_atoi^0,w,c
  4461  001E8C  2610               	addwf	(??_atoi+2)^0,f,c
  4462  001E8E  500F               	movf	(??_atoi+1)^0,w,c
  4463  001E90  2211               	addwfc	(??_atoi+3)^0,f,c
  4464  001E92  5011               	movf	(??_atoi+3)^0,w,c
  4465  001E94  E10A               	bnz	u2160
  4466  001E96  0E0A               	movlw	10
  4467  001E98  5C10               	subwf	(??_atoi+2)^0,w,c
  4468  001E9A  A0D8               	btfss	status,0,c
  4469  001E9C  EF52  F00F         	goto	u2161
  4470  001EA0  EF55  F00F         	goto	u2160
  4471  001EA4                     u2161:
  4472  001EA4  0E01               	movlw	1
  4473  001EA6  EF56  F00F         	goto	u2170
  4474  001EAA                     u2160:
  4475  001EAA  0E00               	movlw	0
  4476  001EAC                     u2170:
  4477  001EAC  6E16               	movwf	_atoi$2346^0,c
  4478  001EAE  6A17               	clrf	(_atoi$2346+1)^0,c
  4479  001EB0  5016               	movf	_atoi$2346^0,w,c
  4480  001EB2  1017               	iorwf	(_atoi$2346+1)^0,w,c
  4481  001EB4  A4D8               	btfss	status,2,c
  4482  001EB6  EF5F  F00F         	goto	u2181
  4483  001EBA  EF61  F00F         	goto	u2180
  4484  001EBE                     u2181:
  4485  001EBE  EF1E  F00F         	goto	l3189
  4486  001EC2                     u2180:
  4487  001EC2  5012               	movf	atoi@neg^0,w,c
  4488  001EC4  1013               	iorwf	(atoi@neg+1)^0,w,c
  4489  001EC6  A4D8               	btfss	status,2,c
  4490  001EC8  EF68  F00F         	goto	u2191
  4491  001ECC  EF6A  F00F         	goto	u2190
  4492  001ED0                     u2191:
  4493  001ED0  EF78  F00F         	goto	l1641
  4494  001ED4                     u2190:
  4495  001ED4  C019  F00E         	movff	atoi@n,??_atoi
  4496  001ED8  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  4497  001EDC  1E0E               	comf	??_atoi^0,f,c
  4498  001EDE  1E0F               	comf	(??_atoi+1)^0,f,c
  4499  001EE0  4A0E               	infsnz	??_atoi^0,f,c
  4500  001EE2  2A0F               	incf	(??_atoi+1)^0,f,c
  4501  001EE4  C00E  F00C         	movff	??_atoi,?_atoi
  4502  001EE8  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  4503  001EEC  EF7C  F00F         	goto	l1644
  4504  001EF0                     l1641:
  4505  001EF0  C019  F00C         	movff	atoi@n,?_atoi
  4506  001EF4  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  4507  001EF8                     l1644:
  4508  001EF8  0012               	return		;funcret
  4509  001EFA                     __end_of_atoi:
  4510                           	callstack 0
  4511                           
  4512 ;; *************** function _isspace *****************
  4513 ;; Defined at:
  4514 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  c               2    4[COMRAM] int 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;		None
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  2    4[COMRAM] int 
  4521 ;; Registers used:
  4522 ;;		wreg, status,2, status,0
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4530 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4531 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4532 ;;Total ram usage:        7 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:    5
  4535 ;; This function calls:
  4536 ;;		Nothing
  4537 ;; This function is called by:
  4538 ;;		_atoi
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text23
  4543  00268A                     __ptext23:
  4544                           	callstack 0
  4545  00268A                     _isspace:
  4546                           	callstack 18
  4547  00268A  0E01               	movlw	1
  4548  00268C  6E0B               	movwf	_isspace$2371^0,c
  4549  00268E  0E20               	movlw	32
  4550  002690  1805               	xorwf	isspace@c^0,w,c
  4551  002692  1006               	iorwf	(isspace@c+1)^0,w,c
  4552  002694  B4D8               	btfsc	status,2,c
  4553  002696  EF4F  F013         	goto	u1941
  4554  00269A  EF51  F013         	goto	u1940
  4555  00269E                     u1941:
  4556  00269E  EF6A  F013         	goto	l3095
  4557  0026A2                     u1940:
  4558  0026A2  0EF7               	movlw	247
  4559  0026A4  6E07               	movwf	??_isspace^0,c
  4560  0026A6  0EFF               	movlw	255
  4561  0026A8  6E08               	movwf	(??_isspace+1)^0,c
  4562  0026AA  C005  F009         	movff	isspace@c,??_isspace+2
  4563  0026AE  C006  F00A         	movff	isspace@c+1,??_isspace+3
  4564  0026B2  5007               	movf	??_isspace^0,w,c
  4565  0026B4  2609               	addwf	(??_isspace+2)^0,f,c
  4566  0026B6  5008               	movf	(??_isspace+1)^0,w,c
  4567  0026B8  220A               	addwfc	(??_isspace+3)^0,f,c
  4568  0026BA  500A               	movf	(??_isspace+3)^0,w,c
  4569  0026BC  E109               	bnz	u1950
  4570  0026BE  0E05               	movlw	5
  4571  0026C0  5C09               	subwf	(??_isspace+2)^0,w,c
  4572  0026C2  A0D8               	btfss	status,0,c
  4573  0026C4  EF66  F013         	goto	u1951
  4574  0026C8  EF68  F013         	goto	u1950
  4575  0026CC                     u1951:
  4576  0026CC  EF6A  F013         	goto	l3095
  4577  0026D0                     u1950:
  4578  0026D0  0E00               	movlw	0
  4579  0026D2  6E0B               	movwf	_isspace$2371^0,c
  4580  0026D4                     l3095:
  4581  0026D4  C00B  F005         	movff	_isspace$2371,?_isspace
  4582  0026D8  6A06               	clrf	(?_isspace+1)^0,c
  4583  0026DA  0012               	return		;funcret
  4584  0026DC                     __end_of_isspace:
  4585                           	callstack 0
  4586                           
  4587 ;; *************** function _isdigit *****************
  4588 ;; Defined at:
  4589 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  c               2    4[COMRAM] int 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;		None
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  2    4[COMRAM] int 
  4596 ;; Registers used:
  4597 ;;		wreg, status,2, status,0
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4603 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4605 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4606 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4607 ;;Total ram usage:        6 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:    5
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_vfpfcnvrt
  4614 ;;		_atoi
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           	psect	text24
  4619  0028F4                     __ptext24:
  4620                           	callstack 0
  4621  0028F4                     _isdigit:
  4622                           	callstack 19
  4623  0028F4  0ED0               	movlw	208
  4624  0028F6  6E07               	movwf	??_isdigit^0,c
  4625  0028F8  0EFF               	movlw	255
  4626  0028FA  6E08               	movwf	(??_isdigit+1)^0,c
  4627  0028FC  C005  F009         	movff	isdigit@c,??_isdigit+2
  4628  002900  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  4629  002904  5007               	movf	??_isdigit^0,w,c
  4630  002906  2609               	addwf	(??_isdigit+2)^0,f,c
  4631  002908  5008               	movf	(??_isdigit+1)^0,w,c
  4632  00290A  220A               	addwfc	(??_isdigit+3)^0,f,c
  4633  00290C  500A               	movf	(??_isdigit+3)^0,w,c
  4634  00290E  E10A               	bnz	u1920
  4635  002910  0E0A               	movlw	10
  4636  002912  5C09               	subwf	(??_isdigit+2)^0,w,c
  4637  002914  A0D8               	btfss	status,0,c
  4638  002916  EF8F  F014         	goto	u1921
  4639  00291A  EF92  F014         	goto	u1920
  4640  00291E                     u1921:
  4641  00291E  0E01               	movlw	1
  4642  002920  EF93  F014         	goto	u1930
  4643  002924                     u1920:
  4644  002924  0E00               	movlw	0
  4645  002926                     u1930:
  4646  002926  6E05               	movwf	?_isdigit^0,c
  4647  002928  6A06               	clrf	(?_isdigit+1)^0,c
  4648  00292A  0012               	return		;funcret
  4649  00292C                     __end_of_isdigit:
  4650                           	callstack 0
  4651                           
  4652 ;; *************** function ___wmul *****************
  4653 ;; Defined at:
  4654 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  multiplier      2    4[COMRAM] unsigned int 
  4657 ;;  multiplicand    2    6[COMRAM] unsigned int 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;  product         2    8[COMRAM] unsigned int 
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  2    4[COMRAM] unsigned int 
  4662 ;; Registers used:
  4663 ;;		wreg, status,2, status,0, prodl, prodh
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4669 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4672 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4673 ;;Total ram usage:        6 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    5
  4676 ;; This function calls:
  4677 ;;		Nothing
  4678 ;; This function is called by:
  4679 ;;		_atoi
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           	psect	text25
  4684  002C10                     __ptext25:
  4685                           	callstack 0
  4686  002C10                     ___wmul:
  4687                           	callstack 18
  4688  002C10  5005               	movf	___wmul@multiplier^0,w,c
  4689  002C12  0207               	mulwf	___wmul@multiplicand^0,c
  4690  002C14  CFF3 F009          	movff	prodl,___wmul@product
  4691  002C18  CFF4 F00A          	movff	prodh,___wmul@product+1
  4692  002C1C  5005               	movf	___wmul@multiplier^0,w,c
  4693  002C1E  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  4694  002C20  50F3               	movf	243,w,c
  4695  002C22  260A               	addwf	(___wmul@product+1)^0,f,c
  4696  002C24  5006               	movf	(___wmul@multiplier+1)^0,w,c
  4697  002C26  0207               	mulwf	___wmul@multiplicand^0,c
  4698  002C28  50F3               	movf	243,w,c
  4699  002C2A  260A               	addwf	(___wmul@product+1)^0,f,c
  4700  002C2C  C009  F005         	movff	___wmul@product,?___wmul
  4701  002C30  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  4702  002C34  0012               	return		;funcret
  4703  002C36                     __end_of___wmul:
  4704                           	callstack 0
  4705                           
  4706 ;; *************** function _LCD_Function *****************
  4707 ;; Defined at:
  4708 ;;		line 490 in file "main.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  ordre           1    wreg     enum E12638
  4711 ;;  x               1    6[COMRAM] unsigned char 
  4712 ;;  z               1    7[COMRAM] unsigned char 
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;  ordre           1   10[COMRAM] enum E12638
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  1    wreg      void 
  4717 ;; Registers used:
  4718 ;;		wreg, status,2, status,0, cstack
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4724 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4726 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4727 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4728 ;;Total ram usage:        5 bytes
  4729 ;; Hardware stack levels used:    1
  4730 ;; Hardware stack levels required when called:    7
  4731 ;; This function calls:
  4732 ;;		_EUSART1_Write
  4733 ;;		_EUSART_function
  4734 ;; This function is called by:
  4735 ;;		_traitementEcran
  4736 ;;		_affiche
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           	psect	text26
  4741  002078                     __ptext26:
  4742                           	callstack 0
  4743  002078                     _LCD_Function:
  4744                           	callstack 20
  4745                           
  4746                           ;incstack = 0
  4747                           ;LCD_Function@ordre stored from wreg
  4748  002078  6E0B               	movwf	LCD_Function@ordre^0,c
  4749  00207A                     
  4750                           ;main.c: 491:     switch (ordre) {
  4751  00207A  EFA9  F010         	goto	l3381
  4752  00207E                     l3349:
  4753                           
  4754                           ;main.c: 493:             EUSART_function(0x51);
  4755  00207E  0E51               	movlw	81
  4756  002080  EC97  F016         	call	_EUSART_function
  4757                           
  4758                           ;main.c: 494:             break;
  4759  002084  EFDA  F010         	goto	l826
  4760  002088                     l3351:
  4761                           
  4762                           ;main.c: 497:             EUSART_function(0x53);
  4763  002088  0E53               	movlw	83
  4764  00208A  EC97  F016         	call	_EUSART_function
  4765                           
  4766                           ;main.c: 498:             EUSART1_Write(x);
  4767  00208E  5007               	movf	LCD_Function@x^0,w,c
  4768  002090  EC83  F016         	call	_EUSART1_Write
  4769                           
  4770                           ;main.c: 499:             break;
  4771  002094  EFDA  F010         	goto	l826
  4772  002098                     l3353:
  4773                           
  4774                           ;main.c: 502:             EUSART_function(0x41);
  4775  002098  0E41               	movlw	65
  4776  00209A  EC97  F016         	call	_EUSART_function
  4777                           
  4778                           ;main.c: 503:             break;
  4779  00209E  EFDA  F010         	goto	l826
  4780  0020A2                     l3355:
  4781                           
  4782                           ;main.c: 506:             EUSART_function(0x42);
  4783  0020A2  0E42               	movlw	66
  4784  0020A4  EC97  F016         	call	_EUSART_function
  4785                           
  4786                           ;main.c: 507:             break;
  4787  0020A8  EFDA  F010         	goto	l826
  4788  0020AC                     l3357:
  4789                           
  4790                           ;main.c: 510:             EUSART_function(0x45);
  4791  0020AC  0E45               	movlw	69
  4792  0020AE  EC97  F016         	call	_EUSART_function
  4793                           
  4794                           ;main.c: 512:             switch (x) {
  4795  0020B2  EF72  F010         	goto	l3369
  4796  0020B6                     l3359:
  4797                           
  4798                           ;main.c: 514:                     EUSART1_Write(0x00 + z);
  4799  0020B6  5008               	movf	LCD_Function@z^0,w,c
  4800  0020B8  EC83  F016         	call	_EUSART1_Write
  4801                           
  4802                           ;main.c: 515:                     break;
  4803  0020BC  EFDA  F010         	goto	l826
  4804  0020C0                     l3361:
  4805                           
  4806                           ;main.c: 517:                     EUSART1_Write(0x40 + z);
  4807  0020C0  5008               	movf	LCD_Function@z^0,w,c
  4808  0020C2  0F40               	addlw	64
  4809  0020C4  EC83  F016         	call	_EUSART1_Write
  4810                           
  4811                           ;main.c: 518:                     break;
  4812  0020C8  EFDA  F010         	goto	l826
  4813  0020CC                     l3363:
  4814                           
  4815                           ;main.c: 520:                     EUSART1_Write(0x14 + z);
  4816  0020CC  5008               	movf	LCD_Function@z^0,w,c
  4817  0020CE  0F14               	addlw	20
  4818  0020D0  EC83  F016         	call	_EUSART1_Write
  4819                           
  4820                           ;main.c: 521:                     break;
  4821  0020D4  EFDA  F010         	goto	l826
  4822  0020D8                     l3365:
  4823                           
  4824                           ;main.c: 523:                     EUSART1_Write(0x54 + z);
  4825  0020D8  5008               	movf	LCD_Function@z^0,w,c
  4826  0020DA  0F54               	addlw	84
  4827  0020DC  EC83  F016         	call	_EUSART1_Write
  4828                           
  4829                           ;main.c: 524:                     break;
  4830  0020E0  EFDA  F010         	goto	l826
  4831  0020E4                     l3369:
  4832  0020E4  5007               	movf	LCD_Function@x^0,w,c
  4833  0020E6  6E09               	movwf	??_LCD_Function^0,c
  4834  0020E8  6A0A               	clrf	(??_LCD_Function+1)^0,c
  4835                           
  4836                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4837                           ; Switch size 1, requested type "simple"
  4838                           ; Number of cases is 1, Range of values is 0 to 0
  4839                           ; switch strategies available:
  4840                           ; Name         Instructions Cycles
  4841                           ; simple_byte            4     3 (average)
  4842                           ;	Chosen strategy is simple_byte
  4843  0020EA  500A               	movf	(??_LCD_Function+1)^0,w,c
  4844  0020EC  0A00               	xorlw	0	; case 0
  4845  0020EE  B4D8               	btfsc	status,2,c
  4846  0020F0  EF7C  F010         	goto	l4581
  4847  0020F4  EFDA  F010         	goto	l826
  4848  0020F8                     l4581:
  4849                           
  4850                           ; Switch size 1, requested type "simple"
  4851                           ; Number of cases is 4, Range of values is 0 to 3
  4852                           ; switch strategies available:
  4853                           ; Name         Instructions Cycles
  4854                           ; simple_byte           13     7 (average)
  4855                           ;	Chosen strategy is simple_byte
  4856  0020F8  5009               	movf	??_LCD_Function^0,w,c
  4857  0020FA  0A00               	xorlw	0	; case 0
  4858  0020FC  B4D8               	btfsc	status,2,c
  4859  0020FE  EF5B  F010         	goto	l3359
  4860  002102  0A01               	xorlw	1	; case 1
  4861  002104  B4D8               	btfsc	status,2,c
  4862  002106  EF60  F010         	goto	l3361
  4863  00210A  0A03               	xorlw	3	; case 2
  4864  00210C  B4D8               	btfsc	status,2,c
  4865  00210E  EF66  F010         	goto	l3363
  4866  002112  0A01               	xorlw	1	; case 3
  4867  002114  B4D8               	btfsc	status,2,c
  4868  002116  EF6C  F010         	goto	l3365
  4869  00211A  EFDA  F010         	goto	l826
  4870  00211E                     l3371:
  4871                           
  4872                           ;main.c: 528:             EUSART_function(0x46);
  4873  00211E  0E46               	movlw	70
  4874  002120  EC97  F016         	call	_EUSART_function
  4875                           
  4876                           ;main.c: 529:             break;
  4877  002124  EFDA  F010         	goto	l826
  4878  002128                     l3373:
  4879                           
  4880                           ;main.c: 531:             EUSART_function(0x4B);
  4881  002128  0E4B               	movlw	75
  4882  00212A  EC97  F016         	call	_EUSART_function
  4883                           
  4884                           ;main.c: 532:             break;
  4885  00212E  EFDA  F010         	goto	l826
  4886  002132                     l3375:
  4887                           
  4888                           ;main.c: 534:             EUSART_function(0x4C);
  4889  002132  0E4C               	movlw	76
  4890  002134  EC97  F016         	call	_EUSART_function
  4891                           
  4892                           ;main.c: 535:             break;
  4893  002138  EFDA  F010         	goto	l826
  4894  00213C                     l3377:
  4895                           
  4896                           ;main.c: 537:             EUSART_function(0x41);
  4897  00213C  0E41               	movlw	65
  4898  00213E  EC97  F016         	call	_EUSART_function
  4899                           
  4900                           ;main.c: 538:             EUSART_function(0x51);
  4901  002142  0E51               	movlw	81
  4902  002144  EC97  F016         	call	_EUSART_function
  4903                           
  4904                           ;main.c: 539:             EUSART_function(0x46);
  4905  002148  0E46               	movlw	70
  4906  00214A  EC97  F016         	call	_EUSART_function
  4907                           
  4908                           ;main.c: 540:             break;
  4909  00214E  EFDA  F010         	goto	l826
  4910  002152                     l3381:
  4911  002152  500B               	movf	LCD_Function@ordre^0,w,c
  4912  002154  6E09               	movwf	??_LCD_Function^0,c
  4913  002156  6A0A               	clrf	(??_LCD_Function+1)^0,c
  4914                           
  4915                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4916                           ; Switch size 1, requested type "simple"
  4917                           ; Number of cases is 1, Range of values is 0 to 0
  4918                           ; switch strategies available:
  4919                           ; Name         Instructions Cycles
  4920                           ; simple_byte            4     3 (average)
  4921                           ;	Chosen strategy is simple_byte
  4922  002158  500A               	movf	(??_LCD_Function+1)^0,w,c
  4923  00215A  0A00               	xorlw	0	; case 0
  4924  00215C  B4D8               	btfsc	status,2,c
  4925  00215E  EFB3  F010         	goto	l4583
  4926  002162  EFDA  F010         	goto	l826
  4927  002166                     l4583:
  4928                           
  4929                           ; Switch size 1, requested type "simple"
  4930                           ; Number of cases is 9, Range of values is 0 to 8
  4931                           ; switch strategies available:
  4932                           ; Name         Instructions Cycles
  4933                           ; simple_byte           28    15 (average)
  4934                           ;	Chosen strategy is simple_byte
  4935  002166  5009               	movf	??_LCD_Function^0,w,c
  4936  002168  0A00               	xorlw	0	; case 0
  4937  00216A  B4D8               	btfsc	status,2,c
  4938  00216C  EF3F  F010         	goto	l3349
  4939  002170  0A01               	xorlw	1	; case 1
  4940  002172  B4D8               	btfsc	status,2,c
  4941  002174  EF56  F010         	goto	l3357
  4942  002178  0A03               	xorlw	3	; case 2
  4943  00217A  B4D8               	btfsc	status,2,c
  4944  00217C  EF8F  F010         	goto	l3371
  4945  002180  0A01               	xorlw	1	; case 3
  4946  002182  B4D8               	btfsc	status,2,c
  4947  002184  EF44  F010         	goto	l3351
  4948  002188  0A07               	xorlw	7	; case 4
  4949  00218A  B4D8               	btfsc	status,2,c
  4950  00218C  EF4C  F010         	goto	l3353
  4951  002190  0A01               	xorlw	1	; case 5
  4952  002192  B4D8               	btfsc	status,2,c
  4953  002194  EF51  F010         	goto	l3355
  4954  002198  0A03               	xorlw	3	; case 6
  4955  00219A  B4D8               	btfsc	status,2,c
  4956  00219C  EF94  F010         	goto	l3373
  4957  0021A0  0A01               	xorlw	1	; case 7
  4958  0021A2  B4D8               	btfsc	status,2,c
  4959  0021A4  EF99  F010         	goto	l3375
  4960  0021A8  0A0F               	xorlw	15	; case 8
  4961  0021AA  B4D8               	btfsc	status,2,c
  4962  0021AC  EF9E  F010         	goto	l3377
  4963  0021B0  EFDA  F010         	goto	l826
  4964  0021B4                     l826:
  4965  0021B4  0012               	return		;funcret
  4966  0021B6                     __end_of_LCD_Function:
  4967                           	callstack 0
  4968                           
  4969 ;; *************** function _EUSART_function *****************
  4970 ;; Defined at:
  4971 ;;		line 465 in file "main.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;  hex             1    wreg     unsigned char 
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;  hex             1    5[COMRAM] unsigned char 
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  1    wreg      void 
  4978 ;; Registers used:
  4979 ;;		wreg, status,2, cstack
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4988 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4989 ;;Total ram usage:        1 bytes
  4990 ;; Hardware stack levels used:    1
  4991 ;; Hardware stack levels required when called:    6
  4992 ;; This function calls:
  4993 ;;		_EUSART1_Write
  4994 ;; This function is called by:
  4995 ;;		_LCD_Function
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           	psect	text27
  5000  002D2E                     __ptext27:
  5001                           	callstack 0
  5002  002D2E                     _EUSART_function:
  5003                           	callstack 20
  5004                           
  5005                           ;incstack = 0
  5006                           ;EUSART_function@hex stored from wreg
  5007  002D2E  6E06               	movwf	EUSART_function@hex^0,c
  5008  002D30                     
  5009                           ;main.c: 466:     EUSART1_Write(0xFE);
  5010  002D30  0EFE               	movlw	254
  5011  002D32  EC83  F016         	call	_EUSART1_Write
  5012  002D36                     
  5013                           ;main.c: 467:     EUSART1_Write(hex);
  5014  002D36  5006               	movf	EUSART_function@hex^0,w,c
  5015  002D38  EC83  F016         	call	_EUSART1_Write
  5016  002D3C  0012               	return		;funcret
  5017  002D3E                     __end_of_EUSART_function:
  5018                           	callstack 0
  5019                           
  5020 ;; *************** function _EUSART1_Write *****************
  5021 ;; Defined at:
  5022 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;  txData          1    wreg     unsigned char 
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;  txData          1    4[COMRAM] unsigned char 
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  1    wreg      void 
  5029 ;; Registers used:
  5030 ;;		wreg
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5039 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5040 ;;Total ram usage:        1 bytes
  5041 ;; Hardware stack levels used:    1
  5042 ;; Hardware stack levels required when called:    5
  5043 ;; This function calls:
  5044 ;;		Nothing
  5045 ;; This function is called by:
  5046 ;;		_putch
  5047 ;;		_EUSART_function
  5048 ;;		_LCD_Function
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052                           	psect	text28
  5053  002D06                     __ptext28:
  5054                           	callstack 0
  5055  002D06                     _EUSART1_Write:
  5056                           	callstack 14
  5057                           
  5058                           ;incstack = 0
  5059                           ;EUSART1_Write@txData stored from wreg
  5060  002D06  6E05               	movwf	EUSART1_Write@txData^0,c
  5061  002D08                     l95:
  5062                           
  5063                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  5064  002D08  A89E               	btfss	158,4,c	;volatile
  5065  002D0A  EF89  F016         	goto	u1721
  5066  002D0E  EF8B  F016         	goto	u1720
  5067  002D12                     u1721:
  5068  002D12  EF84  F016         	goto	l95
  5069  002D16                     u1720:
  5070  002D16                     
  5071                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  5072  002D16  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5073  002D1A  0012               	return		;funcret
  5074  002D1C                     __end_of_EUSART1_Write:
  5075                           	callstack 0
  5076                           
  5077 ;; *************** function _lamp_test *****************
  5078 ;; Defined at:
  5079 ;;		line 135 in file "main.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;		None
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;  j               2    8[COMRAM] int 
  5084 ;;  j               2   12[COMRAM] int 
  5085 ;;  j               2   10[COMRAM] int 
  5086 ;;  k               2    6[COMRAM] int 
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		wreg, status,2, status,0
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5097 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5098 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5099 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5100 ;;Total ram usage:       10 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; Hardware stack levels required when called:    5
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		_main
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text29
  5111  001EFA                     __ptext29:
  5112                           	callstack 0
  5113  001EFA                     _lamp_test:
  5114                           	callstack 25
  5115  001EFA                     
  5116                           ;main.c: 137:     for (int j = 0; j < 2; j++) {
  5117  001EFA  0E00               	movlw	0
  5118  001EFC  6E0C               	movwf	(lamp_test@j+1)^0,c
  5119  001EFE  0E00               	movlw	0
  5120  001F00  6E0B               	movwf	lamp_test@j^0,c
  5121  001F02                     l3809:
  5122  001F02  B28A               	btfsc	138,1,c	;volatile
  5123  001F04  EF86  F00F         	goto	u2931
  5124  001F08  EF89  F00F         	goto	u2930
  5125  001F0C                     u2931:
  5126  001F0C  0E01               	movlw	1
  5127  001F0E  EF8A  F00F         	goto	u2936
  5128  001F12                     u2930:
  5129  001F12  0E00               	movlw	0
  5130  001F14                     u2936:
  5131  001F14  0AFF               	xorlw	255
  5132  001F16  6E05               	movwf	??_lamp_test^0,c
  5133  001F18  4605               	rlncf	??_lamp_test^0,f,c
  5134  001F1A  508A               	movf	138,w,c	;volatile
  5135  001F1C  1805               	xorwf	??_lamp_test^0,w,c
  5136  001F1E  0BFD               	andlw	-3
  5137  001F20  1805               	xorwf	??_lamp_test^0,w,c
  5138  001F22  6E8A               	movwf	138,c	;volatile
  5139  001F24                     
  5140                           ;main.c: 139:         _delay((unsigned long)((125)*(20000000/4000.0)));
  5141  001F24  0E04               	movlw	4
  5142  001F26  6E06               	movwf	(??_lamp_test+1)^0,c
  5143  001F28  0E2C               	movlw	44
  5144  001F2A  6E05               	movwf	??_lamp_test^0,c
  5145  001F2C  0EAC               	movlw	172
  5146  001F2E                     u3747:
  5147  001F2E  2EE8               	decfsz	wreg,f,c
  5148  001F30  D7FE               	bra	u3747
  5149  001F32  2E05               	decfsz	??_lamp_test^0,f,c
  5150  001F34  D7FC               	bra	u3747
  5151  001F36  2E06               	decfsz	(??_lamp_test+1)^0,f,c
  5152  001F38  D7FA               	bra	u3747
  5153                           
  5154                           ;main.c: 140:     }
  5155  001F3A  4A0B               	infsnz	lamp_test@j^0,f,c
  5156  001F3C  2A0C               	incf	(lamp_test@j+1)^0,f,c
  5157  001F3E  BE0C               	btfsc	(lamp_test@j+1)^0,7,c
  5158  001F40  EFAB  F00F         	goto	u2941
  5159  001F44  500C               	movf	(lamp_test@j+1)^0,w,c
  5160  001F46  E109               	bnz	u2940
  5161  001F48  0E02               	movlw	2
  5162  001F4A  5C0B               	subwf	lamp_test@j^0,w,c
  5163  001F4C  A0D8               	btfss	status,0,c
  5164  001F4E  EFAB  F00F         	goto	u2941
  5165  001F52  EFAD  F00F         	goto	u2940
  5166  001F56                     u2941:
  5167  001F56  EF81  F00F         	goto	l3809
  5168  001F5A                     u2940:
  5169  001F5A                     
  5170                           ;main.c: 141:     _delay((unsigned long)((250)*(20000000/4000.0)));
  5171  001F5A  0E07               	movlw	7
  5172  001F5C  6E06               	movwf	(??_lamp_test+1)^0,c
  5173  001F5E  0E58               	movlw	88
  5174  001F60  6E05               	movwf	??_lamp_test^0,c
  5175  001F62  0E5A               	movlw	90
  5176  001F64                     u3757:
  5177  001F64  2EE8               	decfsz	wreg,f,c
  5178  001F66  D7FE               	bra	u3757
  5179  001F68  2E05               	decfsz	??_lamp_test^0,f,c
  5180  001F6A  D7FC               	bra	u3757
  5181  001F6C  2E06               	decfsz	(??_lamp_test+1)^0,f,c
  5182  001F6E  D7FA               	bra	u3757
  5183  001F70                     
  5184                           ;main.c: 142:     for (int j = 0; j < 2; j++) {
  5185  001F70  0E00               	movlw	0
  5186  001F72  6E0E               	movwf	(lamp_test@j_1759+1)^0,c
  5187  001F74  0E00               	movlw	0
  5188  001F76  6E0D               	movwf	lamp_test@j_1759^0,c
  5189  001F78                     l3823:
  5190  001F78  B48A               	btfsc	138,2,c	;volatile
  5191  001F7A  EFC1  F00F         	goto	u2951
  5192  001F7E  EFC4  F00F         	goto	u2950
  5193  001F82                     u2951:
  5194  001F82  0E01               	movlw	1
  5195  001F84  EFC5  F00F         	goto	u2956
  5196  001F88                     u2950:
  5197  001F88  0E00               	movlw	0
  5198  001F8A                     u2956:
  5199  001F8A  0AFF               	xorlw	255
  5200  001F8C  6E05               	movwf	??_lamp_test^0,c
  5201  001F8E  4605               	rlncf	??_lamp_test^0,f,c
  5202  001F90  4605               	rlncf	??_lamp_test^0,f,c
  5203  001F92  508A               	movf	138,w,c	;volatile
  5204  001F94  1805               	xorwf	??_lamp_test^0,w,c
  5205  001F96  0BFB               	andlw	-5
  5206  001F98  1805               	xorwf	??_lamp_test^0,w,c
  5207  001F9A  6E8A               	movwf	138,c	;volatile
  5208  001F9C                     
  5209                           ;main.c: 144:         _delay((unsigned long)((125)*(20000000/4000.0)));
  5210  001F9C  0E04               	movlw	4
  5211  001F9E  6E06               	movwf	(??_lamp_test+1)^0,c
  5212  001FA0  0E2C               	movlw	44
  5213  001FA2  6E05               	movwf	??_lamp_test^0,c
  5214  001FA4  0EAC               	movlw	172
  5215  001FA6                     u3767:
  5216  001FA6  2EE8               	decfsz	wreg,f,c
  5217  001FA8  D7FE               	bra	u3767
  5218  001FAA  2E05               	decfsz	??_lamp_test^0,f,c
  5219  001FAC  D7FC               	bra	u3767
  5220  001FAE  2E06               	decfsz	(??_lamp_test+1)^0,f,c
  5221  001FB0  D7FA               	bra	u3767
  5222                           
  5223                           ;main.c: 145:     }
  5224  001FB2  4A0D               	infsnz	lamp_test@j_1759^0,f,c
  5225  001FB4  2A0E               	incf	(lamp_test@j_1759+1)^0,f,c
  5226  001FB6  BE0E               	btfsc	(lamp_test@j_1759+1)^0,7,c
  5227  001FB8  EFE7  F00F         	goto	u2961
  5228  001FBC  500E               	movf	(lamp_test@j_1759+1)^0,w,c
  5229  001FBE  E109               	bnz	u2960
  5230  001FC0  0E02               	movlw	2
  5231  001FC2  5C0D               	subwf	lamp_test@j_1759^0,w,c
  5232  001FC4  A0D8               	btfss	status,0,c
  5233  001FC6  EFE7  F00F         	goto	u2961
  5234  001FCA  EFE9  F00F         	goto	u2960
  5235  001FCE                     u2961:
  5236  001FCE  EFBC  F00F         	goto	l3823
  5237  001FD2                     u2960:
  5238  001FD2                     
  5239                           ;main.c: 146:     _delay((unsigned long)((250)*(20000000/4000.0)));
  5240  001FD2  0E07               	movlw	7
  5241  001FD4  6E06               	movwf	(??_lamp_test+1)^0,c
  5242  001FD6  0E58               	movlw	88
  5243  001FD8  6E05               	movwf	??_lamp_test^0,c
  5244  001FDA  0E5A               	movlw	90
  5245  001FDC                     u3777:
  5246  001FDC  2EE8               	decfsz	wreg,f,c
  5247  001FDE  D7FE               	bra	u3777
  5248  001FE0  2E05               	decfsz	??_lamp_test^0,f,c
  5249  001FE2  D7FC               	bra	u3777
  5250  001FE4  2E06               	decfsz	(??_lamp_test+1)^0,f,c
  5251  001FE6  D7FA               	bra	u3777
  5252  001FE8                     
  5253                           ;main.c: 147:     int k = LCD_Mode ? 12 : 6;
  5254  001FE8  0100               	movlb	0	; () banked
  5255  001FEA  51F8               	movf	_LCD_Mode& (0+255),w,b
  5256  001FEC  A4D8               	btfss	status,2,c
  5257  001FEE  EFFB  F00F         	goto	u2971
  5258  001FF2  EFFD  F00F         	goto	u2970
  5259  001FF6                     u2971:
  5260  001FF6  EF03  F010         	goto	l3835
  5261  001FFA                     u2970:
  5262  001FFA                     
  5263                           ; BSR set to: 0
  5264  001FFA  0E00               	movlw	0
  5265  001FFC  6E08               	movwf	(lamp_test@k+1)^0,c
  5266  001FFE  0E06               	movlw	6
  5267  002000  6E07               	movwf	lamp_test@k^0,c
  5268  002002  EF07  F010         	goto	l633
  5269  002006                     l3835:
  5270                           
  5271                           ; BSR set to: 0
  5272  002006  0E00               	movlw	0
  5273  002008  6E08               	movwf	(lamp_test@k+1)^0,c
  5274  00200A  0E0C               	movlw	12
  5275  00200C  6E07               	movwf	lamp_test@k^0,c
  5276  00200E                     l633:
  5277                           
  5278                           ; BSR set to: 0
  5279                           ;main.c: 149:     for (int j = 0; j < k; j++) {
  5280  00200E  0E00               	movlw	0
  5281  002010  6E0A               	movwf	(lamp_test@j_1761+1)^0,c
  5282  002012  0E00               	movlw	0
  5283  002014  6E09               	movwf	lamp_test@j_1761^0,c
  5284  002016  EF2C  F010         	goto	l3841
  5285  00201A                     l3837:
  5286  00201A  BA8A               	btfsc	138,5,c	;volatile
  5287  00201C  EF12  F010         	goto	u2981
  5288  002020  EF15  F010         	goto	u2980
  5289  002024                     u2981:
  5290  002024  0E01               	movlw	1
  5291  002026  EF16  F010         	goto	u2986
  5292  00202A                     u2980:
  5293  00202A  0E00               	movlw	0
  5294  00202C                     u2986:
  5295  00202C  0AFF               	xorlw	255
  5296  00202E  6E05               	movwf	??_lamp_test^0,c
  5297  002030  3A05               	swapf	??_lamp_test^0,f,c
  5298  002032  4605               	rlncf	??_lamp_test^0,f,c
  5299  002034  508A               	movf	138,w,c	;volatile
  5300  002036  1805               	xorwf	??_lamp_test^0,w,c
  5301  002038  0BDF               	andlw	-33
  5302  00203A  1805               	xorwf	??_lamp_test^0,w,c
  5303  00203C  6E8A               	movwf	138,c	;volatile
  5304  00203E                     
  5305                           ;main.c: 151:         _delay((unsigned long)((125)*(20000000/4000.0)));
  5306  00203E  0E04               	movlw	4
  5307  002040  6E06               	movwf	(??_lamp_test+1)^0,c
  5308  002042  0E2C               	movlw	44
  5309  002044  6E05               	movwf	??_lamp_test^0,c
  5310  002046  0EAC               	movlw	172
  5311  002048                     u3787:
  5312  002048  2EE8               	decfsz	wreg,f,c
  5313  00204A  D7FE               	bra	u3787
  5314  00204C  2E05               	decfsz	??_lamp_test^0,f,c
  5315  00204E  D7FC               	bra	u3787
  5316  002050  2E06               	decfsz	(??_lamp_test+1)^0,f,c
  5317  002052  D7FA               	bra	u3787
  5318                           
  5319                           ;main.c: 152:     }
  5320  002054  4A09               	infsnz	lamp_test@j_1761^0,f,c
  5321  002056  2A0A               	incf	(lamp_test@j_1761+1)^0,f,c
  5322  002058                     l3841:
  5323  002058  5007               	movf	lamp_test@k^0,w,c
  5324  00205A  5C09               	subwf	lamp_test@j_1761^0,w,c
  5325  00205C  500A               	movf	(lamp_test@j_1761+1)^0,w,c
  5326  00205E  0A80               	xorlw	128
  5327  002060  6E05               	movwf	??_lamp_test^0,c
  5328  002062  5008               	movf	(lamp_test@k+1)^0,w,c
  5329  002064  0A80               	xorlw	128
  5330  002066  5805               	subwfb	??_lamp_test^0,w,c
  5331  002068  A0D8               	btfss	status,0,c
  5332  00206A  EF39  F010         	goto	u2991
  5333  00206E  EF3B  F010         	goto	u2990
  5334  002072                     u2991:
  5335  002072  EF0D  F010         	goto	l3837
  5336  002076                     u2990:
  5337  002076  0012               	return		;funcret
  5338  002078                     __end_of_lamp_test:
  5339                           	callstack 0
  5340                           
  5341 ;; *************** function _SYSTEM_Initialize *****************
  5342 ;; Defined at:
  5343 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;		None
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;		None
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  1    wreg      void 
  5350 ;; Registers used:
  5351 ;;		wreg, status,2, status,0, cstack
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5361 ;;Total ram usage:        0 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:    7
  5364 ;; This function calls:
  5365 ;;		_EUSART1_Initialize
  5366 ;;		_INTERRUPT_Initialize
  5367 ;;		_OSCILLATOR_Initialize
  5368 ;;		_PIN_MANAGER_Initialize
  5369 ;;		_TMR0_Initialize
  5370 ;;		_TMR1_Initialize
  5371 ;;		_TMR2_Initialize
  5372 ;;		_TMR3_Initialize
  5373 ;;		_TMR4_Initialize
  5374 ;; This function is called by:
  5375 ;;		_main
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           	psect	text30
  5380  002C36                     __ptext30:
  5381                           	callstack 0
  5382  002C36                     _SYSTEM_Initialize:
  5383                           	callstack 23
  5384  002C36                     
  5385                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  5386  002C36  ECD1  F016         	call	_INTERRUPT_Initialize	;wreg free
  5387  002C3A                     
  5388                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5389  002C3A  ECA3  F015         	call	_PIN_MANAGER_Initialize	;wreg free
  5390  002C3E                     
  5391                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5392  002C3E  EC8E  F016         	call	_OSCILLATOR_Initialize	;wreg free
  5393  002C42                     
  5394                           ;mcc_generated_files/mcc.c: 56:     TMR3_Initialize();
  5395  002C42  ECCE  F013         	call	_TMR3_Initialize	;wreg free
  5396  002C46                     
  5397                           ;mcc_generated_files/mcc.c: 57:     TMR4_Initialize();
  5398  002C46  EC3D  F016         	call	_TMR4_Initialize	;wreg free
  5399  002C4A                     
  5400                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  5401  002C4A  EC4C  F016         	call	_TMR2_Initialize	;wreg free
  5402  002C4E                     
  5403                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
  5404  002C4E  ECEB  F013         	call	_TMR1_Initialize	;wreg free
  5405  002C52                     
  5406                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  5407  002C52  EC96  F014         	call	_TMR0_Initialize	;wreg free
  5408  002C56                     
  5409                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  5410  002C56  EC90  F013         	call	_EUSART1_Initialize	;wreg free
  5411  002C5A  0012               	return		;funcret
  5412  002C5C                     __end_of_SYSTEM_Initialize:
  5413                           	callstack 0
  5414                           
  5415 ;; *************** function _TMR4_Initialize *****************
  5416 ;; Defined at:
  5417 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;		None
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;		None
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      void 
  5424 ;; Registers used:
  5425 ;;		wreg, status,2, status,0, cstack
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5435 ;;Total ram usage:        0 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:    6
  5438 ;; This function calls:
  5439 ;;		_TMR4_SetInterruptHandler
  5440 ;; This function is called by:
  5441 ;;		_SYSTEM_Initialize
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           	psect	text31
  5446  002C7A                     __ptext31:
  5447                           	callstack 0
  5448  002C7A                     _TMR4_Initialize:
  5449                           	callstack 23
  5450  002C7A                     
  5451                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xF9;
  5452  002C7A  0EF9               	movlw	249
  5453  002C7C  6EA9               	movwf	169,c	;volatile
  5454                           
  5455                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  5456  002C7E  0E00               	movlw	0
  5457  002C80  6E87               	movwf	135,c	;volatile
  5458  002C82                     
  5459                           ;mcc_generated_files/tmr4.c: 75:     PIR4bits.TMR4IF = 0;
  5460  002C82  9EB7               	bcf	183,7,c	;volatile
  5461  002C84                     
  5462                           ;mcc_generated_files/tmr4.c: 78:     PIE4bits.TMR4IE = 1;
  5463  002C84  8EB6               	bsf	182,7,c	;volatile
  5464  002C86                     
  5465                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  5466  002C86  0EA6               	movlw	low _TMR4_DefaultInterruptHandler
  5467  002C88  6E05               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  5468  002C8A  0E2D               	movlw	high _TMR4_DefaultInterruptHandler
  5469  002C8C  6E06               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  5470  002C8E  ECA4  F016         	call	_TMR4_SetInterruptHandler	;wreg free
  5471  002C92                     
  5472                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x26;
  5473  002C92  0E26               	movlw	38
  5474  002C94  6E88               	movwf	136,c	;volatile
  5475  002C96  0012               	return		;funcret
  5476  002C98                     __end_of_TMR4_Initialize:
  5477                           	callstack 0
  5478                           
  5479 ;; *************** function _TMR4_SetInterruptHandler *****************
  5480 ;; Defined at:
  5481 ;;		line 147 in file "mcc_generated_files/tmr4.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  5484 ;;		 -> connect(1), TMR4_DefaultInterruptHandler(1), 
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;		None
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  1    wreg      void 
  5489 ;; Registers used:
  5490 ;;		wreg, status,2, status,0
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5499 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5500 ;;Total ram usage:        2 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    5
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		_TMR4_Initialize
  5507 ;;		_main
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text32
  5512  002D48                     __ptext32:
  5513                           	callstack 0
  5514  002D48                     _TMR4_SetInterruptHandler:
  5515                           	callstack 25
  5516  002D48                     
  5517                           ;mcc_generated_files/tmr4.c: 148:     TMR4_InterruptHandler = InterruptHandler;
  5518  002D48  C005  F0E2         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  5519  002D4C  C006  F0E3         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  5520  002D50  0012               	return		;funcret
  5521  002D52                     __end_of_TMR4_SetInterruptHandler:
  5522                           	callstack 0
  5523                           
  5524 ;; *************** function _TMR3_Initialize *****************
  5525 ;; Defined at:
  5526 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;		None
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;		None
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  1    wreg      void 
  5533 ;; Registers used:
  5534 ;;		wreg, status,2, status,0, cstack
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5543 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5544 ;;Total ram usage:        2 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; Hardware stack levels required when called:    6
  5547 ;; This function calls:
  5548 ;;		_TMR3_SetInterruptHandler
  5549 ;; This function is called by:
  5550 ;;		_SYSTEM_Initialize
  5551 ;;		_main
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text33
  5556  00279C                     __ptext33:
  5557                           	callstack 0
  5558  00279C                     _TMR3_Initialize:
  5559                           	callstack 24
  5560  00279C                     
  5561                           ;mcc_generated_files/tmr3.c: 69:     T3GCON = 0x00;
  5562  00279C  0E00               	movlw	0
  5563  00279E  6EB0               	movwf	176,c	;volatile
  5564                           
  5565                           ;mcc_generated_files/tmr3.c: 72:     TMR3H = 0x0B;
  5566  0027A0  0E0B               	movlw	11
  5567  0027A2  6EB3               	movwf	179,c	;volatile
  5568                           
  5569                           ;mcc_generated_files/tmr3.c: 75:     TMR3L = 0xDC;
  5570  0027A4  0EDC               	movlw	220
  5571  0027A6  6EB2               	movwf	178,c	;volatile
  5572  0027A8                     
  5573                           ;mcc_generated_files/tmr3.c: 78:     PIR2bits.TMR3IF = 0;
  5574  0027A8  92A1               	bcf	161,1,c	;volatile
  5575  0027AA                     
  5576                           ;mcc_generated_files/tmr3.c: 81:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  5577  0027AA  50B2               	movf	178,w,c	;volatile
  5578  0027AC  CFB3 F007          	movff	4019,??_TMR3_Initialize	;volatile
  5579  0027B0  6A08               	clrf	(??_TMR3_Initialize+1)^0,c
  5580  0027B2  C007  F008         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  5581  0027B6  6A07               	clrf	??_TMR3_Initialize^0,c
  5582  0027B8  1007               	iorwf	??_TMR3_Initialize^0,w,c
  5583  0027BA  0100               	movlb	0	; () banked
  5584  0027BC  6FE8               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  5585  0027BE  5008               	movf	(??_TMR3_Initialize+1)^0,w,c
  5586  0027C0  6FE9               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  5587  0027C2                     
  5588                           ; BSR set to: 0
  5589                           ;mcc_generated_files/tmr3.c: 84:     PIE2bits.TMR3IE = 1;
  5590  0027C2  82A0               	bsf	160,1,c	;volatile
  5591  0027C4                     
  5592                           ; BSR set to: 0
  5593                           ;mcc_generated_files/tmr3.c: 87:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
  5594  0027C4  0EA8               	movlw	low _TMR3_DefaultInterruptHandler
  5595  0027C6  6E05               	movwf	TMR3_SetInterruptHandler@InterruptHandler^0,c
  5596  0027C8  0E2D               	movlw	high _TMR3_DefaultInterruptHandler
  5597  0027CA  6E06               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)^0,c
  5598  0027CC  ECA9  F016         	call	_TMR3_SetInterruptHandler	;wreg free
  5599  0027D0                     
  5600                           ;mcc_generated_files/tmr3.c: 90:     T3CON = 0x31;
  5601  0027D0  0E31               	movlw	49
  5602  0027D2  6EB1               	movwf	177,c	;volatile
  5603  0027D4  0012               	return		;funcret
  5604  0027D6                     __end_of_TMR3_Initialize:
  5605                           	callstack 0
  5606                           
  5607 ;; *************** function _TMR3_SetInterruptHandler *****************
  5608 ;; Defined at:
  5609 ;;		line 185 in file "mcc_generated_files/tmr3.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  5612 ;;		 -> Secondes_5(1), TMR3_DefaultInterruptHandler(1), 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;		None
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      void 
  5617 ;; Registers used:
  5618 ;;		wreg, status,2, status,0
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5627 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5628 ;;Total ram usage:        2 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:    5
  5631 ;; This function calls:
  5632 ;;		Nothing
  5633 ;; This function is called by:
  5634 ;;		_TMR3_Initialize
  5635 ;;		_main
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           	psect	text34
  5640  002D52                     __ptext34:
  5641                           	callstack 0
  5642  002D52                     _TMR3_SetInterruptHandler:
  5643                           	callstack 25
  5644  002D52                     
  5645                           ;mcc_generated_files/tmr3.c: 186:     TMR3_InterruptHandler = InterruptHandler;
  5646  002D52  C005  F0E6         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  5647  002D56  C006  F0E7         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  5648  002D5A  0012               	return		;funcret
  5649  002D5C                     __end_of_TMR3_SetInterruptHandler:
  5650                           	callstack 0
  5651                           
  5652 ;; *************** function _TMR2_Initialize *****************
  5653 ;; Defined at:
  5654 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;		None
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;		None
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  1    wreg      void 
  5661 ;; Registers used:
  5662 ;;		wreg, status,2, status,0, cstack
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5672 ;;Total ram usage:        0 bytes
  5673 ;; Hardware stack levels used:    1
  5674 ;; Hardware stack levels required when called:    6
  5675 ;; This function calls:
  5676 ;;		_TMR2_SetInterruptHandler
  5677 ;; This function is called by:
  5678 ;;		_SYSTEM_Initialize
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           	psect	text35
  5683  002C98                     __ptext35:
  5684                           	callstack 0
  5685  002C98                     _TMR2_Initialize:
  5686                           	callstack 23
  5687  002C98                     
  5688                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x7C;
  5689  002C98  0E7C               	movlw	124
  5690  002C9A  6ECB               	movwf	203,c	;volatile
  5691                           
  5692                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  5693  002C9C  0E00               	movlw	0
  5694  002C9E  6ECC               	movwf	204,c	;volatile
  5695  002CA0                     
  5696                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  5697  002CA0  929E               	bcf	158,1,c	;volatile
  5698  002CA2                     
  5699                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  5700  002CA2  829D               	bsf	157,1,c	;volatile
  5701  002CA4                     
  5702                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  5703  002CA4  0EAA               	movlw	low _TMR2_DefaultInterruptHandler
  5704  002CA6  6E05               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
  5705  002CA8  0E2D               	movlw	high _TMR2_DefaultInterruptHandler
  5706  002CAA  6E06               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
  5707  002CAC  ECAE  F016         	call	_TMR2_SetInterruptHandler	;wreg free
  5708  002CB0                     
  5709                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4E;
  5710  002CB0  0E4E               	movlw	78
  5711  002CB2  6ECA               	movwf	202,c	;volatile
  5712  002CB4  0012               	return		;funcret
  5713  002CB6                     __end_of_TMR2_Initialize:
  5714                           	callstack 0
  5715                           
  5716 ;; *************** function _TMR2_SetInterruptHandler *****************
  5717 ;; Defined at:
  5718 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  5721 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;		None
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  1    wreg      void 
  5726 ;; Registers used:
  5727 ;;		wreg, status,2, status,0
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5733 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5737 ;;Total ram usage:        2 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:    5
  5740 ;; This function calls:
  5741 ;;		Nothing
  5742 ;; This function is called by:
  5743 ;;		_TMR2_Initialize
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text36
  5748  002D5C                     __ptext36:
  5749                           	callstack 0
  5750  002D5C                     _TMR2_SetInterruptHandler:
  5751                           	callstack 23
  5752  002D5C                     
  5753                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  5754  002D5C  C005  F0E4         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  5755  002D60  C006  F0E5         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  5756  002D64  0012               	return		;funcret
  5757  002D66                     __end_of_TMR2_SetInterruptHandler:
  5758                           	callstack 0
  5759                           
  5760 ;; *************** function _TMR1_Initialize *****************
  5761 ;; Defined at:
  5762 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;		None
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;		None
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      void 
  5769 ;; Registers used:
  5770 ;;		wreg, status,2, status,0, cstack
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5778 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5779 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5780 ;;Total ram usage:        2 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; Hardware stack levels required when called:    6
  5783 ;; This function calls:
  5784 ;;		_TMR1_SetInterruptHandler
  5785 ;; This function is called by:
  5786 ;;		_SYSTEM_Initialize
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text37
  5791  0027D6                     __ptext37:
  5792                           	callstack 0
  5793  0027D6                     _TMR1_Initialize:
  5794                           	callstack 23
  5795  0027D6                     
  5796                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  5797  0027D6  0E00               	movlw	0
  5798  0027D8  6EAA               	movwf	170,c	;volatile
  5799                           
  5800                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xE7;
  5801  0027DA  0EE7               	movlw	231
  5802  0027DC  6ECF               	movwf	207,c	;volatile
  5803                           
  5804                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x96;
  5805  0027DE  0E96               	movlw	150
  5806  0027E0  6ECE               	movwf	206,c	;volatile
  5807  0027E2                     
  5808                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  5809  0027E2  909E               	bcf	158,0,c	;volatile
  5810  0027E4                     
  5811                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5812  0027E4  50CE               	movf	206,w,c	;volatile
  5813  0027E6  CFCF F007          	movff	4047,??_TMR1_Initialize	;volatile
  5814  0027EA  6A08               	clrf	(??_TMR1_Initialize+1)^0,c
  5815  0027EC  C007  F008         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  5816  0027F0  6A07               	clrf	??_TMR1_Initialize^0,c
  5817  0027F2  1007               	iorwf	??_TMR1_Initialize^0,w,c
  5818  0027F4  0100               	movlb	0	; () banked
  5819  0027F6  6FF0               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  5820  0027F8  5008               	movf	(??_TMR1_Initialize+1)^0,w,c
  5821  0027FA  6FF1               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  5822  0027FC                     
  5823                           ; BSR set to: 0
  5824                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  5825  0027FC  809D               	bsf	157,0,c	;volatile
  5826  0027FE                     
  5827                           ; BSR set to: 0
  5828                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  5829  0027FE  0EAC               	movlw	low _TMR1_DefaultInterruptHandler
  5830  002800  6E05               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  5831  002802  0E2D               	movlw	high _TMR1_DefaultInterruptHandler
  5832  002804  6E06               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  5833  002806  ECB3  F016         	call	_TMR1_SetInterruptHandler	;wreg free
  5834  00280A                     
  5835                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  5836  00280A  0E31               	movlw	49
  5837  00280C  6ECD               	movwf	205,c	;volatile
  5838  00280E  0012               	return		;funcret
  5839  002810                     __end_of_TMR1_Initialize:
  5840                           	callstack 0
  5841                           
  5842 ;; *************** function _TMR1_SetInterruptHandler *****************
  5843 ;; Defined at:
  5844 ;;		line 185 in file "mcc_generated_files/tmr1.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  5847 ;;		 -> Blink_(1), TMR1_DefaultInterruptHandler(1), 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;		None
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  1    wreg      void 
  5852 ;; Registers used:
  5853 ;;		wreg, status,2, status,0
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5862 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5863 ;;Total ram usage:        2 bytes
  5864 ;; Hardware stack levels used:    1
  5865 ;; Hardware stack levels required when called:    5
  5866 ;; This function calls:
  5867 ;;		Nothing
  5868 ;; This function is called by:
  5869 ;;		_TMR1_Initialize
  5870 ;;		_main
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           	psect	text38
  5875  002D66                     __ptext38:
  5876                           	callstack 0
  5877  002D66                     _TMR1_SetInterruptHandler:
  5878                           	callstack 25
  5879  002D66                     
  5880                           ;mcc_generated_files/tmr1.c: 186:     TMR1_InterruptHandler = InterruptHandler;
  5881  002D66  C005  F0EE         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  5882  002D6A  C006  F0EF         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  5883  002D6E  0012               	return		;funcret
  5884  002D70                     __end_of_TMR1_SetInterruptHandler:
  5885                           	callstack 0
  5886                           
  5887 ;; *************** function _TMR0_Initialize *****************
  5888 ;; Defined at:
  5889 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;		None
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;		None
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  1    wreg      void 
  5896 ;; Registers used:
  5897 ;;		wreg, status,2, status,0, cstack
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5905 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5906 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5907 ;;Total ram usage:        2 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; Hardware stack levels required when called:    6
  5910 ;; This function calls:
  5911 ;;		_TMR0_SetInterruptHandler
  5912 ;; This function is called by:
  5913 ;;		_SYSTEM_Initialize
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           	psect	text39
  5918  00292C                     __ptext39:
  5919                           	callstack 0
  5920  00292C                     _TMR0_Initialize:
  5921                           	callstack 23
  5922  00292C                     
  5923                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  5924  00292C  9CD5               	bcf	213,6,c	;volatile
  5925  00292E                     
  5926                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x0B;
  5927  00292E  0E0B               	movlw	11
  5928  002930  6ED7               	movwf	215,c	;volatile
  5929                           
  5930                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0xDB;
  5931  002932  0EDB               	movlw	219
  5932  002934  6ED6               	movwf	214,c	;volatile
  5933  002936                     
  5934                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  5935  002936  50D6               	movf	214,w,c	;volatile
  5936  002938  CFD7 F007          	movff	4055,??_TMR0_Initialize	;volatile
  5937  00293C  6A08               	clrf	(??_TMR0_Initialize+1)^0,c
  5938  00293E  C007  F008         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  5939  002942  6A07               	clrf	??_TMR0_Initialize^0,c
  5940  002944  1007               	iorwf	??_TMR0_Initialize^0,w,c
  5941  002946  0100               	movlb	0	; () banked
  5942  002948  6FEA               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  5943  00294A  5008               	movf	(??_TMR0_Initialize+1)^0,w,c
  5944  00294C  6FEB               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  5945  00294E                     
  5946                           ; BSR set to: 0
  5947                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  5948  00294E  94F2               	bcf	242,2,c	;volatile
  5949  002950                     
  5950                           ; BSR set to: 0
  5951                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  5952  002950  8AF2               	bsf	242,5,c	;volatile
  5953  002952                     
  5954                           ; BSR set to: 0
  5955                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5956  002952  0EAE               	movlw	low _TMR0_DefaultInterruptHandler
  5957  002954  6E05               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  5958  002956  0E2D               	movlw	high _TMR0_DefaultInterruptHandler
  5959  002958  6E06               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  5960  00295A  ECB8  F016         	call	_TMR0_SetInterruptHandler	;wreg free
  5961  00295E                     
  5962                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x93;
  5963  00295E  0E93               	movlw	147
  5964  002960  6ED5               	movwf	213,c	;volatile
  5965  002962  0012               	return		;funcret
  5966  002964                     __end_of_TMR0_Initialize:
  5967                           	callstack 0
  5968                           
  5969 ;; *************** function _TMR0_SetInterruptHandler *****************
  5970 ;; Defined at:
  5971 ;;		line 171 in file "mcc_generated_files/tmr0.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  5974 ;;		 -> Minute(1), TMR0_DefaultInterruptHandler(1), 
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;		None
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  1    wreg      void 
  5979 ;; Registers used:
  5980 ;;		wreg, status,2, status,0
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5986 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5989 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5990 ;;Total ram usage:        2 bytes
  5991 ;; Hardware stack levels used:    1
  5992 ;; Hardware stack levels required when called:    5
  5993 ;; This function calls:
  5994 ;;		Nothing
  5995 ;; This function is called by:
  5996 ;;		_TMR0_Initialize
  5997 ;;		_main
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text40
  6002  002D70                     __ptext40:
  6003                           	callstack 0
  6004  002D70                     _TMR0_SetInterruptHandler:
  6005                           	callstack 25
  6006  002D70                     
  6007                           ;mcc_generated_files/tmr0.c: 172:     TMR0_InterruptHandler = InterruptHandler;
  6008  002D70  C005  F0EC         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  6009  002D74  C006  F0ED         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  6010  002D78  0012               	return		;funcret
  6011  002D7A                     __end_of_TMR0_SetInterruptHandler:
  6012                           	callstack 0
  6013                           
  6014 ;; *************** function _PIN_MANAGER_Initialize *****************
  6015 ;; Defined at:
  6016 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;		None
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;		None
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  1    wreg      void 
  6023 ;; Registers used:
  6024 ;;		wreg, status,2
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6034 ;;Total ram usage:        0 bytes
  6035 ;; Hardware stack levels used:    1
  6036 ;; Hardware stack levels required when called:    5
  6037 ;; This function calls:
  6038 ;;		Nothing
  6039 ;; This function is called by:
  6040 ;;		_SYSTEM_Initialize
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           	psect	text41
  6045  002B46                     __ptext41:
  6046                           	callstack 0
  6047  002B46                     _PIN_MANAGER_Initialize:
  6048                           	callstack 24
  6049  002B46                     
  6050                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  6051  002B46  0E00               	movlw	0
  6052  002B48  6E89               	movwf	137,c	;volatile
  6053                           
  6054                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x07;
  6055  002B4A  0E07               	movlw	7
  6056  002B4C  6E8A               	movwf	138,c	;volatile
  6057                           
  6058                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  6059  002B4E  0E00               	movlw	0
  6060  002B50  6E8B               	movwf	139,c	;volatile
  6061                           
  6062                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xEF;
  6063  002B52  0EEF               	movlw	239
  6064  002B54  6E92               	movwf	146,c	;volatile
  6065                           
  6066                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x98;
  6067  002B56  0E98               	movlw	152
  6068  002B58  6E93               	movwf	147,c	;volatile
  6069                           
  6070                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  6071  002B5A  0EBF               	movlw	191
  6072  002B5C  6E94               	movwf	148,c	;volatile
  6073                           
  6074                           ;mcc_generated_files/pin_manager.c: 74:     ANCON0 = 0x1F;
  6075  002B5E  0E1F               	movlw	31
  6076  002B60  010F               	movlb	15	; () banked
  6077  002B62  6F5D               	movwf	93,b	;volatile
  6078                           
  6079                           ;mcc_generated_files/pin_manager.c: 75:     ANCON1 = 0x05;
  6080  002B64  0E05               	movlw	5
  6081  002B66  6F5C               	movwf	92,b	;volatile
  6082                           
  6083                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
  6084  002B68  0E00               	movlw	0
  6085  002B6A  6F5B               	movwf	91,b	;volatile
  6086  002B6C                     
  6087                           ; BSR set to: 15
  6088                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
  6089  002B6C  8EF1               	bsf	241,7,c	;volatile
  6090  002B6E                     
  6091                           ; BSR set to: 15
  6092  002B6E  0012               	return		;funcret
  6093  002B70                     __end_of_PIN_MANAGER_Initialize:
  6094                           	callstack 0
  6095                           
  6096 ;; *************** function _OSCILLATOR_Initialize *****************
  6097 ;; Defined at:
  6098 ;;		line 64 in file "mcc_generated_files/mcc.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;		None
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;		None
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  1    wreg      void 
  6105 ;; Registers used:
  6106 ;;		wreg, status,2
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6116 ;;Total ram usage:        0 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; Hardware stack levels required when called:    5
  6119 ;; This function calls:
  6120 ;;		Nothing
  6121 ;; This function is called by:
  6122 ;;		_SYSTEM_Initialize
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           	psect	text42
  6127  002D1C                     __ptext42:
  6128                           	callstack 0
  6129  002D1C                     _OSCILLATOR_Initialize:
  6130                           	callstack 24
  6131  002D1C                     
  6132                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x60;
  6133  002D1C  0E60               	movlw	96
  6134  002D1E  6ED3               	movwf	211,c	;volatile
  6135                           
  6136                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x00;
  6137  002D20  0E00               	movlw	0
  6138  002D22  6ED2               	movwf	210,c	;volatile
  6139                           
  6140                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  6141  002D24  0E00               	movlw	0
  6142  002D26  6E9B               	movwf	155,c	;volatile
  6143                           
  6144                           ;mcc_generated_files/mcc.c: 73:     REFOCON = 0x00;
  6145  002D28  0E00               	movlw	0
  6146  002D2A  6E9A               	movwf	154,c	;volatile
  6147  002D2C  0012               	return		;funcret
  6148  002D2E                     __end_of_OSCILLATOR_Initialize:
  6149                           	callstack 0
  6150                           
  6151 ;; *************** function _INTERRUPT_Initialize *****************
  6152 ;; Defined at:
  6153 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;		None
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;		None
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  1    wreg      void 
  6160 ;; Registers used:
  6161 ;;		None
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6171 ;;Total ram usage:        0 bytes
  6172 ;; Hardware stack levels used:    1
  6173 ;; Hardware stack levels required when called:    5
  6174 ;; This function calls:
  6175 ;;		Nothing
  6176 ;; This function is called by:
  6177 ;;		_SYSTEM_Initialize
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181                           	psect	text43
  6182  002DA2                     __ptext43:
  6183                           	callstack 0
  6184  002DA2                     _INTERRUPT_Initialize:
  6185                           	callstack 24
  6186  002DA2                     
  6187                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  6188  002DA2  9ED0               	bcf	208,7,c	;volatile
  6189  002DA4  0012               	return		;funcret
  6190  002DA6                     __end_of_INTERRUPT_Initialize:
  6191                           	callstack 0
  6192                           
  6193 ;; *************** function _EUSART1_Initialize *****************
  6194 ;; Defined at:
  6195 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  6196 ;; Parameters:    Size  Location     Type
  6197 ;;		None
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;		None
  6200 ;; Return value:  Size  Location     Type
  6201 ;;                  1    wreg      void 
  6202 ;; Registers used:
  6203 ;;		wreg, status,2, status,0, cstack
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6213 ;;Total ram usage:        0 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; Hardware stack levels required when called:    6
  6216 ;; This function calls:
  6217 ;;		_EUSART1_SetErrorHandler
  6218 ;;		_EUSART1_SetFramingErrorHandler
  6219 ;;		_EUSART1_SetOverrunErrorHandler
  6220 ;; This function is called by:
  6221 ;;		_SYSTEM_Initialize
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           	psect	text44
  6226  002720                     __ptext44:
  6227                           	callstack 0
  6228  002720                     _EUSART1_Initialize:
  6229                           	callstack 23
  6230  002720                     
  6231                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  6232  002720  0E08               	movlw	8
  6233  002722  6EA7               	movwf	167,c	;volatile
  6234                           
  6235                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  6236  002724  0E90               	movlw	144
  6237  002726  6EAB               	movwf	171,c	;volatile
  6238                           
  6239                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  6240  002728  0E24               	movlw	36
  6241  00272A  6EAC               	movwf	172,c	;volatile
  6242                           
  6243                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x08;
  6244  00272C  0E08               	movlw	8
  6245  00272E  6EAF               	movwf	175,c	;volatile
  6246                           
  6247                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x02;
  6248  002730  0E02               	movlw	2
  6249  002732  6E7D               	movwf	125,c	;volatile
  6250  002734                     
  6251                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  6252  002734  0E00               	movlw	0
  6253  002736  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  6254  002738  0E00               	movlw	0
  6255  00273A  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  6256  00273C  ECC2  F016         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  6257  002740                     
  6258                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  6259  002740  0E00               	movlw	0
  6260  002742  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  6261  002744  0E00               	movlw	0
  6262  002746  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6263  002748  ECBD  F016         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  6264  00274C                     
  6265                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  6266  00274C  0E00               	movlw	0
  6267  00274E  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  6268  002750  0E00               	movlw	0
  6269  002752  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  6270  002754  ECC7  F016         	call	_EUSART1_SetErrorHandler	;wreg free
  6271  002758                     
  6272                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  6273  002758  0E00               	movlw	0
  6274  00275A  0100               	movlb	0	; () banked
  6275  00275C  6FA0               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6276  00275E                     
  6277                           ; BSR set to: 0
  6278  00275E  0012               	return		;funcret
  6279  002760                     __end_of_EUSART1_Initialize:
  6280                           	callstack 0
  6281                           
  6282 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6283 ;; Defined at:
  6284 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6287 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;		None
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  1    wreg      void 
  6292 ;; Registers used:
  6293 ;;		wreg, status,2, status,0
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6302 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6303 ;;Total ram usage:        2 bytes
  6304 ;; Hardware stack levels used:    1
  6305 ;; Hardware stack levels required when called:    5
  6306 ;; This function calls:
  6307 ;;		Nothing
  6308 ;; This function is called by:
  6309 ;;		_EUSART1_Initialize
  6310 ;; This function uses a non-reentrant model
  6311 ;;
  6312                           
  6313                           	psect	text45
  6314  002D7A                     __ptext45:
  6315                           	callstack 0
  6316  002D7A                     _EUSART1_SetOverrunErrorHandler:
  6317                           	callstack 23
  6318  002D7A                     
  6319                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  6320  002D7A  C005  F0F4         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  6321  002D7E  C006  F0F5         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  6322  002D82  0012               	return		;funcret
  6323  002D84                     __end_of_EUSART1_SetOverrunErrorHandler:
  6324                           	callstack 0
  6325                           
  6326 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6327 ;; Defined at:
  6328 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6331 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;		None
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  1    wreg      void 
  6336 ;; Registers used:
  6337 ;;		wreg, status,2, status,0
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6347 ;;Total ram usage:        2 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    5
  6350 ;; This function calls:
  6351 ;;		Nothing
  6352 ;; This function is called by:
  6353 ;;		_EUSART1_Initialize
  6354 ;; This function uses a non-reentrant model
  6355 ;;
  6356                           
  6357                           	psect	text46
  6358  002D84                     __ptext46:
  6359                           	callstack 0
  6360  002D84                     _EUSART1_SetFramingErrorHandler:
  6361                           	callstack 23
  6362  002D84                     
  6363                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  6364  002D84  C005  F0F6         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  6365  002D88  C006  F0F7         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  6366  002D8C  0012               	return		;funcret
  6367  002D8E                     __end_of_EUSART1_SetFramingErrorHandler:
  6368                           	callstack 0
  6369                           
  6370 ;; *************** function _EUSART1_SetErrorHandler *****************
  6371 ;; Defined at:
  6372 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6375 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;		None
  6378 ;; Return value:  Size  Location     Type
  6379 ;;                  1    wreg      void 
  6380 ;; Registers used:
  6381 ;;		wreg, status,2, status,0
  6382 ;; Tracked objects:
  6383 ;;		On entry : 0/0
  6384 ;;		On exit  : 0/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6390 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6391 ;;Total ram usage:        2 bytes
  6392 ;; Hardware stack levels used:    1
  6393 ;; Hardware stack levels required when called:    5
  6394 ;; This function calls:
  6395 ;;		Nothing
  6396 ;; This function is called by:
  6397 ;;		_EUSART1_Initialize
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           	psect	text47
  6402  002D8E                     __ptext47:
  6403                           	callstack 0
  6404  002D8E                     _EUSART1_SetErrorHandler:
  6405                           	callstack 23
  6406  002D8E                     
  6407                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  6408  002D8E  C005  F0F2         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  6409  002D92  C006  F0F3         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  6410  002D96  0012               	return		;funcret
  6411  002D98                     __end_of_EUSART1_SetErrorHandler:
  6412                           	callstack 0
  6413                           
  6414 ;; *************** function _INTERRUPT_InterruptManager *****************
  6415 ;; Defined at:
  6416 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;		None
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;		None
  6421 ;; Return value:  Size  Location     Type
  6422 ;;                  1    wreg      void 
  6423 ;; Registers used:
  6424 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6432 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6433 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6434 ;;Total ram usage:        2 bytes
  6435 ;; Hardware stack levels used:    1
  6436 ;; Hardware stack levels required when called:    4
  6437 ;; This function calls:
  6438 ;;		_TMR0_ISR
  6439 ;;		_TMR1_ISR
  6440 ;;		_TMR2_ISR
  6441 ;;		_TMR3_ISR
  6442 ;;		_TMR4_ISR
  6443 ;; This function is called by:
  6444 ;;		Interrupt level 2
  6445 ;; This function uses a non-reentrant model
  6446 ;;
  6447                           
  6448                           	psect	intcode
  6449  000008                     __pintcode:
  6450                           	callstack 0
  6451  000008                     _INTERRUPT_InterruptManager:
  6452                           	callstack 14
  6453                           
  6454                           ;incstack = 0
  6455  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6456  00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
  6457  00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6458  000012                     
  6459                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  6460  000012  AAF2               	btfss	242,5,c	;volatile
  6461  000014  EF0E  F000         	goto	i2u326_41
  6462  000018  EF10  F000         	goto	i2u326_40
  6463  00001C                     i2u326_41:
  6464  00001C  EF19  F000         	goto	i2l3983
  6465  000020                     i2u326_40:
  6466  000020  A4F2               	btfss	242,2,c	;volatile
  6467  000022  EF15  F000         	goto	i2u327_41
  6468  000026  EF17  F000         	goto	i2u327_40
  6469  00002A                     i2u327_41:
  6470  00002A  EF19  F000         	goto	i2l3983
  6471  00002E                     i2u327_40:
  6472  00002E                     
  6473                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  6474  00002E  ECCD  F014         	call	_TMR0_ISR	;wreg free
  6475  000032                     i2l3983:
  6476                           
  6477                           ;mcc_generated_files/interrupt_manager.c: 65:     if(INTCONbits.PEIE == 1)
  6478  000032  ACF2               	btfss	242,6,c	;volatile
  6479  000034  EF1E  F000         	goto	i2u328_41
  6480  000038  EF20  F000         	goto	i2u328_40
  6481  00003C                     i2u328_41:
  6482  00003C  EF60  F000         	goto	i2l438
  6483  000040                     i2u328_40:
  6484  000040                     
  6485                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  6486  000040  A09D               	btfss	157,0,c	;volatile
  6487  000042  EF25  F000         	goto	i2u329_41
  6488  000046  EF27  F000         	goto	i2u329_40
  6489  00004A                     i2u329_41:
  6490  00004A  EF30  F000         	goto	i2l3991
  6491  00004E                     i2u329_40:
  6492  00004E  A09E               	btfss	158,0,c	;volatile
  6493  000050  EF2C  F000         	goto	i2u330_41
  6494  000054  EF2E  F000         	goto	i2u330_40
  6495  000058                     i2u330_41:
  6496  000058  EF30  F000         	goto	i2l3991
  6497  00005C                     i2u330_40:
  6498  00005C                     
  6499                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR1_ISR();
  6500  00005C  EC25  F014         	call	_TMR1_ISR	;wreg free
  6501  000060                     i2l3991:
  6502                           
  6503                           ;mcc_generated_files/interrupt_manager.c: 71:         if(PIE1bits.TMR2IE == 1 && PIR1bit
      +                          s.TMR2IF == 1)
  6504  000060  A29D               	btfss	157,1,c	;volatile
  6505  000062  EF35  F000         	goto	i2u331_41
  6506  000066  EF37  F000         	goto	i2u331_40
  6507  00006A                     i2u331_41:
  6508  00006A  EF40  F000         	goto	i2l3997
  6509  00006E                     i2u331_40:
  6510  00006E  A29E               	btfss	158,1,c	;volatile
  6511  000070  EF3C  F000         	goto	i2u332_41
  6512  000074  EF3E  F000         	goto	i2u332_40
  6513  000078                     i2u332_41:
  6514  000078  EF40  F000         	goto	i2l3997
  6515  00007C                     i2u332_40:
  6516  00007C                     
  6517                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             TMR2_ISR();
  6518  00007C  EC77  F015         	call	_TMR2_ISR	;wreg free
  6519  000080                     i2l3997:
  6520                           
  6521                           ;mcc_generated_files/interrupt_manager.c: 75:         if(PIE2bits.TMR3IE == 1 && PIR2bit
      +                          s.TMR3IF == 1)
  6522  000080  A2A0               	btfss	160,1,c	;volatile
  6523  000082  EF45  F000         	goto	i2u333_41
  6524  000086  EF47  F000         	goto	i2u333_40
  6525  00008A                     i2u333_41:
  6526  00008A  EF50  F000         	goto	i2l4003
  6527  00008E                     i2u333_40:
  6528  00008E  A2A1               	btfss	161,1,c	;volatile
  6529  000090  EF4C  F000         	goto	i2u334_41
  6530  000094  EF4E  F000         	goto	i2u334_40
  6531  000098                     i2u334_41:
  6532  000098  EF50  F000         	goto	i2l4003
  6533  00009C                     i2u334_40:
  6534  00009C                     
  6535                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR3_ISR();
  6536  00009C  EC08  F014         	call	_TMR3_ISR	;wreg free
  6537  0000A0                     i2l4003:
  6538                           
  6539                           ;mcc_generated_files/interrupt_manager.c: 79:         if(PIE4bits.TMR4IE == 1 && PIR4bit
      +                          s.TMR4IF == 1)
  6540  0000A0  AEB6               	btfss	182,7,c	;volatile
  6541  0000A2  EF55  F000         	goto	i2u335_41
  6542  0000A6  EF57  F000         	goto	i2u335_40
  6543  0000AA                     i2u335_41:
  6544  0000AA  EF60  F000         	goto	i2l438
  6545  0000AE                     i2u335_40:
  6546  0000AE  AEB7               	btfss	183,7,c	;volatile
  6547  0000B0  EF5C  F000         	goto	i2u336_41
  6548  0000B4  EF5E  F000         	goto	i2u336_40
  6549  0000B8                     i2u336_41:
  6550  0000B8  EF60  F000         	goto	i2l438
  6551  0000BC                     i2u336_40:
  6552  0000BC                     
  6553                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR4_ISR();
  6554  0000BC  EC60  F015         	call	_TMR4_ISR	;wreg free
  6555  0000C0                     i2l438:
  6556  0000C0  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6557  0000C4  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6558  0000C8  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6559  0000CA  0011               	retfie		f
  6560  0000CC                     __end_of_INTERRUPT_InterruptManager:
  6561                           	callstack 0
  6562                           
  6563 ;; *************** function _TMR4_ISR *****************
  6564 ;; Defined at:
  6565 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;		None
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;		None
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  1    wreg      void 
  6572 ;; Registers used:
  6573 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6583 ;;Total ram usage:        0 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; Hardware stack levels required when called:    3
  6586 ;; This function calls:
  6587 ;;		_TMR4_CallBack
  6588 ;; This function is called by:
  6589 ;;		_INTERRUPT_InterruptManager
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text49
  6594  002AC0                     __ptext49:
  6595                           	callstack 0
  6596  002AC0                     _TMR4_ISR:
  6597                           	callstack 14
  6598  002AC0                     
  6599                           ;mcc_generated_files/tmr4.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 124:     PIR4bits.TMR4IF = 0;
  6600  002AC0  9EB7               	bcf	183,7,c	;volatile
  6601  002AC2                     
  6602                           ;mcc_generated_files/tmr4.c: 127:     if (++CountCallBack >= 500)
  6603  002AC2  0100               	movlb	0	; () banked
  6604  002AC4  4B95               	infsnz	TMR4_ISR@CountCallBack& (0+255),f,b	;volatile
  6605  002AC6  2B96               	incf	(TMR4_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  6606  002AC8  0EF4               	movlw	244
  6607  002ACA  5D95               	subwf	TMR4_ISR@CountCallBack& (0+255),w,b	;volatile
  6608  002ACC  0E01               	movlw	1
  6609  002ACE  5996               	subwfb	(TMR4_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  6610  002AD0  A0D8               	btfss	status,0,c
  6611  002AD2  EF6D  F015         	goto	i2u292_41
  6612  002AD6  EF6F  F015         	goto	i2u292_40
  6613  002ADA                     i2u292_41:
  6614  002ADA  EF76  F015         	goto	i2l482
  6615  002ADE                     i2u292_40:
  6616  002ADE                     
  6617                           ; BSR set to: 0
  6618                           ;mcc_generated_files/tmr4.c: 128:     {;mcc_generated_files/tmr4.c: 130:         TMR4_Ca
      +                          llBack();
  6619  002ADE  ECE8  F014         	call	_TMR4_CallBack	;wreg free
  6620  002AE2                     
  6621                           ;mcc_generated_files/tmr4.c: 133:         CountCallBack = 0;
  6622  002AE2  0E00               	movlw	0
  6623  002AE4  0100               	movlb	0	; () banked
  6624  002AE6  6F96               	movwf	(TMR4_ISR@CountCallBack+1)& (0+255),b	;volatile
  6625  002AE8  0E00               	movlw	0
  6626  002AEA  6F95               	movwf	TMR4_ISR@CountCallBack& (0+255),b	;volatile
  6627  002AEC                     i2l482:
  6628                           
  6629                           ; BSR set to: 0
  6630  002AEC  0012               	return		;funcret
  6631  002AEE                     __end_of_TMR4_ISR:
  6632                           	callstack 0
  6633                           
  6634 ;; *************** function _TMR4_CallBack *****************
  6635 ;; Defined at:
  6636 ;;		line 137 in file "mcc_generated_files/tmr4.c"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;		None
  6639 ;; Auto vars:     Size  Location     Type
  6640 ;;		None
  6641 ;; Return value:  Size  Location     Type
  6642 ;;                  1    wreg      void 
  6643 ;; Registers used:
  6644 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6654 ;;Total ram usage:        0 bytes
  6655 ;; Hardware stack levels used:    1
  6656 ;; Hardware stack levels required when called:    2
  6657 ;; This function calls:
  6658 ;;		Absolute function
  6659 ;;		_TMR4_DefaultInterruptHandler
  6660 ;;		_connect
  6661 ;; This function is called by:
  6662 ;;		_TMR4_ISR
  6663 ;; This function uses a non-reentrant model
  6664 ;;
  6665                           
  6666                           	psect	text50
  6667  0029D0                     __ptext50:
  6668                           	callstack 0
  6669  0029D0                     _TMR4_CallBack:
  6670                           	callstack 14
  6671  0029D0                     
  6672                           ;mcc_generated_files/tmr4.c: 141:     if(TMR4_InterruptHandler)
  6673  0029D0  0100               	movlb	0	; () banked
  6674  0029D2  51E2               	movf	_TMR4_InterruptHandler& (0+255),w,b
  6675  0029D4  11E3               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
  6676  0029D6  B4D8               	btfsc	status,2,c
  6677  0029D8  EFF0  F014         	goto	i2u283_41
  6678  0029DC  EFF2  F014         	goto	i2u283_40
  6679  0029E0                     i2u283_41:
  6680  0029E0  EFFF  F014         	goto	i2l486
  6681  0029E4                     i2u283_40:
  6682  0029E4                     
  6683                           ; BSR set to: 0
  6684                           ;mcc_generated_files/tmr4.c: 142:     {;mcc_generated_files/tmr4.c: 143:         TMR4_In
      +                          terruptHandler();
  6685  0029E4  D802               	call	i2u284_48
  6686  0029E6  EFFF  F014         	goto	i2u284_49
  6687  0029EA                     i2u284_48:
  6688  0029EA  0005               	push	
  6689  0029EC  6EFA               	movwf	pclath,c
  6690  0029EE  51E2               	movf	_TMR4_InterruptHandler& (0+255),w,b
  6691  0029F0  6EFD               	movwf	tosl,c
  6692  0029F2  51E3               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
  6693  0029F4  6EFE               	movwf	tosh,c
  6694  0029F6  50F8               	movf	tblptru,w,c
  6695  0029F8  6EFF               	movwf	tosu,c
  6696  0029FA  50FA               	movf	pclath,w,c
  6697  0029FC  0012               	return		;indir
  6698  0029FE                     i2u284_49:
  6699  0029FE                     i2l486:
  6700  0029FE  0012               	return		;funcret
  6701  002A00                     __end_of_TMR4_CallBack:
  6702                           	callstack 0
  6703                           
  6704 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  6705 ;; Defined at:
  6706 ;;		line 151 in file "mcc_generated_files/tmr4.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;		None
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;		None
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  1    wreg      void 
  6713 ;; Registers used:
  6714 ;;		None
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6724 ;;Total ram usage:        0 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; This function calls:
  6727 ;;		Nothing
  6728 ;; This function is called by:
  6729 ;;		_TMR4_Initialize
  6730 ;;		_TMR4_CallBack
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734                           	psect	text51
  6735  002DA6                     __ptext51:
  6736                           	callstack 0
  6737  002DA6                     _TMR4_DefaultInterruptHandler:
  6738                           	callstack 15
  6739  002DA6  0012               	return		;funcret
  6740  002DA8                     __end_of_TMR4_DefaultInterruptHandler:
  6741                           	callstack 0
  6742                           
  6743 ;; *************** function _connect *****************
  6744 ;; Defined at:
  6745 ;;		line 268 in file "main.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;		None
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;		None
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  1    wreg      void 
  6752 ;; Registers used:
  6753 ;;		wreg, status,2, status,0, cstack
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6763 ;;Total ram usage:        0 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; Hardware stack levels required when called:    1
  6766 ;; This function calls:
  6767 ;;		_TMR1_WriteTimer
  6768 ;; This function is called by:
  6769 ;;		_main
  6770 ;;		_TMR4_CallBack
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774                           	psect	text52
  6775  001A18                     __ptext52:
  6776                           	callstack 0
  6777  001A18                     _connect:
  6778                           	callstack 14
  6779  001A18                     
  6780                           ;main.c: 269:     c++;
  6781  001A18  0100               	movlb	0	; () banked
  6782  001A1A  4B7B               	infsnz	_c& (0+255),f,b
  6783  001A1C  2B7C               	incf	(_c+1)& (0+255),f,b
  6784  001A1E                     
  6785                           ; BSR set to: 0
  6786                           ;main.c: 270:     if (c >= 2 && EtatN != null && EtatN != Alarme && EtatN != Eteint && E
      +                          tatN != Perdu) {
  6787  001A1E  BF7C               	btfsc	(_c+1)& (0+255),7,b
  6788  001A20  EF1B  F00D         	goto	i2u250_41
  6789  001A24  517C               	movf	(_c+1)& (0+255),w,b
  6790  001A26  E109               	bnz	i2u250_40
  6791  001A28  0E02               	movlw	2
  6792  001A2A  5D7B               	subwf	_c& (0+255),w,b
  6793  001A2C  A0D8               	btfss	status,0,c
  6794  001A2E  EF1B  F00D         	goto	i2u250_41
  6795  001A32  EF1D  F00D         	goto	i2u250_40
  6796  001A36                     i2u250_41:
  6797  001A36  EF5F  F00D         	goto	i2l3501
  6798  001A3A                     i2u250_40:
  6799  001A3A                     
  6800                           ; BSR set to: 0
  6801  001A3A  0E05               	movlw	5
  6802  001A3C  185A               	xorwf	_EtatN^0,w,c
  6803  001A3E  B4D8               	btfsc	status,2,c
  6804  001A40  EF24  F00D         	goto	i2u251_41
  6805  001A44  EF26  F00D         	goto	i2u251_40
  6806  001A48                     i2u251_41:
  6807  001A48  EF5F  F00D         	goto	i2l3501
  6808  001A4C                     i2u251_40:
  6809  001A4C                     
  6810                           ; BSR set to: 0
  6811  001A4C  0E04               	movlw	4
  6812  001A4E  185A               	xorwf	_EtatN^0,w,c
  6813  001A50  B4D8               	btfsc	status,2,c
  6814  001A52  EF2D  F00D         	goto	i2u252_41
  6815  001A56  EF2F  F00D         	goto	i2u252_40
  6816  001A5A                     i2u252_41:
  6817  001A5A  EF5F  F00D         	goto	i2l3501
  6818  001A5E                     i2u252_40:
  6819  001A5E                     
  6820                           ; BSR set to: 0
  6821  001A5E  045A               	decf	_EtatN^0,w,c
  6822  001A60  B4D8               	btfsc	status,2,c
  6823  001A62  EF35  F00D         	goto	i2u253_41
  6824  001A66  EF37  F00D         	goto	i2u253_40
  6825  001A6A                     i2u253_41:
  6826  001A6A  EF5F  F00D         	goto	i2l3501
  6827  001A6E                     i2u253_40:
  6828  001A6E                     
  6829                           ; BSR set to: 0
  6830  001A6E  0E03               	movlw	3
  6831  001A70  185A               	xorwf	_EtatN^0,w,c
  6832  001A72  B4D8               	btfsc	status,2,c
  6833  001A74  EF3E  F00D         	goto	i2u254_41
  6834  001A78  EF40  F00D         	goto	i2u254_40
  6835  001A7C                     i2u254_41:
  6836  001A7C  EF5F  F00D         	goto	i2l3501
  6837  001A80                     i2u254_40:
  6838  001A80                     
  6839                           ; BSR set to: 0
  6840                           ;main.c: 271:         if(EtatN == Armed ){
  6841  001A80  0E02               	movlw	2
  6842  001A82  185A               	xorwf	_EtatN^0,w,c
  6843  001A84  A4D8               	btfss	status,2,c
  6844  001A86  EF47  F00D         	goto	i2u255_41
  6845  001A8A  EF49  F00D         	goto	i2u255_40
  6846  001A8E                     i2u255_41:
  6847  001A8E  EF56  F00D         	goto	i2l3499
  6848  001A92                     i2u255_40:
  6849  001A92                     
  6850                           ; BSR set to: 0
  6851                           ;main.c: 272:             EtatN = Perdu;
  6852  001A92  0E03               	movlw	3
  6853  001A94  6E5A               	movwf	_EtatN^0,c
  6854                           
  6855                           ;main.c: 273:             perte = Oui;
  6856  001A96  0E00               	movlw	0
  6857  001A98  6E58               	movwf	_perte^0,c
  6858  001A9A                     
  6859                           ; BSR set to: 0
  6860                           ;main.c: 274:             TMR1_WriteTimer(0);
  6861  001A9A  0E00               	movlw	0
  6862  001A9C  6E02               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  6863  001A9E  0E00               	movlw	0
  6864  001AA0  6E01               	movwf	TMR1_WriteTimer@timerVal^0,c
  6865  001AA2  ECF4  F015         	call	_TMR1_WriteTimer	;wreg free
  6866  001AA6  8A8A               	bsf	138,5,c	;volatile
  6867  001AA8  EF58  F00D         	goto	i2l715
  6868  001AAC                     i2l3499:
  6869                           
  6870                           ; BSR set to: 0
  6871                           ;main.c: 277:             EtatN = Eteint;
  6872  001AAC  0E01               	movlw	1
  6873  001AAE  6E5A               	movwf	_EtatN^0,c
  6874  001AB0                     i2l715:
  6875                           
  6876                           ;main.c: 280:         c = 0;
  6877  001AB0  0E00               	movlw	0
  6878  001AB2  0100               	movlb	0	; () banked
  6879  001AB4  6F7C               	movwf	(_c+1)& (0+255),b
  6880  001AB6  0E00               	movlw	0
  6881  001AB8  6F7B               	movwf	_c& (0+255),b
  6882                           
  6883                           ;main.c: 281:     } else if (EtatN == Eteint && connexion == 1) {
  6884  001ABA  EF9C  F00D         	goto	i2l3523
  6885  001ABE                     i2l3501:
  6886                           
  6887                           ; BSR set to: 0
  6888  001ABE  045A               	decf	_EtatN^0,w,c
  6889  001AC0  A4D8               	btfss	status,2,c
  6890  001AC2  EF65  F00D         	goto	i2u256_41
  6891  001AC6  EF67  F00D         	goto	i2u256_40
  6892  001ACA                     i2u256_41:
  6893  001ACA  EF73  F00D         	goto	i2l3507
  6894  001ACE                     i2u256_40:
  6895  001ACE                     
  6896                           ; BSR set to: 0
  6897  001ACE  0457               	decf	_connexion^0,w,c
  6898  001AD0  A4D8               	btfss	status,2,c
  6899  001AD2  EF6D  F00D         	goto	i2u257_41
  6900  001AD6  EF6F  F00D         	goto	i2u257_40
  6901  001ADA                     i2u257_41:
  6902  001ADA  EF73  F00D         	goto	i2l3507
  6903  001ADE                     i2u257_40:
  6904  001ADE                     
  6905                           ; BSR set to: 0
  6906                           ;main.c: 282:         EtatN = Reception;
  6907  001ADE  0E00               	movlw	0
  6908  001AE0  6E5A               	movwf	_EtatN^0,c
  6909                           
  6910                           ;main.c: 283:     }else if (EtatN == Perdu && connexion == 1){
  6911  001AE2  EF9C  F00D         	goto	i2l3523
  6912  001AE6                     i2l3507:
  6913                           
  6914                           ; BSR set to: 0
  6915  001AE6  0E03               	movlw	3
  6916  001AE8  185A               	xorwf	_EtatN^0,w,c
  6917  001AEA  A4D8               	btfss	status,2,c
  6918  001AEC  EF7A  F00D         	goto	i2u258_41
  6919  001AF0  EF7C  F00D         	goto	i2u258_40
  6920  001AF4                     i2u258_41:
  6921  001AF4  EF8A  F00D         	goto	i2l3517
  6922  001AF8                     i2u258_40:
  6923  001AF8                     
  6924                           ; BSR set to: 0
  6925  001AF8  0457               	decf	_connexion^0,w,c
  6926  001AFA  A4D8               	btfss	status,2,c
  6927  001AFC  EF82  F00D         	goto	i2u259_41
  6928  001B00  EF84  F00D         	goto	i2u259_40
  6929  001B04                     i2u259_41:
  6930  001B04  EF8A  F00D         	goto	i2l3517
  6931  001B08                     i2u259_40:
  6932  001B08                     
  6933                           ; BSR set to: 0
  6934                           ;main.c: 284:         EtatN = Armed;
  6935  001B08  0E02               	movlw	2
  6936  001B0A  6E5A               	movwf	_EtatN^0,c
  6937  001B0C                     
  6938                           ; BSR set to: 0
  6939  001B0C  828A               	bsf	138,1,c	;volatile
  6940  001B0E                     
  6941                           ; BSR set to: 0
  6942  001B0E  848A               	bsf	138,2,c	;volatile
  6943  001B10  EF9C  F00D         	goto	i2l3523
  6944  001B14                     i2l3517:
  6945                           
  6946                           ; BSR set to: 0
  6947  001B14  045A               	decf	_EtatN^0,w,c
  6948  001B16  A4D8               	btfss	status,2,c
  6949  001B18  EF90  F00D         	goto	i2u260_41
  6950  001B1C  EF92  F00D         	goto	i2u260_40
  6951  001B20                     i2u260_41:
  6952  001B20  EF9C  F00D         	goto	i2l718
  6953  001B24                     i2u260_40:
  6954  001B24                     
  6955                           ; BSR set to: 0
  6956  001B24  5057               	movf	_connexion^0,w,c
  6957  001B26  A4D8               	btfss	status,2,c
  6958  001B28  EF98  F00D         	goto	i2u261_41
  6959  001B2C  EF9A  F00D         	goto	i2u261_40
  6960  001B30                     i2u261_41:
  6961  001B30  EF9C  F00D         	goto	i2l718
  6962  001B34                     i2u261_40:
  6963  001B34  EF58  F00D         	goto	i2l715
  6964  001B38                     i2l718:
  6965  001B38                     i2l3523:
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;main.c: 289:     if (c >= 2 && EtatE != rien && EtatE != EteintE) {
  6969  001B38  BF7C               	btfsc	(_c+1)& (0+255),7,b
  6970  001B3A  EFA8  F00D         	goto	i2u262_41
  6971  001B3E  517C               	movf	(_c+1)& (0+255),w,b
  6972  001B40  E109               	bnz	i2u262_40
  6973  001B42  0E02               	movlw	2
  6974  001B44  5D7B               	subwf	_c& (0+255),w,b
  6975  001B46  A0D8               	btfss	status,0,c
  6976  001B48  EFA8  F00D         	goto	i2u262_41
  6977  001B4C  EFAA  F00D         	goto	i2u262_40
  6978  001B50                     i2u262_41:
  6979  001B50  EFC3  F00D         	goto	i2l3531
  6980  001B54                     i2u262_40:
  6981  001B54                     
  6982                           ; BSR set to: 0
  6983  001B54  0E03               	movlw	3
  6984  001B56  1859               	xorwf	_EtatE^0,w,c
  6985  001B58  B4D8               	btfsc	status,2,c
  6986  001B5A  EFB1  F00D         	goto	i2u263_41
  6987  001B5E  EFB3  F00D         	goto	i2u263_40
  6988  001B62                     i2u263_41:
  6989  001B62  EFC3  F00D         	goto	i2l3531
  6990  001B66                     i2u263_40:
  6991  001B66                     
  6992                           ; BSR set to: 0
  6993  001B66  0459               	decf	_EtatE^0,w,c
  6994  001B68  B4D8               	btfsc	status,2,c
  6995  001B6A  EFB9  F00D         	goto	i2u264_41
  6996  001B6E  EFBB  F00D         	goto	i2u264_40
  6997  001B72                     i2u264_41:
  6998  001B72  EFC3  F00D         	goto	i2l3531
  6999  001B76                     i2u264_40:
  7000  001B76                     
  7001                           ; BSR set to: 0
  7002                           ;main.c: 290:         EtatE = EteintE;
  7003  001B76  0E01               	movlw	1
  7004  001B78  6E59               	movwf	_EtatE^0,c
  7005                           
  7006                           ;main.c: 291:         c = 0;
  7007  001B7A  0E00               	movlw	0
  7008  001B7C  6F7C               	movwf	(_c+1)& (0+255),b
  7009  001B7E  0E00               	movlw	0
  7010  001B80  6F7B               	movwf	_c& (0+255),b
  7011                           
  7012                           ;main.c: 292:     } else if (EtatE == EteintE && connexion == 1) {
  7013  001B82  EFE3  F00D         	goto	i2l731
  7014  001B86                     i2l3531:
  7015                           
  7016                           ; BSR set to: 0
  7017  001B86  0459               	decf	_EtatE^0,w,c
  7018  001B88  A4D8               	btfss	status,2,c
  7019  001B8A  EFC9  F00D         	goto	i2u265_41
  7020  001B8E  EFCB  F00D         	goto	i2u265_40
  7021  001B92                     i2u265_41:
  7022  001B92  EFD7  F00D         	goto	i2l3537
  7023  001B96                     i2u265_40:
  7024  001B96                     
  7025                           ; BSR set to: 0
  7026  001B96  0457               	decf	_connexion^0,w,c
  7027  001B98  A4D8               	btfss	status,2,c
  7028  001B9A  EFD1  F00D         	goto	i2u266_41
  7029  001B9E  EFD3  F00D         	goto	i2u266_40
  7030  001BA2                     i2u266_41:
  7031  001BA2  EFD7  F00D         	goto	i2l3537
  7032  001BA6                     i2u266_40:
  7033  001BA6                     
  7034                           ; BSR set to: 0
  7035                           ;main.c: 293:         EtatE = ReceptionE;
  7036  001BA6  0E00               	movlw	0
  7037  001BA8  6E59               	movwf	_EtatE^0,c
  7038                           
  7039                           ;main.c: 294:     } else if (connexion == Non)c = 0;
  7040  001BAA  EFE3  F00D         	goto	i2l731
  7041  001BAE                     i2l3537:
  7042                           
  7043                           ; BSR set to: 0
  7044  001BAE  0457               	decf	_connexion^0,w,c
  7045  001BB0  A4D8               	btfss	status,2,c
  7046  001BB2  EFDD  F00D         	goto	i2u267_41
  7047  001BB6  EFDF  F00D         	goto	i2u267_40
  7048  001BBA                     i2u267_41:
  7049  001BBA  EFE3  F00D         	goto	i2l731
  7050  001BBE                     i2u267_40:
  7051  001BBE                     
  7052                           ; BSR set to: 0
  7053  001BBE  0E00               	movlw	0
  7054  001BC0  6F7C               	movwf	(_c+1)& (0+255),b
  7055  001BC2  0E00               	movlw	0
  7056  001BC4  6F7B               	movwf	_c& (0+255),b
  7057  001BC6                     i2l731:
  7058                           
  7059                           ; BSR set to: 0
  7060  001BC6  0012               	return		;funcret
  7061  001BC8                     __end_of_connect:
  7062                           	callstack 0
  7063                           
  7064 ;; *************** function _TMR3_ISR *****************
  7065 ;; Defined at:
  7066 ;;		line 157 in file "mcc_generated_files/tmr3.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;		None
  7069 ;; Auto vars:     Size  Location     Type
  7070 ;;		None
  7071 ;; Return value:  Size  Location     Type
  7072 ;;                  1    wreg      void 
  7073 ;; Registers used:
  7074 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7075 ;; Tracked objects:
  7076 ;;		On entry : 0/0
  7077 ;;		On exit  : 0/0
  7078 ;;		Unchanged: 0/0
  7079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7084 ;;Total ram usage:        0 bytes
  7085 ;; Hardware stack levels used:    1
  7086 ;; Hardware stack levels required when called:    2
  7087 ;; This function calls:
  7088 ;;		_TMR3_CallBack
  7089 ;;		i2_TMR3_WriteTimer
  7090 ;; This function is called by:
  7091 ;;		_INTERRUPT_InterruptManager
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095                           	psect	text53
  7096  002810                     __ptext53:
  7097                           	callstack 0
  7098  002810                     _TMR3_ISR:
  7099                           	callstack 15
  7100  002810                     
  7101                           ;mcc_generated_files/tmr3.c: 159:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 162:     PIR2bits.TMR3IF = 0;
  7102  002810  92A1               	bcf	161,1,c	;volatile
  7103  002812                     
  7104                           ;mcc_generated_files/tmr3.c: 163:     TMR3_WriteTimer(timer3ReloadVal);
  7105  002812  C0E8  F001         	movff	_timer3ReloadVal,i2TMR3_WriteTimer@timerVal	;volatile
  7106  002816  C0E9  F002         	movff	_timer3ReloadVal+1,i2TMR3_WriteTimer@timerVal+1	;volatile
  7107  00281A  ECE0  F015         	call	i2_TMR3_WriteTimer	;wreg free
  7108  00281E                     
  7109                           ;mcc_generated_files/tmr3.c: 166:     if (++CountCallBack >= 50)
  7110  00281E  0100               	movlb	0	; () banked
  7111  002820  4B99               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
  7112  002822  2B9A               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  7113  002824  519A               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  7114  002826  E109               	bnz	i2u290_40
  7115  002828  0E32               	movlw	50
  7116  00282A  5D99               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
  7117  00282C  A0D8               	btfss	status,0,c
  7118  00282E  EF1B  F014         	goto	i2u290_41
  7119  002832  EF1D  F014         	goto	i2u290_40
  7120  002836                     i2u290_41:
  7121  002836  EF24  F014         	goto	i2l334
  7122  00283A                     i2u290_40:
  7123  00283A                     
  7124                           ; BSR set to: 0
  7125                           ;mcc_generated_files/tmr3.c: 167:     {;mcc_generated_files/tmr3.c: 169:         TMR3_Ca
      +                          llBack();
  7126  00283A  EC00  F015         	call	_TMR3_CallBack	;wreg free
  7127  00283E                     
  7128                           ;mcc_generated_files/tmr3.c: 172:         CountCallBack = 0;
  7129  00283E  0E00               	movlw	0
  7130  002840  0100               	movlb	0	; () banked
  7131  002842  6F9A               	movwf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
  7132  002844  0E00               	movlw	0
  7133  002846  6F99               	movwf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
  7134  002848                     i2l334:
  7135                           
  7136                           ; BSR set to: 0
  7137  002848  0012               	return		;funcret
  7138  00284A                     __end_of_TMR3_ISR:
  7139                           	callstack 0
  7140                           
  7141 ;; *************** function i2_TMR3_WriteTimer *****************
  7142 ;; Defined at:
  7143 ;;		line 120 in file "mcc_generated_files/tmr3.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;  timerVal        2    0[COMRAM] unsigned short 
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;		None
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  1    wreg      void 
  7150 ;; Registers used:
  7151 ;;		wreg, status,2
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7160 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7161 ;;Total ram usage:        2 bytes
  7162 ;; Hardware stack levels used:    1
  7163 ;; This function calls:
  7164 ;;		Nothing
  7165 ;; This function is called by:
  7166 ;;		_TMR3_ISR
  7167 ;; This function uses a non-reentrant model
  7168 ;;
  7169                           
  7170                           	psect	text54
  7171  002BC0                     __ptext54:
  7172                           	callstack 0
  7173  002BC0                     i2_TMR3_WriteTimer:
  7174                           	callstack 16
  7175  002BC0                     
  7176                           ;mcc_generated_files/tmr3.c: 120: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 121: {;mcc_generated_files/tmr3.c: 122:     if (T3CONbits.nT3SYNC == 1)
  7177  002BC0  A4B1               	btfss	177,2,c	;volatile
  7178  002BC2  EFE5  F015         	goto	i2u287_41
  7179  002BC6  EFE7  F015         	goto	i2u287_40
  7180  002BCA                     i2u287_41:
  7181  002BCA  EFEF  F015         	goto	i2l3733
  7182  002BCE                     i2u287_40:
  7183  002BCE                     
  7184                           ;mcc_generated_files/tmr3.c: 123:     {;mcc_generated_files/tmr3.c: 125:         T3CONbi
      +                          ts.TMR3ON = 0;
  7185  002BCE  90B1               	bcf	177,0,c	;volatile
  7186  002BD0                     
  7187                           ;mcc_generated_files/tmr3.c: 128:         TMR3H = (uint8_t)(timerVal >> 8);
  7188  002BD0  5002               	movf	(i2TMR3_WriteTimer@timerVal+1)^0,w,c
  7189  002BD2  6EB3               	movwf	179,c	;volatile
  7190  002BD4                     
  7191                           ;mcc_generated_files/tmr3.c: 129:         TMR3L = (uint8_t)timerVal;
  7192  002BD4  C001  FFB2         	movff	i2TMR3_WriteTimer@timerVal,4018	;volatile
  7193  002BD8                     
  7194                           ;mcc_generated_files/tmr3.c: 132:         T3CONbits.TMR3ON =1;
  7195  002BD8  80B1               	bsf	177,0,c	;volatile
  7196                           
  7197                           ;mcc_generated_files/tmr3.c: 133:     }
  7198  002BDA  EFF3  F015         	goto	i2l319
  7199  002BDE                     i2l3733:
  7200                           
  7201                           ;mcc_generated_files/tmr3.c: 135:     {;mcc_generated_files/tmr3.c: 137:         TMR3H =
      +                           (uint8_t)(timerVal >> 8);
  7202  002BDE  5002               	movf	(i2TMR3_WriteTimer@timerVal+1)^0,w,c
  7203  002BE0  6EB3               	movwf	179,c	;volatile
  7204  002BE2                     
  7205                           ;mcc_generated_files/tmr3.c: 138:         TMR3L = (uint8_t)timerVal;
  7206  002BE2  C001  FFB2         	movff	i2TMR3_WriteTimer@timerVal,4018	;volatile
  7207  002BE6                     i2l319:
  7208  002BE6  0012               	return		;funcret
  7209  002BE8                     __end_ofi2_TMR3_WriteTimer:
  7210                           	callstack 0
  7211                           
  7212 ;; *************** function _TMR3_CallBack *****************
  7213 ;; Defined at:
  7214 ;;		line 176 in file "mcc_generated_files/tmr3.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;		None
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;		None
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  1    wreg      void 
  7221 ;; Registers used:
  7222 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7232 ;;Total ram usage:        0 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; Hardware stack levels required when called:    1
  7235 ;; This function calls:
  7236 ;;		Absolute function
  7237 ;;		_Secondes_5
  7238 ;;		_TMR3_DefaultInterruptHandler
  7239 ;; This function is called by:
  7240 ;;		_TMR3_ISR
  7241 ;; This function uses a non-reentrant model
  7242 ;;
  7243                           
  7244                           	psect	text55
  7245  002A00                     __ptext55:
  7246                           	callstack 0
  7247  002A00                     _TMR3_CallBack:
  7248                           	callstack 15
  7249  002A00                     
  7250                           ;mcc_generated_files/tmr3.c: 179:     if(TMR3_InterruptHandler)
  7251  002A00  0100               	movlb	0	; () banked
  7252  002A02  51E6               	movf	_TMR3_InterruptHandler& (0+255),w,b
  7253  002A04  11E7               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
  7254  002A06  B4D8               	btfsc	status,2,c
  7255  002A08  EF08  F015         	goto	i2u279_41
  7256  002A0C  EF0A  F015         	goto	i2u279_40
  7257  002A10                     i2u279_41:
  7258  002A10  EF17  F015         	goto	i2l338
  7259  002A14                     i2u279_40:
  7260  002A14                     
  7261                           ; BSR set to: 0
  7262                           ;mcc_generated_files/tmr3.c: 180:     {;mcc_generated_files/tmr3.c: 181:         TMR3_In
      +                          terruptHandler();
  7263  002A14  D802               	call	i2u280_48
  7264  002A16  EF17  F015         	goto	i2u280_49
  7265  002A1A                     i2u280_48:
  7266  002A1A  0005               	push	
  7267  002A1C  6EFA               	movwf	pclath,c
  7268  002A1E  51E6               	movf	_TMR3_InterruptHandler& (0+255),w,b
  7269  002A20  6EFD               	movwf	tosl,c
  7270  002A22  51E7               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
  7271  002A24  6EFE               	movwf	tosh,c
  7272  002A26  50F8               	movf	tblptru,w,c
  7273  002A28  6EFF               	movwf	tosu,c
  7274  002A2A  50FA               	movf	pclath,w,c
  7275  002A2C  0012               	return		;indir
  7276  002A2E                     i2u280_49:
  7277  002A2E                     i2l338:
  7278  002A2E  0012               	return		;funcret
  7279  002A30                     __end_of_TMR3_CallBack:
  7280                           	callstack 0
  7281                           
  7282 ;; *************** function _Secondes_5 *****************
  7283 ;; Defined at:
  7284 ;;		line 233 in file "main.c"
  7285 ;; Parameters:    Size  Location     Type
  7286 ;;		None
  7287 ;; Auto vars:     Size  Location     Type
  7288 ;;		None
  7289 ;; Return value:  Size  Location     Type
  7290 ;;                  1    wreg      void 
  7291 ;; Registers used:
  7292 ;;		wreg, status,2
  7293 ;; Tracked objects:
  7294 ;;		On entry : 0/0
  7295 ;;		On exit  : 0/0
  7296 ;;		Unchanged: 0/0
  7297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7302 ;;Total ram usage:        0 bytes
  7303 ;; Hardware stack levels used:    1
  7304 ;; This function calls:
  7305 ;;		Nothing
  7306 ;; This function is called by:
  7307 ;;		_main
  7308 ;;		_TMR3_CallBack
  7309 ;; This function uses a non-reentrant model
  7310 ;;
  7311                           
  7312                           	psect	text56
  7313  002CEC                     __ptext56:
  7314                           	callstack 0
  7315  002CEC                     _Secondes_5:
  7316                           	callstack 15
  7317  002CEC                     
  7318                           ;main.c: 234:     if (sec5 == Oui) {
  7319  002CEC  0100               	movlb	0	; () banked
  7320  002CEE  51FC               	movf	_sec5& (0+255),w,b
  7321  002CF0  A4D8               	btfss	status,2,c
  7322  002CF2  EF7D  F016         	goto	i2u249_41
  7323  002CF6  EF7F  F016         	goto	i2u249_40
  7324  002CFA                     i2u249_41:
  7325  002CFA  EF82  F016         	goto	i2l708
  7326  002CFE                     i2u249_40:
  7327  002CFE                     
  7328                           ; BSR set to: 0
  7329  002CFE  828A               	bsf	138,1,c	;volatile
  7330  002D00                     
  7331                           ; BSR set to: 0
  7332                           ;main.c: 236:         sec5 = Non;
  7333  002D00  0E01               	movlw	1
  7334  002D02  6FFC               	movwf	_sec5& (0+255),b
  7335  002D04                     i2l708:
  7336                           
  7337                           ; BSR set to: 0
  7338  002D04  0012               	return		;funcret
  7339  002D06                     __end_of_Secondes_5:
  7340                           	callstack 0
  7341                           
  7342 ;; *************** function _TMR3_DefaultInterruptHandler *****************
  7343 ;; Defined at:
  7344 ;;		line 189 in file "mcc_generated_files/tmr3.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;		None
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;		None
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  1    wreg      void 
  7351 ;; Registers used:
  7352 ;;		None
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7362 ;;Total ram usage:        0 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; This function calls:
  7365 ;;		Nothing
  7366 ;; This function is called by:
  7367 ;;		_TMR3_Initialize
  7368 ;;		_TMR3_CallBack
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           	psect	text57
  7373  002DA8                     __ptext57:
  7374                           	callstack 0
  7375  002DA8                     _TMR3_DefaultInterruptHandler:
  7376                           	callstack 15
  7377  002DA8  0012               	return		;funcret
  7378  002DAA                     __end_of_TMR3_DefaultInterruptHandler:
  7379                           	callstack 0
  7380                           
  7381 ;; *************** function _TMR2_ISR *****************
  7382 ;; Defined at:
  7383 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;		None
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;		None
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  1    wreg      void 
  7390 ;; Registers used:
  7391 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/0
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7401 ;;Total ram usage:        0 bytes
  7402 ;; Hardware stack levels used:    1
  7403 ;; Hardware stack levels required when called:    2
  7404 ;; This function calls:
  7405 ;;		_TMR2_CallBack
  7406 ;; This function is called by:
  7407 ;;		_INTERRUPT_InterruptManager
  7408 ;; This function uses a non-reentrant model
  7409 ;;
  7410                           
  7411                           	psect	text58
  7412  002AEE                     __ptext58:
  7413                           	callstack 0
  7414  002AEE                     _TMR2_ISR:
  7415                           	callstack 15
  7416  002AEE                     
  7417                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  7418  002AEE  929E               	bcf	158,1,c	;volatile
  7419  002AF0                     
  7420                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 500)
  7421  002AF0  0100               	movlb	0	; () banked
  7422  002AF2  4B97               	infsnz	TMR2_ISR@CountCallBack& (0+255),f,b	;volatile
  7423  002AF4  2B98               	incf	(TMR2_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  7424  002AF6  0EF4               	movlw	244
  7425  002AF8  5D97               	subwf	TMR2_ISR@CountCallBack& (0+255),w,b	;volatile
  7426  002AFA  0E01               	movlw	1
  7427  002AFC  5998               	subwfb	(TMR2_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  7428  002AFE  A0D8               	btfss	status,0,c
  7429  002B00  EF84  F015         	goto	i2u291_41
  7430  002B04  EF86  F015         	goto	i2u291_40
  7431  002B08                     i2u291_41:
  7432  002B08  EF8D  F015         	goto	i2l388
  7433  002B0C                     i2u291_40:
  7434  002B0C                     
  7435                           ; BSR set to: 0
  7436                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  7437  002B0C  EC18  F015         	call	_TMR2_CallBack	;wreg free
  7438  002B10                     
  7439                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  7440  002B10  0E00               	movlw	0
  7441  002B12  0100               	movlb	0	; () banked
  7442  002B14  6F98               	movwf	(TMR2_ISR@CountCallBack+1)& (0+255),b	;volatile
  7443  002B16  0E00               	movlw	0
  7444  002B18  6F97               	movwf	TMR2_ISR@CountCallBack& (0+255),b	;volatile
  7445  002B1A                     i2l388:
  7446                           
  7447                           ; BSR set to: 0
  7448  002B1A  0012               	return		;funcret
  7449  002B1C                     __end_of_TMR2_ISR:
  7450                           	callstack 0
  7451                           
  7452 ;; *************** function _TMR2_CallBack *****************
  7453 ;; Defined at:
  7454 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;		None
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;		None
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      void 
  7461 ;; Registers used:
  7462 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7472 ;;Total ram usage:        0 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; Hardware stack levels required when called:    1
  7475 ;; This function calls:
  7476 ;;		Absolute function
  7477 ;;		_TMR2_DefaultInterruptHandler
  7478 ;; This function is called by:
  7479 ;;		_TMR2_ISR
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           	psect	text59
  7484  002A30                     __ptext59:
  7485                           	callstack 0
  7486  002A30                     _TMR2_CallBack:
  7487                           	callstack 15
  7488  002A30                     
  7489                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  7490  002A30  0100               	movlb	0	; () banked
  7491  002A32  51E4               	movf	_TMR2_InterruptHandler& (0+255),w,b
  7492  002A34  11E5               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  7493  002A36  B4D8               	btfsc	status,2,c
  7494  002A38  EF20  F015         	goto	i2u281_41
  7495  002A3C  EF22  F015         	goto	i2u281_40
  7496  002A40                     i2u281_41:
  7497  002A40  EF2F  F015         	goto	i2l392
  7498  002A44                     i2u281_40:
  7499  002A44                     
  7500                           ; BSR set to: 0
  7501                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  7502  002A44  D802               	call	i2u282_48
  7503  002A46  EF2F  F015         	goto	i2u282_49
  7504  002A4A                     i2u282_48:
  7505  002A4A  0005               	push	
  7506  002A4C  6EFA               	movwf	pclath,c
  7507  002A4E  51E4               	movf	_TMR2_InterruptHandler& (0+255),w,b
  7508  002A50  6EFD               	movwf	tosl,c
  7509  002A52  51E5               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  7510  002A54  6EFE               	movwf	tosh,c
  7511  002A56  50F8               	movf	tblptru,w,c
  7512  002A58  6EFF               	movwf	tosu,c
  7513  002A5A  50FA               	movf	pclath,w,c
  7514  002A5C  0012               	return		;indir
  7515  002A5E                     i2u282_49:
  7516  002A5E                     i2l392:
  7517  002A5E  0012               	return		;funcret
  7518  002A60                     __end_of_TMR2_CallBack:
  7519                           	callstack 0
  7520                           
  7521 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  7522 ;; Defined at:
  7523 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;		None
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;		None
  7528 ;; Return value:  Size  Location     Type
  7529 ;;                  1    wreg      void 
  7530 ;; Registers used:
  7531 ;;		None
  7532 ;; Tracked objects:
  7533 ;;		On entry : 0/0
  7534 ;;		On exit  : 0/0
  7535 ;;		Unchanged: 0/0
  7536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7541 ;;Total ram usage:        0 bytes
  7542 ;; Hardware stack levels used:    1
  7543 ;; This function calls:
  7544 ;;		Nothing
  7545 ;; This function is called by:
  7546 ;;		_TMR2_Initialize
  7547 ;;		_TMR2_CallBack
  7548 ;; This function uses a non-reentrant model
  7549 ;;
  7550                           
  7551                           	psect	text60
  7552  002DAA                     __ptext60:
  7553                           	callstack 0
  7554  002DAA                     _TMR2_DefaultInterruptHandler:
  7555                           	callstack 15
  7556  002DAA  0012               	return		;funcret
  7557  002DAC                     __end_of_TMR2_DefaultInterruptHandler:
  7558                           	callstack 0
  7559                           
  7560 ;; *************** function _TMR1_ISR *****************
  7561 ;; Defined at:
  7562 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  7563 ;; Parameters:    Size  Location     Type
  7564 ;;		None
  7565 ;; Auto vars:     Size  Location     Type
  7566 ;;		None
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  1    wreg      void 
  7569 ;; Registers used:
  7570 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7571 ;; Tracked objects:
  7572 ;;		On entry : 0/0
  7573 ;;		On exit  : 0/0
  7574 ;;		Unchanged: 0/0
  7575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7580 ;;Total ram usage:        0 bytes
  7581 ;; Hardware stack levels used:    1
  7582 ;; Hardware stack levels required when called:    2
  7583 ;; This function calls:
  7584 ;;		_TMR1_CallBack
  7585 ;;		_TMR1_WriteTimer
  7586 ;; This function is called by:
  7587 ;;		_INTERRUPT_InterruptManager
  7588 ;; This function uses a non-reentrant model
  7589 ;;
  7590                           
  7591                           	psect	text61
  7592  00284A                     __ptext61:
  7593                           	callstack 0
  7594  00284A                     _TMR1_ISR:
  7595                           	callstack 15
  7596  00284A                     
  7597                           ;mcc_generated_files/tmr1.c: 159:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
  7598  00284A  909E               	bcf	158,0,c	;volatile
  7599  00284C                     
  7600                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
  7601  00284C  C0F0  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  7602  002850  C0F1  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  7603  002854  ECF4  F015         	call	_TMR1_WriteTimer	;wreg free
  7604  002858                     
  7605                           ;mcc_generated_files/tmr1.c: 166:     if (++CountCallBack >= 25)
  7606  002858  0100               	movlb	0	; () banked
  7607  00285A  4B9D               	infsnz	TMR1_ISR@CountCallBack& (0+255),f,b	;volatile
  7608  00285C  2B9E               	incf	(TMR1_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  7609  00285E  519E               	movf	(TMR1_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  7610  002860  E109               	bnz	i2u288_40
  7611  002862  0E19               	movlw	25
  7612  002864  5D9D               	subwf	TMR1_ISR@CountCallBack& (0+255),w,b	;volatile
  7613  002866  A0D8               	btfss	status,0,c
  7614  002868  EF38  F014         	goto	i2u288_41
  7615  00286C  EF3A  F014         	goto	i2u288_40
  7616  002870                     i2u288_41:
  7617  002870  EF41  F014         	goto	i2l212
  7618  002874                     i2u288_40:
  7619  002874                     
  7620                           ; BSR set to: 0
  7621                           ;mcc_generated_files/tmr1.c: 167:     {;mcc_generated_files/tmr1.c: 169:         TMR1_Ca
      +                          llBack();
  7622  002874  EC30  F015         	call	_TMR1_CallBack	;wreg free
  7623  002878                     
  7624                           ;mcc_generated_files/tmr1.c: 172:         CountCallBack = 0;
  7625  002878  0E00               	movlw	0
  7626  00287A  0100               	movlb	0	; () banked
  7627  00287C  6F9E               	movwf	(TMR1_ISR@CountCallBack+1)& (0+255),b	;volatile
  7628  00287E  0E00               	movlw	0
  7629  002880  6F9D               	movwf	TMR1_ISR@CountCallBack& (0+255),b	;volatile
  7630  002882                     i2l212:
  7631                           
  7632                           ; BSR set to: 0
  7633  002882  0012               	return		;funcret
  7634  002884                     __end_of_TMR1_ISR:
  7635                           	callstack 0
  7636                           
  7637 ;; *************** function _TMR1_WriteTimer *****************
  7638 ;; Defined at:
  7639 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;  timerVal        2    0[COMRAM] unsigned short 
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;		None
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  1    wreg      void 
  7646 ;; Registers used:
  7647 ;;		wreg, status,2
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7656 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7657 ;;Total ram usage:        2 bytes
  7658 ;; Hardware stack levels used:    1
  7659 ;; This function calls:
  7660 ;;		Nothing
  7661 ;; This function is called by:
  7662 ;;		_TMR1_ISR
  7663 ;;		_connect
  7664 ;;		_TMR1_Reload
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           	psect	text62
  7669  002BE8                     __ptext62:
  7670                           	callstack 0
  7671  002BE8                     _TMR1_WriteTimer:
  7672                           	callstack 14
  7673  002BE8                     
  7674                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  7675  002BE8  A4CD               	btfss	205,2,c	;volatile
  7676  002BEA  EFF9  F015         	goto	i2u234_41
  7677  002BEE  EFFB  F015         	goto	i2u234_40
  7678  002BF2                     i2u234_41:
  7679  002BF2  EF03  F016         	goto	i2l3343
  7680  002BF6                     i2u234_40:
  7681  002BF6                     
  7682                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  7683  002BF6  90CD               	bcf	205,0,c	;volatile
  7684  002BF8                     
  7685                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  7686  002BF8  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  7687  002BFA  6ECF               	movwf	207,c	;volatile
  7688  002BFC                     
  7689                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  7690  002BFC  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  7691  002C00                     
  7692                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  7693  002C00  80CD               	bsf	205,0,c	;volatile
  7694                           
  7695                           ;mcc_generated_files/tmr1.c: 133:     }
  7696  002C02  EF07  F016         	goto	i2l197
  7697  002C06                     i2l3343:
  7698                           
  7699                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  7700  002C06  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  7701  002C08  6ECF               	movwf	207,c	;volatile
  7702  002C0A                     
  7703                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  7704  002C0A  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  7705  002C0E                     i2l197:
  7706  002C0E  0012               	return		;funcret
  7707  002C10                     __end_of_TMR1_WriteTimer:
  7708                           	callstack 0
  7709                           
  7710 ;; *************** function _TMR1_CallBack *****************
  7711 ;; Defined at:
  7712 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;		None
  7715 ;; Auto vars:     Size  Location     Type
  7716 ;;		None
  7717 ;; Return value:  Size  Location     Type
  7718 ;;                  1    wreg      void 
  7719 ;; Registers used:
  7720 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7721 ;; Tracked objects:
  7722 ;;		On entry : 0/0
  7723 ;;		On exit  : 0/0
  7724 ;;		Unchanged: 0/0
  7725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7730 ;;Total ram usage:        0 bytes
  7731 ;; Hardware stack levels used:    1
  7732 ;; Hardware stack levels required when called:    1
  7733 ;; This function calls:
  7734 ;;		Absolute function
  7735 ;;		_Blink_
  7736 ;;		_TMR1_DefaultInterruptHandler
  7737 ;; This function is called by:
  7738 ;;		_TMR1_ISR
  7739 ;; This function uses a non-reentrant model
  7740 ;;
  7741                           
  7742                           	psect	text63
  7743  002A60                     __ptext63:
  7744                           	callstack 0
  7745  002A60                     _TMR1_CallBack:
  7746                           	callstack 15
  7747  002A60                     
  7748                           ;mcc_generated_files/tmr1.c: 179:     if(TMR1_InterruptHandler)
  7749  002A60  0100               	movlb	0	; () banked
  7750  002A62  51EE               	movf	_TMR1_InterruptHandler& (0+255),w,b
  7751  002A64  11EF               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  7752  002A66  B4D8               	btfsc	status,2,c
  7753  002A68  EF38  F015         	goto	i2u274_41
  7754  002A6C  EF3A  F015         	goto	i2u274_40
  7755  002A70                     i2u274_41:
  7756  002A70  EF47  F015         	goto	i2l216
  7757  002A74                     i2u274_40:
  7758  002A74                     
  7759                           ; BSR set to: 0
  7760                           ;mcc_generated_files/tmr1.c: 180:     {;mcc_generated_files/tmr1.c: 181:         TMR1_In
      +                          terruptHandler();
  7761  002A74  D802               	call	i2u275_48
  7762  002A76  EF47  F015         	goto	i2u275_49
  7763  002A7A                     i2u275_48:
  7764  002A7A  0005               	push	
  7765  002A7C  6EFA               	movwf	pclath,c
  7766  002A7E  51EE               	movf	_TMR1_InterruptHandler& (0+255),w,b
  7767  002A80  6EFD               	movwf	tosl,c
  7768  002A82  51EF               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  7769  002A84  6EFE               	movwf	tosh,c
  7770  002A86  50F8               	movf	tblptru,w,c
  7771  002A88  6EFF               	movwf	tosu,c
  7772  002A8A  50FA               	movf	pclath,w,c
  7773  002A8C  0012               	return		;indir
  7774  002A8E                     i2u275_49:
  7775  002A8E                     i2l216:
  7776  002A8E  0012               	return		;funcret
  7777  002A90                     __end_of_TMR1_CallBack:
  7778                           	callstack 0
  7779                           
  7780 ;; *************** function _Blink_ *****************
  7781 ;; Defined at:
  7782 ;;		line 161 in file "main.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;		None
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;		None
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  1    wreg      void 
  7789 ;; Registers used:
  7790 ;;		wreg, status,2, status,0
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7798 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7799 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7800 ;;Total ram usage:        2 bytes
  7801 ;; Hardware stack levels used:    1
  7802 ;; This function calls:
  7803 ;;		Nothing
  7804 ;; This function is called by:
  7805 ;;		_main
  7806 ;;		_TMR1_CallBack
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810                           	psect	text64
  7811  0015AC                     __ptext64:
  7812                           	callstack 0
  7813  0015AC                     _Blink_:
  7814                           	callstack 15
  7815  0015AC                     
  7816                           ;main.c: 162:     if (EtatN != null) {
  7817  0015AC  0E05               	movlw	5
  7818  0015AE  185A               	xorwf	_EtatN^0,w,c
  7819  0015B0  B4D8               	btfsc	status,2,c
  7820  0015B2  EFDD  F00A         	goto	i2u235_41
  7821  0015B6  EFDF  F00A         	goto	i2u235_40
  7822  0015BA                     i2u235_41:
  7823  0015BA  EF70  F00B         	goto	i2l3441
  7824  0015BE                     i2u235_40:
  7825  0015BE  EF4B  F00B         	goto	i2l3439
  7826  0015C2                     i2l3417:
  7827  0015C2  B28A               	btfsc	138,1,c	;volatile
  7828  0015C4  EFE6  F00A         	goto	i2u236_41
  7829  0015C8  EFE9  F00A         	goto	i2u236_40
  7830  0015CC                     i2u236_41:
  7831  0015CC  0E01               	movlw	1
  7832  0015CE  EFEA  F00A         	goto	i2u236_46
  7833  0015D2                     i2u236_40:
  7834  0015D2  0E00               	movlw	0
  7835  0015D4                     i2u236_46:
  7836  0015D4  0AFF               	xorlw	255
  7837  0015D6  6E01               	movwf	??_Blink_^0,c
  7838  0015D8  4601               	rlncf	??_Blink_^0,f,c
  7839  0015DA  508A               	movf	138,w,c	;volatile
  7840  0015DC  1801               	xorwf	??_Blink_^0,w,c
  7841  0015DE  0BFD               	andlw	-3
  7842  0015E0  1801               	xorwf	??_Blink_^0,w,c
  7843  0015E2  6E8A               	movwf	138,c	;volatile
  7844  0015E4  848A               	bsf	138,2,c	;volatile
  7845  0015E6  EF70  F00B         	goto	i2l3441
  7846  0015EA                     i2l3421:
  7847  0015EA  B48A               	btfsc	138,2,c	;volatile
  7848  0015EC  EFFA  F00A         	goto	i2u237_41
  7849  0015F0  EFFD  F00A         	goto	i2u237_40
  7850  0015F4                     i2u237_41:
  7851  0015F4  0E01               	movlw	1
  7852  0015F6  EFFE  F00A         	goto	i2u237_46
  7853  0015FA                     i2u237_40:
  7854  0015FA  0E00               	movlw	0
  7855  0015FC                     i2u237_46:
  7856  0015FC  0AFF               	xorlw	255
  7857  0015FE  6E01               	movwf	??_Blink_^0,c
  7858  001600  4601               	rlncf	??_Blink_^0,f,c
  7859  001602  4601               	rlncf	??_Blink_^0,f,c
  7860  001604  508A               	movf	138,w,c	;volatile
  7861  001606  1801               	xorwf	??_Blink_^0,w,c
  7862  001608  0BFB               	andlw	-5
  7863  00160A  1801               	xorwf	??_Blink_^0,w,c
  7864  00160C  6E8A               	movwf	138,c	;volatile
  7865  00160E  828A               	bsf	138,1,c	;volatile
  7866  001610  EF70  F00B         	goto	i2l3441
  7867  001614                     i2l3425:
  7868                           
  7869                           ;main.c: 173:                 if (MINUTE) {
  7870  001614  0100               	movlb	0	; () banked
  7871  001616  519F               	movf	_MINUTE& (0+255),w,b
  7872  001618  B4D8               	btfsc	status,2,c
  7873  00161A  EF11  F00B         	goto	i2u238_41
  7874  00161E  EF13  F00B         	goto	i2u238_40
  7875  001622                     i2u238_41:
  7876  001622  EF26  F00B         	goto	i2l3431
  7877  001626                     i2u238_40:
  7878  001626                     
  7879                           ; BSR set to: 0
  7880  001626  B28A               	btfsc	138,1,c	;volatile
  7881  001628  EF18  F00B         	goto	i2u239_41
  7882  00162C  EF1B  F00B         	goto	i2u239_40
  7883  001630                     i2u239_41:
  7884  001630  0E01               	movlw	1
  7885  001632  EF1C  F00B         	goto	i2u239_46
  7886  001636                     i2u239_40:
  7887  001636  0E00               	movlw	0
  7888  001638                     i2u239_46:
  7889  001638  0AFF               	xorlw	255
  7890  00163A  6E01               	movwf	??_Blink_^0,c
  7891  00163C  4601               	rlncf	??_Blink_^0,f,c
  7892  00163E  508A               	movf	138,w,c	;volatile
  7893  001640  1801               	xorwf	??_Blink_^0,w,c
  7894  001642  0BFD               	andlw	-3
  7895  001644  1801               	xorwf	??_Blink_^0,w,c
  7896  001646  6E8A               	movwf	138,c	;volatile
  7897  001648                     
  7898                           ; BSR set to: 0
  7899                           ;main.c: 175:                     m++;
  7900  001648  4B8F               	infsnz	_m& (0+255),f,b
  7901  00164A  2B90               	incf	(_m+1)& (0+255),f,b
  7902  00164C                     i2l3431:
  7903                           
  7904                           ; BSR set to: 0
  7905                           ;main.c: 177:                 if (m == 2) {
  7906  00164C  0E02               	movlw	2
  7907  00164E  198F               	xorwf	_m& (0+255),w,b
  7908  001650  1190               	iorwf	(_m+1)& (0+255),w,b
  7909  001652  A4D8               	btfss	status,2,c
  7910  001654  EF2E  F00B         	goto	i2u240_41
  7911  001658  EF30  F00B         	goto	i2u240_40
  7912  00165C                     i2u240_41:
  7913  00165C  EF70  F00B         	goto	i2l3441
  7914  001660                     i2u240_40:
  7915  001660                     
  7916                           ; BSR set to: 0
  7917                           ;main.c: 178:                     MINUTE = 0;
  7918  001660  0E00               	movlw	0
  7919  001662  6F9F               	movwf	_MINUTE& (0+255),b
  7920                           
  7921                           ;main.c: 179:                     minute = Oui;
  7922  001664  0E00               	movlw	0
  7923  001666  6FFB               	movwf	_minute& (0+255),b
  7924                           
  7925                           ;main.c: 180:                     m = 0;
  7926  001668  0E00               	movlw	0
  7927  00166A  6F90               	movwf	(_m+1)& (0+255),b
  7928  00166C  0E00               	movlw	0
  7929  00166E  6F8F               	movwf	_m& (0+255),b
  7930  001670  EF70  F00B         	goto	i2l3441
  7931  001674                     i2l661:
  7932  001674  828A               	bsf	138,1,c	;volatile
  7933  001676  948A               	bcf	138,2,c	;volatile
  7934  001678  EF70  F00B         	goto	i2l3441
  7935  00167C                     i2l3435:
  7936                           
  7937                           ;main.c: 188:                 if(perte == Oui)do { LATBbits.LATB5 = 0; } while(0);
  7938  00167C  5058               	movf	_perte^0,w,c
  7939  00167E  A4D8               	btfss	status,2,c
  7940  001680  EF44  F00B         	goto	i2u241_41
  7941  001684  EF46  F00B         	goto	i2u241_40
  7942  001688                     i2u241_41:
  7943  001688  EF47  F00B         	goto	i2l669
  7944  00168C                     i2u241_40:
  7945  00168C  9A8A               	bcf	138,5,c	;volatile
  7946  00168E                     i2l669:
  7947  00168E  928A               	bcf	138,1,c	;volatile
  7948  001690  948A               	bcf	138,2,c	;volatile
  7949  001692  EF70  F00B         	goto	i2l3441
  7950  001696                     i2l3439:
  7951  001696  505A               	movf	_EtatN^0,w,c
  7952  001698  6E01               	movwf	??_Blink_^0,c
  7953  00169A  6A02               	clrf	(??_Blink_+1)^0,c
  7954                           
  7955                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7956                           ; Switch size 1, requested type "simple"
  7957                           ; Number of cases is 1, Range of values is 0 to 0
  7958                           ; switch strategies available:
  7959                           ; Name         Instructions Cycles
  7960                           ; simple_byte            4     3 (average)
  7961                           ;	Chosen strategy is simple_byte
  7962  00169C  5002               	movf	(??_Blink_+1)^0,w,c
  7963  00169E  0A00               	xorlw	0	; case 0
  7964  0016A0  B4D8               	btfsc	status,2,c
  7965  0016A2  EF55  F00B         	goto	i2l4585
  7966  0016A6  EF70  F00B         	goto	i2l3441
  7967  0016AA                     i2l4585:
  7968                           
  7969                           ; Switch size 1, requested type "simple"
  7970                           ; Number of cases is 6, Range of values is 0 to 5
  7971                           ; switch strategies available:
  7972                           ; Name         Instructions Cycles
  7973                           ; simple_byte           19    10 (average)
  7974                           ;	Chosen strategy is simple_byte
  7975  0016AA  5001               	movf	??_Blink_^0,w,c
  7976  0016AC  0A00               	xorlw	0	; case 0
  7977  0016AE  B4D8               	btfsc	status,2,c
  7978  0016B0  EFE1  F00A         	goto	i2l3417
  7979  0016B4  0A01               	xorlw	1	; case 1
  7980  0016B6  B4D8               	btfsc	status,2,c
  7981  0016B8  EFF5  F00A         	goto	i2l3421
  7982  0016BC  0A03               	xorlw	3	; case 2
  7983  0016BE  B4D8               	btfsc	status,2,c
  7984  0016C0  EF0A  F00B         	goto	i2l3425
  7985  0016C4  0A01               	xorlw	1	; case 3
  7986  0016C6  B4D8               	btfsc	status,2,c
  7987  0016C8  EF3E  F00B         	goto	i2l3435
  7988  0016CC  0A07               	xorlw	7	; case 4
  7989  0016CE  B4D8               	btfsc	status,2,c
  7990  0016D0  EF3A  F00B         	goto	i2l661
  7991  0016D4  0A01               	xorlw	1	; case 5
  7992  0016D6  B4D8               	btfsc	status,2,c
  7993  0016D8  EF70  F00B         	goto	i2l3441
  7994  0016DC  EF70  F00B         	goto	i2l3441
  7995  0016E0                     i2l3441:
  7996                           
  7997                           ;main.c: 196:     if (EtatE != rien) {
  7998  0016E0  0E03               	movlw	3
  7999  0016E2  1859               	xorwf	_EtatE^0,w,c
  8000  0016E4  B4D8               	btfsc	status,2,c
  8001  0016E6  EF77  F00B         	goto	i2u242_41
  8002  0016EA  EF79  F00B         	goto	i2u242_40
  8003  0016EE                     i2u242_41:
  8004  0016EE  EFF3  F00B         	goto	i2l698
  8005  0016F2                     i2u242_40:
  8006  0016F2  EFD6  F00B         	goto	i2l3461
  8007  0016F6                     i2l3445:
  8008                           
  8009                           ;main.c: 199:                 if (plat == Oui) {
  8010  0016F6  0100               	movlb	0	; () banked
  8011  0016F8  51FA               	movf	_plat& (0+255),w,b
  8012  0016FA  A4D8               	btfss	status,2,c
  8013  0016FC  EF82  F00B         	goto	i2u243_41
  8014  001700  EF84  F00B         	goto	i2u243_40
  8015  001704                     i2u243_41:
  8016  001704  EF88  F00B         	goto	i2l3449
  8017  001708                     i2u243_40:
  8018  001708                     
  8019                           ; BSR set to: 0
  8020  001708  828A               	bsf	138,1,c	;volatile
  8021  00170A                     
  8022                           ; BSR set to: 0
  8023  00170A  948A               	bcf	138,2,c	;volatile
  8024  00170C                     
  8025                           ; BSR set to: 0
  8026                           ;main.c: 202:                     plat = Non;
  8027  00170C  0E01               	movlw	1
  8028  00170E  6FFA               	movwf	_plat& (0+255),b
  8029  001710                     i2l3449:
  8030                           
  8031                           ; BSR set to: 0
  8032  001710  B28A               	btfsc	138,1,c	;volatile
  8033  001712  EF8D  F00B         	goto	i2u244_41
  8034  001716  EF90  F00B         	goto	i2u244_40
  8035  00171A                     i2u244_41:
  8036  00171A  0E01               	movlw	1
  8037  00171C  EF91  F00B         	goto	i2u244_46
  8038  001720                     i2u244_40:
  8039  001720  0E00               	movlw	0
  8040  001722                     i2u244_46:
  8041  001722  0AFF               	xorlw	255
  8042  001724  6E01               	movwf	??_Blink_^0,c
  8043  001726  4601               	rlncf	??_Blink_^0,f,c
  8044  001728  508A               	movf	138,w,c	;volatile
  8045  00172A  1801               	xorwf	??_Blink_^0,w,c
  8046  00172C  0BFD               	andlw	-3
  8047  00172E  1801               	xorwf	??_Blink_^0,w,c
  8048  001730  6E8A               	movwf	138,c	;volatile
  8049  001732                     
  8050                           ; BSR set to: 0
  8051  001732  B48A               	btfsc	138,2,c	;volatile
  8052  001734  EF9E  F00B         	goto	i2u245_41
  8053  001738  EFA1  F00B         	goto	i2u245_40
  8054  00173C                     i2u245_41:
  8055  00173C  0E01               	movlw	1
  8056  00173E  EFA2  F00B         	goto	i2u245_46
  8057  001742                     i2u245_40:
  8058  001742  0E00               	movlw	0
  8059  001744                     i2u245_46:
  8060  001744  0AFF               	xorlw	255
  8061  001746  6E01               	movwf	??_Blink_^0,c
  8062  001748  4601               	rlncf	??_Blink_^0,f,c
  8063  00174A  4601               	rlncf	??_Blink_^0,f,c
  8064  00174C  508A               	movf	138,w,c	;volatile
  8065  00174E  1801               	xorwf	??_Blink_^0,w,c
  8066  001750  0BFB               	andlw	-5
  8067  001752  1801               	xorwf	??_Blink_^0,w,c
  8068  001754  6E8A               	movwf	138,c	;volatile
  8069  001756  EFF3  F00B         	goto	i2l698
  8070  00175A                     i2l3453:
  8071  00175A  B28A               	btfsc	138,1,c	;volatile
  8072  00175C  EFB2  F00B         	goto	i2u246_41
  8073  001760  EFB5  F00B         	goto	i2u246_40
  8074  001764                     i2u246_41:
  8075  001764  0E01               	movlw	1
  8076  001766  EFB6  F00B         	goto	i2u246_46
  8077  00176A                     i2u246_40:
  8078  00176A  0E00               	movlw	0
  8079  00176C                     i2u246_46:
  8080  00176C  0AFF               	xorlw	255
  8081  00176E  6E01               	movwf	??_Blink_^0,c
  8082  001770  4601               	rlncf	??_Blink_^0,f,c
  8083  001772  508A               	movf	138,w,c	;volatile
  8084  001774  1801               	xorwf	??_Blink_^0,w,c
  8085  001776  0BFD               	andlw	-3
  8086  001778  1801               	xorwf	??_Blink_^0,w,c
  8087  00177A  6E8A               	movwf	138,c	;volatile
  8088  00177C  848A               	bsf	138,2,c	;volatile
  8089  00177E  EFF3  F00B         	goto	i2l698
  8090  001782                     i2l693:
  8091  001782  828A               	bsf	138,1,c	;volatile
  8092  001784  B48A               	btfsc	138,2,c	;volatile
  8093  001786  EFC7  F00B         	goto	i2u247_41
  8094  00178A  EFCA  F00B         	goto	i2u247_40
  8095  00178E                     i2u247_41:
  8096  00178E  0E01               	movlw	1
  8097  001790  EFCB  F00B         	goto	i2u247_46
  8098  001794                     i2u247_40:
  8099  001794  0E00               	movlw	0
  8100  001796                     i2u247_46:
  8101  001796  0AFF               	xorlw	255
  8102  001798  6E01               	movwf	??_Blink_^0,c
  8103  00179A  4601               	rlncf	??_Blink_^0,f,c
  8104  00179C  4601               	rlncf	??_Blink_^0,f,c
  8105  00179E  508A               	movf	138,w,c	;volatile
  8106  0017A0  1801               	xorwf	??_Blink_^0,w,c
  8107  0017A2  0BFB               	andlw	-5
  8108  0017A4  1801               	xorwf	??_Blink_^0,w,c
  8109  0017A6  6E8A               	movwf	138,c	;volatile
  8110  0017A8  EFF3  F00B         	goto	i2l698
  8111  0017AC                     i2l3461:
  8112  0017AC  5059               	movf	_EtatE^0,w,c
  8113  0017AE  6E01               	movwf	??_Blink_^0,c
  8114  0017B0  6A02               	clrf	(??_Blink_+1)^0,c
  8115                           
  8116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8117                           ; Switch size 1, requested type "simple"
  8118                           ; Number of cases is 1, Range of values is 0 to 0
  8119                           ; switch strategies available:
  8120                           ; Name         Instructions Cycles
  8121                           ; simple_byte            4     3 (average)
  8122                           ;	Chosen strategy is simple_byte
  8123  0017B2  5002               	movf	(??_Blink_+1)^0,w,c
  8124  0017B4  0A00               	xorlw	0	; case 0
  8125  0017B6  B4D8               	btfsc	status,2,c
  8126  0017B8  EFE0  F00B         	goto	i2l4587
  8127  0017BC  EFF3  F00B         	goto	i2l698
  8128  0017C0                     i2l4587:
  8129                           
  8130                           ; Switch size 1, requested type "simple"
  8131                           ; Number of cases is 4, Range of values is 0 to 3
  8132                           ; switch strategies available:
  8133                           ; Name         Instructions Cycles
  8134                           ; simple_byte           13     7 (average)
  8135                           ;	Chosen strategy is simple_byte
  8136  0017C0  5001               	movf	??_Blink_^0,w,c
  8137  0017C2  0A00               	xorlw	0	; case 0
  8138  0017C4  B4D8               	btfsc	status,2,c
  8139  0017C6  EFAD  F00B         	goto	i2l3453
  8140  0017CA  0A01               	xorlw	1	; case 1
  8141  0017CC  B4D8               	btfsc	status,2,c
  8142  0017CE  EFC1  F00B         	goto	i2l693
  8143  0017D2  0A03               	xorlw	3	; case 2
  8144  0017D4  B4D8               	btfsc	status,2,c
  8145  0017D6  EF7B  F00B         	goto	i2l3445
  8146  0017DA  0A01               	xorlw	1	; case 3
  8147  0017DC  B4D8               	btfsc	status,2,c
  8148  0017DE  EFF3  F00B         	goto	i2l698
  8149  0017E2  EFF3  F00B         	goto	i2l698
  8150  0017E6                     i2l698:
  8151  0017E6  0012               	return		;funcret
  8152  0017E8                     __end_of_Blink_:
  8153                           	callstack 0
  8154                           
  8155 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  8156 ;; Defined at:
  8157 ;;		line 189 in file "mcc_generated_files/tmr1.c"
  8158 ;; Parameters:    Size  Location     Type
  8159 ;;		None
  8160 ;; Auto vars:     Size  Location     Type
  8161 ;;		None
  8162 ;; Return value:  Size  Location     Type
  8163 ;;                  1    wreg      void 
  8164 ;; Registers used:
  8165 ;;		None
  8166 ;; Tracked objects:
  8167 ;;		On entry : 0/0
  8168 ;;		On exit  : 0/0
  8169 ;;		Unchanged: 0/0
  8170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8175 ;;Total ram usage:        0 bytes
  8176 ;; Hardware stack levels used:    1
  8177 ;; This function calls:
  8178 ;;		Nothing
  8179 ;; This function is called by:
  8180 ;;		_TMR1_Initialize
  8181 ;;		_TMR1_CallBack
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           
  8185                           	psect	text65
  8186  002DAC                     __ptext65:
  8187                           	callstack 0
  8188  002DAC                     _TMR1_DefaultInterruptHandler:
  8189                           	callstack 15
  8190  002DAC  0012               	return		;funcret
  8191  002DAE                     __end_of_TMR1_DefaultInterruptHandler:
  8192                           	callstack 0
  8193                           
  8194 ;; *************** function _TMR0_ISR *****************
  8195 ;; Defined at:
  8196 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;		None
  8199 ;; Auto vars:     Size  Location     Type
  8200 ;;		None
  8201 ;; Return value:  Size  Location     Type
  8202 ;;                  1    wreg      void 
  8203 ;; Registers used:
  8204 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8205 ;; Tracked objects:
  8206 ;;		On entry : 0/0
  8207 ;;		On exit  : 0/0
  8208 ;;		Unchanged: 0/0
  8209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8214 ;;Total ram usage:        0 bytes
  8215 ;; Hardware stack levels used:    1
  8216 ;; Hardware stack levels required when called:    2
  8217 ;; This function calls:
  8218 ;;		_TMR0_CallBack
  8219 ;; This function is called by:
  8220 ;;		_INTERRUPT_InterruptManager
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           	psect	text66
  8225  00299A                     __ptext66:
  8226                           	callstack 0
  8227  00299A                     _TMR0_ISR:
  8228                           	callstack 15
  8229  00299A                     
  8230                           ;mcc_generated_files/tmr0.c: 138:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 141:     INTCONbits.TMR0IF = 0;
  8231  00299A  94F2               	bcf	242,2,c	;volatile
  8232  00299C                     
  8233                           ;mcc_generated_files/tmr0.c: 145:     TMR0H = timer0ReloadVal >> 8;
  8234  00299C  0100               	movlb	0	; () banked
  8235  00299E  51EB               	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
  8236  0029A0  6ED7               	movwf	215,c	;volatile
  8237  0029A2                     
  8238                           ; BSR set to: 0
  8239                           ;mcc_generated_files/tmr0.c: 146:     TMR0L = (uint8_t) timer0ReloadVal;
  8240  0029A2  C0EA  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  8241  0029A6                     
  8242                           ; BSR set to: 0
  8243                           ;mcc_generated_files/tmr0.c: 149:     if (++CountCallBack >= 300)
  8244  0029A6  4B9B               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
  8245  0029A8  2B9C               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  8246  0029AA  0E2C               	movlw	44
  8247  0029AC  5D9B               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
  8248  0029AE  0E01               	movlw	1
  8249  0029B0  599C               	subwfb	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  8250  0029B2  A0D8               	btfss	status,0,c
  8251  0029B4  EFDE  F014         	goto	i2u289_41
  8252  0029B8  EFE0  F014         	goto	i2u289_40
  8253  0029BC                     i2u289_41:
  8254  0029BC  EFE7  F014         	goto	i2l266
  8255  0029C0                     i2u289_40:
  8256  0029C0                     
  8257                           ; BSR set to: 0
  8258                           ;mcc_generated_files/tmr0.c: 150:     {;mcc_generated_files/tmr0.c: 152:         TMR0_Ca
      +                          llBack();
  8259  0029C0  EC48  F015         	call	_TMR0_CallBack	;wreg free
  8260  0029C4                     
  8261                           ;mcc_generated_files/tmr0.c: 155:         CountCallBack = 0;
  8262  0029C4  0E00               	movlw	0
  8263  0029C6  0100               	movlb	0	; () banked
  8264  0029C8  6F9C               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
  8265  0029CA  0E00               	movlw	0
  8266  0029CC  6F9B               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
  8267  0029CE                     i2l266:
  8268                           
  8269                           ; BSR set to: 0
  8270  0029CE  0012               	return		;funcret
  8271  0029D0                     __end_of_TMR0_ISR:
  8272                           	callstack 0
  8273                           
  8274 ;; *************** function _TMR0_CallBack *****************
  8275 ;; Defined at:
  8276 ;;		line 161 in file "mcc_generated_files/tmr0.c"
  8277 ;; Parameters:    Size  Location     Type
  8278 ;;		None
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;		None
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  1    wreg      void 
  8283 ;; Registers used:
  8284 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8294 ;;Total ram usage:        0 bytes
  8295 ;; Hardware stack levels used:    1
  8296 ;; Hardware stack levels required when called:    1
  8297 ;; This function calls:
  8298 ;;		Absolute function
  8299 ;;		_Minute
  8300 ;;		_TMR0_DefaultInterruptHandler
  8301 ;; This function is called by:
  8302 ;;		_TMR0_ISR
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           	psect	text67
  8307  002A90                     __ptext67:
  8308                           	callstack 0
  8309  002A90                     _TMR0_CallBack:
  8310                           	callstack 15
  8311  002A90                     
  8312                           ;mcc_generated_files/tmr0.c: 165:     if(TMR0_InterruptHandler)
  8313  002A90  0100               	movlb	0	; () banked
  8314  002A92  51EC               	movf	_TMR0_InterruptHandler& (0+255),w,b
  8315  002A94  11ED               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  8316  002A96  B4D8               	btfsc	status,2,c
  8317  002A98  EF50  F015         	goto	i2u276_41
  8318  002A9C  EF52  F015         	goto	i2u276_40
  8319  002AA0                     i2u276_41:
  8320  002AA0  EF5F  F015         	goto	i2l270
  8321  002AA4                     i2u276_40:
  8322  002AA4                     
  8323                           ; BSR set to: 0
  8324                           ;mcc_generated_files/tmr0.c: 166:     {;mcc_generated_files/tmr0.c: 167:         TMR0_In
      +                          terruptHandler();
  8325  002AA4  D802               	call	i2u277_48
  8326  002AA6  EF5F  F015         	goto	i2u277_49
  8327  002AAA                     i2u277_48:
  8328  002AAA  0005               	push	
  8329  002AAC  6EFA               	movwf	pclath,c
  8330  002AAE  51EC               	movf	_TMR0_InterruptHandler& (0+255),w,b
  8331  002AB0  6EFD               	movwf	tosl,c
  8332  002AB2  51ED               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  8333  002AB4  6EFE               	movwf	tosh,c
  8334  002AB6  50F8               	movf	tblptru,w,c
  8335  002AB8  6EFF               	movwf	tosu,c
  8336  002ABA  50FA               	movf	pclath,w,c
  8337  002ABC  0012               	return		;indir
  8338  002ABE                     i2u277_49:
  8339  002ABE                     i2l270:
  8340  002ABE  0012               	return		;funcret
  8341  002AC0                     __end_of_TMR0_CallBack:
  8342                           	callstack 0
  8343                           
  8344 ;; *************** function _Minute *****************
  8345 ;; Defined at:
  8346 ;;		line 224 in file "main.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;		None
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;		None
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  1    wreg      void 
  8353 ;; Registers used:
  8354 ;;		wreg, status,2
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8364 ;;Total ram usage:        0 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; This function calls:
  8367 ;;		Nothing
  8368 ;; This function is called by:
  8369 ;;		_main
  8370 ;;		_TMR0_CallBack
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           	psect	text68
  8375  002CB6                     __ptext68:
  8376                           	callstack 0
  8377  002CB6                     _Minute:
  8378                           	callstack 15
  8379  002CB6                     
  8380                           ;main.c: 225:     if (minute == Oui) {
  8381  002CB6  0100               	movlb	0	; () banked
  8382  002CB8  51FB               	movf	_minute& (0+255),w,b
  8383  002CBA  A4D8               	btfss	status,2,c
  8384  002CBC  EF62  F016         	goto	i2u248_41
  8385  002CC0  EF64  F016         	goto	i2u248_40
  8386  002CC4                     i2u248_41:
  8387  002CC4  EF68  F016         	goto	i2l702
  8388  002CC8                     i2u248_40:
  8389  002CC8                     
  8390                           ; BSR set to: 0
  8391                           ;main.c: 226:         MINUTE = 1;
  8392  002CC8  0E01               	movlw	1
  8393  002CCA  6F9F               	movwf	_MINUTE& (0+255),b
  8394                           
  8395                           ;main.c: 227:         minute = Non;
  8396  002CCC  0E01               	movlw	1
  8397  002CCE  6FFB               	movwf	_minute& (0+255),b
  8398  002CD0                     i2l702:
  8399                           
  8400                           ; BSR set to: 0
  8401  002CD0  0012               	return		;funcret
  8402  002CD2                     __end_of_Minute:
  8403                           	callstack 0
  8404                           
  8405 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8406 ;; Defined at:
  8407 ;;		line 175 in file "mcc_generated_files/tmr0.c"
  8408 ;; Parameters:    Size  Location     Type
  8409 ;;		None
  8410 ;; Auto vars:     Size  Location     Type
  8411 ;;		None
  8412 ;; Return value:  Size  Location     Type
  8413 ;;                  1    wreg      void 
  8414 ;; Registers used:
  8415 ;;		None
  8416 ;; Tracked objects:
  8417 ;;		On entry : 0/0
  8418 ;;		On exit  : 0/0
  8419 ;;		Unchanged: 0/0
  8420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8425 ;;Total ram usage:        0 bytes
  8426 ;; Hardware stack levels used:    1
  8427 ;; This function calls:
  8428 ;;		Nothing
  8429 ;; This function is called by:
  8430 ;;		_TMR0_Initialize
  8431 ;;		_TMR0_CallBack
  8432 ;; This function uses a non-reentrant model
  8433 ;;
  8434                           
  8435                           	psect	text69
  8436  002DAE                     __ptext69:
  8437                           	callstack 0
  8438  002DAE                     _TMR0_DefaultInterruptHandler:
  8439                           	callstack 15
  8440  002DAE  0012               	return		;funcret
  8441  002DB0                     __end_of_TMR0_DefaultInterruptHandler:
  8442                           	callstack 0
  8443                           
  8444                           	psect	text70
  8445  000000                     __ptext70:
  8446                           	callstack 0
  8447  000000                     
  8448                           	psect	rparam
  8449  0000                     
  8450                           	psect	temp
  8451  00005B                     btemp:
  8452                           	callstack 0
  8453  00005B                     	ds	1
  8454  0000                     int$flags	set	btemp
  8455  0000                     wtemp8	set	btemp+1
  8456  0000                     ttemp5	set	btemp+1
  8457  0000                     ttemp6	set	btemp+4
  8458  0000                     ttemp7	set	btemp+8
  8459                           
  8460                           	psect	idloc
  8461                           
  8462                           ;Config register IDLOC0 @ 0x200000
  8463                           ;	unspecified, using default values
  8464  200000                     	org	2097152
  8465  200000  FF                 	db	255
  8466                           
  8467                           ;Config register IDLOC1 @ 0x200001
  8468                           ;	unspecified, using default values
  8469  200001                     	org	2097153
  8470  200001  FF                 	db	255
  8471                           
  8472                           ;Config register IDLOC2 @ 0x200002
  8473                           ;	unspecified, using default values
  8474  200002                     	org	2097154
  8475  200002  FF                 	db	255
  8476                           
  8477                           ;Config register IDLOC3 @ 0x200003
  8478                           ;	unspecified, using default values
  8479  200003                     	org	2097155
  8480  200003  FF                 	db	255
  8481                           
  8482                           ;Config register IDLOC4 @ 0x200004
  8483                           ;	unspecified, using default values
  8484  200004                     	org	2097156
  8485  200004  FF                 	db	255
  8486                           
  8487                           ;Config register IDLOC5 @ 0x200005
  8488                           ;	unspecified, using default values
  8489  200005                     	org	2097157
  8490  200005  FF                 	db	255
  8491                           
  8492                           ;Config register IDLOC6 @ 0x200006
  8493                           ;	unspecified, using default values
  8494  200006                     	org	2097158
  8495  200006  FF                 	db	255
  8496                           
  8497                           ;Config register IDLOC7 @ 0x200007
  8498                           ;	unspecified, using default values
  8499  200007                     	org	2097159
  8500  200007  FF                 	db	255
  8501                           
  8502                           	psect	config
  8503                           
  8504                           ;Config register CONFIG1L @ 0x300000
  8505                           ;	VREG Sleep Enable bit
  8506                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
  8507                           ;	LF-INTOSC Low-power Enable bit
  8508                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  8509                           ;	SOSC Power Selection and mode Configuration bits
  8510                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  8511                           ;	Extended Instruction Set
  8512                           ;	XINST = OFF, Disabled
  8513  300000                     	org	3145728
  8514  300000  15                 	db	21
  8515                           
  8516                           ;Config register CONFIG1H @ 0x300001
  8517                           ;	Oscillator
  8518                           ;	FOSC = HS2, HS oscillator (High power, 16 MHz - 25 MHz)
  8519                           ;	PLL x4 Enable bit
  8520                           ;	PLLCFG = OFF, Disabled
  8521                           ;	Fail-Safe Clock Monitor
  8522                           ;	FCMEN = OFF, Disabled
  8523                           ;	Internal External Oscillator Switch Over Mode
  8524                           ;	IESO = OFF, Disabled
  8525  300001                     	org	3145729
  8526  300001  02                 	db	2
  8527                           
  8528                           ;Config register CONFIG2L @ 0x300002
  8529                           ;	Power Up Timer
  8530                           ;	PWRTEN = OFF, Disabled
  8531                           ;	Brown Out Detect
  8532                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
  8533                           ;	Brown-out Reset Voltage bits
  8534                           ;	BORV = 3, 1.8V
  8535                           ;	BORMV Power level
  8536                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  8537  300002                     	org	3145730
  8538  300002  7F                 	db	127
  8539                           
  8540                           ;Config register CONFIG2H @ 0x300003
  8541                           ;	Watchdog Timer
  8542                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  8543                           ;	Watchdog Postscaler
  8544                           ;	WDTPS = 1048576, 1:1048576
  8545  300003                     	org	3145731
  8546  300003  7C                 	db	124
  8547                           
  8548                           ; Padding undefined space
  8549  300004                     	org	3145732
  8550  300004  FF                 	db	255
  8551                           
  8552                           ;Config register CONFIG3H @ 0x300005
  8553                           ;	ECAN Mux bit
  8554                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
  8555                           ;	MSSP address masking
  8556                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
  8557                           ;	Master Clear Enable
  8558                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
  8559  300005                     	org	3145733
  8560  300005  89                 	db	137
  8561                           
  8562                           ;Config register CONFIG4L @ 0x300006
  8563                           ;	Stack Overflow Reset
  8564                           ;	STVREN = ON, Enabled
  8565                           ;	Boot Block Size
  8566                           ;	BBSIZ = BB2K, 2K word Boot Block size
  8567  300006                     	org	3145734
  8568  300006  91                 	db	145
  8569                           
  8570                           ; Padding undefined space
  8571  300007                     	org	3145735
  8572  300007  FF                 	db	255
  8573                           
  8574                           ;Config register CONFIG5L @ 0x300008
  8575                           ;	Code Protect 00800-01FFF
  8576                           ;	CP0 = OFF, Disabled
  8577                           ;	Code Protect 02000-03FFF
  8578                           ;	CP1 = OFF, Disabled
  8579                           ;	Code Protect 04000-05FFF
  8580                           ;	CP2 = OFF, Disabled
  8581                           ;	Code Protect 06000-07FFF
  8582                           ;	CP3 = OFF, Disabled
  8583  300008                     	org	3145736
  8584  300008  0F                 	db	15
  8585                           
  8586                           ;Config register CONFIG5H @ 0x300009
  8587                           ;	Code Protect Boot
  8588                           ;	CPB = OFF, Disabled
  8589                           ;	Data EE Read Protect
  8590                           ;	CPD = OFF, Disabled
  8591  300009                     	org	3145737
  8592  300009  C0                 	db	192
  8593                           
  8594                           ;Config register CONFIG6L @ 0x30000A
  8595                           ;	Table Write Protect 00800-01FFF
  8596                           ;	WRT0 = OFF, Disabled
  8597                           ;	Table Write Protect 02000-03FFF
  8598                           ;	WRT1 = OFF, Disabled
  8599                           ;	Table Write Protect 04000-05FFF
  8600                           ;	WRT2 = OFF, Disabled
  8601                           ;	Table Write Protect 06000-07FFF
  8602                           ;	WRT3 = OFF, Disabled
  8603  30000A                     	org	3145738
  8604  30000A  0F                 	db	15
  8605                           
  8606                           ;Config register CONFIG6H @ 0x30000B
  8607                           ;	Config. Write Protect
  8608                           ;	WRTC = OFF, Disabled
  8609                           ;	Table Write Protect Boot
  8610                           ;	WRTB = OFF, Disabled
  8611                           ;	Data EE Write Protect
  8612                           ;	WRTD = OFF, Disabled
  8613  30000B                     	org	3145739
  8614  30000B  E0                 	db	224
  8615                           
  8616                           ;Config register CONFIG7L @ 0x30000C
  8617                           ;	Table Read Protect 00800-01FFF
  8618                           ;	EBTR0 = OFF, Disabled
  8619                           ;	Table Read Protect 02000-03FFF
  8620                           ;	EBTR1 = OFF, Disabled
  8621                           ;	Table Read Protect 04000-05FFF
  8622                           ;	EBTR2 = OFF, Disabled
  8623                           ;	Table Read Protect 06000-07FFF
  8624                           ;	EBTR3 = OFF, Disabled
  8625  30000C                     	org	3145740
  8626  30000C  0F                 	db	15
  8627                           
  8628                           ;Config register CONFIG7H @ 0x30000D
  8629                           ;	Table Read Protect Boot
  8630                           ;	EBTRB = OFF, Disabled
  8631  30000D                     	org	3145741
  8632  30000D  40                 	db	64
  8633                           tosu	equ	0xFFF
  8634                           tosh	equ	0xFFE
  8635                           tosl	equ	0xFFD
  8636                           stkptr	equ	0xFFC
  8637                           pclatu	equ	0xFFB
  8638                           pclath	equ	0xFFA
  8639                           pcl	equ	0xFF9
  8640                           tblptru	equ	0xFF8
  8641                           tblptrh	equ	0xFF7
  8642                           tblptrl	equ	0xFF6
  8643                           tablat	equ	0xFF5
  8644                           prodh	equ	0xFF4
  8645                           prodl	equ	0xFF3
  8646                           indf0	equ	0xFEF
  8647                           postinc0	equ	0xFEE
  8648                           postdec0	equ	0xFED
  8649                           preinc0	equ	0xFEC
  8650                           plusw0	equ	0xFEB
  8651                           fsr0h	equ	0xFEA
  8652                           fsr0l	equ	0xFE9
  8653                           wreg	equ	0xFE8
  8654                           indf1	equ	0xFE7
  8655                           postinc1	equ	0xFE6
  8656                           postdec1	equ	0xFE5
  8657                           preinc1	equ	0xFE4
  8658                           plusw1	equ	0xFE3
  8659                           fsr1h	equ	0xFE2
  8660                           fsr1l	equ	0xFE1
  8661                           bsr	equ	0xFE0
  8662                           indf2	equ	0xFDF
  8663                           postinc2	equ	0xFDE
  8664                           postdec2	equ	0xFDD
  8665                           preinc2	equ	0xFDC
  8666                           plusw2	equ	0xFDB
  8667                           fsr2h	equ	0xFDA
  8668                           fsr2l	equ	0xFD9
  8669                           status	equ	0xFD8

Data Sizes:
    Strings     74
    Constant    0
    Data        10
    BSS         97
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     33     159
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2225_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_5(CODE[14]), STR_4(CODE[11]), STR_3(CODE[14]), STR_2(CODE[14]), 
		 -> STR_1(CODE[21]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_5(CODE[14]), STR_4(CODE[11]), STR_3(CODE[14]), STR_2(CODE[14]), 
		 -> STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_5(CODE[14]), STR_4(CODE[11]), STR_3(CODE[14]), STR_2(CODE[14]), 
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_5(CODE[14]), STR_4(CODE[11]), STR_3(CODE[14]), STR_2(CODE[14]), 
		 -> STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> connect(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> connect(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Secondes_5(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Secondes_5(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Minute(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Minute(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Blink_(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Blink_(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_traitementEcran
    _reception_->_lecture
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _LCD_Function->_EUSART_function
    _EUSART_function->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _connect->_TMR1_WriteTimer
    _TMR3_ISR->i2_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR1_CallBack->_Blink_

Critical Paths under _main in BANK0

    _main->_traitementNormale
    _affiche->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   22824
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
                    _TMR3_Initialize
           _TMR3_SetInterruptHandler
           _TMR4_SetInterruptHandler
                          _lamp_test
                    _traitementEcran
                  _traitementNormale
 ---------------------------------------------------------------------------------
 (1) _traitementNormale                                    4     4      0    9942
                                             29 BANK0      4     4      0
                    _TMR3_WriteTimer
                            _lecture
                         _reception_
                _reception_affichage
 ---------------------------------------------------------------------------------
 (2) _reception_                                           0     0      0       0
                            _lecture
 ---------------------------------------------------------------------------------
 (2) _TMR3_WriteTimer                                      2     0      2     290
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _traitementEcran                                      2     2      0   10784
                                             84 COMRAM     2     2      0
                       _LCD_Function
                            _lecture
                _reception_affichage
 ---------------------------------------------------------------------------------
 (2) _reception_affichage                                  0     0      0    9652
                            _affiche
                            _lecture
 ---------------------------------------------------------------------------------
 (3) _lecture                                              1     1      0       0
                                              4 COMRAM     1     1      0
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _affiche                                              0     0      0    9652
                       _LCD_Function
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              10     4      6    8520
                                             19 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6    7983
                                             82 COMRAM     2     2      0
                                             13 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           46    40      6    7450
                                             72 COMRAM    10     4      6
                                              0 BANK0     13    13      0
                               _atoi
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                39    28     11    4219
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              8     6      2     412
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    2665
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     166
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1213
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               9     5      4     812
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0      44
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    1244
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     207
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     237
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     403
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _LCD_Function                                         5     3      2    1132
                                              6 COMRAM     5     3      2
                      _EUSART1_Write
                    _EUSART_function
 ---------------------------------------------------------------------------------
 (5) _EUSART_function                                      1     1      0      44
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Write                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lamp_test                                           10    10      0     140
                                              4 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1088
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR3_Initialize                                      2     2      0     174
                                              6 COMRAM     2     2      0
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     174
                                              6 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                              6 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          2     2      0     746
                                              2 COMRAM     2     2      0
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR4_ISR                                            0     0      0     316
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR4_CallBack                                       0     0      0     316
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                            _connect *
 ---------------------------------------------------------------------------------
 (16) _connect                                             0     0      0     316
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                            0     0      0     114
                      _TMR3_CallBack
                  i2_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) i2_TMR3_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0       0
                   Absolute function *
                         _Secondes_5 *
       _TMR3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _Secondes_5                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR2_ISR                                            0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR2_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     316
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (17) _TMR1_WriteTimer                                     2     0      2     316
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0       0
                   Absolute function *
                             _Blink_ *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _Blink_                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (14) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
                             _Minute *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _Minute                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR3_Initialize
     _TMR3_SetInterruptHandler
   _TMR3_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _lamp_test
   _traitementEcran
     _LCD_Function
       _EUSART1_Write
       _EUSART_function
         _EUSART1_Write
     _lecture
       _EUSART1_Read
     _reception_affichage
       _affiche
         _LCD_Function
           _EUSART1_Write
           _EUSART_function
             _EUSART1_Write
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _fputc
                 _putch
                   _EUSART1_Write
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART1_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART1_Write
                   _strlen
                 _toupper
                   _islower
       _lecture
         _EUSART1_Read
   _traitementNormale
     _TMR3_WriteTimer
     _lecture
       _EUSART1_Read
     _reception_
       _lecture
         _EUSART1_Read
     _reception_affichage
       _affiche
         _LCD_Function
           _EUSART1_Write
           _EUSART_function
             _EUSART1_Write
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _fputc
                 _putch
                   _EUSART1_Write
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART1_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART1_Write
                   _strlen
                 _toupper
                   _islower
       _lecture
         _EUSART1_Read

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _Minute *
       _TMR0_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _Blink_ *
       _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _Secondes_5 *
       _TMR3_DefaultInterruptHandler *
     i2_TMR3_WriteTimer
   _TMR4_ISR
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
       _connect *
         _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     21      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F9       6        0.0%
DATA                 0      0      F9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue May 17 18:35:56 2022

              __end_of_TMR2_SetInterruptHandler 2D66                                               _c 007B  
                                             _i 0093                                               _m 008F  
                   __end_of_reception_affichage 2C7A                                              l25 2B6E  
                                            l71 275E                                              l92 2B44  
                                            l95 2D08                                              l88 2B1C  
                                            l98 2D1A                                              _PX 0087  
                                            _PY 0085                                              _PZ 0083  
                                            _Hx 0091                                              _t1 008D  
                                            _t2 008B                                              _t3 0089  
                           ___wmul@multiplicand 0007                                 _timer0ReloadVal 00EA  
                                           l104 2D46                                             l122 2D96  
                                           l116 2D8C                                             l119 2D82  
                                           l151 2C5A                                             l305 27D4  
                                           l154 2D2C                                             l219 2D6E  
                                           l245 2962                                             l341 2D5A  
                                           l183 280E                                             l319 2B96  
                                           l273 2D78                                             l427 2DA4  
                                           l461 2C96                                             l367 2CB4  
                                           l607 2492                                             l633 200E  
                                           l802 2D3C                                             l395 2D64  
                                           l806 243A                                             l639 2076  
                                           l744 1870                                             l489 2D50  
                                           l826 21B4                                             l754 19B2  
                                           l829 2C34                                             l781 2C72  
                                           l782 2C78                                             l759 1A16  
                                           l776 1D68                                             l787 2CE8  
                                           l788 2CEA                                             l798 22BE  
                                           _PR2 000FCB                                             _PR4 000FA9  
                                           _SPX 0081                                             _SPY 007F  
                                           _SPZ 007D                                 _timer1ReloadVal 00F0  
                                           _pad 22C0                                 _TMR2_Initialize 2C98  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                   ?_LCD_Function 0007  
                      __size_of_EUSART_function 0010                                            l3001 24DA  
                                          l3011 255C                                            l3003 24EC  
                                          l3005 24FE                                            l3021 26FE  
                                          l3101 12E4                                            l3007 2508  
                                          l3015 26DC                                            l3023 2964  
                                          l3111 1352                                            l3103 12E6  
                                          l3201 1ED4                                            l3009 2526  
                                          l3017 26E8                                            l3025 2970  
                                          l3033 2884                                            l3121 138C  
                                          l3113 135A                                            l3105 1300  
                                          l3019 26FA                                            l3027 2974  
                                          l3051 22FE                                            l3043 22C0  
                                          l3123 139C                                            l3115 1362  
                                          l3107 132A                                            l3211 0F7E  
                                          l1507 2BBE                                 _timer3ReloadVal 00E8  
                                          l1612 25C8                                            l3037 2C10  
                                          l3029 298C                                            l3061 236C  
                                          l3053 2312                                            l3045 22D0  
                                          l1701 2626                                            l3141 1464  
                                          l3133 1428                                            l3117 1368  
                                          l3109 1332                                            l3221 0FB4  
                                          l3213 0F90                                            l1613 25D0  
                                          l1542 2306                                            l1606 12D2  
                                          l3311 2D36                                            l3039 2C2C  
                                          l3055 2326                                            l3047 22E4  
                                          l3151 151C                                            l3143 146A  
                                          l3135 143A                                            l3127 13DC  
                                          l3119 1370                                            l3215 0F94  
                                          l3207 0F4C                                            l1712 28BA  
                                          l1552 130C                                            l3401 2D8E  
                                          l1641 1EF0                                            l3065 28BC  
                                          l1545 2348                                            l3057 232A  
                                          l3049 22F2                                            l3073 25D2  
                                          l3161 1582                                            l3153 1536  
                                          l3129 13EE                                            l3137 144E  
                                          l1561 13A8                                            l3145 14C8  
                                          l3241 0FD8                                            l3233 0FC6  
                                          l3225 0FBA                                            l3217 0FA0  
                                          l3209 0F70                                            l3321 2B1C  
                                          l1706 262E                                            l1554 1314  
                                          l3403 2D66                                            l3411 2D48  
                                          l3083 28F4                                            l3091 26A2  
                                          l3171 1D86                                            l1547 2384  
                                          l3059 2358                                            l3155 1556  
                                          l3147 14E4                                            l3139 145E  
                                          l3251 10A8                                            l3219 0FA2  
                                          l3243 102C                                            l4211 2570  
                                          l3323 2B2A                                            l1644 1EF8  
                                          l3405 2D70                                            l3309 2D30  
                                          l1653 292A                                            l1661 26DA  
                                          l3093 26D0                                            l3181 1DE2  
                                          l3173 1DA2                                            l3165 1D6A  
                                          l3069 2760                                            l3077 2608  
                                          l3157 155C                                            l3149 1502  
                                          l3253 10B6                                            l3245 104C  
                                          l3237 0FCC                                            l3229 0FC0  
                                          l4213 2578                                            l4221 2BA2  
                                          l3325 2B30                                            l3407 2D52  
                                          l3351 2088                                            l3095 26D4  
                                          l3087 268A                                            l3183 1DF8  
                                          l3175 1DD8                                            l3167 1D7E  
                                          l1647 279A                                            l3079 261A  
                                          l3159 156C                                            l1575 1546  
                                          l3271 11AA                                            l3263 113A  
                                          l3255 10C4                                            l3247 104E  
                                          l1591 103E                                            l4215 2586  
                                          l4231 23CA                                            l3327 2B3E  
                                          l4311 17F4                                            l3409 2D5C  
                                          l3361 20C0                                            l3353 2098  
                                          l3089 268E                                            l3193 1E72  
                                          l3185 1E00                                            l3177 1DDC  
                                          l3169 1D82                                            l1577 15AA  
                                          l3281 1254                                            l3273 11B8  
                                          l3257 10E4                                            l3265 114C  
                                          l3249 1072                                            l4217 25AC  
                                          l4241 2420                                            l4233 23D8  
                                          l4225 2386                                            l3329 2B42  
                                          l4321 183A                                            l4313 1806  
                                          l4305 17E8                                            l1682 256E  
                                          l1690 271E                                            l3611 2740  
                                          l3603 2B46                                            l3371 211E  
                                          l3363 20CC                                            l3355 20A2  
                                          l3347 207A                                            l3187 1E08  
                                          l1667 28F2                                            l3099 12D4  
                                          l3291 1290                                            l3283 1262  
                                          l3275 11F4                                            l3267 1170  
                                          l3259 10F2                                            l4219 2B98  
                                          l4235 23F2                                            l4227 2394  
                                          l4243 2C5C                                            l4251 1BD6  
                                          l4331 187E                                            l4323 1846  
                                          l4315 1814                                            l4307 17EC  
                                          l3613 274C                                            l3605 2B6C  
                                          l3621 279C                                            l3373 2128  
                                          l3365 20D8                                            l3357 20AC  
                                          l3349 207E                                            l3381 2152  
                                          l3197 1EB0                                            l3189 1E3C  
                                          l3285 1276                                            l3269 1194  
                                          l4237 2404                                            l4229 23A2  
                                          l3541 21B6                                            l4245 2C5E  
                                          l4261 1C0E                                            l4253 1BE4  
                                          l4341 1912                                            l4333 189A  
                                          l4325 184C                                            l4317 1818  
                                          l4309 17F0                                            l3615 2758  
                                          l3607 2720                                            l3631 27D0  
                                          l3623 27A8                                            l3375 2132  
                                          l3359 20B6                                            l3199 1EC2  
                                          l3279 1230                                            l3295 129C  
                                          l4239 2412                                            l3543 21C4  
                                          l4247 2C74                                            l4271 1C76  
                                          l4263 1C26                                            l4255 1BF2  
                                          l4351 199A                                            l4343 1940  
                                          l4335 189E                                            l4327 1860  
                                          l4319 182A                                            l1696 2998  
                                          l3609 2734                                            l3617 2DA2  
                                          l3625 27AA                                            l3641 2C92  
                                          l3633 2C7A                                            l3377 213C  
                                          l3369 20E4                                            l3297 12C0  
                                          l3289 1282                                            l3561 2236  
                                          l3553 21F0                                            l3545 21D2  
                                          l4281 1CB6                                            l4273 1C7E  
                                          l4265 1C38                                            l4257 1C04  
                                          l4249 1BC8                                            l3713 2CD2  
                                          l4345 1962                                            l4337 18C2  
                                          l4329 1868                                            l3619 2D1C  
                                          l3651 2CB0                                            l3643 2C98  
                                          l3627 27C2                                            l3635 2C82  
                                          l3811 1F24                                            l3803 1EFA  
                                          l3571 22A6                                            l3563 2246  
                                          l3555 2202                                            l3547 21E8  
                                          l4291 1CFE                                            l4283 1CBA  
                                          l4275 1C92                                            l4267 1C4E  
                                          l4259 1C0A                                            l3715 2CD4  
                                          l4339 18F0                                            l4347 1990  
                                          l4363 19CA                                            l4371 243C  
                                          l3397 2D84                                            l3661 27FE  
                                          l3653 27D6                                            l3645 2CA0  
                                          l3629 27C4                                            l3637 2C84  
                                          l3741 2C3E                                            l3813 1F3E  
                                          l3573 22AE                                            l3565 226E  
                                          l3557 2208                                            l3581 22BC  
                                          l4293 1D10                                            l4285 1CBE  
                                          l4277 1C9A                                            l4269 1C60  
                                          l4357 19C0                                            l4349 1994  
                                          l4381 24A4                                            l4373 2474  
                                          ?_pad 0017                                            l3399 2D7A  
                                          l3671 294E                                            l3663 280A  
                                          l3655 27E2                                            l3647 2CA2  
                                          l3639 2C86                                            l3751 2C52  
                                          l3743 2C42                                            l3831 1FE8  
                                          l3823 1F78                                            l3815 1F5A  
                                          l3575 22B6                                            l3567 227E  
                                          l3559 2224                                            l4287 1CD6  
                                          l4295 1D26                                            l4279 1CA2  
                                          l4359 19C4                                            l4391 24CE  
                                          l4383 24AC                                            l4375 248A  
                                          l3673 2950                                            l3665 292C  
                                          l3657 27E4                                            l3649 2CA4  
                                          l3753 2C56                                            l3745 2C46  
                                          l3737 2C36                                            l3841 2058  
                                          l3833 1FFA                                            l3825 1F9C  
                                          l3817 1F70                                            l3809 1F02  
                                          l3569 22A2                                            l4289 1CE8  
                                          l4385 24B0                                            l4377 248E  
                                          l3675 2952                                            l3667 292E  
                                          l3659 27FC                                            l3747 2C4A  
                                          l3739 2C3A                                            l3835 2006  
                                          l3827 1FB6                                            l4299 1D2E  
                                          l3691 2B80                                            l4379 2490  
                                          l3677 295E                                            l3669 2936  
                                          l3749 2C4E                                            l3837 201A  
                                          l3829 1FD2                                            l4581 20F8  
                                          l3693 2B84                                            l4573 19E0  
                                          l4389 24C6                                            l3839 203E  
                                          l4583 2166                                            l4575 1D42  
                                          l3695 2B88                                            l3687 2B70  
                                          l4577 0FFE                                            l3689 2B7E  
                                          l3697 2B8E                                            l2995 2D08  
                                          l4579 1E26                                            l3699 2B92  
                                          l2997 2D16                                            l2999 2D40  
                                          STR_1 0F01                                            STR_2 0F16  
                                          STR_3 0F24                                            STR_4 0F40  
                                          STR_5 0F32                                            u2000 13D6  
                                          u2001 13D0                                            u2010 13D8  
                                          u2100 1536                                            u2020 13EE  
                                          u2101 1532                                            u2021 13EA  
                                          u2110 1546                                            u2030 1422  
                                          u2111 1542                                            u2031 141C  
                                          u2120 1556                                            u2040 1424  
                                          u2200 0F70                                            u2121 1552  
                                          u2201 0F6C                                            u2130 1DA2  
                                          u2050 143A                                            u2210 103E  
                                          u2131 1D9E                                            u2051 1436  
                                          u2211 103A                                            u2140 1DD8  
                                          u2060 14A2                                            u2300 1254  
                                          u2220 104C                                            u2141 1DD4  
                                          u2301 1250                                            u2221 1048  
                                          _LATA 000F89                                            u2150 1DF4  
                                          u2070 14E4                                            u2230 1072  
                                          _LATB 000F8A                                            u2151 1DF0  
                                          u2071 14E0                                            u2231 106E  
                                          _LATC 000F8B                                            u2160 1EAA  
                                          u2080 1502                                            u2240 10B6  
                                          u2320 2B2A                                            u2161 1EA4  
                                          u2081 14FE                                            u2065 1490  
                                          u2241 10B2                                            u2321 2B26  
                                          u2170 1EAC                                            u2090 151C  
                                          u2250 1132                                            u2330 2B3E  
                                          u2091 1518                                            u2251 112C  
                                          u2331 2B3A                                            u2180 1EC2  
                                          u2260 1134                                            u2181 1EBE  
                                          u2190 1ED4                                            u2270 114C  
                                          u2191 1ED0                                            u2271 1148  
                                          u1720 2D16                                            u1800 28B6  
                                          u2280 1170                                            u1721 2D12  
                                          u2281 116C                                            u1730 24EC  
                                          u1810 22D0                                            u2290 1194  
                                          u3410 25C8                                            u1731 24E8  
                                          u1811 22CC                                            u2291 1190  
                                          u3411 25C4                                            u1740 24FE  
                                          u1820 22F2                                            u1900 2604  
                                          u3420 2404                                            u2700 2224  
                                          u3500 1C92                                            u1741 24FA  
                                          u1821 22EE                                            u3421 2400  
                                          u2701 2220                                            u3501 1C8E  
                                          u1750 2526                                            u1830 2348  
                                          u1910 261A                                            u2710 2246  
                                          u3430 2C72                                            u3510 1CB6  
                                          u1751 2522                                            u1831 2344  
                                          u1911 2616                                            u2711 2242  
                                          u3431 2C6E                                            u3511 1CB2  
                                          u1920 2924                                            u1760 255C  
                                          u1840 2358                                            u2720 227E  
                                          u3520 1CD6                                            u3440 1BD6  
                                          u3600 1860                                            u1921 291E  
                                          u1761 2558                                            u1841 2354  
                                          u2721 227A                                            u3521 1CD2  
                                          u3441 1BD2                                            u3601 185C  
                                          u1930 2926                                            u1850 28EC  
                                          u1770 271E                                            u3530 1CE8  
                                          u3450 1C26                                            u3610 187E  
                                          u1851 28E6                                            u1771 271A  
                                          u3531 1CE4                                            u3451 1C22  
                                          u3611 187A                                            u1940 26A2  
                                          u1860 28EE                                            u1780 298C  
                                          u3540 1CFE                                            u3460 1C38  
                                          u3620 18C2                                            u3700 2484  
                                          u1941 269E                                            u1781 2988  
                                          u3541 1CFA                                            u3461 1C34  
                                          u3621 18BE                                            u3701 247E  
                                          u1950 26D0                                            u1870 2794  
                                          u1790 28B4                                            u3550 1D10  
                                          u3470 1C4E                                            u3630 18F0  
                                          u3710 2486                                            u1951 26CC  
                                          u1871 278E                                            u1791 28AE  
                                          u3551 1D0C                                            u3471 1C4A  
                                          u3631 18EC                                            u1880 2796  
                                          u1960 12E4                                            u2680 21C4  
                                          u3560 1D26                                            u3480 1C60  
                                          u3640 1912                                            u3720 24A4  
                                          u1961 12E0                                            u2681 21C0  
                                          u3561 1D22                                            u3481 1C5C  
                                          u3641 190E                                            u3721 24A0  
                                          u2930 1F12                                            u1890 2602  
                                          u1970 1300                                            u2690 21E8  
                                          u3490 1C76                                            u2850 2CE8  
                                          u3650 1940                                            u3570 1806  
                                          u3730 24C2                                            u2931 1F0C  
                                          u1891 25FC                                            u1971 12FC  
                                          u2691 21E4                                            u3491 1C72  
                                          u2851 2CE4                                            u3651 193C  
                                          u3571 1802                                            u3731 24BE  
                                          u2940 1F5A                                            u1980 132A  
                                          u2780 2B7E                                            u3660 1962  
                                          u3580 1814                                            u2941 1F56  
                                          u1981 1326                                            u2781 2B7A  
                                          u3661 195E                                            u3581 1810  
                                          u2950 1F88                                            u1990 138C  
                                          u3670 1990                                            u3590 182A  
                                          u2951 1F82                                            u1991 1388  
                                          u3671 198C                                            u3591 1826  
                                          u2960 1FD2                                            u2936 1F14  
                                          u3680 19AE                                            u2961 1FCE  
                                          u3681 19AA                                            u2970 1FFA  
                                          u3690 19C0                                            u2971 1FF6  
                                          u3747 1F2E                                            u3691 19BC  
                                          u2980 202A                                            u2956 1F8A  
                                          u2981 2024                                            u3757 1F64  
                                          u2990 2076                                            u2991 2072  
                                          u3767 1FA6                                            u3777 1FDC  
                                          u2986 202C                                            u3787 2048  
                                          _TMR2 000FCC                                            _TMR4 000F87  
                                          _WPUB 000F5B                                 lamp_test@j_1761 0009  
                               lamp_test@j_1759 000D                                   _EUSART1_Write 2D06  
                                          _dbuf 00A1                                            _atoi 1D6A  
                                          _sec5 00FC                                            _main 243C  
                                 ?_EUSART1_Read 0001                                            _plat 00FA  
                                          _prec 0077                                            _nout 0073  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          btemp 005B                                            _xtoa 12D4  
                    __size_ofi2_TMR3_WriteTimer 0028                                            prodh 000FF4  
                                          prodl 000FF3                                            start 00CC  
                               _TMR3_Initialize 279C                      ??_TMR1_SetInterruptHandler 0007  
                    ??_TMR4_SetInterruptHandler 0007                                    ___param_bank 000000  
                                         ??_pad 001D                         __end_of_TMR0_Initialize 2964  
                ??_TMR0_DefaultInterruptHandler 0001                  __size_of_OSCILLATOR_Initialize 0012  
                 __end_of_OSCILLATOR_Initialize 2D2E                                           ?_atoi 000C  
                                         ?_main 0001                                           _T0CON 000FD5  
                                         ?_xtoa 0022                                           _T1CON 000FCD  
                                         _T2CON 000FCA                                           _T3CON 000FB1  
                                         _T4CON 000F88                                           i2l212 2882  
                                         i2l222 2DAC                                           i2l216 2A8E  
                                         i2l270 2ABE                                           i2l334 2848  
                                         i2l319 2BE6                                           i2l344 2DA8  
                                         i2l266 29CE                                           i2l338 2A2E  
                                         i2l276 2DAE                                           i2l197 2C0E  
                                         i2l702 2CD0                                           i2l438 00C0  
                                         i2l392 2A5E                                           i2l706 2CFE  
                                         i2l482 2AEC                                           i2l731 1BC6  
                                         i2l715 1AB0                                           i2l388 2B1A  
                                         i2l708 2D04                                           i2l492 2DA6  
                                         i2l661 1674                                           i2l398 2DAA  
                                         i2l718 1B38                                           i2l486 29FE  
                                         i2l671 1690                                           i2l663 1676  
                                         i2l680 170A                                           i2l667 168C  
                                         i2l693 1782                                           i2l669 168E  
                                         i2l678 1708                                           i2l698 17E6  
                               __end_of_affiche 243C                                    vfpfcnvrt@fmt 004B  
                                         _TMR0H 000FD7                                    vfpfcnvrt@llu 00C1  
                                         _TMR1H 000FCF                                           _TMR0L 000FD6  
                                         _TMR1L 000FCE                                           _TMR3H 000FB3  
                                         _TMR3L 000FB2                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
             __size_of_TMR0_SetInterruptHandler 000A                                 _TMR4_Initialize 2C7A  
                                         _EtatE 0059                                           _EtatN 005A  
             __size_of_TMR3_SetInterruptHandler 000A                       ?_TMR0_SetInterruptHandler 0005  
                                ??_LCD_Function 0009                       ?_TMR3_SetInterruptHandler 0005  
                              __end_of_TMR0_ISR 29D0                                __end_of_TMR1_ISR 2884  
                              __end_of_TMR2_ISR 2B1C                                __end_of_TMR3_ISR 284A  
                               __end_of_connect 1BC8                                __end_of_TMR4_ISR 2AEE  
                ??_TMR3_DefaultInterruptHandler 0001                                           _flags 0079  
                               __end_of_lecture 22C0                                           _fputc 24DA  
                               __end_of_isalpha 279C                                           _fputs 26DC  
                               __end_of_isdigit 292C                                           _perte 0058  
                                         atoi@n 0019                                           pad@fp 0017  
                                         atoi@s 000C                                           _trame 0060  
                                         _width 0075                                           _putch 2D3E  
                               __end_of_islower 28BC                                 __end_of_isspace 26DC  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 2810  
                               __end_of_isupper 28F4                                           pclath 000FFA  
                                         tablat 000FF5                                  ??_EUSART1_Read 0005  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           status 000FD8  
                                         wtemp8 005C                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                               __end_of_toupper 2630              _EUSART1_DefaultFramingErrorHandler 000000  
                               _TMR1_WriteTimer 2BE8                                    _toupper$2420 0011  
                               __initialization 2630                                    __end_of_atoi 1EFA  
                    __end_of_EUSART1_Initialize 2760                                    __end_of_main 24DA  
                                  __end_of_xtoa 15AC                         __end_of_TMR2_Initialize 2CB6  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_atoi 000E  
                      _TMR2_SetInterruptHandler 2D5C                                          ??_main 0057  
                               _traitementEcran 1BC8                                          ??_xtoa 002D  
                                 __activetblptr 000002                           _TMR3_InterruptHandler 00E6  
                                        ?_fputc 0007                                          ?_fputs 0010  
                                        _ANCON0 000F5D                                          _ANCON1 000F5C  
                                    _Secondes_5 2CEC                                          ?_putch 0001  
                                        _T1GCON 000FAA                                          _T3GCON 000FB0  
                       TMR1_WriteTimer@timerVal 0001                         __end_of_TMR3_Initialize 27D6  
                                        i2l4001 009C                                          i2l4003 00A0  
                                        i2l4005 00AE                                          i2l4007 00BC  
                                        i2l3421 15EA                                          i2l3413 15AC  
                                        i2l3341 2C00                                          i2l3333 2BE8  
                                        i2l3501 1ABE                                          i2l3431 164C  
                                        i2l3423 160E                                          i2l3335 2BF6  
                                        i2l3343 2C06                                          i2l3511 1B08  
                                        i2l3503 1ACE                                          i2l3433 1660  
                                        i2l3425 1614                                          i2l3417 15C2  
                                        i2l3441 16E0                                          i2l3345 2C0A  
                                        i2l3337 2BF8                                          i2l3513 1B0C  
                                        i2l3505 1ADE                                          i2l3451 1732  
                                        i2l3435 167C                                          i2l3427 1626  
                                        i2l3419 15E4                                          i2l3339 2BFC  
                                        i2l3531 1B86                                          i2l3515 1B0E  
                                        i2l3507 1AE6                                          i2l3523 1B38  
                                        i2l3453 175A                                          i2l3445 16F6  
                                        i2l3461 17AC                                          i2l3429 1648  
                                        i2l3701 2A00                                          i2l3533 1B96  
                                        i2l3525 1B54                                          i2l3509 1AF8  
                                        i2l3517 1B14                                          i2l3471 2CB6  
                                        i2l3455 177C                                          i2l3447 170C  
                                        i2l3439 1696                                          i2l3703 2A14  
                                        i2l3535 1BA6                                          i2l3527 1B66  
                                        i2l3519 1B24                                          i2l3711 29E4  
                                        i2l3473 2CC8                                          i2l3457 1784  
                                        i2l3449 1710                                          i2l3705 2A30  
                                        i2l3537 1BAE                                          i2l3529 1B76  
                                        i2l3481 1A1E                                          i2l3801 2AE2  
                                        i2l3707 2A44                                          i2l3475 2CEC  
                                        i2l3731 2BD8                                          i2l3723 2BC0  
                                        i2l3539 1BBE                                          i2l3491 1A80  
                                        i2l3483 1A3A                                          i2l3477 2D00  
                                        i2l3725 2BCE                                          i2l3733 2BDE  
                                        i2l3493 1A92                                          i2l3485 1A4C  
                                        i2l3709 29D0                                          i2l3735 2BE2  
                                        i2l3727 2BD0                                          i2l3495 1A9A  
                                        i2l3487 1A5E                                          i2l3479 1A18  
                                        i2l3681 2A74                                          i2l3761 2874  
                                        i2l3729 2BD4                                          i2l3497 1AA6  
                                        i2l3489 1A6E                                          i2l3683 2A90  
                                        i2l3771 29A6                                          i2l3763 2878  
                                        i2l3755 284A                                          i2l3499 1AAC  
                                        i2l3685 2AA4                                          i2l3773 29C0  
                                        i2l3765 299A                                          i2l3757 284C  
                                        i2l3781 281E                                          i2l3775 29C4  
                                        i2l3767 299C                                          i2l3679 2A60  
                                        i2l3759 2858                                          i2l3791 2B0C  
                                        i2l3783 283A                                          i2l3769 29A2  
                                        i2l4585 16AA                                          i2l3793 2B10  
                                        i2l3785 283E                                          i2l3777 2810  
                                        i2l4587 17C0                                          i2l3787 2AEE  
                                        i2l3779 2812                                          i2l3795 2AC0  
                                        i2l3789 2AF0                                          i2l3797 2AC2  
                                        i2l3981 002E                                          i2l3799 2ADE  
                                        i2l3991 0060                                          i2l3983 0032  
                                        i2l3993 006E                                          i2l3985 0040  
                                        i2l3977 0012                                          i2l3995 007C  
                                        i2l3987 004E                                          i2l3979 0020  
                                        i2l3997 0080                                          i2l3989 005C  
                                        i2l3999 008E                                          _RCREG1 000FAE  
                                        _MINUTE 009F                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                   vfpfcnvrt@done 00C9  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _GoBack 00FE                                          _TXSTA1 000FAC  
                             ??_EUSART_function 0006                                          _Blink_ 15AC  
                               _TMR3_WriteTimer 2B70                                          _Minute 2CB6  
          __end_of_TMR1_DefaultInterruptHandler 2DAE           __size_of_TMR1_DefaultInterruptHandler 0002  
                  _TMR1_DefaultInterruptHandler 2DAC                                    vfprintf@cfmt 0053  
                                        ___wmul 2C10                                          _goback 00FD  
                                     ??_affiche 0055                        ?_EUSART1_SetErrorHandler 0005  
                     i2TMR3_WriteTimer@timerVal 0001                                ?_TMR0_Initialize 0001  
                       __end_of_TMR4_Initialize 2C98                                          clear_0 2676  
                                        _minute 00FB                                          _saving 00F9  
                                        _printf 2B98                                          pad@buf 0019  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        _strlen 2964                                       ??_connect 0003  
          __end_of_TMR4_DefaultInterruptHandler 2DA8           __size_of_TMR4_DefaultInterruptHandler 0002  
                  _TMR4_DefaultInterruptHandler 2DA6                                       ??_lecture 0005  
                                        fputc@c 0007                                          fputs@c 0014  
                                        fputs@i 0015                                    __pdataCOMRAM 0057  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                       ??_islower 0007  
                                  __mediumconst 0000                                       ??_isspace 0007  
                                        tblptrh 000FF7                                       ??_isupper 0007  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                         __end_of_TMR0_CallBack 2AC0                                __end_of_vfprintf 25D2  
                               ??_EUSART1_Write 0005        TMR4_SetInterruptHandler@InterruptHandler 0005  
      TMR2_SetInterruptHandler@InterruptHandler 0005        TMR3_SetInterruptHandler@InterruptHandler 0005  
      TMR0_SetInterruptHandler@InterruptHandler 0005        TMR1_SetInterruptHandler@InterruptHandler 0005  
                       __end_of_TMR1_WriteTimer 2C10                                          xtoa@fp 0022  
                                     ??_toupper 000D                   __size_of_INTERRUPT_Initialize 0004  
                         __end_of_TMR1_CallBack 2A90                                ?_TMR1_Initialize 0001  
                             _SYSTEM_Initialize 2C36                                      __accesstop 0060  
                       __end_of__initialization 267C                           __end_of_TMR2_CallBack 2A60  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                         __end_of_TMR3_CallBack 2A30                            __end_of_LCD_Function 21B6  
                                __pcstackCOMRAM 0001                           __end_of_TMR4_CallBack 2A00  
                       __end_of_traitementEcran 1D6A                                    __pidataBANK0 2D98  
                           ??_SYSTEM_Initialize 0009                                       ?_TMR0_ISR 0001  
                                     ?_TMR1_ISR 0001                                       ?_TMR2_ISR 0001  
               fp__TMR1_DefaultInterruptHandler 0000                   ?_TMR1_DefaultInterruptHandler 0001  
                                     ?_TMR3_ISR 0001                                       ?_TMR4_ISR 0001  
                                 __end_of_fputc 2570                                   __end_of_fputs 2720  
                                 __end_of_putch 2D48                                   LCD_Function@x 0007  
                                 LCD_Function@z 0008                                ?_TMR2_Initialize 0001  
                          __end_of_EUSART1_Read 2B46                           TMR0_ISR@CountCallBack 009B  
                         TMR3_ISR@CountCallBack 0099                 fp__TMR4_DefaultInterruptHandler 0000  
                 ?_TMR4_DefaultInterruptHandler 0001                                         ??_fputc 000B  
                     __end_of_SYSTEM_Initialize 2C5C                                         ??_fputs 0014  
                                   ?_Secondes_5 0001                         __end_of_TMR3_WriteTimer 2B98  
                                       ??_putch 0006                                      __pbssBANK0 0060  
                            __size_of_lamp_test 017E                                ?_TMR3_Initialize 0001  
                         _TMR4_InterruptHandler 00E2                                         ?_Blink_ 0001  
                                       ?_Minute 0001                 __end_of_EUSART1_SetErrorHandler 2D98  
              __end_of_TMR0_SetInterruptHandler 2D7A                __end_of_TMR3_SetInterruptHandler 2D5C  
                                       ?___wmul 0005                                      ??_TMR0_ISR 0001  
                                    ??_TMR1_ISR 0003                                      ??_TMR2_ISR 0001  
                                    ??_TMR3_ISR 0003                                      ??_TMR4_ISR 0003  
                              ?_TMR4_Initialize 0001                                         ?_printf 00D4  
                                       ?_strlen 0005          __end_of_EUSART1_SetFramingErrorHandler 2D8E  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 2D84  
                  __size_of_reception_affichage 001E                                         _REFOCON 000F9A  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0388  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000F7D  
                              ?_TMR1_WriteTimer 0001                                 __size_of_Blink_ 023C  
                                       __Hparam 0000                                         __Lparam 0000  
                    ??_TMR2_SetInterruptHandler 0007                                 __size_of_Minute 001C  
                              ?_traitementEcran 0001                                 __size_of___wmul 0026  
                                     ?_vfprintf 00CE                                    __psmallconst 0F00  
                                       _affiche 2386                             __size_of_Secondes_5 001A  
                                       __pcinit 2630                               __end_of_lamp_test 2078  
                                       __ramtop 0F00                                         __ptext0 243C  
                                       __ptext1 17E8                                         __ptext2 2CD2  
                                       __ptext3 2B70                                         __ptext4 1BC8  
                                       __ptext5 2C5C                                         __ptext6 21B6  
                                       __ptext7 2B1C                                         __ptext8 2386  
                                       __ptext9 2B98                                 __size_of_printf 0028  
                                       _connect 1A18                                       _T0CONbits 000FD5  
                ??_TMR1_DefaultInterruptHandler 0001                                 __size_of_strlen 0036  
                                     _T1CONbits 000FCD                                         _lecture 21B6  
                         _OSCILLATOR_Initialize 2D1C                                       _T2CONbits 000FCA  
                                  __size_of_pad 00C6                                         _isalpha 2760  
                                       _isdigit 28F4                                       _T3CONbits 000FB1  
             __size_of_TMR1_SetInterruptHandler 000A                                       _T4CONbits 000F88  
                            _EUSART1_Initialize 2720                                         _islower 2884  
                      ??_PIN_MANAGER_Initialize 0005               __size_of_TMR4_SetInterruptHandler 000A  
                                       _isspace 268A                       ?_TMR1_SetInterruptHandler 0005  
                     ?_TMR4_SetInterruptHandler 0005                                         _isupper 28BC  
                               _EUSART_function 2D2E                                      _reception_ 2CD2  
                                       atoi@neg 0012                      __size_of_SYSTEM_Initialize 0026  
                                       _toupper 25D2                            end_of_initialization 267C  
                              ?_TMR3_WriteTimer 0005                  ??_TMR4_DefaultInterruptHandler 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0009  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 00F4  
                                       fputs@fp 0012                           __size_of_LCD_Function 013E  
                             __end_of_vfpfcnvrt 12D4                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 002A                                      ??_vfprintf 0053  
                          ??_EUSART1_Initialize 0007                                         strlen@a 0007  
                                       strlen@s 0005                        _TMR0_SetInterruptHandler 2D70  
                                     _PORTBbits 000F81                        _TMR3_SetInterruptHandler 2D52  
                             LCD_Function@ordre 000B                                      fp__connect 0000  
                                  _LCD_Function 2078                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0005                                    _EUSART1_Read 2B1C  
                                __end_of_Blink_ 17E8                                  __end_of_Minute 2CD2  
                  __end_of_INTERRUPT_Initialize 2DA6            __end_of_TMR2_DefaultInterruptHandler 2DAC  
         __size_of_TMR2_DefaultInterruptHandler 0002                    _TMR2_DefaultInterruptHandler 2DAA  
                                   vfpfcnvrt@ap 004D                                     vfpfcnvrt@fp 0049  
                                __end_of___wmul 2C36                                   __pidataCOMRAM 2D9E  
                             __size_of_TMR0_ISR 0036                               __size_of_TMR1_ISR 003A  
                             __size_of_TMR2_ISR 002E                               __size_of_TMR3_ISR 003A  
                       __end_of_EUSART_function 2D3E                               __size_of_TMR4_ISR 002E  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 2BC0  
                                __end_of_strlen 299A                             start_initialization 2630  
                                    lamp_test@j 000B                                      lamp_test@k 0007  
                      __size_of_TMR0_Initialize 0038                 __size_of_PIN_MANAGER_Initialize 002A  
                                   ?_reception_ 0001                                     __end_of_pad 2386  
                                  ??_Secondes_5 0001                                     putch@txData 0006  
                            EUSART_function@hex 0006                           __end_of_EUSART1_Write 2D1C  
                                      ??_Blink_ 0001                             _reception_affichage 2C5C  
                                      ??_Minute 0001                        __size_of_TMR1_Initialize 003A  
                                   vfprintf@fmt 00D0                                        ??___wmul 0009  
                        __size_of_TMR0_CallBack 0030                                     __pdataBANK0 00F9  
               fp__TMR2_DefaultInterruptHandler 0000                   ?_TMR2_DefaultInterruptHandler 0001  
                            __end_of_Secondes_5 2D06                          __size_of_TMR1_CallBack 0030  
                                      ??_printf 0055                                        ??_strlen 0007  
                        __size_of_TMR2_CallBack 0030                            ?_reception_affichage 0001  
                         TMR1_ISR@CountCallBack 009D                           TMR4_ISR@CountCallBack 0095  
                                 __pcstackBANK0 00C1                        __size_of_TMR2_Initialize 001E  
                        __size_of_TMR3_CallBack 0030                               _traitementNormale 17E8  
                        __size_of_TMR4_CallBack 0030                              ?_traitementNormale 0001  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
                                     _atoi$2344 0014                                       _atoi$2345 0018  
                                     _atoi$2346 0016                           _TMR0_InterruptHandler 00EC  
                                     __pnvBANK0 00E2                             ??_traitementNormale 00DE  
                        _PIN_MANAGER_Initialize 2B46                        __size_of_TMR3_Initialize 003A  
                                     __pintcode 0008                __end_of_TMR1_SetInterruptHandler 2D70  
                           __size_of_reception_ 001A                __end_of_TMR4_SetInterruptHandler 2D52  
                                      ?_affiche 0001                    ??_INTERRUPT_InterruptManager 0003  
                              ?_EUSART_function 0001                               __size_of_vfprintf 0062  
                                      ?_connect 0001                                       _connexion 0057  
                         ??_reception_affichage 0055                                     __smallconst 0F00  
                                      ?_lecture 0001                                        _BAUDCON1 000FA7  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isalpha 0005  
                                      ?_isdigit 0005                       __end_of_traitementNormale 1A18  
                                     _lamp_test 1EFA                            _EUSART1_ErrorHandler 00F2  
                                      ?_islower 0005                                        ?_isspace 0005  
                                      ?_isupper 0005                         _EUSART1_SetErrorHandler 2D8E  
                      __size_of_TMR4_Initialize 001E                                   _TMR0_CallBack 2A90  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                      ?_toupper 000B                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 2DA2                                   _TMR1_CallBack 2A60  
                             ??_TMR0_Initialize 0007                                        _LCD_Mode 00F8  
                                ___wmul@product 0009         EUSART1_SetErrorHandler@interruptHandler 0005  
                                      _LATBbits 000F8A                                   _TMR2_CallBack 2A30  
                                      _PIE1bits 000F9D                                        _PIE2bits 000FA0  
                                      _PIE4bits 000FB6                        __size_of_TMR1_WriteTimer 0028  
                                     fp__Blink_ 0000             __size_of_INTERRUPT_InterruptManager 00C4  
                                      i2u240_40 1660                                        i2u240_41 165C  
                                      i2u241_40 168C                                        i2u241_41 1688  
                                      i2u242_40 16F2                                        i2u234_40 2BF6  
                                      i2u250_40 1A3A                                        i2u330_40 005C  
                                      i2u242_41 16EE                                        i2u234_41 2BF2  
                                      i2u250_41 1A36                                        i2u330_41 0058  
                                      i2u243_40 1708                                        i2u235_40 15BE  
                                      i2u251_40 1A4C                                        i2u331_40 006E  
                                      i2u243_41 1704                                        i2u235_41 15BA  
                                      i2u251_41 1A48                                        i2u331_41 006A  
                                      i2u244_40 1720                                        i2u236_40 15D2  
                                      i2u260_40 1B24                                        i2u252_40 1A5E  
                                      i2u332_40 007C                                        i2u244_41 171A  
                                      i2u236_41 15CC                                        i2u260_41 1B20  
                                      i2u252_41 1A5A                                        i2u332_41 0078  
                                      i2u244_46 1722                                        i2u236_46 15D4  
                                      i2u245_40 1742                                        i2u237_40 15FA  
                                      i2u261_40 1B34                                        i2u253_40 1A6E  
                                      i2u333_40 008E                      ??_TMR0_SetInterruptHandler 0007  
                                      i2u245_41 173C                                        i2u237_41 15F4  
                                      i2u261_41 1B30                                        i2u253_41 1A6A  
                                      i2u333_41 008A                                        i2u245_46 1744  
                                      i2u237_46 15FC                                        i2u246_40 176A  
                                      i2u238_40 1626                                        i2u262_40 1B54  
                                      i2u254_40 1A80                                        i2u334_40 009C  
                                      i2u326_40 0020                                        i2u246_41 1764  
                                      i2u238_41 1622                                        i2u262_41 1B50  
                                      i2u254_41 1A7C                                        i2u334_41 0098  
                                      i2u326_41 001C                                        i2u246_46 176C  
                                      i2u247_40 1794                                        i2u239_40 1636  
                                      i2u263_40 1B66                                        i2u255_40 1A92  
                                      i2u335_40 00AE                                        i2u327_40 002E  
                                      i2u247_41 178E                                        i2u239_41 1630  
                                      i2u263_41 1B62                                        i2u255_41 1A8E  
                                      i2u335_41 00AA                                        i2u327_41 002A  
                                      i2u247_46 1796                                        i2u239_46 1638  
                                      i2u248_40 2CC8                                        i2u264_40 1B76  
                                      i2u256_40 1ACE                                        i2u336_40 00BC  
                                      i2u328_40 0040                                        i2u248_41 2CC4  
                                      i2u264_41 1B72                                        i2u256_41 1ACA  
                                      i2u336_41 00B8                                        i2u328_41 003C  
                                      i2u281_40 2A44                                        i2u249_40 2CFE  
                                      i2u280_48 2A1A                                        i2u265_40 1B96  
                                      i2u257_40 1ADE                                        i2u329_40 004E  
                                      i2u281_41 2A40                                        i2u249_41 2CFA  
                                      i2u280_49 2A2E                                        i2u265_41 1B92  
                                      i2u257_41 1ADA                                        i2u329_41 004A  
                                      _PIR1bits 000F9E                                        i2u274_40 2A74  
                                      i2u290_40 283A                                        i2u266_40 1BA6  
                                      i2u258_40 1AF8                                        i2u274_41 2A70  
                                      i2u290_41 2836                                        i2u266_41 1BA2  
                                      i2u258_41 1AF4                                        i2u282_48 2A4A  
                                      i2u291_40 2B0C                                        i2u267_40 1BBE  
                                      i2u259_40 1B08                                        i2u283_40 29E4  
                                      i2u282_49 2A5E                                        i2u291_41 2B08  
                                      i2u267_41 1BBA                                        i2u259_41 1B04  
                                      i2u283_41 29E0                                        _PIR2bits 000FA1  
                                      i2u276_40 2AA4                                        i2u275_48 2A7A  
                                      i2u292_40 2ADE                                        i2u276_41 2AA0  
                                      i2u275_49 2A8E                                        i2u292_41 2ADA  
                                      i2u284_48 29EA                                        i2u284_49 29FE  
                                      i2u277_48 2AAA                                        i2u277_49 2ABE  
                                      i2u279_40 2A14                                        i2u287_40 2BCE  
                                      i2u279_41 2A10                                        i2u287_41 2BCA  
                                      _PIR4bits 000FB7                                        i2u288_40 2874  
                                      i2u288_41 2870                      ??_TMR3_SetInterruptHandler 0007  
                                 _TMR3_CallBack 2A00                                        i2u289_40 29C0  
                                      i2u289_41 29BC                                        _RCONbits 000FD0  
                                     fp__Minute 0000                                        _TMR0_ISR 299A  
                                      _TMR1_ISR 284A                                        _TMR2_ISR 2AEE  
                                      _TMR3_ISR 2810                                        _TMR4_ISR 2AC0  
                                 _TMR4_CallBack 29D0                                       _vfpfcnvrt 0F4C  
                                     _xtoa$2310 0035                                       _xtoa$2311 0037  
                             ??_TMR1_Initialize 0007                               ___wmul@multiplier 0005  
                      __size_of_traitementEcran 01A2                                      ?_lamp_test 0001  
                ??_TMR2_DefaultInterruptHandler 0001               __size_of_TMR2_SetInterruptHandler 000A  
                     ?_TMR2_SetInterruptHandler 0005                                    _isspace$2371 000B  
                                ?_TMR0_CallBack 0001                                      vfpfcnvrt@c 00CD  
                                   _INTCON2bits 000FF1                                       copy_data0 2644  
                                     copy_data1 2664                           ?_INTERRUPT_Initialize 0001  
                                ?_TMR1_CallBack 0001                               ??_TMR2_Initialize 0007  
                                ?_TMR2_CallBack 0001                                   fp__Secondes_5 0000  
                                ?_TMR3_CallBack 0001                                        __Hrparam 0000  
                      __size_of_TMR3_WriteTimer 0028                                      vfprintf@ap 00D2  
                                      __Lrparam 0000                                      vfprintf@fp 00CE  
                                ?_TMR4_CallBack 0001                         ??_OSCILLATOR_Initialize 0005  
                   __size_of_EUSART1_Initialize 0040                                      ?_vfpfcnvrt 0049  
                              __size_of_affiche 00B6                               ??_TMR3_Initialize 0007  
                      _TMR1_SetInterruptHandler 2D66                        _TMR4_SetInterruptHandler 2D48  
                         _TMR1_InterruptHandler 00EE                       ??_EUSART1_SetErrorHandler 0007  
                   _EUSART1_DefaultErrorHandler 000000                                __size_of_connect 01B0  
                    __size_of_traitementNormale 0230                                __size_of_lecture 010A  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                                  ??_reception_ 0006                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        __ptext10 2570  
                                      __ptext11 0F4C                                        __ptext20 28BC  
                                      __ptext12 12D4                                        __ptext21 2760  
                                      __ptext13 25D2                                      _T1GCONbits 000FAA  
                                      __ptext30 2C36                                        __ptext22 1D6A  
                                      __ptext14 2884                                        __ptext31 2C7A  
                                      __ptext23 268A                                        __ptext15 22C0  
                                      __ptext40 2D70                                        __ptext32 2D48  
                                      __ptext24 28F4                                        __ptext16 2964  
                                      __ptext41 2B46                                        __ptext33 279C  
                                      __ptext25 2C10                                        __ptext17 26DC  
                                      __ptext50 29D0                                        __ptext42 2D1C  
                                      __ptext34 2D52                                        __ptext26 2078  
                                      __ptext18 24DA                                        __ptext51 2DA6  
                                      __ptext43 2DA2                                        __ptext35 2C98  
                                      __ptext27 2D2E                                        __ptext19 2D3E  
                                      __ptext60 2DAA                                        __ptext52 1A18  
                                      __ptext44 2720                                        __ptext36 2D5C  
                                      __ptext28 2D06                                        __ptext61 284A  
                                      __ptext53 2810                                        __ptext45 2D7A  
                                      __ptext37 27D6                                        __ptext29 1EFA  
                                      __ptext70 0000                                        __ptext62 2BE8  
                                      __ptext54 2BC0                                        __ptext46 2D84  
                                      __ptext38 2D66                                        __ptext63 2A60  
                                      __ptext55 2A00                                        __ptext47 2D8E  
                                      __ptext39 292C                                        __ptext64 15AC  
                                      __ptext56 2CEC                                        __ptext65 2DAC  
                                      __ptext57 2DA8                                        __ptext49 2AC0  
                                      __ptext66 299A                                        __ptext58 2AEE  
                                      __ptext67 2A90                                        __ptext59 2A30  
                                      __ptext68 2CB6                                        __ptext69 2DAE  
                              __size_of_isupper 0038                                      _T3GCONbits 000FB0  
                       TMR3_WriteTimer@timerVal 0005                                __size_of_toupper 005E  
                             ??_TMR4_Initialize 0007                                   __size_of_atoi 0190  
                                 __size_of_main 009E                                   __size_of_xtoa 02D8  
          __end_of_TMR0_DefaultInterruptHandler 2DB0           __size_of_TMR0_DefaultInterruptHandler 0002  
                  _TMR0_DefaultInterruptHandler 2DAE                               i2_TMR3_WriteTimer 2BC0  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005                                        int$flags 005B  
                            ?i2_TMR3_WriteTimer 0001                              __end_of_reception_ 2CEC  
                                      _vfprintf 2570              __end_of_INTERRUPT_InterruptManager 00CC  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 00D4  
                             ??_TMR1_WriteTimer 0003            __end_of_TMR3_DefaultInterruptHandler 2DAA  
         __size_of_TMR3_DefaultInterruptHandler 0002                    _TMR3_DefaultInterruptHandler 2DA8  
                   _EUSART1_FramingErrorHandler 00F6                             ??i2_TMR3_WriteTimer 0003  
                                _vfpfcnvrt$2326 00CB                                      _INTCONbits 000FF2  
                                   ??_lamp_test 0005                                 ??_TMR0_CallBack 0001  
                                      isalpha@c 0005                                        isdigit@c 0005  
                        ??_INTERRUPT_Initialize 0005                                 ??_TMR1_CallBack 0003  
                             ??_traitementEcran 0055                                        intlevel2 0000  
                               ??_TMR2_CallBack 0001                                        islower@c 0005  
                                      isspace@c 0005                         ?_PIN_MANAGER_Initialize 0001  
                               ??_TMR3_CallBack 0001          __end_of_EUSART1_SetOverrunErrorHandler 2D84  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 2D7A  
                                    _RCSTA1bits 000FAB                       __end_ofi2_TMR3_WriteTimer 2BE8  
                                      isupper@c 0005                                 ??_TMR4_CallBack 0003  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                      printf@ap 00DC  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
                                   ??_vfpfcnvrt 004F                               ??_TMR3_WriteTimer 0007  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 00A0  
               fp__TMR3_DefaultInterruptHandler 0000                   ?_TMR3_DefaultInterruptHandler 0001  
                         TMR2_ISR@CountCallBack 0097                                 _TMR0_Initialize 292C  
                                      toupper@c 000B                  __end_of_PIN_MANAGER_Initialize 2B70  
                         _TMR2_InterruptHandler 00E4                                 _TMR1_Initialize 27D6  
