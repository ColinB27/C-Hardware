

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue May 17 13:09:15 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    94                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    95  0000                     
    96                           ; Version 2.20
    97                           ; Generated 05/05/2020 GMT
    98                           ; 
    99                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   100                           ; All rights reserved.
   101                           ; 
   102                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   103                           ; 
   104                           ; Redistribution and use in source and binary forms, with or without modification, are
   105                           ; permitted provided that the following conditions are met:
   106                           ; 
   107                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   108                           ;        conditions and the following disclaimer.
   109                           ; 
   110                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   111                           ;        of conditions and the following disclaimer in the documentation and/or other
   112                           ;        materials provided with the distribution.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F25K80 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     
   131 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   132  0000                     
   133 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   134  0000                     
   135 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   136  0000                     
   137                           	psect	idataCOMRAM
   138  002EA4                     __pidataCOMRAM:
   139                           	callstack 0
   140                           
   141                           ;initializer for _saving
   142  002EA4  01                 	db	1
   143                           
   144                           ;initializer for _EtatE
   145  002EA5  03                 	db	3
   146                           
   147                           ;initializer for _EtatN
   148  002EA6  05                 	db	5
   149                           
   150                           	psect	idataBANK0
   151  002E9A                     __pidataBANK0:
   152                           	callstack 0
   153                           
   154                           ;initializer for _perte
   155  002E9A  02                 	db	2
   156                           
   157                           ;initializer for _plat
   158  002E9B  02                 	db	2
   159                           
   160                           ;initializer for _minute
   161  002E9C  02                 	db	2
   162                           
   163                           ;initializer for _sec5
   164  002E9D  02                 	db	2
   165                           
   166                           ;initializer for _goback
   167  002E9E  03                 	db	3
   168                           
   169                           ;initializer for _GoBack
   170  002E9F  05                 	db	5
   171                           
   172                           	psect	nvBANK0
   173  0000E2                     __pnvBANK0:
   174                           	callstack 0
   175  0000E2                     _TMR4_InterruptHandler:
   176                           	callstack 0
   177  0000E2                     	ds	2
   178  0000E4                     _TMR2_InterruptHandler:
   179                           	callstack 0
   180  0000E4                     	ds	2
   181  0000E6                     _TMR3_InterruptHandler:
   182                           	callstack 0
   183  0000E6                     	ds	2
   184  0000E8                     _timer3ReloadVal:
   185                           	callstack 0
   186  0000E8                     	ds	2
   187  0000EA                     _timer0ReloadVal:
   188                           	callstack 0
   189  0000EA                     	ds	2
   190  0000EC                     _TMR0_InterruptHandler:
   191                           	callstack 0
   192  0000EC                     	ds	2
   193  0000EE                     _TMR1_InterruptHandler:
   194                           	callstack 0
   195  0000EE                     	ds	2
   196  0000F0                     _timer1ReloadVal:
   197                           	callstack 0
   198  0000F0                     	ds	2
   199  0000F2                     _EUSART1_ErrorHandler:
   200                           	callstack 0
   201  0000F2                     	ds	2
   202  0000F4                     _EUSART1_OverrunErrorHandler:
   203                           	callstack 0
   204  0000F4                     	ds	2
   205  0000F6                     _EUSART1_FramingErrorHandler:
   206                           	callstack 0
   207  0000F6                     	ds	2
   208  0000F8                     _LCD_Mode:
   209                           	callstack 0
   210  0000F8                     	ds	1
   211  0000                     _WPUB	set	3931
   212  0000                     _ANCON1	set	3932
   213  0000                     _ANCON0	set	3933
   214  0000                     _LATBbits	set	3978
   215  0000                     _PORTBbits	set	3969
   216  0000                     _T4CONbits	set	3976
   217  0000                     _T4CON	set	3976
   218  0000                     _TMR4	set	3975
   219  0000                     _PR4	set	4009
   220  0000                     _PIR4bits	set	4023
   221  0000                     _PIE4bits	set	4022
   222  0000                     _RCONbits	set	4048
   223  0000                     _T2CONbits	set	4042
   224  0000                     _T2CON	set	4042
   225  0000                     _TMR2	set	4044
   226  0000                     _PR2	set	4043
   227  0000                     _T3GCONbits	set	4016
   228  0000                     _T3CONbits	set	4017
   229  0000                     _T3CON	set	4017
   230  0000                     _PIE2bits	set	4000
   231  0000                     _PIR2bits	set	4001
   232  0000                     _TMR3L	set	4018
   233  0000                     _TMR3H	set	4019
   234  0000                     _T3GCON	set	4016
   235  0000                     _T0CON	set	4053
   236  0000                     _TMR0L	set	4054
   237  0000                     _TMR0H	set	4055
   238  0000                     _T0CONbits	set	4053
   239  0000                     _T1GCONbits	set	4010
   240  0000                     _T1CONbits	set	4045
   241  0000                     _T1CON	set	4045
   242  0000                     _PIE1bits	set	3997
   243  0000                     _TMR1L	set	4046
   244  0000                     _TMR1H	set	4047
   245  0000                     _T1GCON	set	4010
   246  0000                     _REFOCON	set	3994
   247  0000                     _OSCTUNE	set	3995
   248  0000                     _OSCCON2	set	4050
   249  0000                     _OSCCON	set	4051
   250  0000                     _TXREG1	set	4013
   251  0000                     _RCREG1	set	4014
   252  0000                     _RCSTA1bits	set	4011
   253  0000                     _TXSTA1bits	set	4012
   254  0000                     _PIR1bits	set	3998
   255  0000                     _SPBRGH1	set	3965
   256  0000                     _SPBRG1	set	4015
   257  0000                     _TXSTA1	set	4012
   258  0000                     _RCSTA1	set	4011
   259  0000                     _BAUDCON1	set	4007
   260  0000                     _INTCONbits	set	4082
   261  0000                     _INTCON2bits	set	4081
   262  0000                     _TRISC	set	3988
   263  0000                     _TRISB	set	3987
   264  0000                     _TRISA	set	3986
   265  0000                     _LATC	set	3979
   266  0000                     _LATB	set	3978
   267  0000                     _LATA	set	3977
   268                           
   269                           	psect	smallconst
   270  000F00                     __psmallconst:
   271                           	callstack 0
   272  000F00  00                 	db	0
   273  000F01                     STR_1:
   274                           
   275                           ; BSR set to: 0
   276  000F01  20                 	db	32
   277  000F02  20                 	db	32
   278  000F03  20                 	db	32
   279  000F04  20                 	db	32
   280  000F05  20                 	db	32
   281  000F06  20                 	db	32
   282  000F07  50                 	db	80	;'P'
   283  000F08  4F                 	db	79	;'O'
   284  000F09  53                 	db	83	;'S'
   285  000F0A  49                 	db	73	;'I'
   286  000F0B  54                 	db	84	;'T'
   287  000F0C  49                 	db	73	;'I'
   288  000F0D  4F                 	db	79	;'O'
   289  000F0E  4E                 	db	78	;'N'
   290  000F0F  53                 	db	83	;'S'
   291  000F10  20                 	db	32
   292  000F11  20                 	db	32
   293  000F12  20                 	db	32
   294  000F13  20                 	db	32
   295  000F14  20                 	db	32
   296  000F15  00                 	db	0
   297  000F16                     STR_2:
   298                           
   299                           ; BSR set to: 0
   300  000F16  58                 	db	88	;'X'
   301  000F17  20                 	db	32
   302  000F18  3D                 	db	61	;'='
   303  000F19  20                 	db	32
   304  000F1A  25                 	db	37
   305  000F1B  30                 	db	48	;'0'
   306  000F1C  32                 	db	50	;'2'
   307  000F1D  58                 	db	88	;'X'
   308  000F1E  20                 	db	32
   309  000F1F  25                 	db	37
   310  000F20  30                 	db	48	;'0'
   311  000F21  32                 	db	50	;'2'
   312  000F22  58                 	db	88	;'X'
   313  000F23  00                 	db	0
   314  000F24                     STR_3:
   315                           
   316                           ; BSR set to: 0
   317  000F24  59                 	db	89	;'Y'
   318  000F25  20                 	db	32
   319  000F26  3D                 	db	61	;'='
   320  000F27  20                 	db	32
   321  000F28  25                 	db	37
   322  000F29  30                 	db	48	;'0'
   323  000F2A  32                 	db	50	;'2'
   324  000F2B  58                 	db	88	;'X'
   325  000F2C  20                 	db	32
   326  000F2D  25                 	db	37
   327  000F2E  30                 	db	48	;'0'
   328  000F2F  32                 	db	50	;'2'
   329  000F30  58                 	db	88	;'X'
   330  000F31  00                 	db	0
   331  000F32                     STR_5:
   332                           
   333                           ; BSR set to: 0
   334  000F32  5A                 	db	90	;'Z'
   335  000F33  20                 	db	32
   336  000F34  3D                 	db	61	;'='
   337  000F35  20                 	db	32
   338  000F36  25                 	db	37
   339  000F37  30                 	db	48	;'0'
   340  000F38  32                 	db	50	;'2'
   341  000F39  58                 	db	88	;'X'
   342  000F3A  20                 	db	32
   343  000F3B  25                 	db	37
   344  000F3C  30                 	db	48	;'0'
   345  000F3D  32                 	db	50	;'2'
   346  000F3E  58                 	db	88	;'X'
   347  000F3F  00                 	db	0
   348  000F40                     STR_4:
   349                           
   350                           ; BSR set to: 0
   351  000F40  20                 	db	32
   352  000F41  20                 	db	32
   353  000F42  5F                 	db	95	;'_'
   354  000F43  2D                 	db	45
   355  000F44  50                 	db	80	;'P'
   356  000F45  6C                 	db	108	;'l'
   357  000F46  61                 	db	97	;'a'
   358  000F47  74                 	db	116	;'t'
   359  000F48  2D                 	db	45
   360  000F49  5F                 	db	95	;'_'
   361  000F4A  00                 	db	0
   362  000F4B  00                 	db	0	; dummy byte at the end
   363  0000                     
   364                           ; #config settings
   365                           
   366                           	psect	cinit
   367  0026A4                     __pcinit:
   368                           	callstack 0
   369  0026A4                     start_initialization:
   370                           	callstack 0
   371  0026A4                     __initialization:
   372                           	callstack 0
   373                           
   374                           ; Initialize objects allocated to BANK0 (6 bytes)
   375                           ; load TBLPTR registers with __pidataBANK0
   376  0026A4  0E9A               	movlw	low __pidataBANK0
   377  0026A6  6EF6               	movwf	tblptrl,c
   378  0026A8  0E2E               	movlw	high __pidataBANK0
   379  0026AA  6EF7               	movwf	tblptrh,c
   380  0026AC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   381  0026AE  6EF8               	movwf	tblptru,c
   382  0026B0  EE00  F0F9         	lfsr	0,__pdataBANK0
   383  0026B4  EE10 F006          	lfsr	1,6
   384  0026B8                     copy_data0:
   385  0026B8  0009               	tblrd		*+
   386  0026BA  CFF5 FFEE          	movff	tablat,postinc0
   387  0026BE  50E5               	movf	postdec1,w,c
   388  0026C0  50E1               	movf	fsr1l,w,c
   389  0026C2  E1FA               	bnz	copy_data0
   390                           
   391                           ; Initialize objects allocated to COMRAM (3 bytes)
   392                           ; load TBLPTR registers with __pidataCOMRAM
   393  0026C4  0EA4               	movlw	low __pidataCOMRAM
   394  0026C6  6EF6               	movwf	tblptrl,c
   395  0026C8  0E2E               	movlw	high __pidataCOMRAM
   396  0026CA  6EF7               	movwf	tblptrh,c
   397  0026CC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   398  0026CE  6EF8               	movwf	tblptru,c
   399  0026D0  0009               	tblrd		*+	;fetch initializer
   400  0026D2  CFF5 F056          	movff	tablat,__pdataCOMRAM
   401  0026D6  0009               	tblrd		*+	;fetch initializer
   402  0026D8  CFF5 F057          	movff	tablat,__pdataCOMRAM+1
   403  0026DC  0009               	tblrd		*+	;fetch initializer
   404  0026DE  CFF5 F058          	movff	tablat,__pdataCOMRAM+2
   405                           
   406                           ; Clear objects allocated to BANK0 (93 bytes)
   407  0026E2  EE00  F060         	lfsr	0,__pbssBANK0
   408  0026E6  0E5D               	movlw	93
   409  0026E8                     clear_0:
   410  0026E8  6AEE               	clrf	postinc0,c
   411  0026EA  06E8               	decf	wreg,f,c
   412  0026EC  E1FD               	bnz	clear_0
   413                           
   414                           ; Clear objects allocated to COMRAM (4 bytes)
   415  0026EE  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   416  0026F0  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   417  0026F2  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   418  0026F4  6A52               	clrf	__pbssCOMRAM& (0+255),c
   419  0026F6                     end_of_initialization:
   420                           	callstack 0
   421  0026F6                     __end_of__initialization:
   422                           	callstack 0
   423  0026F6  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   424  0026F8  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   425  0026FA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   426  0026FC  6EF8               	movwf	tblptru,c
   427  0026FE  0100               	movlb	0
   428  002700  EF87  F012         	goto	_main	;jump to C main() function
   429                           
   430                           	psect	bssCOMRAM
   431  000052                     __pbssCOMRAM:
   432                           	callstack 0
   433  000052                     _PX:
   434                           	callstack 0
   435  000052                     	ds	2
   436  000054                     _i:
   437                           	callstack 0
   438  000054                     	ds	2
   439                           
   440                           	psect	dataCOMRAM
   441  000056                     __pdataCOMRAM:
   442                           	callstack 0
   443  000056                     _saving:
   444                           	callstack 0
   445  000056                     	ds	1
   446  000057                     _EtatE:
   447                           	callstack 0
   448  000057                     	ds	1
   449  000058                     _EtatN:
   450                           	callstack 0
   451  000058                     	ds	1
   452                           
   453                           	psect	bssBANK0
   454  000060                     __pbssBANK0:
   455                           	callstack 0
   456  000060                     _trame:
   457                           	callstack 0
   458  000060                     	ds	19
   459  000073                     _nout:
   460                           	callstack 0
   461  000073                     	ds	2
   462  000075                     _width:
   463                           	callstack 0
   464  000075                     	ds	2
   465  000077                     _prec:
   466                           	callstack 0
   467  000077                     	ds	2
   468  000079                     _flags:
   469                           	callstack 0
   470  000079                     	ds	2
   471  00007B                     _c:
   472                           	callstack 0
   473  00007B                     	ds	2
   474  00007D                     _SPZ:
   475                           	callstack 0
   476  00007D                     	ds	2
   477  00007F                     _SPY:
   478                           	callstack 0
   479  00007F                     	ds	2
   480  000081                     _SPX:
   481                           	callstack 0
   482  000081                     	ds	2
   483  000083                     _PZ:
   484                           	callstack 0
   485  000083                     	ds	2
   486  000085                     _PY:
   487                           	callstack 0
   488  000085                     	ds	2
   489  000087                     _t3:
   490                           	callstack 0
   491  000087                     	ds	2
   492  000089                     _t2:
   493                           	callstack 0
   494  000089                     	ds	2
   495  00008B                     _t1:
   496                           	callstack 0
   497  00008B                     	ds	2
   498  00008D                     _m:
   499                           	callstack 0
   500  00008D                     	ds	2
   501  00008F                     _Hx:
   502                           	callstack 0
   503  00008F                     	ds	2
   504  000091                     TMR4_ISR@CountCallBack:
   505                           	callstack 0
   506  000091                     	ds	2
   507  000093                     TMR2_ISR@CountCallBack:
   508                           	callstack 0
   509  000093                     	ds	2
   510  000095                     TMR3_ISR@CountCallBack:
   511                           	callstack 0
   512  000095                     	ds	2
   513  000097                     TMR0_ISR@CountCallBack:
   514                           	callstack 0
   515  000097                     	ds	2
   516  000099                     TMR1_ISR@CountCallBack:
   517                           	callstack 0
   518  000099                     	ds	2
   519  00009B                     _MINUTE:
   520                           	callstack 0
   521  00009B                     	ds	1
   522  00009C                     _eusart1RxLastError:
   523                           	callstack 0
   524  00009C                     	ds	1
   525  00009D                     _dbuf:
   526                           	callstack 0
   527  00009D                     	ds	32
   528                           
   529                           	psect	dataBANK0
   530  0000F9                     __pdataBANK0:
   531                           	callstack 0
   532  0000F9                     _perte:
   533                           	callstack 0
   534  0000F9                     	ds	1
   535  0000FA                     _plat:
   536                           	callstack 0
   537  0000FA                     	ds	1
   538  0000FB                     _minute:
   539                           	callstack 0
   540  0000FB                     	ds	1
   541  0000FC                     _sec5:
   542                           	callstack 0
   543  0000FC                     	ds	1
   544  0000FD                     _goback:
   545                           	callstack 0
   546  0000FD                     	ds	1
   547  0000FE                     _GoBack:
   548                           	callstack 0
   549  0000FE                     	ds	1
   550                           
   551                           	psect	cstackBANK1
   552  000100                     __pcstackBANK1:
   553                           	callstack 0
   554  000100                     ??_traitementEcran:
   555                           
   556                           ; 1 bytes @ 0x0
   557  000100                     	ds	2
   558                           
   559                           	psect	cstackBANK0
   560  0000BD                     __pcstackBANK0:
   561                           	callstack 0
   562  0000BD                     ??_vfpfcnvrt:
   563                           
   564                           ; 1 bytes @ 0x0
   565  0000BD                     	ds	4
   566  0000C1                     vfpfcnvrt@llu:
   567                           	callstack 0
   568                           
   569                           ; 8 bytes @ 0x4
   570  0000C1                     	ds	8
   571  0000C9                     vfpfcnvrt@c:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0xC
   575  0000C9                     	ds	1
   576  0000CA                     vfpfcnvrt@done:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0xD
   580  0000CA                     	ds	2
   581  0000CC                     _vfpfcnvrt$2325:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0xF
   585  0000CC                     	ds	2
   586  0000CE                     ?_vfprintf:
   587                           	callstack 0
   588  0000CE                     vfprintf@fp:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x11
   592  0000CE                     	ds	2
   593  0000D0                     vfprintf@fmt:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x13
   597  0000D0                     	ds	2
   598  0000D2                     vfprintf@ap:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x15
   602  0000D2                     	ds	2
   603  0000D4                     vfprintf@cfmt:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x17
   607  0000D4                     	ds	2
   608  0000D6                     ?_printf:
   609                           	callstack 0
   610  0000D6                     printf@fmt:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x19
   614  0000D6                     	ds	10
   615  0000E0                     printf@ap:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x23
   619  0000E0                     	ds	2
   620                           
   621                           	psect	cstackCOMRAM
   622  000001                     __pcstackCOMRAM:
   623                           	callstack 0
   624  000001                     ??_Blink_:
   625  000001                     ??i2_lecture:
   626  000001                     TMR1_WriteTimer@timerVal:
   627                           	callstack 0
   628  000001                     i2TMR3_WriteTimer@timerVal:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x0
   632  000001                     	ds	2
   633  000003                     ??_INTERRUPT_InterruptManager:
   634  000003                     
   635                           ; 1 bytes @ 0x2
   636  000003                     	ds	4
   637  000007                     ??_lamp_test:
   638  000007                     ??_lecture:
   639  000007                     ?_strlen:
   640                           	callstack 0
   641  000007                     ?_isupper:
   642                           	callstack 0
   643  000007                     ?_isalpha:
   644                           	callstack 0
   645  000007                     ?_isdigit:
   646                           	callstack 0
   647  000007                     ?_isspace:
   648                           	callstack 0
   649  000007                     ?_islower:
   650                           	callstack 0
   651  000007                     ?___wmul:
   652                           	callstack 0
   653  000007                     EUSART1_Write@txData:
   654                           	callstack 0
   655  000007                     EUSART1_SetFramingErrorHandler@interruptHandler:
   656                           	callstack 0
   657  000007                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   658                           	callstack 0
   659  000007                     EUSART1_SetErrorHandler@interruptHandler:
   660                           	callstack 0
   661  000007                     TMR1_SetInterruptHandler@InterruptHandler:
   662                           	callstack 0
   663  000007                     TMR0_SetInterruptHandler@InterruptHandler:
   664                           	callstack 0
   665  000007                     TMR3_WriteTimer@timerVal:
   666                           	callstack 0
   667  000007                     TMR3_SetInterruptHandler@InterruptHandler:
   668                           	callstack 0
   669  000007                     TMR2_SetInterruptHandler@InterruptHandler:
   670                           	callstack 0
   671  000007                     TMR4_SetInterruptHandler@InterruptHandler:
   672                           	callstack 0
   673  000007                     ___wmul@multiplier:
   674                           	callstack 0
   675  000007                     isalpha@c:
   676                           	callstack 0
   677  000007                     isdigit@c:
   678                           	callstack 0
   679  000007                     isspace@c:
   680                           	callstack 0
   681  000007                     isupper@c:
   682                           	callstack 0
   683  000007                     strlen@s:
   684                           	callstack 0
   685  000007                     islower@c:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x6
   689  000007                     	ds	1
   690  000008                     putch@txData:
   691                           	callstack 0
   692  000008                     EUSART_function@hex:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0x7
   696  000008                     	ds	1
   697  000009                     ??_TMR3_Initialize:
   698  000009                     ??_TMR1_Initialize:
   699  000009                     ??_TMR0_Initialize:
   700  000009                     ??_traitementNormale:
   701  000009                     ??_isupper:
   702  000009                     ??_isalpha:
   703  000009                     ??_isdigit:
   704  000009                     ??_isspace:
   705  000009                     ??_islower:
   706  000009                     LCD_Function@x:
   707                           	callstack 0
   708  000009                     lamp_test@k:
   709                           	callstack 0
   710  000009                     ___wmul@multiplicand:
   711                           	callstack 0
   712  000009                     fputc@c:
   713                           	callstack 0
   714  000009                     strlen@a:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x8
   718  000009                     	ds	1
   719  00000A                     LCD_Function@z:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x9
   723  00000A                     	ds	1
   724  00000B                     ??_LCD_Function:
   725  00000B                     lamp_test@j_1760:
   726                           	callstack 0
   727  00000B                     ___wmul@product:
   728                           	callstack 0
   729  00000B                     fputc@fp:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0xA
   733  00000B                     	ds	2
   734  00000D                     ??_fputc:
   735  00000D                     ?_toupper:
   736                           	callstack 0
   737  00000D                     LCD_Function@ordre:
   738                           	callstack 0
   739  00000D                     _isspace$2370:
   740                           	callstack 0
   741  00000D                     lamp_test@j:
   742                           	callstack 0
   743  00000D                     toupper@c:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0xC
   747  00000D                     	ds	1
   748  00000E                     ?_atoi:
   749                           	callstack 0
   750  00000E                     atoi@s:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0xD
   754  00000E                     	ds	1
   755  00000F                     ??_toupper:
   756  00000F                     lamp_test@j_1758:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0xE
   760  00000F                     	ds	1
   761  000010                     ??_atoi:
   762                           
   763                           ; 1 bytes @ 0xF
   764  000010                     	ds	2
   765  000012                     fputs@s:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x11
   769  000012                     	ds	1
   770  000013                     _toupper$2419:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x12
   774  000013                     	ds	1
   775  000014                     atoi@neg:
   776                           	callstack 0
   777  000014                     fputs@fp:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x13
   781  000014                     	ds	2
   782  000016                     fputs@c:
   783                           	callstack 0
   784  000016                     _atoi$2343:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x15
   788  000016                     	ds	1
   789  000017                     fputs@i:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x16
   793  000017                     	ds	1
   794  000018                     _atoi$2345:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x17
   798  000018                     	ds	1
   799  000019                     ?_pad:
   800                           	callstack 0
   801  000019                     pad@fp:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x18
   805  000019                     	ds	1
   806  00001A                     _atoi$2344:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0x19
   810  00001A                     	ds	1
   811  00001B                     pad@buf:
   812                           	callstack 0
   813  00001B                     atoi@n:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x1A
   817  00001B                     	ds	2
   818  00001D                     pad@p:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x1C
   822  00001D                     	ds	2
   823  00001F                     ??_pad:
   824                           
   825                           ; 1 bytes @ 0x1E
   826  00001F                     	ds	1
   827  000020                     pad@i:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x1F
   831  000020                     	ds	2
   832  000022                     pad@w:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x21
   836  000022                     	ds	2
   837  000024                     ?_xtoa:
   838                           	callstack 0
   839  000024                     xtoa@fp:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x23
   843  000024                     	ds	2
   844  000026                     xtoa@d:
   845                           	callstack 0
   846                           
   847                           ; 8 bytes @ 0x25
   848  000026                     	ds	8
   849  00002E                     xtoa@x:
   850                           	callstack 0
   851                           
   852                           ; 1 bytes @ 0x2D
   853  00002E                     	ds	1
   854  00002F                     ??_xtoa:
   855                           
   856                           ; 1 bytes @ 0x2E
   857  00002F                     	ds	8
   858  000037                     _xtoa$2309:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x36
   862  000037                     	ds	2
   863  000039                     _xtoa$2310:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x38
   867  000039                     	ds	2
   868  00003B                     xtoa@p:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x3A
   872  00003B                     	ds	2
   873  00003D                     xtoa@w:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x3C
   877  00003D                     	ds	2
   878  00003F                     xtoa@n:
   879                           	callstack 0
   880                           
   881                           ; 8 bytes @ 0x3E
   882  00003F                     	ds	8
   883  000047                     xtoa@i:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x46
   887  000047                     	ds	2
   888  000049                     xtoa@c:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x48
   892  000049                     	ds	2
   893  00004B                     ?_vfpfcnvrt:
   894                           	callstack 0
   895  00004B                     vfpfcnvrt@fp:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x4A
   899  00004B                     	ds	2
   900  00004D                     vfpfcnvrt@fmt:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x4C
   904  00004D                     	ds	2
   905  00004F                     vfpfcnvrt@ap:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x4E
   909  00004F                     	ds	2
   910  000051                     ??_affiche:
   911  000051                     
   912                           ; 1 bytes @ 0x50
   913  000051                     	ds	1
   914  000052                     
   915                           ; 1 bytes @ 0x51
   916 ;;
   917 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   918 ;;
   919 ;; *************** function _main *****************
   920 ;; Defined at:
   921 ;;		line 93 in file "main.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;		None
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   939 ;;Total ram usage:        0 bytes
   940 ;; Hardware stack levels required when called:   18
   941 ;; This function calls:
   942 ;;		_SYSTEM_Initialize
   943 ;;		_TMR0_SetInterruptHandler
   944 ;;		_TMR1_SetInterruptHandler
   945 ;;		_TMR3_Initialize
   946 ;;		_TMR3_SetInterruptHandler
   947 ;;		_TMR4_SetInterruptHandler
   948 ;;		_lamp_test
   949 ;;		_traitementEcran
   950 ;;		_traitementNormale
   951 ;; This function is called by:
   952 ;;		Startup code after reset
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text0
   957  00250E                     __ptext0:
   958                           	callstack 0
   959  00250E                     _main:
   960                           	callstack 13
   961  00250E                     
   962                           ;main.c: 95:     SYSTEM_Initialize();
   963  00250E  EC9C  F016         	call	_SYSTEM_Initialize	;wreg free
   964                           
   965                           ;main.c: 96:     TMR3_Initialize();
   966  002512  EC3A  F014         	call	_TMR3_Initialize	;wreg free
   967                           
   968                           ;main.c: 97:     TMR4_SetInterruptHandler(connect);
   969  002516  0EE2               	movlw	low _connect
   970  002518  6E07               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
   971  00251A  0E19               	movlw	high _connect
   972  00251C  6E08               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
   973  00251E  EC25  F017         	call	_TMR4_SetInterruptHandler	;wreg free
   974                           
   975                           ;main.c: 98:     TMR0_SetInterruptHandler(Minute);
   976  002522  0EB8               	movlw	low _Minute
   977  002524  6E07               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   978  002526  0E2D               	movlw	high _Minute
   979  002528  6E08               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   980  00252A  EC39  F017         	call	_TMR0_SetInterruptHandler	;wreg free
   981                           
   982                           ;main.c: 99:     TMR1_SetInterruptHandler(Blink_);
   983  00252E  0EAC               	movlw	low _Blink_
   984  002530  6E07               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
   985  002532  0E15               	movlw	high _Blink_
   986  002534  6E08               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
   987  002536  EC34  F017         	call	_TMR1_SetInterruptHandler	;wreg free
   988                           
   989                           ;main.c: 100:     TMR3_SetInterruptHandler(Secondes_5);
   990  00253A  0EEE               	movlw	low _Secondes_5
   991  00253C  6E07               	movwf	TMR3_SetInterruptHandler@InterruptHandler^0,c
   992  00253E  0E2D               	movlw	high _Secondes_5
   993  002540  6E08               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)^0,c
   994  002542  EC2A  F017         	call	_TMR3_SetInterruptHandler	;wreg free
   995  002546                     
   996                           ;main.c: 103:     LCD_Mode = PORTBbits.RB3 ? 0 : 1;
   997  002546  A681               	btfss	129,3,c	;volatile
   998  002548  EFA8  F012         	goto	u4231
   999  00254C  EFAB  F012         	goto	u4230
  1000  002550                     u4231:
  1001  002550  0E01               	movlw	1
  1002  002552  EFAC  F012         	goto	u4240
  1003  002556                     u4230:
  1004  002556  0E00               	movlw	0
  1005  002558                     u4240:
  1006  002558  0100               	movlb	0	; () banked
  1007  00255A  6FF8               	movwf	_LCD_Mode& (0+255),b
  1008  00255C                     
  1009                           ; BSR set to: 0
  1010                           ;main.c: 104:     lamp_test();
  1011  00255C  EC4D  F00F         	call	_lamp_test	;wreg free
  1012  002560                     
  1013                           ;main.c: 106:     (INTCONbits.GIE = 1);
  1014  002560  8EF2               	bsf	242,7,c	;volatile
  1015  002562                     
  1016                           ;main.c: 107:     (INTCONbits.PEIE = 1);
  1017  002562  8CF2               	bsf	242,6,c	;volatile
  1018  002564                     l605:
  1019                           
  1020                           ;main.c: 111:         if (LCD_Mode) {
  1021  002564  0100               	movlb	0	; () banked
  1022  002566  51F8               	movf	_LCD_Mode& (0+255),w,b
  1023  002568  B4D8               	btfsc	status,2,c
  1024  00256A  EFB9  F012         	goto	u4251
  1025  00256E  EFBB  F012         	goto	u4250
  1026  002572                     u4251:
  1027  002572  EFCC  F012         	goto	l4710
  1028  002576                     u4250:
  1029  002576                     
  1030                           ; BSR set to: 0
  1031                           ;main.c: 112:             EtatE = ReceptionE;
  1032  002576  0E00               	movlw	0
  1033  002578  6E57               	movwf	_EtatE^0,c
  1034                           
  1035                           ;main.c: 113:             goback = ReceptionE;
  1036  00257A  0E00               	movlw	0
  1037  00257C  6FFD               	movwf	_goback& (0+255),b
  1038  00257E                     l4704:
  1039                           
  1040                           ; BSR set to: 0
  1041                           ;main.c: 115:                 traitementEcran();
  1042  00257E  EC8D  F00E         	call	_traitementEcran	;wreg free
  1043  002582                     
  1044                           ;main.c: 116:                 if(LCD_Mode == 0)break;
  1045  002582  0100               	movlb	0	; () banked
  1046  002584  51F8               	movf	_LCD_Mode& (0+255),w,b
  1047  002586  A4D8               	btfss	status,2,c
  1048  002588  EFC8  F012         	goto	u4261
  1049  00258C  EFCA  F012         	goto	u4260
  1050  002590                     u4261:
  1051  002590  EFBF  F012         	goto	l4704
  1052  002594                     u4260:
  1053  002594  EFB2  F012         	goto	l605
  1054  002598                     l4710:
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;main.c: 119:             EtatN = Reception;
  1058  002598  0E00               	movlw	0
  1059  00259A  6E58               	movwf	_EtatN^0,c
  1060                           
  1061                           ;main.c: 120:             GoBack = Reception;
  1062  00259C  0E00               	movlw	0
  1063  00259E  6FFE               	movwf	_GoBack& (0+255),b
  1064  0025A0                     l4712:
  1065                           
  1066                           ;main.c: 122:                 traitementNormale();
  1067  0025A0  ECF5  F00B         	call	_traitementNormale	;wreg free
  1068  0025A4  EFD0  F012         	goto	l4712
  1069  0025A8  EF6E  F000         	goto	start
  1070  0025AC                     __end_of_main:
  1071                           	callstack 0
  1072                           
  1073 ;; *************** function _traitementNormale *****************
  1074 ;; Defined at:
  1075 ;;		line 279 in file "main.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1091 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1092 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1093 ;;Total ram usage:        4 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; Hardware stack levels required when called:    9
  1096 ;; This function calls:
  1097 ;;		_TMR3_WriteTimer
  1098 ;;		_reception_
  1099 ;; This function is called by:
  1100 ;;		_main
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	text1
  1105  0017EA                     __ptext1:
  1106                           	callstack 0
  1107  0017EA                     _traitementNormale:
  1108                           	callstack 21
  1109  0017EA                     
  1110                           ;main.c: 280:     switch (EtatN) {
  1111  0017EA  EFCB  F00C         	goto	l4000
  1112  0017EE                     l3958:
  1113                           
  1114                           ;main.c: 282:             reception_();
  1115  0017EE  ECEA  F016         	call	_reception_	;wreg free
  1116  0017F2                     
  1117                           ;main.c: 283:             if (saving == Non && !PORTBbits.RB3)
  1118  0017F2  0456               	decf	_saving^0,w,c
  1119  0017F4  A4D8               	btfss	status,2,c
  1120  0017F6  EFFF  F00B         	goto	u3231
  1121  0017FA  EF01  F00C         	goto	u3230
  1122  0017FE                     u3231:
  1123  0017FE  EF0A  F00C         	goto	l3966
  1124  001802                     u3230:
  1125  001802  B681               	btfsc	129,3,c	;volatile
  1126  001804  EF06  F00C         	goto	u3241
  1127  001808  EF08  F00C         	goto	u3240
  1128  00180C                     u3241:
  1129  00180C  EF0A  F00C         	goto	l3966
  1130  001810                     u3240:
  1131  001810                     
  1132                           ;main.c: 284:                 saving = Oui;
  1133  001810  0E00               	movlw	0
  1134  001812  6E56               	movwf	_saving^0,c
  1135  001814                     l3966:
  1136                           
  1137                           ;main.c: 285:             if (saving == idle) {
  1138  001814  0E02               	movlw	2
  1139  001816  1856               	xorwf	_saving^0,w,c
  1140  001818  A4D8               	btfss	status,2,c
  1141  00181A  EF11  F00C         	goto	u3251
  1142  00181E  EF13  F00C         	goto	u3250
  1143  001822                     u3251:
  1144  001822  EFF0  F00C         	goto	l748
  1145  001826                     u3250:
  1146  001826                     
  1147                           ;main.c: 286:                 EtatN = Armed;
  1148  001826  0E02               	movlw	2
  1149  001828  6E58               	movwf	_EtatN^0,c
  1150                           
  1151                           ;main.c: 287:                 saving = Non;
  1152  00182A  0E01               	movlw	1
  1153  00182C  6E56               	movwf	_saving^0,c
  1154                           
  1155                           ;main.c: 288:                 sec5 = Oui;
  1156  00182E  0E00               	movlw	0
  1157  001830  0100               	movlb	0	; () banked
  1158  001832  6FFC               	movwf	_sec5& (0+255),b
  1159                           
  1160                           ;main.c: 289:                 minute = Oui;
  1161  001834  0E00               	movlw	0
  1162  001836  6FFB               	movwf	_minute& (0+255),b
  1163  001838                     
  1164                           ; BSR set to: 0
  1165                           ;main.c: 290:                 TMR3_WriteTimer(0);
  1166  001838  0E00               	movlw	0
  1167  00183A  6E08               	movwf	(TMR3_WriteTimer@timerVal+1)^0,c
  1168  00183C  0E00               	movlw	0
  1169  00183E  6E07               	movwf	TMR3_WriteTimer@timerVal^0,c
  1170  001840  EC39  F016         	call	_TMR3_WriteTimer	;wreg free
  1171  001844  928A               	bcf	138,1,c	;volatile
  1172  001846  EFF0  F00C         	goto	l748
  1173  00184A                     l736:
  1174                           
  1175                           ;main.c: 298:             if (!PORTBbits.RB4) {
  1176  00184A  B881               	btfsc	129,4,c	;volatile
  1177  00184C  EF2A  F00C         	goto	u3261
  1178  001850  EF2C  F00C         	goto	u3260
  1179  001854                     u3261:
  1180  001854  EF3D  F00C         	goto	l3976
  1181  001858                     u3260:
  1182  001858                     
  1183                           ;main.c: 299:                 SPZ = 0;
  1184  001858  0E00               	movlw	0
  1185  00185A  0100               	movlb	0	; () banked
  1186  00185C  6F7E               	movwf	(_SPZ+1)& (0+255),b
  1187  00185E  0E00               	movlw	0
  1188  001860  6F7D               	movwf	_SPZ& (0+255),b
  1189                           
  1190                           ;main.c: 300:                 SPX = 0;
  1191  001862  0E00               	movlw	0
  1192  001864  6F82               	movwf	(_SPX+1)& (0+255),b
  1193  001866  0E00               	movlw	0
  1194  001868  6F81               	movwf	_SPX& (0+255),b
  1195                           
  1196                           ;main.c: 301:                 SPY = 0;
  1197  00186A  0E00               	movlw	0
  1198  00186C  6F80               	movwf	(_SPY+1)& (0+255),b
  1199  00186E  0E00               	movlw	0
  1200  001870  6F7F               	movwf	_SPY& (0+255),b
  1201                           
  1202                           ;main.c: 302:                 EtatN = Reception;
  1203  001872  0E00               	movlw	0
  1204  001874  6E58               	movwf	_EtatN^0,c
  1205                           
  1206                           ;main.c: 303:             }else{
  1207  001876  EFF0  F00C         	goto	l748
  1208  00187A                     l3976:
  1209                           
  1210                           ;main.c: 304:                 perte = Non;
  1211  00187A  0E01               	movlw	1
  1212  00187C  0100               	movlb	0	; () banked
  1213  00187E  6FF9               	movwf	_perte& (0+255),b
  1214  001880                     
  1215                           ; BSR set to: 0
  1216                           ;main.c: 305:                 reception_();
  1217  001880  ECEA  F016         	call	_reception_	;wreg free
  1218  001884                     
  1219                           ;main.c: 307:                 if (!((PZ < (SPZ + 0x1f))&&(PZ > (SPZ - 0x1f))&&(PX < (SPX
      +                           + 0x1f))&&(PX > (SPX - 0x1f))&&(PY < (SPY + 0x1f))&&(PY > (SPY - 0x1f)))) {
  1220  001884  0E1F               	movlw	31
  1221  001886  0100               	movlb	0	; () banked
  1222  001888  257D               	addwf	_SPZ& (0+255),w,b
  1223  00188A  6E09               	movwf	??_traitementNormale^0,c
  1224  00188C  0E00               	movlw	0
  1225  00188E  217E               	addwfc	(_SPZ+1)& (0+255),w,b
  1226  001890  6E0A               	movwf	(??_traitementNormale+1)^0,c
  1227  001892  5009               	movf	??_traitementNormale^0,w,c
  1228  001894  5D83               	subwf	_PZ& (0+255),w,b
  1229  001896  500A               	movf	(??_traitementNormale+1)^0,w,c
  1230  001898  5984               	subwfb	(_PZ+1)& (0+255),w,b
  1231  00189A  B0D8               	btfsc	status,0,c
  1232  00189C  EF52  F00C         	goto	u3271
  1233  0018A0  EF54  F00C         	goto	u3270
  1234  0018A4                     u3271:
  1235  0018A4  EFBB  F00C         	goto	l3992
  1236  0018A8                     u3270:
  1237  0018A8                     
  1238                           ; BSR set to: 0
  1239  0018A8  0EE1               	movlw	225
  1240  0018AA  6E09               	movwf	??_traitementNormale^0,c
  1241  0018AC  0EFF               	movlw	255
  1242  0018AE  6E0A               	movwf	(??_traitementNormale+1)^0,c
  1243  0018B0  C07D  F00B         	movff	_SPZ,??_traitementNormale+2
  1244  0018B4  C07E  F00C         	movff	_SPZ+1,??_traitementNormale+3
  1245  0018B8  5009               	movf	??_traitementNormale^0,w,c
  1246  0018BA  260B               	addwf	(??_traitementNormale+2)^0,f,c
  1247  0018BC  500A               	movf	(??_traitementNormale+1)^0,w,c
  1248  0018BE  220C               	addwfc	(??_traitementNormale+3)^0,f,c
  1249  0018C0  5183               	movf	_PZ& (0+255),w,b
  1250  0018C2  5C0B               	subwf	(??_traitementNormale+2)^0,w,c
  1251  0018C4  5184               	movf	(_PZ+1)& (0+255),w,b
  1252  0018C6  580C               	subwfb	(??_traitementNormale+3)^0,w,c
  1253  0018C8  B0D8               	btfsc	status,0,c
  1254  0018CA  EF69  F00C         	goto	u3281
  1255  0018CE  EF6B  F00C         	goto	u3280
  1256  0018D2                     u3281:
  1257  0018D2  EFBB  F00C         	goto	l3992
  1258  0018D6                     u3280:
  1259  0018D6                     
  1260                           ; BSR set to: 0
  1261  0018D6  0E1F               	movlw	31
  1262  0018D8  2581               	addwf	_SPX& (0+255),w,b
  1263  0018DA  6E09               	movwf	??_traitementNormale^0,c
  1264  0018DC  0E00               	movlw	0
  1265  0018DE  2182               	addwfc	(_SPX+1)& (0+255),w,b
  1266  0018E0  6E0A               	movwf	(??_traitementNormale+1)^0,c
  1267  0018E2  5009               	movf	??_traitementNormale^0,w,c
  1268  0018E4  5C52               	subwf	_PX^0,w,c
  1269  0018E6  500A               	movf	(??_traitementNormale+1)^0,w,c
  1270  0018E8  5853               	subwfb	(_PX+1)^0,w,c
  1271  0018EA  B0D8               	btfsc	status,0,c
  1272  0018EC  EF7A  F00C         	goto	u3291
  1273  0018F0  EF7C  F00C         	goto	u3290
  1274  0018F4                     u3291:
  1275  0018F4  EFBB  F00C         	goto	l3992
  1276  0018F8                     u3290:
  1277  0018F8                     
  1278                           ; BSR set to: 0
  1279  0018F8  0EE1               	movlw	225
  1280  0018FA  6E09               	movwf	??_traitementNormale^0,c
  1281  0018FC  0EFF               	movlw	255
  1282  0018FE  6E0A               	movwf	(??_traitementNormale+1)^0,c
  1283  001900  C081  F00B         	movff	_SPX,??_traitementNormale+2
  1284  001904  C082  F00C         	movff	_SPX+1,??_traitementNormale+3
  1285  001908  5009               	movf	??_traitementNormale^0,w,c
  1286  00190A  260B               	addwf	(??_traitementNormale+2)^0,f,c
  1287  00190C  500A               	movf	(??_traitementNormale+1)^0,w,c
  1288  00190E  220C               	addwfc	(??_traitementNormale+3)^0,f,c
  1289  001910  5052               	movf	_PX^0,w,c
  1290  001912  5C0B               	subwf	(??_traitementNormale+2)^0,w,c
  1291  001914  5053               	movf	(_PX+1)^0,w,c
  1292  001916  580C               	subwfb	(??_traitementNormale+3)^0,w,c
  1293  001918  B0D8               	btfsc	status,0,c
  1294  00191A  EF91  F00C         	goto	u3301
  1295  00191E  EF93  F00C         	goto	u3300
  1296  001922                     u3301:
  1297  001922  EFBB  F00C         	goto	l3992
  1298  001926                     u3300:
  1299  001926                     
  1300                           ; BSR set to: 0
  1301  001926  0E1F               	movlw	31
  1302  001928  257F               	addwf	_SPY& (0+255),w,b
  1303  00192A  6E09               	movwf	??_traitementNormale^0,c
  1304  00192C  0E00               	movlw	0
  1305  00192E  2180               	addwfc	(_SPY+1)& (0+255),w,b
  1306  001930  6E0A               	movwf	(??_traitementNormale+1)^0,c
  1307  001932  5009               	movf	??_traitementNormale^0,w,c
  1308  001934  5D85               	subwf	_PY& (0+255),w,b
  1309  001936  500A               	movf	(??_traitementNormale+1)^0,w,c
  1310  001938  5986               	subwfb	(_PY+1)& (0+255),w,b
  1311  00193A  B0D8               	btfsc	status,0,c
  1312  00193C  EFA2  F00C         	goto	u3311
  1313  001940  EFA4  F00C         	goto	u3310
  1314  001944                     u3311:
  1315  001944  EFBB  F00C         	goto	l3992
  1316  001948                     u3310:
  1317  001948                     
  1318                           ; BSR set to: 0
  1319  001948  0EE1               	movlw	225
  1320  00194A  6E09               	movwf	??_traitementNormale^0,c
  1321  00194C  0EFF               	movlw	255
  1322  00194E  6E0A               	movwf	(??_traitementNormale+1)^0,c
  1323  001950  C07F  F00B         	movff	_SPY,??_traitementNormale+2
  1324  001954  C080  F00C         	movff	_SPY+1,??_traitementNormale+3
  1325  001958  5009               	movf	??_traitementNormale^0,w,c
  1326  00195A  260B               	addwf	(??_traitementNormale+2)^0,f,c
  1327  00195C  500A               	movf	(??_traitementNormale+1)^0,w,c
  1328  00195E  220C               	addwfc	(??_traitementNormale+3)^0,f,c
  1329  001960  5185               	movf	_PY& (0+255),w,b
  1330  001962  5C0B               	subwf	(??_traitementNormale+2)^0,w,c
  1331  001964  5186               	movf	(_PY+1)& (0+255),w,b
  1332  001966  580C               	subwfb	(??_traitementNormale+3)^0,w,c
  1333  001968  A0D8               	btfss	status,0,c
  1334  00196A  EFB9  F00C         	goto	u3321
  1335  00196E  EFBB  F00C         	goto	u3320
  1336  001972                     u3321:
  1337  001972  EFF0  F00C         	goto	l748
  1338  001976                     u3320:
  1339  001976                     l3992:
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;main.c: 308:                     EtatN = Alarme;
  1343  001976  0E04               	movlw	4
  1344  001978  6E58               	movwf	_EtatN^0,c
  1345  00197A  EFF0  F00C         	goto	l748
  1346  00197E                     l743:
  1347                           
  1348                           ;main.c: 317:             if(!PORTBbits.RB4){
  1349  00197E  B881               	btfsc	129,4,c	;volatile
  1350  001980  EFC4  F00C         	goto	u3331
  1351  001984  EFC6  F00C         	goto	u3330
  1352  001988                     u3331:
  1353  001988  EFF0  F00C         	goto	l748
  1354  00198C                     u3330:
  1355  00198C                     
  1356                           ;main.c: 318:                 EtatN = Reception;
  1357  00198C  0E00               	movlw	0
  1358  00198E  6E58               	movwf	_EtatN^0,c
  1359  001990  9A8A               	bcf	138,5,c	;volatile
  1360  001992  EFF0  F00C         	goto	l748
  1361  001996                     l4000:
  1362  001996  5058               	movf	_EtatN^0,w,c
  1363  001998  6E09               	movwf	??_traitementNormale^0,c
  1364  00199A  6A0A               	clrf	(??_traitementNormale+1)^0,c
  1365                           
  1366                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1367                           ; Switch size 1, requested type "simple"
  1368                           ; Number of cases is 1, Range of values is 0 to 0
  1369                           ; switch strategies available:
  1370                           ; Name         Instructions Cycles
  1371                           ; simple_byte            4     3 (average)
  1372                           ;	Chosen strategy is simple_byte
  1373  00199C  500A               	movf	(??_traitementNormale+1)^0,w,c
  1374  00199E  0A00               	xorlw	0	; case 0
  1375  0019A0  B4D8               	btfsc	status,2,c
  1376  0019A2  EFD5  F00C         	goto	l4884
  1377  0019A6  EFF0  F00C         	goto	l748
  1378  0019AA                     l4884:
  1379                           
  1380                           ; Switch size 1, requested type "simple"
  1381                           ; Number of cases is 6, Range of values is 0 to 5
  1382                           ; switch strategies available:
  1383                           ; Name         Instructions Cycles
  1384                           ; simple_byte           19    10 (average)
  1385                           ;	Chosen strategy is simple_byte
  1386  0019AA  5009               	movf	??_traitementNormale^0,w,c
  1387  0019AC  0A00               	xorlw	0	; case 0
  1388  0019AE  B4D8               	btfsc	status,2,c
  1389  0019B0  EFF7  F00B         	goto	l3958
  1390  0019B4  0A01               	xorlw	1	; case 1
  1391  0019B6  B4D8               	btfsc	status,2,c
  1392  0019B8  EFF0  F00C         	goto	l748
  1393  0019BC  0A03               	xorlw	3	; case 2
  1394  0019BE  B4D8               	btfsc	status,2,c
  1395  0019C0  EF25  F00C         	goto	l736
  1396  0019C4  0A01               	xorlw	1	; case 3
  1397  0019C6  B4D8               	btfsc	status,2,c
  1398  0019C8  EFF0  F00C         	goto	l748
  1399  0019CC  0A07               	xorlw	7	; case 4
  1400  0019CE  B4D8               	btfsc	status,2,c
  1401  0019D0  EFBF  F00C         	goto	l743
  1402  0019D4  0A01               	xorlw	1	; case 5
  1403  0019D6  B4D8               	btfsc	status,2,c
  1404  0019D8  EFF0  F00C         	goto	l748
  1405  0019DC  EFF0  F00C         	goto	l748
  1406  0019E0                     l748:
  1407  0019E0  0012               	return		;funcret
  1408  0019E2                     __end_of_traitementNormale:
  1409                           	callstack 0
  1410                           
  1411 ;; *************** function _reception_ *****************
  1412 ;; Defined at:
  1413 ;;		line 378 in file "main.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;		None
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1431 ;;Total ram usage:        0 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    8
  1434 ;; This function calls:
  1435 ;;		_lecture
  1436 ;; This function is called by:
  1437 ;;		_traitementNormale
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text2
  1442  002DD4                     __ptext2:
  1443                           	callstack 0
  1444  002DD4                     _reception_:
  1445                           	callstack 21
  1446  002DD4                     
  1447                           ;main.c: 379:     RCSTA1bits.CREN = 1;
  1448  002DD4  88AB               	bsf	171,4,c	;volatile
  1449  002DD6                     l3778:
  1450  002DD6  ECAB  F010         	call	_lecture	;wreg free
  1451  002DDA  0900               	iorlw	0
  1452  002DDC  B4D8               	btfsc	status,2,c
  1453  002DDE  EFF3  F016         	goto	u2961
  1454  002DE2  EFF5  F016         	goto	u2960
  1455  002DE6                     u2961:
  1456  002DE6  EFEB  F016         	goto	l3778
  1457  002DEA                     u2960:
  1458  002DEA                     
  1459                           ;main.c: 381:     RCSTA1bits.CREN = 0;
  1460  002DEA  98AB               	bcf	171,4,c	;volatile
  1461  002DEC  0012               	return		;funcret
  1462  002DEE                     __end_of_reception_:
  1463                           	callstack 0
  1464                           
  1465 ;; *************** function _TMR3_WriteTimer *****************
  1466 ;; Defined at:
  1467 ;;		line 120 in file "mcc_generated_files/tmr3.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  timerVal        2    6[COMRAM] unsigned short 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;		None
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      void 
  1474 ;; Registers used:
  1475 ;;		wreg, status,2
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1484 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1485 ;;Total ram usage:        2 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; Hardware stack levels required when called:    6
  1488 ;; This function calls:
  1489 ;;		Nothing
  1490 ;; This function is called by:
  1491 ;;		_traitementNormale
  1492 ;;		_TMR3_Reload
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	text3
  1497  002C72                     __ptext3:
  1498                           	callstack 0
  1499  002C72                     _TMR3_WriteTimer:
  1500                           	callstack 23
  1501  002C72                     
  1502                           ;mcc_generated_files/tmr3.c: 120: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 121: {;mcc_generated_files/tmr3.c: 122:     if (T3CONbits.nT3SYNC == 1)
  1503  002C72  A4B1               	btfss	177,2,c	;volatile
  1504  002C74  EF3E  F016         	goto	u2891
  1505  002C78  EF40  F016         	goto	u2890
  1506  002C7C                     u2891:
  1507  002C7C  EF48  F016         	goto	l3760
  1508  002C80                     u2890:
  1509  002C80                     
  1510                           ;mcc_generated_files/tmr3.c: 123:     {;mcc_generated_files/tmr3.c: 125:         T3CONbi
      +                          ts.TMR3ON = 0;
  1511  002C80  90B1               	bcf	177,0,c	;volatile
  1512  002C82                     
  1513                           ;mcc_generated_files/tmr3.c: 128:         TMR3H = (uint8_t)(timerVal >> 8);
  1514  002C82  5008               	movf	(TMR3_WriteTimer@timerVal+1)^0,w,c
  1515  002C84  6EB3               	movwf	179,c	;volatile
  1516  002C86                     
  1517                           ;mcc_generated_files/tmr3.c: 129:         TMR3L = (uint8_t)timerVal;
  1518  002C86  C007  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
  1519  002C8A                     
  1520                           ;mcc_generated_files/tmr3.c: 132:         T3CONbits.TMR3ON =1;
  1521  002C8A  80B1               	bsf	177,0,c	;volatile
  1522                           
  1523                           ;mcc_generated_files/tmr3.c: 133:     }
  1524  002C8C  EF4C  F016         	goto	l319
  1525  002C90                     l3760:
  1526                           
  1527                           ;mcc_generated_files/tmr3.c: 135:     {;mcc_generated_files/tmr3.c: 137:         TMR3H =
      +                           (uint8_t)(timerVal >> 8);
  1528  002C90  5008               	movf	(TMR3_WriteTimer@timerVal+1)^0,w,c
  1529  002C92  6EB3               	movwf	179,c	;volatile
  1530  002C94                     
  1531                           ;mcc_generated_files/tmr3.c: 138:         TMR3L = (uint8_t)timerVal;
  1532  002C94  C007  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
  1533  002C98                     l319:
  1534  002C98  0012               	return		;funcret
  1535  002C9A                     __end_of_TMR3_WriteTimer:
  1536                           	callstack 0
  1537                           
  1538 ;; *************** function _traitementEcran *****************
  1539 ;; Defined at:
  1540 ;;		line 330 in file "main.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1556 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1557 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1558 ;;Total ram usage:        2 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; Hardware stack levels required when called:   17
  1561 ;; This function calls:
  1562 ;;		_LCD_Function
  1563 ;;		_reception_affichage
  1564 ;; This function is called by:
  1565 ;;		_main
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text4
  1570  001D1A                     __ptext4:
  1571                           	callstack 0
  1572  001D1A                     _traitementEcran:
  1573                           	callstack 13
  1574  001D1A                     
  1575                           ;main.c: 331:     if(!PORTBbits.RB4){
  1576  001D1A  B881               	btfsc	129,4,c	;volatile
  1577  001D1C  EF92  F00E         	goto	u4111
  1578  001D20  EF94  F00E         	goto	u4110
  1579  001D24                     u4111:
  1580  001D24  EF2E  F00F         	goto	l4686
  1581  001D28                     u4110:
  1582  001D28                     
  1583                           ;main.c: 332:         EtatE = rien;
  1584  001D28  0E03               	movlw	3
  1585  001D2A  6E57               	movwf	_EtatE^0,c
  1586                           
  1587                           ;main.c: 333:         EtatN = Reception;
  1588  001D2C  0E00               	movlw	0
  1589  001D2E  6E58               	movwf	_EtatN^0,c
  1590                           
  1591                           ;main.c: 334:         LCD_Mode = 0;
  1592  001D30  0E00               	movlw	0
  1593  001D32  0100               	movlb	0	; () banked
  1594  001D34  6FF8               	movwf	_LCD_Mode& (0+255),b
  1595  001D36                     
  1596                           ; BSR set to: 0
  1597                           ;main.c: 335:         LCD_Function(clear,0,0);
  1598  001D36  0E00               	movlw	0
  1599  001D38  6E09               	movwf	LCD_Function@x^0,c
  1600  001D3A  0E00               	movlw	0
  1601  001D3C  6E0A               	movwf	LCD_Function@z^0,c
  1602  001D3E  0E00               	movlw	0
  1603  001D40  EC0C  F010         	call	_LCD_Function
  1604  001D44                     
  1605                           ;main.c: 336:         LCD_Function(off,0,0);
  1606  001D44  0E00               	movlw	0
  1607  001D46  6E09               	movwf	LCD_Function@x^0,c
  1608  001D48  0E00               	movlw	0
  1609  001D4A  6E0A               	movwf	LCD_Function@z^0,c
  1610  001D4C  0E05               	movlw	5
  1611  001D4E  EC0C  F010         	call	_LCD_Function
  1612  001D52  EF2E  F00F         	goto	l4686
  1613  001D56                     l4650:
  1614                           
  1615                           ; BSR set to: 1
  1616                           ;main.c: 340:             plat = idle;
  1617  001D56  0E02               	movlw	2
  1618  001D58  0100               	movlb	0	; () banked
  1619  001D5A  6FFA               	movwf	_plat& (0+255),b
  1620  001D5C                     
  1621                           ; BSR set to: 0
  1622                           ;main.c: 341:             reception_affichage();
  1623  001D5C  ECAF  F016         	call	_reception_affichage	;wreg free
  1624  001D60                     
  1625                           ;main.c: 342:             if ((PZ == 0x03ff) && (PX >= 0x0200) && (PX <= 0x0210) && (PY 
      +                          >= 0x0200) && (PY <= 0x0210)) {
  1626  001D60  0100               	movlb	0	; () banked
  1627  001D62  2983               	incf	_PZ& (0+255),w,b
  1628  001D64  E107               	bnz	u4121
  1629  001D66  0E03               	movlw	3
  1630  001D68  1984               	xorwf	(_PZ+1)& (0+255),w,b
  1631  001D6A  A4D8               	btfss	status,2,c
  1632  001D6C  EFBA  F00E         	goto	u4121
  1633  001D70  EFBC  F00E         	goto	u4120
  1634  001D74                     u4121:
  1635  001D74  EF4C  F00F         	goto	l763
  1636  001D78                     u4120:
  1637  001D78                     
  1638                           ; BSR set to: 0
  1639  001D78  0E02               	movlw	2
  1640  001D7A  5C53               	subwf	(_PX+1)^0,w,c
  1641  001D7C  A0D8               	btfss	status,0,c
  1642  001D7E  EFC3  F00E         	goto	u4131
  1643  001D82  EFC5  F00E         	goto	u4130
  1644  001D86                     u4131:
  1645  001D86  EF4C  F00F         	goto	l763
  1646  001D8A                     u4130:
  1647  001D8A                     
  1648                           ; BSR set to: 0
  1649  001D8A  0E11               	movlw	17
  1650  001D8C  5C52               	subwf	_PX^0,w,c
  1651  001D8E  0E02               	movlw	2
  1652  001D90  5853               	subwfb	(_PX+1)^0,w,c
  1653  001D92  B0D8               	btfsc	status,0,c
  1654  001D94  EFCE  F00E         	goto	u4141
  1655  001D98  EFD0  F00E         	goto	u4140
  1656  001D9C                     u4141:
  1657  001D9C  EF4C  F00F         	goto	l763
  1658  001DA0                     u4140:
  1659  001DA0                     
  1660                           ; BSR set to: 0
  1661  001DA0  0E02               	movlw	2
  1662  001DA2  5D86               	subwf	(_PY+1)& (0+255),w,b
  1663  001DA4  A0D8               	btfss	status,0,c
  1664  001DA6  EFD7  F00E         	goto	u4151
  1665  001DAA  EFD9  F00E         	goto	u4150
  1666  001DAE                     u4151:
  1667  001DAE  EF4C  F00F         	goto	l763
  1668  001DB2                     u4150:
  1669  001DB2                     
  1670                           ; BSR set to: 0
  1671  001DB2  0E11               	movlw	17
  1672  001DB4  5D85               	subwf	_PY& (0+255),w,b
  1673  001DB6  0E02               	movlw	2
  1674  001DB8  5986               	subwfb	(_PY+1)& (0+255),w,b
  1675  001DBA  B0D8               	btfsc	status,0,c
  1676  001DBC  EFE2  F00E         	goto	u4161
  1677  001DC0  EFE4  F00E         	goto	u4160
  1678  001DC4                     u4161:
  1679  001DC4  EF4C  F00F         	goto	l763
  1680  001DC8                     u4160:
  1681  001DC8                     
  1682                           ; BSR set to: 0
  1683                           ;main.c: 343:                 EtatE = Plat;
  1684  001DC8  0E02               	movlw	2
  1685  001DCA  6E57               	movwf	_EtatE^0,c
  1686  001DCC  EF4C  F00F         	goto	l763
  1687  001DD0                     l4666:
  1688                           
  1689                           ; BSR set to: 1
  1690                           ;main.c: 349:             if (plat == idle) {
  1691  001DD0  0E02               	movlw	2
  1692  001DD2  0100               	movlb	0	; () banked
  1693  001DD4  19FA               	xorwf	_plat& (0+255),w,b
  1694  001DD6  A4D8               	btfss	status,2,c
  1695  001DD8  EFF0  F00E         	goto	u4171
  1696  001DDC  EFF2  F00E         	goto	u4170
  1697  001DE0                     u4171:
  1698  001DE0  EFF4  F00E         	goto	l4670
  1699  001DE4                     u4170:
  1700  001DE4                     
  1701                           ; BSR set to: 0
  1702                           ;main.c: 350:                 plat = Oui;
  1703  001DE4  0E00               	movlw	0
  1704  001DE6  6FFA               	movwf	_plat& (0+255),b
  1705  001DE8                     l4670:
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;main.c: 352:             reception_affichage();
  1709  001DE8  ECAF  F016         	call	_reception_affichage	;wreg free
  1710  001DEC                     
  1711                           ;main.c: 353:             if (!((PZ == 0x03ff) && (PX >= 0x0200) && (PX <= 0x0210) && (P
      +                          Y >= 0x0200) && (PY <= 0x0210))) {
  1712  001DEC  0100               	movlb	0	; () banked
  1713  001DEE  2983               	incf	_PZ& (0+255),w,b
  1714  001DF0  E107               	bnz	u4181
  1715  001DF2  0E03               	movlw	3
  1716  001DF4  1984               	xorwf	(_PZ+1)& (0+255),w,b
  1717  001DF6  A4D8               	btfss	status,2,c
  1718  001DF8  EF00  F00F         	goto	u4181
  1719  001DFC  EF02  F00F         	goto	u4180
  1720  001E00                     u4181:
  1721  001E00  EF2A  F00F         	goto	l4682
  1722  001E04                     u4180:
  1723  001E04                     
  1724                           ; BSR set to: 0
  1725  001E04  0E02               	movlw	2
  1726  001E06  5C53               	subwf	(_PX+1)^0,w,c
  1727  001E08  A0D8               	btfss	status,0,c
  1728  001E0A  EF09  F00F         	goto	u4191
  1729  001E0E  EF0B  F00F         	goto	u4190
  1730  001E12                     u4191:
  1731  001E12  EF2A  F00F         	goto	l4682
  1732  001E16                     u4190:
  1733  001E16                     
  1734                           ; BSR set to: 0
  1735  001E16  0E11               	movlw	17
  1736  001E18  5C52               	subwf	_PX^0,w,c
  1737  001E1A  0E02               	movlw	2
  1738  001E1C  5853               	subwfb	(_PX+1)^0,w,c
  1739  001E1E  B0D8               	btfsc	status,0,c
  1740  001E20  EF14  F00F         	goto	u4201
  1741  001E24  EF16  F00F         	goto	u4200
  1742  001E28                     u4201:
  1743  001E28  EF2A  F00F         	goto	l4682
  1744  001E2C                     u4200:
  1745  001E2C                     
  1746                           ; BSR set to: 0
  1747  001E2C  0E02               	movlw	2
  1748  001E2E  5D86               	subwf	(_PY+1)& (0+255),w,b
  1749  001E30  A0D8               	btfss	status,0,c
  1750  001E32  EF1D  F00F         	goto	u4211
  1751  001E36  EF1F  F00F         	goto	u4210
  1752  001E3A                     u4211:
  1753  001E3A  EF2A  F00F         	goto	l4682
  1754  001E3E                     u4210:
  1755  001E3E                     
  1756                           ; BSR set to: 0
  1757  001E3E  0E11               	movlw	17
  1758  001E40  5D85               	subwf	_PY& (0+255),w,b
  1759  001E42  0E02               	movlw	2
  1760  001E44  5986               	subwfb	(_PY+1)& (0+255),w,b
  1761  001E46  A0D8               	btfss	status,0,c
  1762  001E48  EF28  F00F         	goto	u4221
  1763  001E4C  EF2A  F00F         	goto	u4220
  1764  001E50                     u4221:
  1765  001E50  EF4C  F00F         	goto	l763
  1766  001E54                     u4220:
  1767  001E54                     l4682:
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;main.c: 354:                 EtatE = ReceptionE;
  1771  001E54  0E00               	movlw	0
  1772  001E56  6E57               	movwf	_EtatE^0,c
  1773  001E58  EF4C  F00F         	goto	l763
  1774  001E5C                     l4686:
  1775  001E5C  5057               	movf	_EtatE^0,w,c
  1776  001E5E  0101               	movlb	1	; () banked
  1777  001E60  6F00               	movwf	??_traitementEcran& (0+255),b
  1778  001E62  6B01               	clrf	(??_traitementEcran+1)& (0+255),b
  1779                           
  1780                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1781                           ; Switch size 1, requested type "simple"
  1782                           ; Number of cases is 1, Range of values is 0 to 0
  1783                           ; switch strategies available:
  1784                           ; Name         Instructions Cycles
  1785                           ; simple_byte            4     3 (average)
  1786                           ;	Chosen strategy is simple_byte
  1787  001E64  5101               	movf	(??_traitementEcran+1)& (0+255),w,b
  1788  001E66  0A00               	xorlw	0	; case 0
  1789  001E68  B4D8               	btfsc	status,2,c
  1790  001E6A  EF39  F00F         	goto	l4886
  1791  001E6E  EF4C  F00F         	goto	l763
  1792  001E72                     l4886:
  1793                           
  1794                           ; BSR set to: 1
  1795                           ; Switch size 1, requested type "simple"
  1796                           ; Number of cases is 4, Range of values is 0 to 3
  1797                           ; switch strategies available:
  1798                           ; Name         Instructions Cycles
  1799                           ; simple_byte           13     7 (average)
  1800                           ;	Chosen strategy is simple_byte
  1801  001E72  5100               	movf	??_traitementEcran& (0+255),w,b
  1802  001E74  0A00               	xorlw	0	; case 0
  1803  001E76  B4D8               	btfsc	status,2,c
  1804  001E78  EFAB  F00E         	goto	l4650
  1805  001E7C  0A01               	xorlw	1	; case 1
  1806  001E7E  B4D8               	btfsc	status,2,c
  1807  001E80  EF4C  F00F         	goto	l763
  1808  001E84  0A03               	xorlw	3	; case 2
  1809  001E86  B4D8               	btfsc	status,2,c
  1810  001E88  EFE8  F00E         	goto	l4666
  1811  001E8C  0A01               	xorlw	1	; case 3
  1812  001E8E  B4D8               	btfsc	status,2,c
  1813  001E90  EF4C  F00F         	goto	l763
  1814  001E94  EF4C  F00F         	goto	l763
  1815  001E98                     l763:
  1816  001E98  0012               	return		;funcret
  1817  001E9A                     __end_of_traitementEcran:
  1818                           	callstack 0
  1819                           
  1820 ;; *************** function _reception_affichage *****************
  1821 ;; Defined at:
  1822 ;;		line 369 in file "main.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;Total ram usage:        0 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:   16
  1843 ;; This function calls:
  1844 ;;		_affiche
  1845 ;;		_lecture
  1846 ;; This function is called by:
  1847 ;;		_traitementEcran
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text5
  1852  002D5E                     __ptext5:
  1853                           	callstack 0
  1854  002D5E                     _reception_affichage:
  1855                           	callstack 13
  1856  002D5E                     
  1857                           ;main.c: 370:     RCSTA1bits.CREN = 1;
  1858  002D5E  88AB               	bsf	171,4,c	;volatile
  1859  002D60                     l4638:
  1860  002D60  ECAB  F010         	call	_lecture	;wreg free
  1861  002D64  0900               	iorlw	0
  1862  002D66  B4D8               	btfsc	status,2,c
  1863  002D68  EFB8  F016         	goto	u4101
  1864  002D6C  EFBA  F016         	goto	u4100
  1865  002D70                     u4101:
  1866  002D70  EFB0  F016         	goto	l4638
  1867  002D74                     u4100:
  1868  002D74                     
  1869                           ;main.c: 372:     RCSTA1bits.CREN = 0;
  1870  002D74  98AB               	bcf	171,4,c	;volatile
  1871  002D76                     
  1872                           ;main.c: 373:     affiche();
  1873  002D76  ECBF  F011         	call	_affiche	;wreg free
  1874  002D7A  0012               	return		;funcret
  1875  002D7C                     __end_of_reception_affichage:
  1876                           	callstack 0
  1877                           
  1878 ;; *************** function _affiche *****************
  1879 ;; Defined at:
  1880 ;;		line 430 in file "main.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1896 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1897 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1898 ;;Total ram usage:        1 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:   15
  1901 ;; This function calls:
  1902 ;;		_LCD_Function
  1903 ;;		_lecture
  1904 ;;		_printf
  1905 ;; This function is called by:
  1906 ;;		_reception_affichage
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text6
  1911  00237E                     __ptext6:
  1912                           	callstack 0
  1913  00237E                     _affiche:
  1914                           	callstack 13
  1915  00237E                     
  1916                           ;main.c: 431:     LCD_Function(Initialise, 0, 0);
  1917  00237E  0E00               	movlw	0
  1918  002380  6E09               	movwf	LCD_Function@x^0,c
  1919  002382  0E00               	movlw	0
  1920  002384  6E0A               	movwf	LCD_Function@z^0,c
  1921  002386  0E08               	movlw	8
  1922  002388  EC0C  F010         	call	_LCD_Function
  1923  00238C                     
  1924                           ;main.c: 432:     printf("      POSITIONS     ");
  1925  00238C  0E01               	movlw	low STR_1
  1926  00238E  0100               	movlb	0	; () banked
  1927  002390  6FD6               	movwf	printf@fmt& (0+255),b
  1928  002392  0E0F               	movlw	high STR_1
  1929  002394  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1930  002396  EC4D  F016         	call	_printf	;wreg free
  1931  00239A                     
  1932                           ;main.c: 434:     LCD_Function(curseur, 1, 0);
  1933  00239A  0E01               	movlw	1
  1934  00239C  6E09               	movwf	LCD_Function@x^0,c
  1935  00239E  0E00               	movlw	0
  1936  0023A0  6E0A               	movwf	LCD_Function@z^0,c
  1937  0023A2  0E01               	movlw	1
  1938  0023A4  EC0C  F010         	call	_LCD_Function
  1939                           
  1940                           ;main.c: 435:     printf("X = %02X %02X", trame[12], trame[13], lecture());
  1941  0023A8  0E16               	movlw	low STR_2
  1942  0023AA  0100               	movlb	0	; () banked
  1943  0023AC  6FD6               	movwf	printf@fmt& (0+255),b
  1944  0023AE  0E0F               	movlw	high STR_2
  1945  0023B0  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1946  0023B2  C06C  F0D8         	movff	_trame+12,?_printf+2
  1947  0023B6  6BD9               	clrf	(?_printf+3)& (0+255),b
  1948  0023B8  C06D  F0DA         	movff	_trame+13,?_printf+4
  1949  0023BC  6BDB               	clrf	(?_printf+5)& (0+255),b
  1950  0023BE  ECAB  F010         	call	_lecture	;wreg free
  1951  0023C2  6E51               	movwf	??_affiche^0,c
  1952  0023C4  5051               	movf	??_affiche^0,w,c
  1953  0023C6  0100               	movlb	0	; () banked
  1954  0023C8  6FDC               	movwf	(?_printf+6)& (0+255),b
  1955  0023CA  6BDD               	clrf	(?_printf+7)& (0+255),b
  1956  0023CC  EC4D  F016         	call	_printf	;wreg free
  1957  0023D0                     
  1958                           ;main.c: 437:     LCD_Function(curseur, 2, 0);
  1959  0023D0  0E02               	movlw	2
  1960  0023D2  6E09               	movwf	LCD_Function@x^0,c
  1961  0023D4  0E00               	movlw	0
  1962  0023D6  6E0A               	movwf	LCD_Function@z^0,c
  1963  0023D8  0E01               	movlw	1
  1964  0023DA  EC0C  F010         	call	_LCD_Function
  1965  0023DE                     
  1966                           ;main.c: 438:     printf("Y = %02X %02X", trame[14], trame[15], EtatE);
  1967  0023DE  0E24               	movlw	low STR_3
  1968  0023E0  0100               	movlb	0	; () banked
  1969  0023E2  6FD6               	movwf	printf@fmt& (0+255),b
  1970  0023E4  0E0F               	movlw	high STR_3
  1971  0023E6  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1972  0023E8  C06E  F0D8         	movff	_trame+14,?_printf+2
  1973  0023EC  6BD9               	clrf	(?_printf+3)& (0+255),b
  1974  0023EE  C06F  F0DA         	movff	_trame+15,?_printf+4
  1975  0023F2  6BDB               	clrf	(?_printf+5)& (0+255),b
  1976  0023F4  C057  F0DC         	movff	_EtatE,?_printf+6
  1977  0023F8  6BDD               	clrf	(?_printf+7)& (0+255),b
  1978  0023FA  EC4D  F016         	call	_printf	;wreg free
  1979  0023FE                     
  1980                           ;main.c: 439:     if (EtatE == Plat) printf("  _-Plat-_");
  1981  0023FE  0E02               	movlw	2
  1982  002400  1857               	xorwf	_EtatE^0,w,c
  1983  002402  A4D8               	btfss	status,2,c
  1984  002404  EF06  F012         	goto	u4091
  1985  002408  EF08  F012         	goto	u4090
  1986  00240C                     u4091:
  1987  00240C  EF0F  F012         	goto	l4632
  1988  002410                     u4090:
  1989  002410  0E40               	movlw	low STR_4
  1990  002412  0100               	movlb	0	; () banked
  1991  002414  6FD6               	movwf	printf@fmt& (0+255),b
  1992  002416  0E0F               	movlw	high STR_4
  1993  002418  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  1994  00241A  EC4D  F016         	call	_printf	;wreg free
  1995  00241E                     l4632:
  1996                           
  1997                           ;main.c: 442:     LCD_Function(curseur, 3, 0);
  1998  00241E  0E03               	movlw	3
  1999  002420  6E09               	movwf	LCD_Function@x^0,c
  2000  002422  0E00               	movlw	0
  2001  002424  6E0A               	movwf	LCD_Function@z^0,c
  2002  002426  0E01               	movlw	1
  2003  002428  EC0C  F010         	call	_LCD_Function
  2004  00242C                     
  2005                           ;main.c: 443:     printf("Z = %02X %02X", trame[16], trame[17]);
  2006  00242C  0E32               	movlw	low STR_5
  2007  00242E  0100               	movlb	0	; () banked
  2008  002430  6FD6               	movwf	printf@fmt& (0+255),b
  2009  002432  0E0F               	movlw	high STR_5
  2010  002434  6FD7               	movwf	(printf@fmt+1)& (0+255),b
  2011  002436  C070  F0D8         	movff	_trame+16,?_printf+2
  2012  00243A  6BD9               	clrf	(?_printf+3)& (0+255),b
  2013  00243C  C071  F0DA         	movff	_trame+17,?_printf+4
  2014  002440  6BDB               	clrf	(?_printf+5)& (0+255),b
  2015  002442  EC4D  F016         	call	_printf	;wreg free
  2016  002446  0012               	return		;funcret
  2017  002448                     __end_of_affiche:
  2018                           	callstack 0
  2019                           
  2020 ;; *************** function _printf *****************
  2021 ;; Defined at:
  2022 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\printf.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
  2025 ;;		 -> STR_5(14), STR_4(11), STR_3(14), STR_2(14), 
  2026 ;;		 -> STR_1(21), 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  ap              2   35[BANK0 ] PTR void [1]
  2029 ;;		 -> ?_printf(2), 
  2030 ;;  ret             2    0        int 
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  2   25[BANK0 ] int 
  2033 ;; Registers used:
  2034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2040 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2041 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2043 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2044 ;;Total ram usage:       12 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; Hardware stack levels required when called:   14
  2047 ;; This function calls:
  2048 ;;		_vfprintf
  2049 ;; This function is called by:
  2050 ;;		_affiche
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text7
  2055  002C9A                     __ptext7:
  2056                           	callstack 0
  2057  002C9A                     _printf:
  2058                           	callstack 13
  2059  002C9A  0ED8               	movlw	low (?_printf+2)
  2060  002C9C  0100               	movlb	0	; () banked
  2061  002C9E  6FE0               	movwf	printf@ap& (0+255),b
  2062  002CA0  0E00               	movlw	high (?_printf+2)
  2063  002CA2  6FE1               	movwf	(printf@ap+1)& (0+255),b
  2064  002CA4                     
  2065                           ; BSR set to: 0
  2066  002CA4  0E00               	movlw	0
  2067  002CA6  6FCE               	movwf	vfprintf@fp& (0+255),b
  2068  002CA8  0E00               	movlw	0
  2069  002CAA  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  2070  002CAC  C0D6  F0D0         	movff	printf@fmt,vfprintf@fmt
  2071  002CB0  C0D7  F0D1         	movff	printf@fmt+1,vfprintf@fmt+1
  2072  002CB4  0EE0               	movlw	low printf@ap
  2073  002CB6  6FD2               	movwf	vfprintf@ap& (0+255),b
  2074  002CB8  0E00               	movlw	high printf@ap
  2075  002CBA  6FD3               	movwf	(vfprintf@ap+1)& (0+255),b
  2076  002CBC  EC21  F013         	call	_vfprintf	;wreg free
  2077  002CC0  0012               	return		;funcret
  2078  002CC2                     __end_of_printf:
  2079                           	callstack 0
  2080                           
  2081 ;; *************** function _vfprintf *****************
  2082 ;; Defined at:
  2083 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  2086 ;;		 -> NULL(0), 
  2087 ;;  fmt             2   19[BANK0 ] PTR const unsigned char 
  2088 ;;		 -> STR_5(14), STR_4(11), STR_3(14), STR_2(14), 
  2089 ;;		 -> STR_1(21), 
  2090 ;;  ap              2   21[BANK0 ] PTR PTR void 
  2091 ;;		 -> printf@ap(2), 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;  cfmt            2   23[BANK0 ] PTR unsigned char 
  2094 ;;		 -> STR_5(14), STR_4(11), STR_3(14), STR_2(14), 
  2095 ;;		 -> STR_1(21), 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  2   17[BANK0 ] int 
  2098 ;; Registers used:
  2099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2105 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2106 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2108 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2109 ;;Total ram usage:        8 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; Hardware stack levels required when called:   13
  2112 ;; This function calls:
  2113 ;;		_vfpfcnvrt
  2114 ;; This function is called by:
  2115 ;;		_printf
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text8
  2120  002642                     __ptext8:
  2121                           	callstack 0
  2122  002642                     _vfprintf:
  2123                           	callstack 13
  2124  002642                     
  2125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2126  002642  C0D0  F0D4         	movff	vfprintf@fmt,vfprintf@cfmt
  2127  002646  C0D1  F0D5         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2128  00264A                     
  2129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2130  00264A  0E00               	movlw	0
  2131  00264C  0100               	movlb	0	; () banked
  2132  00264E  6F74               	movwf	(_nout+1)& (0+255),b
  2133  002650  0E00               	movlw	0
  2134  002652  6F73               	movwf	_nout& (0+255),b
  2135                           
  2136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2137  002654  EF3F  F013         	goto	l4566
  2138  002658                     l4564:
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2142  002658  C0CE  F04B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2143  00265C  C0CF  F04C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2144  002660  0ED4               	movlw	low vfprintf@cfmt
  2145  002662  6E4D               	movwf	vfpfcnvrt@fmt^0,c
  2146  002664  0E00               	movlw	high vfprintf@cfmt
  2147  002666  6E4E               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2148  002668  C0D2  F04F         	movff	vfprintf@ap,vfpfcnvrt@ap
  2149  00266C  C0D3  F050         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2150  002670  ECA6  F007         	call	_vfpfcnvrt	;wreg free
  2151  002674  504B               	movf	?_vfpfcnvrt^0,w,c
  2152  002676  0100               	movlb	0	; () banked
  2153  002678  2773               	addwf	_nout& (0+255),f,b
  2154  00267A  504C               	movf	(?_vfpfcnvrt+1)^0,w,c
  2155  00267C  2374               	addwfc	(_nout+1)& (0+255),f,b
  2156  00267E                     l4566:
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2160  00267E  C0D4  FFF6         	movff	vfprintf@cfmt,tblptrl
  2161  002682  C0D5  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2162  002686                     	if	0	;tblptru may be non-zero
  2163  002686                     	endif
  2164  002686                     	if	0	;tblptru may be non-zero
  2165  002686                     	endif
  2166  002686  0008               	tblrd		*
  2167  002688  50F5               	movf	tablat,w,c
  2168  00268A  0900               	iorlw	0
  2169  00268C  A4D8               	btfss	status,2,c
  2170  00268E  EF4B  F013         	goto	u4081
  2171  002692  EF4D  F013         	goto	u4080
  2172  002696                     u4081:
  2173  002696  EF2C  F013         	goto	l4564
  2174  00269A                     u4080:
  2175  00269A                     
  2176                           ; BSR set to: 0
  2177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2178  00269A  C073  F0CE         	movff	_nout,?_vfprintf
  2179  00269E  C074  F0CF         	movff	_nout+1,?_vfprintf+1
  2180  0026A2                     
  2181                           ; BSR set to: 0
  2182  0026A2  0012               	return		;funcret
  2183  0026A4                     __end_of_vfprintf:
  2184                           	callstack 0
  2185                           
  2186 ;; *************** function _vfpfcnvrt *****************
  2187 ;; Defined at:
  2188 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  fp              2   74[COMRAM] PTR struct _IO_FILE
  2191 ;;		 -> NULL(0), 
  2192 ;;  fmt             2   76[COMRAM] PTR PTR unsigned char 
  2193 ;;		 -> vfprintf@cfmt(2), 
  2194 ;;  ap              2   78[COMRAM] PTR PTR void 
  2195 ;;		 -> printf@ap(2), 
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;  llu             8    4[BANK0 ] unsigned long long 
  2198 ;;  ll              8    0        long long 
  2199 ;;  f               4    0        long long 
  2200 ;;  vp              3    0        PTR void 
  2201 ;;  ct              3    0        unsigned char [3]
  2202 ;;  cp              3    0        PTR unsigned char 
  2203 ;;  done            2   13[BANK0 ] int 
  2204 ;;  i               2    0        int 
  2205 ;;  c               1   12[BANK0 ] unsigned char 
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  2   74[COMRAM] int 
  2208 ;; Registers used:
  2209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2215 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2216 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2217 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2218 ;;      Totals:         6      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2219 ;;Total ram usage:       23 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; Hardware stack levels required when called:   12
  2222 ;; This function calls:
  2223 ;;		_atoi
  2224 ;;		_fputc
  2225 ;;		_isdigit
  2226 ;;		_xtoa
  2227 ;; This function is called by:
  2228 ;;		_vfprintf
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text9
  2233  000F4C                     __ptext9:
  2234                           	callstack 0
  2235  000F4C                     _vfpfcnvrt:
  2236                           	callstack 13
  2237  000F4C                     
  2238                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2239  000F4C  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2240  000F50  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2241  000F54  CFDE FFF6          	movff	postinc2,tblptrl
  2242  000F58  CFDD FFF7          	movff	postdec2,tblptrh
  2243  000F5C                     	if	0	;tblptru may be non-zero
  2244  000F5C                     	endif
  2245  000F5C                     	if	0	;tblptru may be non-zero
  2246  000F5C                     	endif
  2247  000F5C  0008               	tblrd		*
  2248  000F5E  50F5               	movf	tablat,w,c
  2249  000F60  0A25               	xorlw	37
  2250  000F62  A4D8               	btfss	status,2,c
  2251  000F64  EFB6  F007         	goto	u3971
  2252  000F68  EFB8  F007         	goto	u3970
  2253  000F6C                     u3971:
  2254  000F6C  EF4E  F009         	goto	l4542
  2255  000F70                     u3970:
  2256  000F70                     
  2257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2258  000F70  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2259  000F74  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2260  000F78  2ADE               	incf	postinc2,f,c
  2261  000F7A  0E00               	movlw	0
  2262  000F7C  22DD               	addwfc	postdec2,f,c
  2263  000F7E                     
  2264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2265  000F7E  0E00               	movlw	0
  2266  000F80  0100               	movlb	0	; () banked
  2267  000F82  6F76               	movwf	(_width+1)& (0+255),b
  2268  000F84  0E00               	movlw	0
  2269  000F86  6F75               	movwf	_width& (0+255),b
  2270  000F88  C075  F079         	movff	_width,_flags
  2271  000F8C  C076  F07A         	movff	_width+1,_flags+1
  2272  000F90                     
  2273                           ; BSR set to: 0
  2274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2275  000F90  6977               	setf	_prec& (0+255),b
  2276  000F92  6978               	setf	(_prec+1)& (0+255),b
  2277  000F94                     
  2278                           ; BSR set to: 0
  2279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2280  000F94  0E00               	movlw	0
  2281  000F96  6FCB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2282  000F98  0E00               	movlw	0
  2283  000F9A  6FCA               	movwf	vfpfcnvrt@done& (0+255),b
  2284                           
  2285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2286  000F9C  EF16  F008         	goto	l4490
  2287  000FA0                     l4464:
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2291  000FA0  8179               	bsf	_flags& (0+255),0,b
  2292  000FA2                     l4466:
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2296  000FA2  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2297  000FA6  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2298  000FAA  2ADE               	incf	postinc2,f,c
  2299  000FAC  0E00               	movlw	0
  2300  000FAE  22DD               	addwfc	postdec2,f,c
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2303  000FB0  EF16  F008         	goto	l4490
  2304  000FB4                     l4468:
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2308  000FB4  8379               	bsf	_flags& (0+255),1,b
  2309  000FB6  EFD1  F007         	goto	l4466
  2310  000FBA                     l4472:
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2314  000FBA  8579               	bsf	_flags& (0+255),2,b
  2315  000FBC  EFD1  F007         	goto	l4466
  2316  000FC0                     l4476:
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2320  000FC0  8779               	bsf	_flags& (0+255),3,b
  2321  000FC2  EFD1  F007         	goto	l4466
  2322  000FC6                     l4480:
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2326  000FC6  8979               	bsf	_flags& (0+255),4,b
  2327  000FC8  EFD1  F007         	goto	l4466
  2328  000FCC                     l4484:
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2332  000FCC  0E00               	movlw	0
  2333  000FCE  6FCB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2334  000FD0  0E01               	movlw	1
  2335  000FD2  6FCA               	movwf	vfpfcnvrt@done& (0+255),b
  2336                           
  2337                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2338  000FD4  EF16  F008         	goto	l4490
  2339  000FD8                     l4488:
  2340                           
  2341                           ; BSR set to: 0
  2342  000FD8  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2343  000FDC  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2344  000FE0  CFDE FFF6          	movff	postinc2,tblptrl
  2345  000FE4  CFDD FFF7          	movff	postdec2,tblptrh
  2346  000FE8                     	if	0	;tblptru may be non-zero
  2347  000FE8                     	endif
  2348  000FE8                     	if	0	;tblptru may be non-zero
  2349  000FE8                     	endif
  2350  000FE8  0008               	tblrd		*
  2351  000FEA  50F5               	movf	tablat,w,c
  2352  000FEC  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  2353  000FEE  6BBE               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2354                           
  2355                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2356                           ; Switch size 1, requested type "simple"
  2357                           ; Number of cases is 1, Range of values is 0 to 0
  2358                           ; switch strategies available:
  2359                           ; Name         Instructions Cycles
  2360                           ; simple_byte            4     3 (average)
  2361                           ;	Chosen strategy is simple_byte
  2362  000FF0  51BE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2363  000FF2  0A00               	xorlw	0	; case 0
  2364  000FF4  B4D8               	btfsc	status,2,c
  2365  000FF6  EFFF  F007         	goto	l4888
  2366  000FFA  EFE6  F007         	goto	l4484
  2367  000FFE                     l4888:
  2368                           
  2369                           ; BSR set to: 0
  2370                           ; Switch size 1, requested type "simple"
  2371                           ; Number of cases is 5, Range of values is 32 to 48
  2372                           ; switch strategies available:
  2373                           ; Name         Instructions Cycles
  2374                           ; simple_byte           16     9 (average)
  2375                           ;	Chosen strategy is simple_byte
  2376  000FFE  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  2377  001000  0A20               	xorlw	32	; case 32
  2378  001002  B4D8               	btfsc	status,2,c
  2379  001004  EFE0  F007         	goto	l4476
  2380  001008  0A03               	xorlw	3	; case 35
  2381  00100A  B4D8               	btfsc	status,2,c
  2382  00100C  EFE3  F007         	goto	l4480
  2383  001010  0A08               	xorlw	8	; case 43
  2384  001012  B4D8               	btfsc	status,2,c
  2385  001014  EFDD  F007         	goto	l4472
  2386  001018  0A06               	xorlw	6	; case 45
  2387  00101A  B4D8               	btfsc	status,2,c
  2388  00101C  EFD0  F007         	goto	l4464
  2389  001020  0A1D               	xorlw	29	; case 48
  2390  001022  B4D8               	btfsc	status,2,c
  2391  001024  EFDA  F007         	goto	l4468
  2392  001028  EFE6  F007         	goto	l4484
  2393  00102C                     l4490:
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2397  00102C  51CA               	movf	vfpfcnvrt@done& (0+255),w,b
  2398  00102E  11CB               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2399  001030  B4D8               	btfsc	status,2,c
  2400  001032  EF1D  F008         	goto	u3981
  2401  001036  EF1F  F008         	goto	u3980
  2402  00103A                     u3981:
  2403  00103A  EFEC  F007         	goto	l4488
  2404  00103E                     u3980:
  2405  00103E                     
  2406                           ; BSR set to: 0
  2407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2408  00103E  A179               	btfss	_flags& (0+255),0,b
  2409  001040  EF24  F008         	goto	u3991
  2410  001044  EF26  F008         	goto	u3990
  2411  001048                     u3991:
  2412  001048  EF27  F008         	goto	l4494
  2413  00104C                     u3990:
  2414  00104C                     
  2415                           ; BSR set to: 0
  2416                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2417  00104C  9379               	bcf	_flags& (0+255),1,b
  2418  00104E                     l4494:
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2422  00104E  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2423  001052  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2424  001056  CFDE FFF6          	movff	postinc2,tblptrl
  2425  00105A  CFDD FFF7          	movff	postdec2,tblptrh
  2426  00105E                     	if	0	;tblptru may be non-zero
  2427  00105E                     	endif
  2428  00105E                     	if	0	;tblptru may be non-zero
  2429  00105E                     	endif
  2430  00105E  0008               	tblrd		*
  2431  001060  50F5               	movf	tablat,w,c
  2432  001062  0A2A               	xorlw	42
  2433  001064  A4D8               	btfss	status,2,c
  2434  001066  EF37  F008         	goto	u4001
  2435  00106A  EF39  F008         	goto	u4000
  2436  00106E                     u4001:
  2437  00106E  EF62  F008         	goto	l4502
  2438  001072                     u4000:
  2439  001072                     
  2440                           ; BSR set to: 0
  2441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2442  001072  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2443  001076  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2444  00107A  2ADE               	incf	postinc2,f,c
  2445  00107C  0E00               	movlw	0
  2446  00107E  22DD               	addwfc	postdec2,f,c
  2447                           
  2448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2449  001080  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2450  001084  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2451  001088  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  2452  00108C  0E02               	movlw	2
  2453  00108E  26DE               	addwf	postinc2,f,c
  2454  001090  CFDF F0BE          	movff	indf2,??_vfpfcnvrt+1
  2455  001094  0E00               	movlw	0
  2456  001096  22DD               	addwfc	postdec2,f,c
  2457  001098  C0BD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2458  00109C  C0BE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2459  0010A0  CFDE F075          	movff	postinc2,_width
  2460  0010A4  CFDD F076          	movff	postdec2,_width+1
  2461  0010A8                     
  2462                           ; BSR set to: 0
  2463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2464  0010A8  BF76               	btfsc	(_width+1)& (0+255),7,b
  2465  0010AA  EF5B  F008         	goto	u4010
  2466  0010AE  EF59  F008         	goto	u4011
  2467  0010B2                     u4011:
  2468  0010B2  EFA6  F008         	goto	l4512
  2469  0010B6                     u4010:
  2470  0010B6                     
  2471                           ; BSR set to: 0
  2472                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2473  0010B6  8179               	bsf	_flags& (0+255),0,b
  2474                           
  2475                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2476  0010B8  6D75               	negf	_width& (0+255),b
  2477  0010BA  1F76               	comf	(_width+1)& (0+255),f,b
  2478  0010BC  B0D8               	btfsc	status,0,c
  2479  0010BE  2B76               	incf	(_width+1)& (0+255),f,b
  2480  0010C0  EFA6  F008         	goto	l4512
  2481  0010C4                     l4502:
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2485  0010C4  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2486  0010C8  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2487  0010CC  CFDE F00E          	movff	postinc2,atoi@s
  2488  0010D0  CFDD F00F          	movff	postdec2,atoi@s+1
  2489  0010D4  ECC5  F00D         	call	_atoi	;wreg free
  2490  0010D8  C00E  F075         	movff	?_atoi,_width
  2491  0010DC  C00F  F076         	movff	?_atoi+1,_width+1
  2492                           
  2493                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2494  0010E0  EF79  F008         	goto	l4506
  2495  0010E4                     l4504:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2499  0010E4  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2500  0010E8  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2501  0010EC  2ADE               	incf	postinc2,f,c
  2502  0010EE  0E00               	movlw	0
  2503  0010F0  22DD               	addwfc	postdec2,f,c
  2504  0010F2                     l4506:
  2505  0010F2  0ED0               	movlw	208
  2506  0010F4  0100               	movlb	0	; () banked
  2507  0010F6  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  2508  0010F8  0EFF               	movlw	255
  2509  0010FA  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2510  0010FC  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2511  001100  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2512  001104  CFDE FFF6          	movff	postinc2,tblptrl
  2513  001108  CFDD FFF7          	movff	postdec2,tblptrh
  2514  00110C                     	if	0	;tblptru may be non-zero
  2515  00110C                     	endif
  2516  00110C                     	if	0	;tblptru may be non-zero
  2517  00110C                     	endif
  2518  00110C  0008               	tblrd		*
  2519  00110E  50F5               	movf	tablat,w,c
  2520  001110  6FBF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2521  001112  6BC0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2522  001114  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  2523  001116  27BF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2524  001118  51BE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2525  00111A  23C0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2526  00111C  51C0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2527  00111E  E10A               	bnz	u4020
  2528  001120  0E0A               	movlw	10
  2529  001122  5DBF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2530  001124  A0D8               	btfss	status,0,c
  2531  001126  EF97  F008         	goto	u4021
  2532  00112A  EF9A  F008         	goto	u4020
  2533  00112E                     u4021:
  2534  00112E  0E01               	movlw	1
  2535  001130  EF9B  F008         	goto	u4030
  2536  001134                     u4020:
  2537  001134  0E00               	movlw	0
  2538  001136                     u4030:
  2539  001136  6FCC               	movwf	_vfpfcnvrt$2325& (0+255),b
  2540  001138  6BCD               	clrf	(_vfpfcnvrt$2325+1)& (0+255),b
  2541  00113A                     
  2542                           ; BSR set to: 0
  2543  00113A  51CC               	movf	_vfpfcnvrt$2325& (0+255),w,b
  2544  00113C  11CD               	iorwf	(_vfpfcnvrt$2325+1)& (0+255),w,b
  2545  00113E  A4D8               	btfss	status,2,c
  2546  001140  EFA4  F008         	goto	u4041
  2547  001144  EFA6  F008         	goto	u4040
  2548  001148                     u4041:
  2549  001148  EF72  F008         	goto	l4504
  2550  00114C                     u4040:
  2551  00114C                     l4512:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  2555  00114C  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2556  001150  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2557  001154  CFDE FFF6          	movff	postinc2,tblptrl
  2558  001158  CFDD FFF7          	movff	postdec2,tblptrh
  2559  00115C                     	if	0	;tblptru may be non-zero
  2560  00115C                     	endif
  2561  00115C                     	if	0	;tblptru may be non-zero
  2562  00115C                     	endif
  2563  00115C  0008               	tblrd		*
  2564  00115E  50F5               	movf	tablat,w,c
  2565  001160  0A78               	xorlw	120
  2566  001162  B4D8               	btfsc	status,2,c
  2567  001164  EFB6  F008         	goto	u4051
  2568  001168  EFB8  F008         	goto	u4050
  2569  00116C                     u4051:
  2570  00116C  EFCA  F008         	goto	l4516
  2571  001170                     u4050:
  2572  001170                     
  2573                           ; BSR set to: 0
  2574  001170  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2575  001174  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2576  001178  CFDE FFF6          	movff	postinc2,tblptrl
  2577  00117C  CFDD FFF7          	movff	postdec2,tblptrh
  2578  001180                     	if	0	;tblptru may be non-zero
  2579  001180                     	endif
  2580  001180                     	if	0	;tblptru may be non-zero
  2581  001180                     	endif
  2582  001180  0008               	tblrd		*
  2583  001182  50F5               	movf	tablat,w,c
  2584  001184  0A58               	xorlw	88
  2585  001186  A4D8               	btfss	status,2,c
  2586  001188  EFC8  F008         	goto	u4061
  2587  00118C  EFCA  F008         	goto	u4060
  2588  001190                     u4061:
  2589  001190  EF18  F009         	goto	l4526
  2590  001194                     u4060:
  2591  001194                     l4516:
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  2595  001194  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2596  001198  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2597  00119C  CFDE FFF6          	movff	postinc2,tblptrl
  2598  0011A0  CFDD FFF7          	movff	postdec2,tblptrh
  2599  0011A4                     	if	0	;tblptru may be non-zero
  2600  0011A4                     	endif
  2601  0011A4                     	if	0	;tblptru may be non-zero
  2602  0011A4                     	endif
  2603  0011A4  0008               	tblrd		*
  2604  0011A6  CFF5 F0C9          	movff	tablat,vfpfcnvrt@c
  2605  0011AA                     
  2606                           ; BSR set to: 0
  2607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  2608  0011AA  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2609  0011AE  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2610  0011B2  2ADE               	incf	postinc2,f,c
  2611  0011B4  0E00               	movlw	0
  2612  0011B6  22DD               	addwfc	postdec2,f,c
  2613  0011B8                     
  2614                           ; BSR set to: 0
  2615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2616  0011B8  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2617  0011BC  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2618  0011C0  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  2619  0011C4  0E02               	movlw	2
  2620  0011C6  26DE               	addwf	postinc2,f,c
  2621  0011C8  CFDF F0BE          	movff	indf2,??_vfpfcnvrt+1
  2622  0011CC  0E00               	movlw	0
  2623  0011CE  22DD               	addwfc	postdec2,f,c
  2624  0011D0  C0BD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2625  0011D4  C0BE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2626  0011D8  CFDE F0BF          	movff	postinc2,??_vfpfcnvrt+2
  2627  0011DC  CFDD F0C0          	movff	postdec2,??_vfpfcnvrt+3
  2628  0011E0  C0BF  F0C1         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2629  0011E4  C0C0  F0C2         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2630  0011E8  6BC3               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2631  0011EA  6BC4               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2632  0011EC  6BC5               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2633  0011EE  6BC6               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2634  0011F0  6BC7               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2635  0011F2  6BC8               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2636  0011F4                     
  2637                           ; BSR set to: 0
  2638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  2639  0011F4  C04B  F024         	movff	vfpfcnvrt@fp,xtoa@fp
  2640  0011F8  C04C  F025         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2641  0011FC  C0C1  F026         	movff	vfpfcnvrt@llu,xtoa@d
  2642  001200  C0C2  F027         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2643  001204  C0C3  F028         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2644  001208  C0C4  F029         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2645  00120C  C0C5  F02A         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2646  001210  C0C6  F02B         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2647  001214  C0C7  F02C         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2648  001218  C0C8  F02D         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2649  00121C  C0C9  F02E         	movff	vfpfcnvrt@c,xtoa@x
  2650  001220  EC6A  F009         	call	_xtoa	;wreg free
  2651  001224  C024  F04B         	movff	?_xtoa,?_vfpfcnvrt
  2652  001228  C025  F04C         	movff	?_xtoa+1,?_vfpfcnvrt+1
  2653  00122C  EF69  F009         	goto	l1593
  2654  001230                     l4526:
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2658  001230  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2659  001234  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2660  001238  CFDE FFF6          	movff	postinc2,tblptrl
  2661  00123C  CFDD FFF7          	movff	postdec2,tblptrh
  2662  001240                     	if	0	;tblptru may be non-zero
  2663  001240                     	endif
  2664  001240                     	if	0	;tblptru may be non-zero
  2665  001240                     	endif
  2666  001240  0008               	tblrd		*
  2667  001242  50F5               	movf	tablat,w,c
  2668  001244  0A25               	xorlw	37
  2669  001246  A4D8               	btfss	status,2,c
  2670  001248  EF28  F009         	goto	u4071
  2671  00124C  EF2A  F009         	goto	u4070
  2672  001250                     u4071:
  2673  001250  EF41  F009         	goto	l4536
  2674  001254                     u4070:
  2675  001254                     
  2676                           ; BSR set to: 0
  2677                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2678  001254  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2679  001258  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2680  00125C  2ADE               	incf	postinc2,f,c
  2681  00125E  0E00               	movlw	0
  2682  001260  22DD               	addwfc	postdec2,f,c
  2683  001262                     
  2684                           ; BSR set to: 0
  2685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2686  001262  0E00               	movlw	0
  2687  001264  6E0A               	movwf	(fputc@c+1)^0,c
  2688  001266  0E25               	movlw	37
  2689  001268  6E09               	movwf	fputc@c^0,c
  2690  00126A  C04B  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  2691  00126E  C04C  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2692  001272  ECD6  F012         	call	_fputc	;wreg free
  2693  001276                     l4532:
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2696  001276  0E00               	movlw	0
  2697  001278  6E4C               	movwf	(?_vfpfcnvrt+1)^0,c
  2698  00127A  0E01               	movlw	1
  2699  00127C  6E4B               	movwf	?_vfpfcnvrt^0,c
  2700  00127E  EF69  F009         	goto	l1593
  2701  001282                     l4536:
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2705  001282  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2706  001286  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2707  00128A  2ADE               	incf	postinc2,f,c
  2708  00128C  0E00               	movlw	0
  2709  00128E  22DD               	addwfc	postdec2,f,c
  2710  001290                     
  2711                           ; BSR set to: 0
  2712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2713  001290  0E00               	movlw	0
  2714  001292  6E4C               	movwf	(?_vfpfcnvrt+1)^0,c
  2715  001294  0E00               	movlw	0
  2716  001296  6E4B               	movwf	?_vfpfcnvrt^0,c
  2717  001298  EF69  F009         	goto	l1593
  2718  00129C                     l4542:
  2719                           
  2720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2721  00129C  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2722  0012A0  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2723  0012A4  CFDE FFF6          	movff	postinc2,tblptrl
  2724  0012A8  CFDD FFF7          	movff	postdec2,tblptrh
  2725  0012AC                     	if	0	;tblptru may be non-zero
  2726  0012AC                     	endif
  2727  0012AC                     	if	0	;tblptru may be non-zero
  2728  0012AC                     	endif
  2729  0012AC  0008               	tblrd		*
  2730  0012AE  50F5               	movf	tablat,w,c
  2731  0012B0  6E09               	movwf	fputc@c^0,c
  2732  0012B2  6A0A               	clrf	(fputc@c+1)^0,c
  2733  0012B4  C04B  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  2734  0012B8  C04C  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2735  0012BC  ECD6  F012         	call	_fputc	;wreg free
  2736  0012C0                     
  2737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2738  0012C0  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2739  0012C4  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2740  0012C8  2ADE               	incf	postinc2,f,c
  2741  0012CA  0E00               	movlw	0
  2742  0012CC  22DD               	addwfc	postdec2,f,c
  2743  0012CE  EF3B  F009         	goto	l4532
  2744  0012D2                     l1593:
  2745  0012D2  0012               	return		;funcret
  2746  0012D4                     __end_of_vfpfcnvrt:
  2747                           	callstack 0
  2748                           
  2749 ;; *************** function _xtoa *****************
  2750 ;; Defined at:
  2751 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  2754 ;;		 -> NULL(0), 
  2755 ;;  d               8   37[COMRAM] unsigned long long 
  2756 ;;  x               1   45[COMRAM] unsigned char 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  n               8   62[COMRAM] unsigned long long 
  2759 ;;  c               2   72[COMRAM] int 
  2760 ;;  i               2   70[COMRAM] int 
  2761 ;;  w               2   60[COMRAM] int 
  2762 ;;  p               2   58[COMRAM] int 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  2   35[COMRAM] int 
  2765 ;; Registers used:
  2766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2772 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2773 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2774 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2775 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2776 ;;Total ram usage:       39 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:   11
  2779 ;; This function calls:
  2780 ;;		_isalpha
  2781 ;;		_isupper
  2782 ;;		_pad
  2783 ;;		_toupper
  2784 ;; This function is called by:
  2785 ;;		_vfpfcnvrt
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text10
  2790  0012D4                     __ptext10:
  2791                           	callstack 0
  2792  0012D4                     _xtoa:
  2793                           	callstack 13
  2794  0012D4                     
  2795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  2796  0012D4  0100               	movlb	0	; () banked
  2797  0012D6  BF78               	btfsc	(_prec+1)& (0+255),7,b
  2798  0012D8  EF70  F009         	goto	u3731
  2799  0012DC  EF72  F009         	goto	u3730
  2800  0012E0                     u3731:
  2801  0012E0  EF73  F009         	goto	l4350
  2802  0012E4                     u3730:
  2803  0012E4                     
  2804                           ; BSR set to: 0
  2805                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  2806  0012E4  9379               	bcf	_flags& (0+255),1,b
  2807  0012E6                     l4350:
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  2811  0012E6  BF78               	btfsc	(_prec+1)& (0+255),7,b
  2812  0012E8  EF80  F009         	goto	u3740
  2813  0012EC  5178               	movf	(_prec+1)& (0+255),w,b
  2814  0012EE  E106               	bnz	u3741
  2815  0012F0  0577               	decf	_prec& (0+255),w,b
  2816  0012F2  B0D8               	btfsc	status,0,c
  2817  0012F4  EF7E  F009         	goto	u3741
  2818  0012F8  EF80  F009         	goto	u3740
  2819  0012FC                     u3741:
  2820  0012FC  EF86  F009         	goto	l1539
  2821  001300                     u3740:
  2822  001300                     
  2823                           ; BSR set to: 0
  2824  001300  0E00               	movlw	0
  2825  001302  6E3C               	movwf	(xtoa@p+1)^0,c
  2826  001304  0E01               	movlw	1
  2827  001306  6E3B               	movwf	xtoa@p^0,c
  2828  001308  EF8A  F009         	goto	l1541
  2829  00130C                     l1539:
  2830                           
  2831                           ; BSR set to: 0
  2832  00130C  C077  F03B         	movff	_prec,xtoa@p
  2833  001310  C078  F03C         	movff	_prec+1,xtoa@p+1
  2834  001314                     l1541:
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  2838  001314  C075  F03D         	movff	_width,xtoa@w
  2839  001318  C076  F03E         	movff	_width+1,xtoa@w+1
  2840                           
  2841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  2842  00131C  A979               	btfss	_flags& (0+255),4,b
  2843  00131E  EF93  F009         	goto	u3751
  2844  001322  EF95  F009         	goto	u3750
  2845  001326                     u3751:
  2846  001326  EF99  F009         	goto	l4356
  2847  00132A                     u3750:
  2848  00132A                     
  2849                           ; BSR set to: 0
  2850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  2851  00132A  0EFE               	movlw	254
  2852  00132C  263D               	addwf	xtoa@w^0,f,c
  2853  00132E  0EFF               	movlw	255
  2854  001330  223E               	addwfc	(xtoa@w+1)^0,f,c
  2855  001332                     l4356:
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  2859  001332  C026  F03F         	movff	xtoa@d,xtoa@n
  2860  001336  C027  F040         	movff	xtoa@d+1,xtoa@n+1
  2861  00133A  C028  F041         	movff	xtoa@d+2,xtoa@n+2
  2862  00133E  C029  F042         	movff	xtoa@d+3,xtoa@n+3
  2863  001342  C02A  F043         	movff	xtoa@d+4,xtoa@n+4
  2864  001346  C02B  F044         	movff	xtoa@d+5,xtoa@n+5
  2865  00134A  C02C  F045         	movff	xtoa@d+6,xtoa@n+6
  2866  00134E  C02D  F046         	movff	xtoa@d+7,xtoa@n+7
  2867  001352                     
  2868                           ; BSR set to: 0
  2869                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  2870  001352  0E00               	movlw	0
  2871  001354  6E48               	movwf	(xtoa@i+1)^0,c
  2872  001356  0E1F               	movlw	31
  2873  001358  6E47               	movwf	xtoa@i^0,c
  2874  00135A                     
  2875                           ; BSR set to: 0
  2876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  2877  00135A  0E00               	movlw	0
  2878  00135C  6FBC               	movwf	(_dbuf+31)& (0+255),b
  2879                           
  2880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2881  00135E  EF64  F00A         	goto	l4392
  2882  001362                     l4362:
  2883                           
  2884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  2885  001362  0647               	decf	xtoa@i^0,f,c
  2886  001364  A0D8               	btfss	status,0,c
  2887  001366  0648               	decf	(xtoa@i+1)^0,f,c
  2888  001368                     
  2889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  2890  001368  0E0F               	movlw	15
  2891  00136A  143F               	andwf	xtoa@n^0,w,c
  2892  00136C  6E49               	movwf	xtoa@c^0,c
  2893  00136E  6A4A               	clrf	(xtoa@c+1)^0,c
  2894  001370                     
  2895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  2896  001370  BE4A               	btfsc	(xtoa@c+1)^0,7,c
  2897  001372  EFC4  F009         	goto	u3761
  2898  001376  504A               	movf	(xtoa@c+1)^0,w,c
  2899  001378  E109               	bnz	u3760
  2900  00137A  0E0A               	movlw	10
  2901  00137C  5C49               	subwf	xtoa@c^0,w,c
  2902  00137E  A0D8               	btfss	status,0,c
  2903  001380  EFC4  F009         	goto	u3761
  2904  001384  EFC6  F009         	goto	u3760
  2905  001388                     u3761:
  2906  001388  EFCE  F009         	goto	l4370
  2907  00138C                     u3760:
  2908  00138C  0E57               	movlw	87
  2909  00138E  2449               	addwf	xtoa@c^0,w,c
  2910  001390  6E49               	movwf	xtoa@c^0,c
  2911  001392  0E00               	movlw	0
  2912  001394  204A               	addwfc	(xtoa@c+1)^0,w,c
  2913  001396  6E4A               	movwf	(xtoa@c+1)^0,c
  2914  001398  EFD4  F009         	goto	l1548
  2915  00139C                     l4370:
  2916  00139C  0E30               	movlw	48
  2917  00139E  2449               	addwf	xtoa@c^0,w,c
  2918  0013A0  6E49               	movwf	xtoa@c^0,c
  2919  0013A2  0E00               	movlw	0
  2920  0013A4  204A               	addwfc	(xtoa@c+1)^0,w,c
  2921  0013A6  6E4A               	movwf	(xtoa@c+1)^0,c
  2922  0013A8                     l1548:
  2923  0013A8  0EBF               	movlw	191
  2924  0013AA  6E2F               	movwf	??_xtoa^0,c
  2925  0013AC  0EFF               	movlw	255
  2926  0013AE  6E30               	movwf	(??_xtoa+1)^0,c
  2927  0013B0  502E               	movf	xtoa@x^0,w,c
  2928  0013B2  6E31               	movwf	(??_xtoa+2)^0,c
  2929  0013B4  6A32               	clrf	(??_xtoa+3)^0,c
  2930  0013B6  502F               	movf	??_xtoa^0,w,c
  2931  0013B8  2631               	addwf	(??_xtoa+2)^0,f,c
  2932  0013BA  5030               	movf	(??_xtoa+1)^0,w,c
  2933  0013BC  2232               	addwfc	(??_xtoa+3)^0,f,c
  2934  0013BE  5032               	movf	(??_xtoa+3)^0,w,c
  2935  0013C0  E10A               	bnz	u3770
  2936  0013C2  0E1A               	movlw	26
  2937  0013C4  5C31               	subwf	(??_xtoa+2)^0,w,c
  2938  0013C6  A0D8               	btfss	status,0,c
  2939  0013C8  EFE8  F009         	goto	u3771
  2940  0013CC  EFEB  F009         	goto	u3770
  2941  0013D0                     u3771:
  2942  0013D0  0E01               	movlw	1
  2943  0013D2  EFEC  F009         	goto	u3780
  2944  0013D6                     u3770:
  2945  0013D6  0E00               	movlw	0
  2946  0013D8                     u3780:
  2947  0013D8  6E37               	movwf	_xtoa$2309^0,c
  2948  0013DA  6A38               	clrf	(_xtoa$2309+1)^0,c
  2949  0013DC  5037               	movf	_xtoa$2309^0,w,c
  2950  0013DE  1038               	iorwf	(_xtoa$2309+1)^0,w,c
  2951  0013E0  B4D8               	btfsc	status,2,c
  2952  0013E2  EFF5  F009         	goto	u3791
  2953  0013E6  EFF7  F009         	goto	u3790
  2954  0013EA                     u3791:
  2955  0013EA  EF27  F00A         	goto	l4384
  2956  0013EE                     u3790:
  2957  0013EE  0E9F               	movlw	159
  2958  0013F0  6E2F               	movwf	??_xtoa^0,c
  2959  0013F2  0EFF               	movlw	255
  2960  0013F4  6E30               	movwf	(??_xtoa+1)^0,c
  2961  0013F6  0E20               	movlw	32
  2962  0013F8  1049               	iorwf	xtoa@c^0,w,c
  2963  0013FA  6E31               	movwf	(??_xtoa+2)^0,c
  2964  0013FC  0E00               	movlw	0
  2965  0013FE  104A               	iorwf	(xtoa@c+1)^0,w,c
  2966  001400  6E32               	movwf	(??_xtoa+3)^0,c
  2967  001402  502F               	movf	??_xtoa^0,w,c
  2968  001404  2631               	addwf	(??_xtoa+2)^0,f,c
  2969  001406  5030               	movf	(??_xtoa+1)^0,w,c
  2970  001408  2232               	addwfc	(??_xtoa+3)^0,f,c
  2971  00140A  5032               	movf	(??_xtoa+3)^0,w,c
  2972  00140C  E10A               	bnz	u3800
  2973  00140E  0E1A               	movlw	26
  2974  001410  5C31               	subwf	(??_xtoa+2)^0,w,c
  2975  001412  A0D8               	btfss	status,0,c
  2976  001414  EF0E  F00A         	goto	u3801
  2977  001418  EF11  F00A         	goto	u3800
  2978  00141C                     u3801:
  2979  00141C  0E01               	movlw	1
  2980  00141E  EF12  F00A         	goto	u3810
  2981  001422                     u3800:
  2982  001422  0E00               	movlw	0
  2983  001424                     u3810:
  2984  001424  6E39               	movwf	_xtoa$2310^0,c
  2985  001426  6A3A               	clrf	(_xtoa$2310+1)^0,c
  2986  001428  5039               	movf	_xtoa$2310^0,w,c
  2987  00142A  103A               	iorwf	(_xtoa$2310+1)^0,w,c
  2988  00142C  B4D8               	btfsc	status,2,c
  2989  00142E  EF1B  F00A         	goto	u3821
  2990  001432  EF1D  F00A         	goto	u3820
  2991  001436                     u3821:
  2992  001436  EF27  F00A         	goto	l4384
  2993  00143A                     u3820:
  2994  00143A                     
  2995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  2996  00143A  C049  F00D         	movff	xtoa@c,toupper@c
  2997  00143E  C04A  F00E         	movff	xtoa@c+1,toupper@c+1
  2998  001442  EC82  F013         	call	_toupper	;wreg free
  2999  001446  C00D  F049         	movff	?_toupper,xtoa@c
  3000  00144A  C00E  F04A         	movff	?_toupper+1,xtoa@c+1
  3001  00144E                     l4384:
  3002                           
  3003                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  3004  00144E  0E9D               	movlw	low _dbuf
  3005  001450  2447               	addwf	xtoa@i^0,w,c
  3006  001452  6ED9               	movwf	fsr2l,c
  3007  001454  0E00               	movlw	high _dbuf
  3008  001456  2048               	addwfc	(xtoa@i+1)^0,w,c
  3009  001458  6EDA               	movwf	fsr2h,c
  3010  00145A  C049  FFDF         	movff	xtoa@c,indf2
  3011  00145E                     
  3012                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  3013  00145E  063B               	decf	xtoa@p^0,f,c
  3014  001460  A0D8               	btfss	status,0,c
  3015  001462  063C               	decf	(xtoa@p+1)^0,f,c
  3016  001464                     
  3017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  3018  001464  063D               	decf	xtoa@w^0,f,c
  3019  001466  A0D8               	btfss	status,0,c
  3020  001468  063E               	decf	(xtoa@w+1)^0,f,c
  3021  00146A                     
  3022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  3023  00146A  C03F  F02F         	movff	xtoa@n,??_xtoa
  3024  00146E  C040  F030         	movff	xtoa@n+1,??_xtoa+1
  3025  001472  C041  F031         	movff	xtoa@n+2,??_xtoa+2
  3026  001476  C042  F032         	movff	xtoa@n+3,??_xtoa+3
  3027  00147A  C043  F033         	movff	xtoa@n+4,??_xtoa+4
  3028  00147E  C044  F034         	movff	xtoa@n+5,??_xtoa+5
  3029  001482  C045  F035         	movff	xtoa@n+6,??_xtoa+6
  3030  001486  C046  F036         	movff	xtoa@n+7,??_xtoa+7
  3031  00148A  0E05               	movlw	5
  3032  00148C  EF51  F00A         	goto	u3830
  3033  001490                     u3835:
  3034  001490  90D8               	bcf	status,0,c
  3035  001492  3236               	rrcf	(??_xtoa+7)^0,f,c
  3036  001494  3235               	rrcf	(??_xtoa+6)^0,f,c
  3037  001496  3234               	rrcf	(??_xtoa+5)^0,f,c
  3038  001498  3233               	rrcf	(??_xtoa+4)^0,f,c
  3039  00149A  3232               	rrcf	(??_xtoa+3)^0,f,c
  3040  00149C  3231               	rrcf	(??_xtoa+2)^0,f,c
  3041  00149E  3230               	rrcf	(??_xtoa+1)^0,f,c
  3042  0014A0  322F               	rrcf	??_xtoa^0,f,c
  3043  0014A2                     u3830:
  3044  0014A2  2EE8               	decfsz	wreg,f,c
  3045  0014A4  EF48  F00A         	goto	u3835
  3046  0014A8  C02F  F03F         	movff	??_xtoa,xtoa@n
  3047  0014AC  C030  F040         	movff	??_xtoa+1,xtoa@n+1
  3048  0014B0  C031  F041         	movff	??_xtoa+2,xtoa@n+2
  3049  0014B4  C032  F042         	movff	??_xtoa+3,xtoa@n+3
  3050  0014B8  C033  F043         	movff	??_xtoa+4,xtoa@n+4
  3051  0014BC  C034  F044         	movff	??_xtoa+5,xtoa@n+5
  3052  0014C0  C035  F045         	movff	??_xtoa+6,xtoa@n+6
  3053  0014C4  C036  F046         	movff	??_xtoa+7,xtoa@n+7
  3054  0014C8                     l4392:
  3055                           
  3056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3057  0014C8  BE48               	btfsc	(xtoa@i+1)^0,7,c
  3058  0014CA  EF70  F00A         	goto	u3841
  3059  0014CE  5048               	movf	(xtoa@i+1)^0,w,c
  3060  0014D0  E109               	bnz	u3840
  3061  0014D2  0E02               	movlw	2
  3062  0014D4  5C47               	subwf	xtoa@i^0,w,c
  3063  0014D6  A0D8               	btfss	status,0,c
  3064  0014D8  EF70  F00A         	goto	u3841
  3065  0014DC  EF72  F00A         	goto	u3840
  3066  0014E0                     u3841:
  3067  0014E0  EFA3  F00A         	goto	l1562
  3068  0014E4                     u3840:
  3069  0014E4  503F               	movf	xtoa@n^0,w,c
  3070  0014E6  1040               	iorwf	(xtoa@n+1)^0,w,c
  3071  0014E8  1041               	iorwf	(xtoa@n+2)^0,w,c
  3072  0014EA  1042               	iorwf	(xtoa@n+3)^0,w,c
  3073  0014EC  1043               	iorwf	(xtoa@n+4)^0,w,c
  3074  0014EE  1044               	iorwf	(xtoa@n+5)^0,w,c
  3075  0014F0  1045               	iorwf	(xtoa@n+6)^0,w,c
  3076  0014F2  1046               	iorwf	(xtoa@n+7)^0,w,c
  3077  0014F4  A4D8               	btfss	status,2,c
  3078  0014F6  EF7F  F00A         	goto	u3851
  3079  0014FA  EF81  F00A         	goto	u3850
  3080  0014FE                     u3851:
  3081  0014FE  EFB1  F009         	goto	l4362
  3082  001502                     u3850:
  3083  001502  BE3C               	btfsc	(xtoa@p+1)^0,7,c
  3084  001504  EF8E  F00A         	goto	u3860
  3085  001508  503C               	movf	(xtoa@p+1)^0,w,c
  3086  00150A  E106               	bnz	u3861
  3087  00150C  043B               	decf	xtoa@p^0,w,c
  3088  00150E  B0D8               	btfsc	status,0,c
  3089  001510  EF8C  F00A         	goto	u3861
  3090  001514  EF8E  F00A         	goto	u3860
  3091  001518                     u3861:
  3092  001518  EFB1  F009         	goto	l4362
  3093  00151C                     u3860:
  3094  00151C  BE3E               	btfsc	(xtoa@w+1)^0,7,c
  3095  00151E  EF99  F00A         	goto	u3871
  3096  001522  503E               	movf	(xtoa@w+1)^0,w,c
  3097  001524  E108               	bnz	u3870
  3098  001526  043D               	decf	xtoa@w^0,w,c
  3099  001528  A0D8               	btfss	status,0,c
  3100  00152A  EF99  F00A         	goto	u3871
  3101  00152E  EF9B  F00A         	goto	u3870
  3102  001532                     u3871:
  3103  001532  EFA3  F00A         	goto	l1562
  3104  001536                     u3870:
  3105  001536  0100               	movlb	0	; () banked
  3106  001538  B379               	btfsc	_flags& (0+255),1,b
  3107  00153A  EFA1  F00A         	goto	u3881
  3108  00153E  EFA3  F00A         	goto	u3880
  3109  001542                     u3881:
  3110  001542  EFB1  F009         	goto	l4362
  3111  001546                     u3880:
  3112  001546                     l1562:
  3113                           
  3114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  3115  001546  0100               	movlb	0	; () banked
  3116  001548  A979               	btfss	_flags& (0+255),4,b
  3117  00154A  EFA9  F00A         	goto	u3891
  3118  00154E  EFAB  F00A         	goto	u3890
  3119  001552                     u3891:
  3120  001552  EFC1  F00A         	goto	l4408
  3121  001556                     u3890:
  3122  001556                     
  3123                           ; BSR set to: 0
  3124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  3125  001556  0647               	decf	xtoa@i^0,f,c
  3126  001558  A0D8               	btfss	status,0,c
  3127  00155A  0648               	decf	(xtoa@i+1)^0,f,c
  3128  00155C                     
  3129                           ; BSR set to: 0
  3130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  3131  00155C  0E9D               	movlw	low _dbuf
  3132  00155E  2447               	addwf	xtoa@i^0,w,c
  3133  001560  6ED9               	movwf	fsr2l,c
  3134  001562  0E00               	movlw	high _dbuf
  3135  001564  2048               	addwfc	(xtoa@i+1)^0,w,c
  3136  001566  6EDA               	movwf	fsr2h,c
  3137  001568  C02E  FFDF         	movff	xtoa@x,indf2
  3138  00156C                     
  3139                           ; BSR set to: 0
  3140                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  3141  00156C  0647               	decf	xtoa@i^0,f,c
  3142  00156E  A0D8               	btfss	status,0,c
  3143  001570  0648               	decf	(xtoa@i+1)^0,f,c
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  3146  001572  0E9D               	movlw	low _dbuf
  3147  001574  2447               	addwf	xtoa@i^0,w,c
  3148  001576  6ED9               	movwf	fsr2l,c
  3149  001578  0E00               	movlw	high _dbuf
  3150  00157A  2048               	addwfc	(xtoa@i+1)^0,w,c
  3151  00157C  6EDA               	movwf	fsr2h,c
  3152  00157E  0E30               	movlw	48
  3153  001580  6EDF               	movwf	indf2,c
  3154  001582                     l4408:
  3155                           
  3156                           ; BSR set to: 0
  3157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  3158  001582  C024  F019         	movff	xtoa@fp,pad@fp
  3159  001586  C025  F01A         	movff	xtoa@fp+1,pad@fp+1
  3160  00158A  0E9D               	movlw	low _dbuf
  3161  00158C  2447               	addwf	xtoa@i^0,w,c
  3162  00158E  6E1B               	movwf	pad@buf^0,c
  3163  001590  0E00               	movlw	high _dbuf
  3164  001592  2048               	addwfc	(xtoa@i+1)^0,w,c
  3165  001594  6E1C               	movwf	(pad@buf+1)^0,c
  3166  001596  C03D  F01D         	movff	xtoa@w,pad@p
  3167  00159A  C03E  F01E         	movff	xtoa@w+1,pad@p+1
  3168  00159E  EC24  F012         	call	_pad	;wreg free
  3169  0015A2  C019  F024         	movff	?_pad,?_xtoa
  3170  0015A6  C01A  F025         	movff	?_pad+1,?_xtoa+1
  3171  0015AA  0012               	return		;funcret
  3172  0015AC                     __end_of_xtoa:
  3173                           	callstack 0
  3174                           
  3175 ;; *************** function _toupper *****************
  3176 ;; Defined at:
  3177 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  c               2   12[COMRAM] int 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  2   12[COMRAM] int 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3193 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3194 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3195 ;;Total ram usage:        8 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    7
  3198 ;; This function calls:
  3199 ;;		_islower
  3200 ;; This function is called by:
  3201 ;;		_xtoa
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text11
  3206  002704                     __ptext11:
  3207                           	callstack 0
  3208  002704                     _toupper:
  3209                           	callstack 16
  3210  002704  0E9F               	movlw	159
  3211  002706  6E0F               	movwf	??_toupper^0,c
  3212  002708  0EFF               	movlw	255
  3213  00270A  6E10               	movwf	(??_toupper+1)^0,c
  3214  00270C  C00D  F011         	movff	toupper@c,??_toupper+2
  3215  002710  C00E  F012         	movff	toupper@c+1,??_toupper+3
  3216  002714  500F               	movf	??_toupper^0,w,c
  3217  002716  2611               	addwf	(??_toupper+2)^0,f,c
  3218  002718  5010               	movf	(??_toupper+1)^0,w,c
  3219  00271A  2212               	addwfc	(??_toupper+3)^0,f,c
  3220  00271C  5012               	movf	(??_toupper+3)^0,w,c
  3221  00271E  E10A               	bnz	u3660
  3222  002720  0E1A               	movlw	26
  3223  002722  5C11               	subwf	(??_toupper+2)^0,w,c
  3224  002724  A0D8               	btfss	status,0,c
  3225  002726  EF97  F013         	goto	u3661
  3226  00272A  EF9A  F013         	goto	u3660
  3227  00272E                     u3661:
  3228  00272E  0E01               	movlw	1
  3229  002730  EF9B  F013         	goto	u3670
  3230  002734                     u3660:
  3231  002734  0E00               	movlw	0
  3232  002736                     u3670:
  3233  002736  6E13               	movwf	_toupper$2419^0,c
  3234  002738  6A14               	clrf	(_toupper$2419+1)^0,c
  3235  00273A  5013               	movf	_toupper$2419^0,w,c
  3236  00273C  1014               	iorwf	(_toupper$2419+1)^0,w,c
  3237  00273E  B4D8               	btfsc	status,2,c
  3238  002740  EFA4  F013         	goto	u3681
  3239  002744  EFA6  F013         	goto	u3680
  3240  002748                     u3681:
  3241  002748  EFAC  F013         	goto	l1688
  3242  00274C                     u3680:
  3243  00274C  0E5F               	movlw	95
  3244  00274E  140D               	andwf	toupper@c^0,w,c
  3245  002750  6E0D               	movwf	?_toupper^0,c
  3246  002752  6A0E               	clrf	(?_toupper+1)^0,c
  3247  002754  EFB0  F013         	goto	l1693
  3248  002758                     l1688:
  3249  002758  C00D  F00D         	movff	toupper@c,?_toupper
  3250  00275C  C00E  F00E         	movff	toupper@c+1,?_toupper+1
  3251  002760                     l1693:
  3252  002760  0012               	return		;funcret
  3253  002762                     __end_of_toupper:
  3254                           	callstack 0
  3255                           
  3256 ;; *************** function _islower *****************
  3257 ;; Defined at:
  3258 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  c               2    6[COMRAM] int 
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;		None
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  2    6[COMRAM] int 
  3265 ;; Registers used:
  3266 ;;		wreg, status,2, status,0
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3272 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3274 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3275 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3276 ;;Total ram usage:        6 bytes
  3277 ;; Hardware stack levels used:    1
  3278 ;; Hardware stack levels required when called:    6
  3279 ;; This function calls:
  3280 ;;		Nothing
  3281 ;; This function is called by:
  3282 ;;		_toupper
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           	psect	text12
  3287  00295C                     __ptext12:
  3288                           	callstack 0
  3289  00295C                     _islower:
  3290                           	callstack 16
  3291  00295C  0E9F               	movlw	159
  3292  00295E  6E09               	movwf	??_islower^0,c
  3293  002960  0EFF               	movlw	255
  3294  002962  6E0A               	movwf	(??_islower+1)^0,c
  3295  002964  C007  F00B         	movff	islower@c,??_islower+2
  3296  002968  C008  F00C         	movff	islower@c+1,??_islower+3
  3297  00296C  5009               	movf	??_islower^0,w,c
  3298  00296E  260B               	addwf	(??_islower+2)^0,f,c
  3299  002970  500A               	movf	(??_islower+1)^0,w,c
  3300  002972  220C               	addwfc	(??_islower+3)^0,f,c
  3301  002974  500C               	movf	(??_islower+3)^0,w,c
  3302  002976  E10A               	bnz	u3560
  3303  002978  0E1A               	movlw	26
  3304  00297A  5C0B               	subwf	(??_islower+2)^0,w,c
  3305  00297C  A0D8               	btfss	status,0,c
  3306  00297E  EFC3  F014         	goto	u3561
  3307  002982  EFC6  F014         	goto	u3560
  3308  002986                     u3561:
  3309  002986  0E01               	movlw	1
  3310  002988  EFC7  F014         	goto	u3570
  3311  00298C                     u3560:
  3312  00298C  0E00               	movlw	0
  3313  00298E                     u3570:
  3314  00298E  6E07               	movwf	?_islower^0,c
  3315  002990  6A08               	clrf	(?_islower+1)^0,c
  3316  002992  0012               	return		;funcret
  3317  002994                     __end_of_islower:
  3318                           	callstack 0
  3319                           
  3320 ;; *************** function _pad *****************
  3321 ;; Defined at:
  3322 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  3325 ;;		 -> NULL(0), 
  3326 ;;  buf             2   26[COMRAM] PTR unsigned char 
  3327 ;;		 -> dbuf(32), 
  3328 ;;  p               2   28[COMRAM] int 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  w               2   33[COMRAM] int 
  3331 ;;  i               2   31[COMRAM] int 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  2   24[COMRAM] int 
  3334 ;; Registers used:
  3335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3341 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3342 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3343 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3344 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3345 ;;Total ram usage:       11 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:   10
  3348 ;; This function calls:
  3349 ;;		_fputc
  3350 ;;		_fputs
  3351 ;;		_strlen
  3352 ;; This function is called by:
  3353 ;;		_xtoa
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text13
  3358  002448                     __ptext13:
  3359                           	callstack 0
  3360  002448                     _pad:
  3361                           	callstack 13
  3362  002448                     
  3363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3364  002448  0100               	movlb	0	; () banked
  3365  00244A  A179               	btfss	_flags& (0+255),0,b
  3366  00244C  EF2A  F012         	goto	u3581
  3367  002450  EF2C  F012         	goto	u3580
  3368  002454                     u3581:
  3369  002454  EF36  F012         	goto	l4294
  3370  002458                     u3580:
  3371  002458                     
  3372                           ; BSR set to: 0
  3373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3374  002458  C01B  F012         	movff	pad@buf,fputs@s
  3375  00245C  C01C  F013         	movff	pad@buf+1,fputs@s+1
  3376  002460  C019  F014         	movff	pad@fp,fputs@fp
  3377  002464  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  3378  002468  ECDA  F013         	call	_fputs	;wreg free
  3379  00246C                     l4294:
  3380                           
  3381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3382  00246C  BE1E               	btfsc	(pad@p+1)^0,7,c
  3383  00246E  EF3B  F012         	goto	u3591
  3384  002472  EF3D  F012         	goto	u3590
  3385  002476                     u3591:
  3386  002476  EF43  F012         	goto	l4298
  3387  00247A                     u3590:
  3388  00247A  C01D  F022         	movff	pad@p,pad@w
  3389  00247E  C01E  F023         	movff	pad@p+1,pad@w+1
  3390  002482  EF47  F012         	goto	l1529
  3391  002486                     l4298:
  3392  002486  0E00               	movlw	0
  3393  002488  6E23               	movwf	(pad@w+1)^0,c
  3394  00248A  0E00               	movlw	0
  3395  00248C  6E22               	movwf	pad@w^0,c
  3396  00248E                     l1529:
  3397                           
  3398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3399  00248E  0E00               	movlw	0
  3400  002490  6E21               	movwf	(pad@i+1)^0,c
  3401  002492  0E00               	movlw	0
  3402  002494  6E20               	movwf	pad@i^0,c
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3405  002496  EF59  F012         	goto	l4304
  3406  00249A                     l4300:
  3407                           
  3408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3409  00249A  0E00               	movlw	0
  3410  00249C  6E0A               	movwf	(fputc@c+1)^0,c
  3411  00249E  0E20               	movlw	32
  3412  0024A0  6E09               	movwf	fputc@c^0,c
  3413  0024A2  C019  F00B         	movff	pad@fp,fputc@fp
  3414  0024A6  C01A  F00C         	movff	pad@fp+1,fputc@fp+1
  3415  0024AA  ECD6  F012         	call	_fputc	;wreg free
  3416  0024AE                     
  3417                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3418  0024AE  4A20               	infsnz	pad@i^0,f,c
  3419  0024B0  2A21               	incf	(pad@i+1)^0,f,c
  3420  0024B2                     l4304:
  3421                           
  3422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3423  0024B2  5022               	movf	pad@w^0,w,c
  3424  0024B4  5C20               	subwf	pad@i^0,w,c
  3425  0024B6  5021               	movf	(pad@i+1)^0,w,c
  3426  0024B8  0A80               	xorlw	128
  3427  0024BA  6E1F               	movwf	??_pad^0,c
  3428  0024BC  5023               	movf	(pad@w+1)^0,w,c
  3429  0024BE  0A80               	xorlw	128
  3430  0024C0  581F               	subwfb	??_pad^0,w,c
  3431  0024C2  A0D8               	btfss	status,0,c
  3432  0024C4  EF66  F012         	goto	u3601
  3433  0024C8  EF68  F012         	goto	u3600
  3434  0024CC                     u3601:
  3435  0024CC  EF4D  F012         	goto	l4300
  3436  0024D0                     u3600:
  3437  0024D0                     
  3438                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3439  0024D0  0100               	movlb	0	; () banked
  3440  0024D2  B179               	btfsc	_flags& (0+255),0,b
  3441  0024D4  EF6E  F012         	goto	u3611
  3442  0024D8  EF70  F012         	goto	u3610
  3443  0024DC                     u3611:
  3444  0024DC  EF7A  F012         	goto	l4308
  3445  0024E0                     u3610:
  3446  0024E0                     
  3447                           ; BSR set to: 0
  3448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3449  0024E0  C01B  F012         	movff	pad@buf,fputs@s
  3450  0024E4  C01C  F013         	movff	pad@buf+1,fputs@s+1
  3451  0024E8  C019  F014         	movff	pad@fp,fputs@fp
  3452  0024EC  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  3453  0024F0  ECDA  F013         	call	_fputs	;wreg free
  3454  0024F4                     l4308:
  3455                           
  3456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3457  0024F4  C01B  F007         	movff	pad@buf,strlen@s
  3458  0024F8  C01C  F008         	movff	pad@buf+1,strlen@s+1
  3459  0024FC  EC1E  F015         	call	_strlen	;wreg free
  3460  002500  5022               	movf	pad@w^0,w,c
  3461  002502  2407               	addwf	?_strlen^0,w,c
  3462  002504  6E19               	movwf	?_pad^0,c
  3463  002506  5023               	movf	(pad@w+1)^0,w,c
  3464  002508  2008               	addwfc	(?_strlen+1)^0,w,c
  3465  00250A  6E1A               	movwf	(?_pad+1)^0,c
  3466  00250C  0012               	return		;funcret
  3467  00250E                     __end_of_pad:
  3468                           	callstack 0
  3469                           
  3470 ;; *************** function _strlen *****************
  3471 ;; Defined at:
  3472 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3475 ;;		 -> dbuf(32), 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  a               2    8[COMRAM] PTR const unsigned char 
  3478 ;;		 -> dbuf(32), 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  2    6[COMRAM] unsigned int 
  3481 ;; Registers used:
  3482 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3489 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3491 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3492 ;;Total ram usage:        4 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    6
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_pad
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text14
  3503  002A3C                     __ptext14:
  3504                           	callstack 0
  3505  002A3C                     _strlen:
  3506                           	callstack 16
  3507  002A3C  C007  F009         	movff	strlen@s,strlen@a
  3508  002A40  C008  F00A         	movff	strlen@s+1,strlen@a+1
  3509  002A44  EF26  F015         	goto	l4274
  3510  002A48                     l4272:
  3511  002A48  4A07               	infsnz	strlen@s^0,f,c
  3512  002A4A  2A08               	incf	(strlen@s+1)^0,f,c
  3513  002A4C                     l4274:
  3514  002A4C  C007  FFD9         	movff	strlen@s,fsr2l
  3515  002A50  C008  FFDA         	movff	strlen@s+1,fsr2h
  3516  002A54  50DF               	movf	indf2,w,c
  3517  002A56  A4D8               	btfss	status,2,c
  3518  002A58  EF30  F015         	goto	u3551
  3519  002A5C  EF32  F015         	goto	u3550
  3520  002A60                     u3551:
  3521  002A60  EF24  F015         	goto	l4272
  3522  002A64                     u3550:
  3523  002A64  5009               	movf	strlen@a^0,w,c
  3524  002A66  5C07               	subwf	strlen@s^0,w,c
  3525  002A68  6E07               	movwf	?_strlen^0,c
  3526  002A6A  500A               	movf	(strlen@a+1)^0,w,c
  3527  002A6C  5808               	subwfb	(strlen@s+1)^0,w,c
  3528  002A6E  6E08               	movwf	(?_strlen+1)^0,c
  3529  002A70  0012               	return		;funcret
  3530  002A72                     __end_of_strlen:
  3531                           	callstack 0
  3532                           
  3533 ;; *************** function _fputs *****************
  3534 ;; Defined at:
  3535 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  s               2   17[COMRAM] PTR const unsigned char 
  3538 ;;		 -> dbuf(32), 
  3539 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  3540 ;;		 -> NULL(0), 
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;  i               2   22[COMRAM] int 
  3543 ;;  c               1   21[COMRAM] unsigned char 
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  2   17[COMRAM] int 
  3546 ;; Registers used:
  3547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3553 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3554 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3556 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3557 ;;Total ram usage:        7 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; Hardware stack levels required when called:    9
  3560 ;; This function calls:
  3561 ;;		_fputc
  3562 ;; This function is called by:
  3563 ;;		_pad
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           	psect	text15
  3568  0027B4                     __ptext15:
  3569                           	callstack 0
  3570  0027B4                     _fputs:
  3571                           	callstack 13
  3572  0027B4  0E00               	movlw	0
  3573  0027B6  6E18               	movwf	(fputs@i+1)^0,c
  3574  0027B8  0E00               	movlw	0
  3575  0027BA  6E17               	movwf	fputs@i^0,c
  3576  0027BC  EFEB  F013         	goto	l4268
  3577  0027C0                     l4264:
  3578  0027C0  C016  F009         	movff	fputs@c,fputc@c
  3579  0027C4  6A0A               	clrf	(fputc@c+1)^0,c
  3580  0027C6  C014  F00B         	movff	fputs@fp,fputc@fp
  3581  0027CA  C015  F00C         	movff	fputs@fp+1,fputc@fp+1
  3582  0027CE  ECD6  F012         	call	_fputc	;wreg free
  3583  0027D2  4A17               	infsnz	fputs@i^0,f,c
  3584  0027D4  2A18               	incf	(fputs@i+1)^0,f,c
  3585  0027D6                     l4268:
  3586  0027D6  5017               	movf	fputs@i^0,w,c
  3587  0027D8  2412               	addwf	fputs@s^0,w,c
  3588  0027DA  6ED9               	movwf	fsr2l,c
  3589  0027DC  5018               	movf	(fputs@i+1)^0,w,c
  3590  0027DE  2013               	addwfc	(fputs@s+1)^0,w,c
  3591  0027E0  6EDA               	movwf	fsr2h,c
  3592  0027E2  50DF               	movf	indf2,w,c
  3593  0027E4  6E16               	movwf	fputs@c^0,c
  3594  0027E6  5016               	movf	fputs@c^0,w,c
  3595  0027E8  A4D8               	btfss	status,2,c
  3596  0027EA  EFF9  F013         	goto	u3541
  3597  0027EE  EFFB  F013         	goto	u3540
  3598  0027F2                     u3541:
  3599  0027F2  EFE0  F013         	goto	l4264
  3600  0027F6                     u3540:
  3601  0027F6  0012               	return		;funcret
  3602  0027F8                     __end_of_fputs:
  3603                           	callstack 0
  3604                           
  3605 ;; *************** function _fputc *****************
  3606 ;; Defined at:
  3607 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  c               2    8[COMRAM] int 
  3610 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  3611 ;;		 -> NULL(0), 
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;		None
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  2    8[COMRAM] int 
  3616 ;; Registers used:
  3617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3623 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3625 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3626 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3627 ;;Total ram usage:        9 bytes
  3628 ;; Hardware stack levels used:    1
  3629 ;; Hardware stack levels required when called:    8
  3630 ;; This function calls:
  3631 ;;		_putch
  3632 ;; This function is called by:
  3633 ;;		_pad
  3634 ;;		_vfpfcnvrt
  3635 ;;		_fputs
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text16
  3640  0025AC                     __ptext16:
  3641                           	callstack 0
  3642  0025AC                     _fputc:
  3643                           	callstack 13
  3644  0025AC  500B               	movf	fputc@fp^0,w,c
  3645  0025AE  100C               	iorwf	(fputc@fp+1)^0,w,c
  3646  0025B0  B4D8               	btfsc	status,2,c
  3647  0025B2  EFDD  F012         	goto	u3501
  3648  0025B6  EFDF  F012         	goto	u3500
  3649  0025BA                     u3501:
  3650  0025BA  EFE8  F012         	goto	l4252
  3651  0025BE                     u3500:
  3652  0025BE  500B               	movf	fputc@fp^0,w,c
  3653  0025C0  100C               	iorwf	(fputc@fp+1)^0,w,c
  3654  0025C2  A4D8               	btfss	status,2,c
  3655  0025C4  EFE6  F012         	goto	u3511
  3656  0025C8  EFE8  F012         	goto	u3510
  3657  0025CC                     u3511:
  3658  0025CC  EFED  F012         	goto	l4254
  3659  0025D0                     u3510:
  3660  0025D0                     l4252:
  3661  0025D0  5009               	movf	fputc@c^0,w,c
  3662  0025D2  EC20  F017         	call	_putch
  3663  0025D6  EF20  F013         	goto	l1669
  3664  0025DA                     l4254:
  3665  0025DA  EE20 F004          	lfsr	2,4
  3666  0025DE  500B               	movf	fputc@fp^0,w,c
  3667  0025E0  26D9               	addwf	fsr2l,f,c
  3668  0025E2  500C               	movf	(fputc@fp+1)^0,w,c
  3669  0025E4  22DA               	addwfc	fsr2h,f,c
  3670  0025E6  50DE               	movf	postinc2,w,c
  3671  0025E8  10DE               	iorwf	postinc2,w,c
  3672  0025EA  B4D8               	btfsc	status,2,c
  3673  0025EC  EFFA  F012         	goto	u3521
  3674  0025F0  EFFC  F012         	goto	u3520
  3675  0025F4                     u3521:
  3676  0025F4  EF17  F013         	goto	l4258
  3677  0025F8                     u3520:
  3678  0025F8  EE20 F004          	lfsr	2,4
  3679  0025FC  500B               	movf	fputc@fp^0,w,c
  3680  0025FE  26D9               	addwf	fsr2l,f,c
  3681  002600  500C               	movf	(fputc@fp+1)^0,w,c
  3682  002602  22DA               	addwfc	fsr2h,f,c
  3683  002604  EE10 F002          	lfsr	1,2
  3684  002608  500B               	movf	fputc@fp^0,w,c
  3685  00260A  26E1               	addwf	fsr1l,f,c
  3686  00260C  500C               	movf	(fputc@fp+1)^0,w,c
  3687  00260E  22E2               	addwfc	fsr1h,f,c
  3688  002610  50DE               	movf	postinc2,w,c
  3689  002612  5CE6               	subwf	postinc1,w,c
  3690  002614  50E6               	movf	postinc1,w,c
  3691  002616  0A80               	xorlw	128
  3692  002618  6E11               	movwf	(??_fputc+4)^0,c
  3693  00261A  50DE               	movf	postinc2,w,c
  3694  00261C  0A80               	xorlw	128
  3695  00261E  5811               	subwfb	(??_fputc+4)^0,w,c
  3696  002620  B0D8               	btfsc	status,0,c
  3697  002622  EF15  F013         	goto	u3531
  3698  002626  EF17  F013         	goto	u3530
  3699  00262A                     u3531:
  3700  00262A  EF20  F013         	goto	l1669
  3701  00262E                     u3530:
  3702  00262E                     l4258:
  3703  00262E  EE20 F002          	lfsr	2,2
  3704  002632  500B               	movf	fputc@fp^0,w,c
  3705  002634  26D9               	addwf	fsr2l,f,c
  3706  002636  500C               	movf	(fputc@fp+1)^0,w,c
  3707  002638  22DA               	addwfc	fsr2h,f,c
  3708  00263A  2ADE               	incf	postinc2,f,c
  3709  00263C  0E00               	movlw	0
  3710  00263E  22DD               	addwfc	postdec2,f,c
  3711  002640                     l1669:
  3712  002640  0012               	return		;funcret
  3713  002642                     __end_of_fputc:
  3714                           	callstack 0
  3715                           
  3716 ;; *************** function _putch *****************
  3717 ;; Defined at:
  3718 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  txData          1    wreg     unsigned char 
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  txData          1    7[COMRAM] unsigned char 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2, cstack
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3735 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3736 ;;Total ram usage:        1 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    7
  3739 ;; This function calls:
  3740 ;;		_EUSART1_Write
  3741 ;; This function is called by:
  3742 ;;		_fputc
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text17
  3747  002E40                     __ptext17:
  3748                           	callstack 0
  3749  002E40                     _putch:
  3750                           	callstack 13
  3751                           
  3752                           ;incstack = 0
  3753                           ;putch@txData stored from wreg
  3754  002E40  6E08               	movwf	putch@txData^0,c
  3755  002E42                     
  3756                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  3757  002E42  5008               	movf	putch@txData^0,w,c
  3758  002E44  EC04  F017         	call	_EUSART1_Write
  3759  002E48  0012               	return		;funcret
  3760  002E4A                     __end_of_putch:
  3761                           	callstack 0
  3762                           
  3763 ;; *************** function _isupper *****************
  3764 ;; Defined at:
  3765 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  c               2    6[COMRAM] int 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  2    6[COMRAM] int 
  3772 ;; Registers used:
  3773 ;;		wreg, status,2, status,0
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3781 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3782 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3783 ;;Total ram usage:        6 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    6
  3786 ;; This function calls:
  3787 ;;		Nothing
  3788 ;; This function is called by:
  3789 ;;		_xtoa
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text18
  3794  002994                     __ptext18:
  3795                           	callstack 0
  3796  002994                     _isupper:
  3797                           	callstack 17
  3798  002994  0EBF               	movlw	191
  3799  002996  6E09               	movwf	??_isupper^0,c
  3800  002998  0EFF               	movlw	255
  3801  00299A  6E0A               	movwf	(??_isupper+1)^0,c
  3802  00299C  C007  F00B         	movff	isupper@c,??_isupper+2
  3803  0029A0  C008  F00C         	movff	isupper@c+1,??_isupper+3
  3804  0029A4  5009               	movf	??_isupper^0,w,c
  3805  0029A6  260B               	addwf	(??_isupper+2)^0,f,c
  3806  0029A8  500A               	movf	(??_isupper+1)^0,w,c
  3807  0029AA  220C               	addwfc	(??_isupper+3)^0,f,c
  3808  0029AC  500C               	movf	(??_isupper+3)^0,w,c
  3809  0029AE  E10A               	bnz	u3620
  3810  0029B0  0E1A               	movlw	26
  3811  0029B2  5C0B               	subwf	(??_isupper+2)^0,w,c
  3812  0029B4  A0D8               	btfss	status,0,c
  3813  0029B6  EFDF  F014         	goto	u3621
  3814  0029BA  EFE2  F014         	goto	u3620
  3815  0029BE                     u3621:
  3816  0029BE  0E01               	movlw	1
  3817  0029C0  EFE3  F014         	goto	u3630
  3818  0029C4                     u3620:
  3819  0029C4  0E00               	movlw	0
  3820  0029C6                     u3630:
  3821  0029C6  6E07               	movwf	?_isupper^0,c
  3822  0029C8  6A08               	clrf	(?_isupper+1)^0,c
  3823  0029CA  0012               	return		;funcret
  3824  0029CC                     __end_of_isupper:
  3825                           	callstack 0
  3826                           
  3827 ;; *************** function _isalpha *****************
  3828 ;; Defined at:
  3829 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  c               2    6[COMRAM] int 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  2    6[COMRAM] int 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3845 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3846 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3847 ;;Total ram usage:        6 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    6
  3850 ;; This function calls:
  3851 ;;		Nothing
  3852 ;; This function is called by:
  3853 ;;		_xtoa
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text19
  3858  002838                     __ptext19:
  3859                           	callstack 0
  3860  002838                     _isalpha:
  3861                           	callstack 17
  3862  002838  0E9F               	movlw	159
  3863  00283A  6E09               	movwf	??_isalpha^0,c
  3864  00283C  0EFF               	movlw	255
  3865  00283E  6E0A               	movwf	(??_isalpha+1)^0,c
  3866  002840  0E20               	movlw	32
  3867  002842  1007               	iorwf	isalpha@c^0,w,c
  3868  002844  6E0B               	movwf	(??_isalpha+2)^0,c
  3869  002846  0E00               	movlw	0
  3870  002848  1008               	iorwf	(isalpha@c+1)^0,w,c
  3871  00284A  6E0C               	movwf	(??_isalpha+3)^0,c
  3872  00284C  5009               	movf	??_isalpha^0,w,c
  3873  00284E  260B               	addwf	(??_isalpha+2)^0,f,c
  3874  002850  500A               	movf	(??_isalpha+1)^0,w,c
  3875  002852  220C               	addwfc	(??_isalpha+3)^0,f,c
  3876  002854  500C               	movf	(??_isalpha+3)^0,w,c
  3877  002856  E10A               	bnz	u3640
  3878  002858  0E1A               	movlw	26
  3879  00285A  5C0B               	subwf	(??_isalpha+2)^0,w,c
  3880  00285C  A0D8               	btfss	status,0,c
  3881  00285E  EF33  F014         	goto	u3641
  3882  002862  EF36  F014         	goto	u3640
  3883  002866                     u3641:
  3884  002866  0E01               	movlw	1
  3885  002868  EF37  F014         	goto	u3650
  3886  00286C                     u3640:
  3887  00286C  0E00               	movlw	0
  3888  00286E                     u3650:
  3889  00286E  6E07               	movwf	?_isalpha^0,c
  3890  002870  6A08               	clrf	(?_isalpha+1)^0,c
  3891  002872  0012               	return		;funcret
  3892  002874                     __end_of_isalpha:
  3893                           	callstack 0
  3894                           
  3895 ;; *************** function _atoi *****************
  3896 ;; Defined at:
  3897 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  s               2   13[COMRAM] PTR const unsigned char 
  3900 ;;		 -> STR_5(14), STR_4(11), STR_3(14), STR_2(14), 
  3901 ;;		 -> STR_1(21), 
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  n               2   26[COMRAM] int 
  3904 ;;  neg             2   19[COMRAM] int 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  2   13[COMRAM] int 
  3907 ;; Registers used:
  3908 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3915 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3916 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3917 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3918 ;;Total ram usage:       15 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    7
  3921 ;; This function calls:
  3922 ;;		___wmul
  3923 ;;		_isdigit
  3924 ;;		_isspace
  3925 ;; This function is called by:
  3926 ;;		_vfpfcnvrt
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text20
  3931  001B8A                     __ptext20:
  3932                           	callstack 0
  3933  001B8A                     _atoi:
  3934                           	callstack 17
  3935  001B8A  0E00               	movlw	0
  3936  001B8C  6E1C               	movwf	(atoi@n+1)^0,c
  3937  001B8E  0E00               	movlw	0
  3938  001B90  6E1B               	movwf	atoi@n^0,c
  3939  001B92  0E00               	movlw	0
  3940  001B94  6E15               	movwf	(atoi@neg+1)^0,c
  3941  001B96  0E00               	movlw	0
  3942  001B98  6E14               	movwf	atoi@neg^0,c
  3943  001B9A  EFD1  F00D         	goto	l4416
  3944  001B9E                     l4414:
  3945  001B9E  4A0E               	infsnz	atoi@s^0,f,c
  3946  001BA0  2A0F               	incf	(atoi@s+1)^0,f,c
  3947  001BA2                     l4416:
  3948  001BA2  0E01               	movlw	1
  3949  001BA4  6E1A               	movwf	_atoi$2344^0,c
  3950  001BA6  C00E  FFF6         	movff	atoi@s,tblptrl
  3951  001BAA  C00F  FFF7         	movff	atoi@s+1,tblptrh
  3952  001BAE                     	if	0	;tblptru may be non-zero
  3953  001BAE                     	endif
  3954  001BAE                     	if	0	;tblptru may be non-zero
  3955  001BAE                     	endif
  3956  001BAE  0008               	tblrd		*
  3957  001BB0  50F5               	movf	tablat,w,c
  3958  001BB2  0A20               	xorlw	32
  3959  001BB4  B4D8               	btfsc	status,2,c
  3960  001BB6  EFDF  F00D         	goto	u3901
  3961  001BBA  EFE1  F00D         	goto	u3900
  3962  001BBE                     u3901:
  3963  001BBE  EFFE  F00D         	goto	l4424
  3964  001BC2                     u3900:
  3965  001BC2  0EF7               	movlw	247
  3966  001BC4  6E10               	movwf	??_atoi^0,c
  3967  001BC6  0EFF               	movlw	255
  3968  001BC8  6E11               	movwf	(??_atoi+1)^0,c
  3969  001BCA  C00E  FFF6         	movff	atoi@s,tblptrl
  3970  001BCE  C00F  FFF7         	movff	atoi@s+1,tblptrh
  3971  001BD2                     	if	0	;tblptru may be non-zero
  3972  001BD2                     	endif
  3973  001BD2                     	if	0	;tblptru may be non-zero
  3974  001BD2                     	endif
  3975  001BD2  0008               	tblrd		*
  3976  001BD4  50F5               	movf	tablat,w,c
  3977  001BD6  6E12               	movwf	(??_atoi+2)^0,c
  3978  001BD8  6A13               	clrf	(??_atoi+3)^0,c
  3979  001BDA  5010               	movf	??_atoi^0,w,c
  3980  001BDC  2612               	addwf	(??_atoi+2)^0,f,c
  3981  001BDE  5011               	movf	(??_atoi+1)^0,w,c
  3982  001BE0  2213               	addwfc	(??_atoi+3)^0,f,c
  3983  001BE2  5013               	movf	(??_atoi+3)^0,w,c
  3984  001BE4  E109               	bnz	u3910
  3985  001BE6  0E05               	movlw	5
  3986  001BE8  5C12               	subwf	(??_atoi+2)^0,w,c
  3987  001BEA  A0D8               	btfss	status,0,c
  3988  001BEC  EFFA  F00D         	goto	u3911
  3989  001BF0  EFFC  F00D         	goto	u3910
  3990  001BF4                     u3911:
  3991  001BF4  EFFE  F00D         	goto	l4424
  3992  001BF8                     u3910:
  3993  001BF8  0E00               	movlw	0
  3994  001BFA  6E1A               	movwf	_atoi$2344^0,c
  3995  001BFC                     l4424:
  3996  001BFC  C01A  F016         	movff	_atoi$2344,_atoi$2343
  3997  001C00  6A17               	clrf	(_atoi$2343+1)^0,c
  3998  001C02  5016               	movf	_atoi$2343^0,w,c
  3999  001C04  1017               	iorwf	(_atoi$2343+1)^0,w,c
  4000  001C06  A4D8               	btfss	status,2,c
  4001  001C08  EF08  F00E         	goto	u3921
  4002  001C0C  EF0A  F00E         	goto	u3920
  4003  001C10                     u3921:
  4004  001C10  EFCF  F00D         	goto	l4414
  4005  001C14                     u3920:
  4006  001C14  EF14  F00E         	goto	l4434
  4007  001C18                     l4430:
  4008  001C18  0E00               	movlw	0
  4009  001C1A  6E15               	movwf	(atoi@neg+1)^0,c
  4010  001C1C  0E01               	movlw	1
  4011  001C1E  6E14               	movwf	atoi@neg^0,c
  4012  001C20                     l4432:
  4013  001C20  4A0E               	infsnz	atoi@s^0,f,c
  4014  001C22  2A0F               	incf	(atoi@s+1)^0,f,c
  4015  001C24  EF49  F00E         	goto	l4440
  4016  001C28                     l4434:
  4017  001C28  C00E  FFF6         	movff	atoi@s,tblptrl
  4018  001C2C  C00F  FFF7         	movff	atoi@s+1,tblptrh
  4019  001C30                     	if	0	;tblptru may be non-zero
  4020  001C30                     	endif
  4021  001C30                     	if	0	;tblptru may be non-zero
  4022  001C30                     	endif
  4023  001C30  0008               	tblrd		*
  4024  001C32  50F5               	movf	tablat,w,c
  4025  001C34  6E10               	movwf	??_atoi^0,c
  4026  001C36  6A11               	clrf	(??_atoi+1)^0,c
  4027                           
  4028                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4029                           ; Switch size 1, requested type "simple"
  4030                           ; Number of cases is 1, Range of values is 0 to 0
  4031                           ; switch strategies available:
  4032                           ; Name         Instructions Cycles
  4033                           ; simple_byte            4     3 (average)
  4034                           ;	Chosen strategy is simple_byte
  4035  001C38  5011               	movf	(??_atoi+1)^0,w,c
  4036  001C3A  0A00               	xorlw	0	; case 0
  4037  001C3C  B4D8               	btfsc	status,2,c
  4038  001C3E  EF23  F00E         	goto	l4890
  4039  001C42  EF49  F00E         	goto	l4440
  4040  001C46                     l4890:
  4041                           
  4042                           ; Switch size 1, requested type "simple"
  4043                           ; Number of cases is 2, Range of values is 43 to 45
  4044                           ; switch strategies available:
  4045                           ; Name         Instructions Cycles
  4046                           ; simple_byte            7     4 (average)
  4047                           ;	Chosen strategy is simple_byte
  4048  001C46  5010               	movf	??_atoi^0,w,c
  4049  001C48  0A2B               	xorlw	43	; case 43
  4050  001C4A  B4D8               	btfsc	status,2,c
  4051  001C4C  EF10  F00E         	goto	l4432
  4052  001C50  0A06               	xorlw	6	; case 45
  4053  001C52  B4D8               	btfsc	status,2,c
  4054  001C54  EF0C  F00E         	goto	l4430
  4055  001C58  EF49  F00E         	goto	l4440
  4056  001C5C                     l4436:
  4057  001C5C  C01B  F007         	movff	atoi@n,___wmul@multiplier
  4058  001C60  C01C  F008         	movff	atoi@n+1,___wmul@multiplier+1
  4059  001C64  0E00               	movlw	0
  4060  001C66  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  4061  001C68  0E0A               	movlw	10
  4062  001C6A  6E09               	movwf	___wmul@multiplicand^0,c
  4063  001C6C  EC89  F016         	call	___wmul	;wreg free
  4064  001C70  C00E  FFF6         	movff	atoi@s,tblptrl
  4065  001C74  C00F  FFF7         	movff	atoi@s+1,tblptrh
  4066  001C78                     	if	0	;tblptru may be non-zero
  4067  001C78                     	endif
  4068  001C78                     	if	0	;tblptru may be non-zero
  4069  001C78                     	endif
  4070  001C78  0008               	tblrd		*
  4071  001C7A  50F5               	movf	tablat,w,c
  4072  001C7C  5E07               	subwf	?___wmul^0,f,c
  4073  001C7E  0E00               	movlw	0
  4074  001C80  5A08               	subwfb	(?___wmul+1)^0,f,c
  4075  001C82  0E30               	movlw	48
  4076  001C84  2407               	addwf	?___wmul^0,w,c
  4077  001C86  6E1B               	movwf	atoi@n^0,c
  4078  001C88  0E00               	movlw	0
  4079  001C8A  2008               	addwfc	(?___wmul+1)^0,w,c
  4080  001C8C  6E1C               	movwf	(atoi@n+1)^0,c
  4081  001C8E  EF10  F00E         	goto	l4432
  4082  001C92                     l4440:
  4083  001C92  0ED0               	movlw	208
  4084  001C94  6E10               	movwf	??_atoi^0,c
  4085  001C96  0EFF               	movlw	255
  4086  001C98  6E11               	movwf	(??_atoi+1)^0,c
  4087  001C9A  C00E  FFF6         	movff	atoi@s,tblptrl
  4088  001C9E  C00F  FFF7         	movff	atoi@s+1,tblptrh
  4089  001CA2                     	if	0	;tblptru may be non-zero
  4090  001CA2                     	endif
  4091  001CA2                     	if	0	;tblptru may be non-zero
  4092  001CA2                     	endif
  4093  001CA2  0008               	tblrd		*
  4094  001CA4  50F5               	movf	tablat,w,c
  4095  001CA6  6E12               	movwf	(??_atoi+2)^0,c
  4096  001CA8  6A13               	clrf	(??_atoi+3)^0,c
  4097  001CAA  5010               	movf	??_atoi^0,w,c
  4098  001CAC  2612               	addwf	(??_atoi+2)^0,f,c
  4099  001CAE  5011               	movf	(??_atoi+1)^0,w,c
  4100  001CB0  2213               	addwfc	(??_atoi+3)^0,f,c
  4101  001CB2  5013               	movf	(??_atoi+3)^0,w,c
  4102  001CB4  E10A               	bnz	u3930
  4103  001CB6  0E0A               	movlw	10
  4104  001CB8  5C12               	subwf	(??_atoi+2)^0,w,c
  4105  001CBA  A0D8               	btfss	status,0,c
  4106  001CBC  EF62  F00E         	goto	u3931
  4107  001CC0  EF65  F00E         	goto	u3930
  4108  001CC4                     u3931:
  4109  001CC4  0E01               	movlw	1
  4110  001CC6  EF66  F00E         	goto	u3940
  4111  001CCA                     u3930:
  4112  001CCA  0E00               	movlw	0
  4113  001CCC                     u3940:
  4114  001CCC  6E18               	movwf	_atoi$2345^0,c
  4115  001CCE  6A19               	clrf	(_atoi$2345+1)^0,c
  4116  001CD0  5018               	movf	_atoi$2345^0,w,c
  4117  001CD2  1019               	iorwf	(_atoi$2345+1)^0,w,c
  4118  001CD4  A4D8               	btfss	status,2,c
  4119  001CD6  EF6F  F00E         	goto	u3951
  4120  001CDA  EF71  F00E         	goto	u3950
  4121  001CDE                     u3951:
  4122  001CDE  EF2E  F00E         	goto	l4436
  4123  001CE2                     u3950:
  4124  001CE2  5014               	movf	atoi@neg^0,w,c
  4125  001CE4  1015               	iorwf	(atoi@neg+1)^0,w,c
  4126  001CE6  A4D8               	btfss	status,2,c
  4127  001CE8  EF78  F00E         	goto	u3961
  4128  001CEC  EF7A  F00E         	goto	u3960
  4129  001CF0                     u3961:
  4130  001CF0  EF88  F00E         	goto	l1628
  4131  001CF4                     u3960:
  4132  001CF4  C01B  F010         	movff	atoi@n,??_atoi
  4133  001CF8  C01C  F011         	movff	atoi@n+1,??_atoi+1
  4134  001CFC  1E10               	comf	??_atoi^0,f,c
  4135  001CFE  1E11               	comf	(??_atoi+1)^0,f,c
  4136  001D00  4A10               	infsnz	??_atoi^0,f,c
  4137  001D02  2A11               	incf	(??_atoi+1)^0,f,c
  4138  001D04  C010  F00E         	movff	??_atoi,?_atoi
  4139  001D08  C011  F00F         	movff	??_atoi+1,?_atoi+1
  4140  001D0C  EF8C  F00E         	goto	l1631
  4141  001D10                     l1628:
  4142  001D10  C01B  F00E         	movff	atoi@n,?_atoi
  4143  001D14  C01C  F00F         	movff	atoi@n+1,?_atoi+1
  4144  001D18                     l1631:
  4145  001D18  0012               	return		;funcret
  4146  001D1A                     __end_of_atoi:
  4147                           	callstack 0
  4148                           
  4149 ;; *************** function _isspace *****************
  4150 ;; Defined at:
  4151 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;  c               2    6[COMRAM] int 
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;		None
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  2    6[COMRAM] int 
  4158 ;; Registers used:
  4159 ;;		wreg, status,2, status,0
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4165 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4167 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4168 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4169 ;;Total ram usage:        7 bytes
  4170 ;; Hardware stack levels used:    1
  4171 ;; Hardware stack levels required when called:    6
  4172 ;; This function calls:
  4173 ;;		Nothing
  4174 ;; This function is called by:
  4175 ;;		_atoi
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text21
  4180  002762                     __ptext21:
  4181                           	callstack 0
  4182  002762                     _isspace:
  4183                           	callstack 17
  4184  002762  0E01               	movlw	1
  4185  002764  6E0D               	movwf	_isspace$2370^0,c
  4186  002766  0E20               	movlw	32
  4187  002768  1807               	xorwf	isspace@c^0,w,c
  4188  00276A  1008               	iorwf	(isspace@c+1)^0,w,c
  4189  00276C  B4D8               	btfsc	status,2,c
  4190  00276E  EFBB  F013         	goto	u3711
  4191  002772  EFBD  F013         	goto	u3710
  4192  002776                     u3711:
  4193  002776  EFD6  F013         	goto	l4342
  4194  00277A                     u3710:
  4195  00277A  0EF7               	movlw	247
  4196  00277C  6E09               	movwf	??_isspace^0,c
  4197  00277E  0EFF               	movlw	255
  4198  002780  6E0A               	movwf	(??_isspace+1)^0,c
  4199  002782  C007  F00B         	movff	isspace@c,??_isspace+2
  4200  002786  C008  F00C         	movff	isspace@c+1,??_isspace+3
  4201  00278A  5009               	movf	??_isspace^0,w,c
  4202  00278C  260B               	addwf	(??_isspace+2)^0,f,c
  4203  00278E  500A               	movf	(??_isspace+1)^0,w,c
  4204  002790  220C               	addwfc	(??_isspace+3)^0,f,c
  4205  002792  500C               	movf	(??_isspace+3)^0,w,c
  4206  002794  E109               	bnz	u3720
  4207  002796  0E05               	movlw	5
  4208  002798  5C0B               	subwf	(??_isspace+2)^0,w,c
  4209  00279A  A0D8               	btfss	status,0,c
  4210  00279C  EFD2  F013         	goto	u3721
  4211  0027A0  EFD4  F013         	goto	u3720
  4212  0027A4                     u3721:
  4213  0027A4  EFD6  F013         	goto	l4342
  4214  0027A8                     u3720:
  4215  0027A8  0E00               	movlw	0
  4216  0027AA  6E0D               	movwf	_isspace$2370^0,c
  4217  0027AC                     l4342:
  4218  0027AC  C00D  F007         	movff	_isspace$2370,?_isspace
  4219  0027B0  6A08               	clrf	(?_isspace+1)^0,c
  4220  0027B2  0012               	return		;funcret
  4221  0027B4                     __end_of_isspace:
  4222                           	callstack 0
  4223                           
  4224 ;; *************** function _isdigit *****************
  4225 ;; Defined at:
  4226 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  c               2    6[COMRAM] int 
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;		None
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  2    6[COMRAM] int 
  4233 ;; Registers used:
  4234 ;;		wreg, status,2, status,0
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4240 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4242 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4243 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4244 ;;Total ram usage:        6 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; Hardware stack levels required when called:    6
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		_vfpfcnvrt
  4251 ;;		_atoi
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           	psect	text22
  4256  0029CC                     __ptext22:
  4257                           	callstack 0
  4258  0029CC                     _isdigit:
  4259                           	callstack 18
  4260  0029CC  0ED0               	movlw	208
  4261  0029CE  6E09               	movwf	??_isdigit^0,c
  4262  0029D0  0EFF               	movlw	255
  4263  0029D2  6E0A               	movwf	(??_isdigit+1)^0,c
  4264  0029D4  C007  F00B         	movff	isdigit@c,??_isdigit+2
  4265  0029D8  C008  F00C         	movff	isdigit@c+1,??_isdigit+3
  4266  0029DC  5009               	movf	??_isdigit^0,w,c
  4267  0029DE  260B               	addwf	(??_isdigit+2)^0,f,c
  4268  0029E0  500A               	movf	(??_isdigit+1)^0,w,c
  4269  0029E2  220C               	addwfc	(??_isdigit+3)^0,f,c
  4270  0029E4  500C               	movf	(??_isdigit+3)^0,w,c
  4271  0029E6  E10A               	bnz	u3690
  4272  0029E8  0E0A               	movlw	10
  4273  0029EA  5C0B               	subwf	(??_isdigit+2)^0,w,c
  4274  0029EC  A0D8               	btfss	status,0,c
  4275  0029EE  EFFB  F014         	goto	u3691
  4276  0029F2  EFFE  F014         	goto	u3690
  4277  0029F6                     u3691:
  4278  0029F6  0E01               	movlw	1
  4279  0029F8  EFFF  F014         	goto	u3700
  4280  0029FC                     u3690:
  4281  0029FC  0E00               	movlw	0
  4282  0029FE                     u3700:
  4283  0029FE  6E07               	movwf	?_isdigit^0,c
  4284  002A00  6A08               	clrf	(?_isdigit+1)^0,c
  4285  002A02  0012               	return		;funcret
  4286  002A04                     __end_of_isdigit:
  4287                           	callstack 0
  4288                           
  4289 ;; *************** function ___wmul *****************
  4290 ;; Defined at:
  4291 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  multiplier      2    6[COMRAM] unsigned int 
  4294 ;;  multiplicand    2    8[COMRAM] unsigned int 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;  product         2   10[COMRAM] unsigned int 
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  2    6[COMRAM] unsigned int 
  4299 ;; Registers used:
  4300 ;;		wreg, status,2, status,0, prodl, prodh
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4306 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4309 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4310 ;;Total ram usage:        6 bytes
  4311 ;; Hardware stack levels used:    1
  4312 ;; Hardware stack levels required when called:    6
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		_atoi
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           	psect	text23
  4321  002D12                     __ptext23:
  4322                           	callstack 0
  4323  002D12                     ___wmul:
  4324                           	callstack 17
  4325  002D12  5007               	movf	___wmul@multiplier^0,w,c
  4326  002D14  0209               	mulwf	___wmul@multiplicand^0,c
  4327  002D16  CFF3 F00B          	movff	prodl,___wmul@product
  4328  002D1A  CFF4 F00C          	movff	prodh,___wmul@product+1
  4329  002D1E  5007               	movf	___wmul@multiplier^0,w,c
  4330  002D20  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  4331  002D22  50F3               	movf	243,w,c
  4332  002D24  260C               	addwf	(___wmul@product+1)^0,f,c
  4333  002D26  5008               	movf	(___wmul@multiplier+1)^0,w,c
  4334  002D28  0209               	mulwf	___wmul@multiplicand^0,c
  4335  002D2A  50F3               	movf	243,w,c
  4336  002D2C  260C               	addwf	(___wmul@product+1)^0,f,c
  4337  002D2E  C00B  F007         	movff	___wmul@product,?___wmul
  4338  002D32  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  4339  002D36  0012               	return		;funcret
  4340  002D38                     __end_of___wmul:
  4341                           	callstack 0
  4342                           
  4343 ;; *************** function _lecture *****************
  4344 ;; Defined at:
  4345 ;;		line 386 in file "main.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;		None
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;		None
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  1    wreg      unsigned char 
  4352 ;; Registers used:
  4353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4361 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4362 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4363 ;;Total ram usage:        1 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:    7
  4366 ;; This function calls:
  4367 ;;		_EUSART1_Read
  4368 ;; This function is called by:
  4369 ;;		_reception_affichage
  4370 ;;		_reception_
  4371 ;;		_affiche
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text24
  4376  002156                     __ptext24:
  4377                           	callstack 0
  4378  002156                     _lecture:
  4379                           	callstack 21
  4380  002156                     
  4381                           ;main.c: 387:     RCSTA1bits.CREN = 1;
  4382  002156  88AB               	bsf	171,4,c	;volatile
  4383                           
  4384                           ;main.c: 388:     if (PIR1bits.RC1IF == 1)
  4385  002158  AA9E               	btfss	158,5,c	;volatile
  4386  00215A  EFB1  F010         	goto	u2411
  4387  00215E  EFB3  F010         	goto	u2410
  4388  002162                     u2411:
  4389  002162  EFBA  F010         	goto	l3378
  4390  002166                     u2410:
  4391  002166                     
  4392                           ;main.c: 389:         Hx = EUSART1_Read();
  4393  002166  ECFA  F015         	call	_EUSART1_Read	;wreg free
  4394  00216A  6E07               	movwf	??_lecture^0,c
  4395  00216C  5007               	movf	??_lecture^0,w,c
  4396  00216E  0100               	movlb	0	; () banked
  4397  002170  6F8F               	movwf	_Hx& (0+255),b
  4398  002172  6B90               	clrf	(_Hx+1)& (0+255),b
  4399  002174                     l3378:
  4400                           
  4401                           ;main.c: 390:     if (Hx == 0x7E) {
  4402  002174  0E7E               	movlw	126
  4403  002176  0100               	movlb	0	; () banked
  4404  002178  198F               	xorwf	_Hx& (0+255),w,b
  4405  00217A  1190               	iorwf	(_Hx+1)& (0+255),w,b
  4406  00217C  A4D8               	btfss	status,2,c
  4407  00217E  EFC3  F010         	goto	u2421
  4408  002182  EFC5  F010         	goto	u2420
  4409  002186                     u2421:
  4410  002186  EF33  F011         	goto	l3414
  4411  00218A                     u2420:
  4412  00218A                     
  4413                           ; BSR set to: 0
  4414                           ;main.c: 391:         for (i = 0; i < 19; i++) {
  4415  00218A  0E00               	movlw	0
  4416  00218C  6E55               	movwf	(_i+1)^0,c
  4417  00218E  0E00               	movlw	0
  4418  002190  6E54               	movwf	_i^0,c
  4419  002192                     l3382:
  4420  002192  BE55               	btfsc	(_i+1)^0,7,c
  4421  002194  EFD5  F010         	goto	u2431
  4422  002198  5055               	movf	(_i+1)^0,w,c
  4423  00219A  E109               	bnz	u2430
  4424  00219C  0E13               	movlw	19
  4425  00219E  5C54               	subwf	_i^0,w,c
  4426  0021A0  A0D8               	btfss	status,0,c
  4427  0021A2  EFD5  F010         	goto	u2431
  4428  0021A6  EFD7  F010         	goto	u2430
  4429  0021AA                     u2431:
  4430  0021AA  EFD9  F010         	goto	l3386
  4431  0021AE                     u2430:
  4432  0021AE  EFE6  F010         	goto	l3392
  4433  0021B2                     l3386:
  4434                           
  4435                           ;main.c: 392:             trame[i] = EUSART1_Read();
  4436  0021B2  0E60               	movlw	low _trame
  4437  0021B4  2454               	addwf	_i^0,w,c
  4438  0021B6  6ED9               	movwf	fsr2l,c
  4439  0021B8  0E00               	movlw	high _trame
  4440  0021BA  2055               	addwfc	(_i+1)^0,w,c
  4441  0021BC  6EDA               	movwf	fsr2h,c
  4442  0021BE  ECFA  F015         	call	_EUSART1_Read	;wreg free
  4443  0021C2  6EDF               	movwf	indf2,c
  4444  0021C4                     
  4445                           ;main.c: 393:         }
  4446  0021C4  4A54               	infsnz	_i^0,f,c
  4447  0021C6  2A55               	incf	(_i+1)^0,f,c
  4448  0021C8  EFC9  F010         	goto	l3382
  4449  0021CC                     l3392:
  4450                           
  4451                           ;main.c: 394:         t1 = trame[12] << 8;
  4452  0021CC  0100               	movlb	0	; () banked
  4453  0021CE  516C               	movf	(_trame+12)& (0+255),w,b
  4454  0021D0  6F8C               	movwf	(_t1+1)& (0+255),b
  4455  0021D2  6B8B               	clrf	_t1& (0+255),b
  4456                           
  4457                           ;main.c: 395:         t2 = trame[14] << 8;
  4458  0021D4  516E               	movf	(_trame+14)& (0+255),w,b
  4459  0021D6  6F8A               	movwf	(_t2+1)& (0+255),b
  4460  0021D8  6B89               	clrf	_t2& (0+255),b
  4461                           
  4462                           ;main.c: 396:         t3 = trame[16] << 8;
  4463  0021DA  5170               	movf	(_trame+16)& (0+255),w,b
  4464  0021DC  6F88               	movwf	(_t3+1)& (0+255),b
  4465  0021DE  6B87               	clrf	_t3& (0+255),b
  4466  0021E0                     
  4467                           ; BSR set to: 0
  4468                           ;main.c: 398:         if (saving == Non) {
  4469  0021E0  0456               	decf	_saving^0,w,c
  4470  0021E2  A4D8               	btfss	status,2,c
  4471  0021E4  EFF6  F010         	goto	u2441
  4472  0021E8  EFF8  F010         	goto	u2440
  4473  0021EC                     u2441:
  4474  0021EC  EF0C  F011         	goto	l3398
  4475  0021F0                     u2440:
  4476  0021F0                     
  4477                           ; BSR set to: 0
  4478                           ;main.c: 399:             PX = t1 + trame[13];
  4479  0021F0  516D               	movf	(_trame+13)& (0+255),w,b
  4480  0021F2  258B               	addwf	_t1& (0+255),w,b
  4481  0021F4  6E52               	movwf	_PX^0,c
  4482  0021F6  0E00               	movlw	0
  4483  0021F8  218C               	addwfc	(_t1+1)& (0+255),w,b
  4484  0021FA  6E53               	movwf	(_PX+1)^0,c
  4485                           
  4486                           ;main.c: 400:             PY = t2 + trame[15];
  4487  0021FC  516F               	movf	(_trame+15)& (0+255),w,b
  4488  0021FE  2589               	addwf	_t2& (0+255),w,b
  4489  002200  6F85               	movwf	_PY& (0+255),b
  4490  002202  0E00               	movlw	0
  4491  002204  218A               	addwfc	(_t2+1)& (0+255),w,b
  4492  002206  6F86               	movwf	(_PY+1)& (0+255),b
  4493                           
  4494                           ;main.c: 401:             PZ = t3 + trame[17];
  4495  002208  5171               	movf	(_trame+17)& (0+255),w,b
  4496  00220A  2587               	addwf	_t3& (0+255),w,b
  4497  00220C  6F83               	movwf	_PZ& (0+255),b
  4498  00220E  0E00               	movlw	0
  4499  002210  2188               	addwfc	(_t3+1)& (0+255),w,b
  4500  002212  6F84               	movwf	(_PZ+1)& (0+255),b
  4501                           
  4502                           ;main.c: 402:         } else if (saving == Oui) {
  4503  002214  EF28  F011         	goto	l3404
  4504  002218                     l3398:
  4505                           
  4506                           ; BSR set to: 0
  4507  002218  5056               	movf	_saving^0,w,c
  4508  00221A  A4D8               	btfss	status,2,c
  4509  00221C  EF12  F011         	goto	u2451
  4510  002220  EF14  F011         	goto	u2450
  4511  002224                     u2451:
  4512  002224  EF28  F011         	goto	l3404
  4513  002228                     u2450:
  4514  002228                     
  4515                           ; BSR set to: 0
  4516                           ;main.c: 403:             SPX = t1 + trame[13];
  4517  002228  516D               	movf	(_trame+13)& (0+255),w,b
  4518  00222A  258B               	addwf	_t1& (0+255),w,b
  4519  00222C  6F81               	movwf	_SPX& (0+255),b
  4520  00222E  0E00               	movlw	0
  4521  002230  218C               	addwfc	(_t1+1)& (0+255),w,b
  4522  002232  6F82               	movwf	(_SPX+1)& (0+255),b
  4523                           
  4524                           ;main.c: 404:             SPY = t2 + trame[15];
  4525  002234  516F               	movf	(_trame+15)& (0+255),w,b
  4526  002236  2589               	addwf	_t2& (0+255),w,b
  4527  002238  6F7F               	movwf	_SPY& (0+255),b
  4528  00223A  0E00               	movlw	0
  4529  00223C  218A               	addwfc	(_t2+1)& (0+255),w,b
  4530  00223E  6F80               	movwf	(_SPY+1)& (0+255),b
  4531                           
  4532                           ;main.c: 405:             SPZ = t3 + trame[17];
  4533  002240  5171               	movf	(_trame+17)& (0+255),w,b
  4534  002242  2587               	addwf	_t3& (0+255),w,b
  4535  002244  6F7D               	movwf	_SPZ& (0+255),b
  4536  002246  0E00               	movlw	0
  4537  002248  2188               	addwfc	(_t3+1)& (0+255),w,b
  4538  00224A  6F7E               	movwf	(_SPZ+1)& (0+255),b
  4539  00224C                     
  4540                           ; BSR set to: 0
  4541                           ;main.c: 406:             saving = idle;
  4542  00224C  0E02               	movlw	2
  4543  00224E  6E56               	movwf	_saving^0,c
  4544  002250                     l3404:
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;main.c: 408:         c = 0;
  4548  002250  0E00               	movlw	0
  4549  002252  6F7C               	movwf	(_c+1)& (0+255),b
  4550  002254  0E00               	movlw	0
  4551  002256  6F7B               	movwf	_c& (0+255),b
  4552  002258                     
  4553                           ; BSR set to: 0
  4554                           ;main.c: 409:         Hx = 0;
  4555  002258  0E00               	movlw	0
  4556  00225A  6F90               	movwf	(_Hx+1)& (0+255),b
  4557  00225C  0E00               	movlw	0
  4558  00225E  6F8F               	movwf	_Hx& (0+255),b
  4559  002260                     
  4560                           ; BSR set to: 0
  4561                           ;main.c: 410:         return 1;
  4562  002260  0E01               	movlw	1
  4563  002262  EF34  F011         	goto	l785
  4564  002266                     l3414:
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;main.c: 412:         return 0;
  4568  002266  0E00               	movlw	0
  4569  002268                     l785:
  4570                           
  4571                           ; BSR set to: 0
  4572  002268  0012               	return		;funcret
  4573  00226A                     __end_of_lecture:
  4574                           	callstack 0
  4575                           
  4576 ;; *************** function _EUSART1_Read *****************
  4577 ;; Defined at:
  4578 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;		None
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;		None
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      unsigned char 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4596 ;;Total ram usage:        0 bytes
  4597 ;; Hardware stack levels used:    1
  4598 ;; Hardware stack levels required when called:    6
  4599 ;; This function calls:
  4600 ;;		Nothing
  4601 ;; This function is called by:
  4602 ;;		_lecture
  4603 ;;		_getch
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           	psect	text25
  4608  002BF4                     __ptext25:
  4609                           	callstack 0
  4610  002BF4                     _EUSART1_Read:
  4611                           	callstack 21
  4612  002BF4                     l88:
  4613                           
  4614                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  4615  002BF4  AA9E               	btfss	158,5,c	;volatile
  4616  002BF6  EFFF  F015         	goto	u2351
  4617  002BFA  EF01  F016         	goto	u2350
  4618  002BFE                     u2351:
  4619  002BFE  EFFA  F015         	goto	l88
  4620  002C02                     u2350:
  4621  002C02                     
  4622                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  4623  002C02  0E00               	movlw	0
  4624  002C04  0100               	movlb	0	; () banked
  4625  002C06  6F9C               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4626  002C08                     
  4627                           ; BSR set to: 0
  4628                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  4629  002C08  A2AB               	btfss	171,1,c	;volatile
  4630  002C0A  EF09  F016         	goto	u2361
  4631  002C0E  EF0B  F016         	goto	u2360
  4632  002C12                     u2361:
  4633  002C12  EF0D  F016         	goto	l3332
  4634  002C16                     u2360:
  4635  002C16                     
  4636                           ; BSR set to: 0
  4637                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  4638  002C16  98AB               	bcf	171,4,c	;volatile
  4639                           
  4640                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  4641  002C18  88AB               	bsf	171,4,c	;volatile
  4642  002C1A                     l3332:
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  4646  002C1A  50AE               	movf	174,w,c	;volatile
  4647  002C1C                     
  4648                           ; BSR set to: 0
  4649  002C1C  0012               	return		;funcret
  4650  002C1E                     __end_of_EUSART1_Read:
  4651                           	callstack 0
  4652                           
  4653 ;; *************** function _LCD_Function *****************
  4654 ;; Defined at:
  4655 ;;		line 448 in file "main.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  ordre           1    wreg     enum E12638
  4658 ;;  x               1    8[COMRAM] unsigned char 
  4659 ;;  z               1    9[COMRAM] unsigned char 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;  ordre           1   12[COMRAM] enum E12638
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  1    wreg      void 
  4664 ;; Registers used:
  4665 ;;		wreg, status,2, status,0, cstack
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4673 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4674 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4675 ;;Total ram usage:        5 bytes
  4676 ;; Hardware stack levels used:    1
  4677 ;; Hardware stack levels required when called:    8
  4678 ;; This function calls:
  4679 ;;		_EUSART1_Write
  4680 ;;		_EUSART_function
  4681 ;; This function is called by:
  4682 ;;		_traitementEcran
  4683 ;;		_affiche
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text26
  4688  002018                     __ptext26:
  4689                           	callstack 0
  4690  002018                     _LCD_Function:
  4691                           	callstack 19
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;incstack = 0
  4695                           ;LCD_Function@ordre stored from wreg
  4696  002018  6E0D               	movwf	LCD_Function@ordre^0,c
  4697  00201A                     
  4698                           ;main.c: 449:     switch (ordre) {
  4699  00201A  EF79  F010         	goto	l4602
  4700  00201E                     l4570:
  4701                           
  4702                           ;main.c: 451:             EUSART_function(0x51);
  4703  00201E  0E51               	movlw	81
  4704  002020  EC18  F017         	call	_EUSART_function
  4705                           
  4706                           ;main.c: 452:             break;
  4707  002024  EFAA  F010         	goto	l813
  4708  002028                     l4572:
  4709                           
  4710                           ;main.c: 455:             EUSART_function(0x53);
  4711  002028  0E53               	movlw	83
  4712  00202A  EC18  F017         	call	_EUSART_function
  4713                           
  4714                           ;main.c: 456:             EUSART1_Write(x);
  4715  00202E  5009               	movf	LCD_Function@x^0,w,c
  4716  002030  EC04  F017         	call	_EUSART1_Write
  4717                           
  4718                           ;main.c: 457:             break;
  4719  002034  EFAA  F010         	goto	l813
  4720  002038                     l4574:
  4721                           
  4722                           ;main.c: 460:             EUSART_function(0x41);
  4723  002038  0E41               	movlw	65
  4724  00203A  EC18  F017         	call	_EUSART_function
  4725                           
  4726                           ;main.c: 461:             break;
  4727  00203E  EFAA  F010         	goto	l813
  4728  002042                     l4576:
  4729                           
  4730                           ;main.c: 464:             EUSART_function(0x42);
  4731  002042  0E42               	movlw	66
  4732  002044  EC18  F017         	call	_EUSART_function
  4733                           
  4734                           ;main.c: 465:             break;
  4735  002048  EFAA  F010         	goto	l813
  4736  00204C                     l4578:
  4737                           
  4738                           ;main.c: 468:             EUSART_function(0x45);
  4739  00204C  0E45               	movlw	69
  4740  00204E  EC18  F017         	call	_EUSART_function
  4741                           
  4742                           ;main.c: 470:             switch (x) {
  4743  002052  EF42  F010         	goto	l4590
  4744  002056                     l4580:
  4745                           
  4746                           ;main.c: 472:                     EUSART1_Write(0x00 + z);
  4747  002056  500A               	movf	LCD_Function@z^0,w,c
  4748  002058  EC04  F017         	call	_EUSART1_Write
  4749                           
  4750                           ;main.c: 473:                     break;
  4751  00205C  EFAA  F010         	goto	l813
  4752  002060                     l4582:
  4753                           
  4754                           ;main.c: 475:                     EUSART1_Write(0x40 + z);
  4755  002060  500A               	movf	LCD_Function@z^0,w,c
  4756  002062  0F40               	addlw	64
  4757  002064  EC04  F017         	call	_EUSART1_Write
  4758                           
  4759                           ;main.c: 476:                     break;
  4760  002068  EFAA  F010         	goto	l813
  4761  00206C                     l4584:
  4762                           
  4763                           ;main.c: 478:                     EUSART1_Write(0x14 + z);
  4764  00206C  500A               	movf	LCD_Function@z^0,w,c
  4765  00206E  0F14               	addlw	20
  4766  002070  EC04  F017         	call	_EUSART1_Write
  4767                           
  4768                           ;main.c: 479:                     break;
  4769  002074  EFAA  F010         	goto	l813
  4770  002078                     l4586:
  4771                           
  4772                           ;main.c: 481:                     EUSART1_Write(0x54 + z);
  4773  002078  500A               	movf	LCD_Function@z^0,w,c
  4774  00207A  0F54               	addlw	84
  4775  00207C  EC04  F017         	call	_EUSART1_Write
  4776                           
  4777                           ;main.c: 482:                     break;
  4778  002080  EFAA  F010         	goto	l813
  4779  002084                     l4590:
  4780  002084  5009               	movf	LCD_Function@x^0,w,c
  4781  002086  6E0B               	movwf	??_LCD_Function^0,c
  4782  002088  6A0C               	clrf	(??_LCD_Function+1)^0,c
  4783                           
  4784                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4785                           ; Switch size 1, requested type "simple"
  4786                           ; Number of cases is 1, Range of values is 0 to 0
  4787                           ; switch strategies available:
  4788                           ; Name         Instructions Cycles
  4789                           ; simple_byte            4     3 (average)
  4790                           ;	Chosen strategy is simple_byte
  4791  00208A  500C               	movf	(??_LCD_Function+1)^0,w,c
  4792  00208C  0A00               	xorlw	0	; case 0
  4793  00208E  B4D8               	btfsc	status,2,c
  4794  002090  EF4C  F010         	goto	l4892
  4795  002094  EFAA  F010         	goto	l813
  4796  002098                     l4892:
  4797                           
  4798                           ; Switch size 1, requested type "simple"
  4799                           ; Number of cases is 4, Range of values is 0 to 3
  4800                           ; switch strategies available:
  4801                           ; Name         Instructions Cycles
  4802                           ; simple_byte           13     7 (average)
  4803                           ;	Chosen strategy is simple_byte
  4804  002098  500B               	movf	??_LCD_Function^0,w,c
  4805  00209A  0A00               	xorlw	0	; case 0
  4806  00209C  B4D8               	btfsc	status,2,c
  4807  00209E  EF2B  F010         	goto	l4580
  4808  0020A2  0A01               	xorlw	1	; case 1
  4809  0020A4  B4D8               	btfsc	status,2,c
  4810  0020A6  EF30  F010         	goto	l4582
  4811  0020AA  0A03               	xorlw	3	; case 2
  4812  0020AC  B4D8               	btfsc	status,2,c
  4813  0020AE  EF36  F010         	goto	l4584
  4814  0020B2  0A01               	xorlw	1	; case 3
  4815  0020B4  B4D8               	btfsc	status,2,c
  4816  0020B6  EF3C  F010         	goto	l4586
  4817  0020BA  EFAA  F010         	goto	l813
  4818  0020BE                     l4592:
  4819                           
  4820                           ;main.c: 486:             EUSART_function(0x46);
  4821  0020BE  0E46               	movlw	70
  4822  0020C0  EC18  F017         	call	_EUSART_function
  4823                           
  4824                           ;main.c: 487:             break;
  4825  0020C4  EFAA  F010         	goto	l813
  4826  0020C8                     l4594:
  4827                           
  4828                           ;main.c: 489:             EUSART_function(0x4B);
  4829  0020C8  0E4B               	movlw	75
  4830  0020CA  EC18  F017         	call	_EUSART_function
  4831                           
  4832                           ;main.c: 490:             break;
  4833  0020CE  EFAA  F010         	goto	l813
  4834  0020D2                     l4596:
  4835                           
  4836                           ;main.c: 492:             EUSART_function(0x4C);
  4837  0020D2  0E4C               	movlw	76
  4838  0020D4  EC18  F017         	call	_EUSART_function
  4839                           
  4840                           ;main.c: 493:             break;
  4841  0020D8  EFAA  F010         	goto	l813
  4842  0020DC                     l4598:
  4843                           
  4844                           ;main.c: 495:             EUSART_function(0x41);
  4845  0020DC  0E41               	movlw	65
  4846  0020DE  EC18  F017         	call	_EUSART_function
  4847                           
  4848                           ;main.c: 496:             EUSART_function(0x51);
  4849  0020E2  0E51               	movlw	81
  4850  0020E4  EC18  F017         	call	_EUSART_function
  4851                           
  4852                           ;main.c: 497:             EUSART_function(0x46);
  4853  0020E8  0E46               	movlw	70
  4854  0020EA  EC18  F017         	call	_EUSART_function
  4855                           
  4856                           ;main.c: 498:             break;
  4857  0020EE  EFAA  F010         	goto	l813
  4858  0020F2                     l4602:
  4859  0020F2  500D               	movf	LCD_Function@ordre^0,w,c
  4860  0020F4  6E0B               	movwf	??_LCD_Function^0,c
  4861  0020F6  6A0C               	clrf	(??_LCD_Function+1)^0,c
  4862                           
  4863                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4864                           ; Switch size 1, requested type "simple"
  4865                           ; Number of cases is 1, Range of values is 0 to 0
  4866                           ; switch strategies available:
  4867                           ; Name         Instructions Cycles
  4868                           ; simple_byte            4     3 (average)
  4869                           ;	Chosen strategy is simple_byte
  4870  0020F8  500C               	movf	(??_LCD_Function+1)^0,w,c
  4871  0020FA  0A00               	xorlw	0	; case 0
  4872  0020FC  B4D8               	btfsc	status,2,c
  4873  0020FE  EF83  F010         	goto	l4894
  4874  002102  EFAA  F010         	goto	l813
  4875  002106                     l4894:
  4876                           
  4877                           ; Switch size 1, requested type "simple"
  4878                           ; Number of cases is 9, Range of values is 0 to 8
  4879                           ; switch strategies available:
  4880                           ; Name         Instructions Cycles
  4881                           ; simple_byte           28    15 (average)
  4882                           ;	Chosen strategy is simple_byte
  4883  002106  500B               	movf	??_LCD_Function^0,w,c
  4884  002108  0A00               	xorlw	0	; case 0
  4885  00210A  B4D8               	btfsc	status,2,c
  4886  00210C  EF0F  F010         	goto	l4570
  4887  002110  0A01               	xorlw	1	; case 1
  4888  002112  B4D8               	btfsc	status,2,c
  4889  002114  EF26  F010         	goto	l4578
  4890  002118  0A03               	xorlw	3	; case 2
  4891  00211A  B4D8               	btfsc	status,2,c
  4892  00211C  EF5F  F010         	goto	l4592
  4893  002120  0A01               	xorlw	1	; case 3
  4894  002122  B4D8               	btfsc	status,2,c
  4895  002124  EF14  F010         	goto	l4572
  4896  002128  0A07               	xorlw	7	; case 4
  4897  00212A  B4D8               	btfsc	status,2,c
  4898  00212C  EF1C  F010         	goto	l4574
  4899  002130  0A01               	xorlw	1	; case 5
  4900  002132  B4D8               	btfsc	status,2,c
  4901  002134  EF21  F010         	goto	l4576
  4902  002138  0A03               	xorlw	3	; case 6
  4903  00213A  B4D8               	btfsc	status,2,c
  4904  00213C  EF64  F010         	goto	l4594
  4905  002140  0A01               	xorlw	1	; case 7
  4906  002142  B4D8               	btfsc	status,2,c
  4907  002144  EF69  F010         	goto	l4596
  4908  002148  0A0F               	xorlw	15	; case 8
  4909  00214A  B4D8               	btfsc	status,2,c
  4910  00214C  EF6E  F010         	goto	l4598
  4911  002150  EFAA  F010         	goto	l813
  4912  002154                     l813:
  4913  002154  0012               	return		;funcret
  4914  002156                     __end_of_LCD_Function:
  4915                           	callstack 0
  4916                           
  4917 ;; *************** function _EUSART_function *****************
  4918 ;; Defined at:
  4919 ;;		line 423 in file "main.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;  hex             1    wreg     unsigned char 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  hex             1    7[COMRAM] unsigned char 
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      void 
  4926 ;; Registers used:
  4927 ;;		wreg, status,2, cstack
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4936 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4937 ;;Total ram usage:        1 bytes
  4938 ;; Hardware stack levels used:    1
  4939 ;; Hardware stack levels required when called:    7
  4940 ;; This function calls:
  4941 ;;		_EUSART1_Write
  4942 ;; This function is called by:
  4943 ;;		_LCD_Function
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947                           	psect	text27
  4948  002E30                     __ptext27:
  4949                           	callstack 0
  4950  002E30                     _EUSART_function:
  4951                           	callstack 19
  4952                           
  4953                           ;incstack = 0
  4954                           ;EUSART_function@hex stored from wreg
  4955  002E30  6E08               	movwf	EUSART_function@hex^0,c
  4956  002E32                     
  4957                           ;main.c: 424:     EUSART1_Write(0xFE);
  4958  002E32  0EFE               	movlw	254
  4959  002E34  EC04  F017         	call	_EUSART1_Write
  4960  002E38                     
  4961                           ;main.c: 425:     EUSART1_Write(hex);
  4962  002E38  5008               	movf	EUSART_function@hex^0,w,c
  4963  002E3A  EC04  F017         	call	_EUSART1_Write
  4964  002E3E  0012               	return		;funcret
  4965  002E40                     __end_of_EUSART_function:
  4966                           	callstack 0
  4967                           
  4968 ;; *************** function _EUSART1_Write *****************
  4969 ;; Defined at:
  4970 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  txData          1    wreg     unsigned char 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  txData          1    6[COMRAM] unsigned char 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  1    wreg      void 
  4977 ;; Registers used:
  4978 ;;		wreg
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4985 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4987 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4988 ;;Total ram usage:        1 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:    6
  4991 ;; This function calls:
  4992 ;;		Nothing
  4993 ;; This function is called by:
  4994 ;;		_putch
  4995 ;;		_EUSART_function
  4996 ;;		_LCD_Function
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text28
  5001  002E08                     __ptext28:
  5002                           	callstack 0
  5003  002E08                     _EUSART1_Write:
  5004                           	callstack 13
  5005                           
  5006                           ;incstack = 0
  5007                           ;EUSART1_Write@txData stored from wreg
  5008  002E08  6E07               	movwf	EUSART1_Write@txData^0,c
  5009  002E0A                     l95:
  5010                           
  5011                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  5012  002E0A  A89E               	btfss	158,4,c	;volatile
  5013  002E0C  EF0A  F017         	goto	u3491
  5014  002E10  EF0C  F017         	goto	u3490
  5015  002E14                     u3491:
  5016  002E14  EF05  F017         	goto	l95
  5017  002E18                     u3490:
  5018  002E18                     
  5019                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  5020  002E18  C007  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5021  002E1C  0012               	return		;funcret
  5022  002E1E                     __end_of_EUSART1_Write:
  5023                           	callstack 0
  5024                           
  5025 ;; *************** function _lamp_test *****************
  5026 ;; Defined at:
  5027 ;;		line 134 in file "main.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;		None
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  j               2   10[COMRAM] int 
  5032 ;;  j               2   14[COMRAM] int 
  5033 ;;  j               2   12[COMRAM] int 
  5034 ;;  k               2    8[COMRAM] int 
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2, status,0
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5045 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5046 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5047 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5048 ;;Total ram usage:       10 bytes
  5049 ;; Hardware stack levels used:    1
  5050 ;; Hardware stack levels required when called:    6
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_main
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	text29
  5059  001E9A                     __ptext29:
  5060                           	callstack 0
  5061  001E9A                     _lamp_test:
  5062                           	callstack 24
  5063  001E9A                     
  5064                           ;main.c: 136:     for (int j = 0; j < 2; j++) {
  5065  001E9A  0E00               	movlw	0
  5066  001E9C  6E0E               	movwf	(lamp_test@j+1)^0,c
  5067  001E9E  0E00               	movlw	0
  5068  001EA0  6E0D               	movwf	lamp_test@j^0,c
  5069  001EA2                     l3872:
  5070  001EA2  B28A               	btfsc	138,1,c	;volatile
  5071  001EA4  EF56  F00F         	goto	u3041
  5072  001EA8  EF59  F00F         	goto	u3040
  5073  001EAC                     u3041:
  5074  001EAC  0E01               	movlw	1
  5075  001EAE  EF5A  F00F         	goto	u3046
  5076  001EB2                     u3040:
  5077  001EB2  0E00               	movlw	0
  5078  001EB4                     u3046:
  5079  001EB4  0AFF               	xorlw	255
  5080  001EB6  6E07               	movwf	??_lamp_test^0,c
  5081  001EB8  4607               	rlncf	??_lamp_test^0,f,c
  5082  001EBA  508A               	movf	138,w,c	;volatile
  5083  001EBC  1807               	xorwf	??_lamp_test^0,w,c
  5084  001EBE  0BFD               	andlw	-3
  5085  001EC0  1807               	xorwf	??_lamp_test^0,w,c
  5086  001EC2  6E8A               	movwf	138,c	;volatile
  5087  001EC4                     
  5088                           ;main.c: 138:         _delay((unsigned long)((125)*(20000000/4000.0)));
  5089  001EC4  0E04               	movlw	4
  5090  001EC6  6E08               	movwf	(??_lamp_test+1)^0,c
  5091  001EC8  0E2C               	movlw	44
  5092  001ECA  6E07               	movwf	??_lamp_test^0,c
  5093  001ECC  0EAC               	movlw	172
  5094  001ECE                     u4277:
  5095  001ECE  2EE8               	decfsz	wreg,f,c
  5096  001ED0  D7FE               	bra	u4277
  5097  001ED2  2E07               	decfsz	??_lamp_test^0,f,c
  5098  001ED4  D7FC               	bra	u4277
  5099  001ED6  2E08               	decfsz	(??_lamp_test+1)^0,f,c
  5100  001ED8  D7FA               	bra	u4277
  5101                           
  5102                           ;main.c: 139:     }
  5103  001EDA  4A0D               	infsnz	lamp_test@j^0,f,c
  5104  001EDC  2A0E               	incf	(lamp_test@j+1)^0,f,c
  5105  001EDE  BE0E               	btfsc	(lamp_test@j+1)^0,7,c
  5106  001EE0  EF7B  F00F         	goto	u3051
  5107  001EE4  500E               	movf	(lamp_test@j+1)^0,w,c
  5108  001EE6  E109               	bnz	u3050
  5109  001EE8  0E02               	movlw	2
  5110  001EEA  5C0D               	subwf	lamp_test@j^0,w,c
  5111  001EEC  A0D8               	btfss	status,0,c
  5112  001EEE  EF7B  F00F         	goto	u3051
  5113  001EF2  EF7D  F00F         	goto	u3050
  5114  001EF6                     u3051:
  5115  001EF6  EF51  F00F         	goto	l3872
  5116  001EFA                     u3050:
  5117  001EFA                     
  5118                           ;main.c: 140:     _delay((unsigned long)((250)*(20000000/4000.0)));
  5119  001EFA  0E07               	movlw	7
  5120  001EFC  6E08               	movwf	(??_lamp_test+1)^0,c
  5121  001EFE  0E58               	movlw	88
  5122  001F00  6E07               	movwf	??_lamp_test^0,c
  5123  001F02  0E5A               	movlw	90
  5124  001F04                     u4287:
  5125  001F04  2EE8               	decfsz	wreg,f,c
  5126  001F06  D7FE               	bra	u4287
  5127  001F08  2E07               	decfsz	??_lamp_test^0,f,c
  5128  001F0A  D7FC               	bra	u4287
  5129  001F0C  2E08               	decfsz	(??_lamp_test+1)^0,f,c
  5130  001F0E  D7FA               	bra	u4287
  5131  001F10                     
  5132                           ;main.c: 141:     for (int j = 0; j < 2; j++) {
  5133  001F10  0E00               	movlw	0
  5134  001F12  6E10               	movwf	(lamp_test@j_1758+1)^0,c
  5135  001F14  0E00               	movlw	0
  5136  001F16  6E0F               	movwf	lamp_test@j_1758^0,c
  5137  001F18                     l3886:
  5138  001F18  B48A               	btfsc	138,2,c	;volatile
  5139  001F1A  EF91  F00F         	goto	u3061
  5140  001F1E  EF94  F00F         	goto	u3060
  5141  001F22                     u3061:
  5142  001F22  0E01               	movlw	1
  5143  001F24  EF95  F00F         	goto	u3066
  5144  001F28                     u3060:
  5145  001F28  0E00               	movlw	0
  5146  001F2A                     u3066:
  5147  001F2A  0AFF               	xorlw	255
  5148  001F2C  6E07               	movwf	??_lamp_test^0,c
  5149  001F2E  4607               	rlncf	??_lamp_test^0,f,c
  5150  001F30  4607               	rlncf	??_lamp_test^0,f,c
  5151  001F32  508A               	movf	138,w,c	;volatile
  5152  001F34  1807               	xorwf	??_lamp_test^0,w,c
  5153  001F36  0BFB               	andlw	-5
  5154  001F38  1807               	xorwf	??_lamp_test^0,w,c
  5155  001F3A  6E8A               	movwf	138,c	;volatile
  5156  001F3C                     
  5157                           ;main.c: 143:         _delay((unsigned long)((125)*(20000000/4000.0)));
  5158  001F3C  0E04               	movlw	4
  5159  001F3E  6E08               	movwf	(??_lamp_test+1)^0,c
  5160  001F40  0E2C               	movlw	44
  5161  001F42  6E07               	movwf	??_lamp_test^0,c
  5162  001F44  0EAC               	movlw	172
  5163  001F46                     u4297:
  5164  001F46  2EE8               	decfsz	wreg,f,c
  5165  001F48  D7FE               	bra	u4297
  5166  001F4A  2E07               	decfsz	??_lamp_test^0,f,c
  5167  001F4C  D7FC               	bra	u4297
  5168  001F4E  2E08               	decfsz	(??_lamp_test+1)^0,f,c
  5169  001F50  D7FA               	bra	u4297
  5170                           
  5171                           ;main.c: 144:     }
  5172  001F52  4A0F               	infsnz	lamp_test@j_1758^0,f,c
  5173  001F54  2A10               	incf	(lamp_test@j_1758+1)^0,f,c
  5174  001F56  BE10               	btfsc	(lamp_test@j_1758+1)^0,7,c
  5175  001F58  EFB7  F00F         	goto	u3071
  5176  001F5C  5010               	movf	(lamp_test@j_1758+1)^0,w,c
  5177  001F5E  E109               	bnz	u3070
  5178  001F60  0E02               	movlw	2
  5179  001F62  5C0F               	subwf	lamp_test@j_1758^0,w,c
  5180  001F64  A0D8               	btfss	status,0,c
  5181  001F66  EFB7  F00F         	goto	u3071
  5182  001F6A  EFB9  F00F         	goto	u3070
  5183  001F6E                     u3071:
  5184  001F6E  EF8C  F00F         	goto	l3886
  5185  001F72                     u3070:
  5186  001F72                     
  5187                           ;main.c: 145:     _delay((unsigned long)((250)*(20000000/4000.0)));
  5188  001F72  0E07               	movlw	7
  5189  001F74  6E08               	movwf	(??_lamp_test+1)^0,c
  5190  001F76  0E58               	movlw	88
  5191  001F78  6E07               	movwf	??_lamp_test^0,c
  5192  001F7A  0E5A               	movlw	90
  5193  001F7C                     u4307:
  5194  001F7C  2EE8               	decfsz	wreg,f,c
  5195  001F7E  D7FE               	bra	u4307
  5196  001F80  2E07               	decfsz	??_lamp_test^0,f,c
  5197  001F82  D7FC               	bra	u4307
  5198  001F84  2E08               	decfsz	(??_lamp_test+1)^0,f,c
  5199  001F86  D7FA               	bra	u4307
  5200  001F88                     
  5201                           ;main.c: 146:     int k = LCD_Mode ? 12 : 6;
  5202  001F88  0100               	movlb	0	; () banked
  5203  001F8A  51F8               	movf	_LCD_Mode& (0+255),w,b
  5204  001F8C  A4D8               	btfss	status,2,c
  5205  001F8E  EFCB  F00F         	goto	u3081
  5206  001F92  EFCD  F00F         	goto	u3080
  5207  001F96                     u3081:
  5208  001F96  EFD3  F00F         	goto	l3898
  5209  001F9A                     u3080:
  5210  001F9A                     
  5211                           ; BSR set to: 0
  5212  001F9A  0E00               	movlw	0
  5213  001F9C  6E0A               	movwf	(lamp_test@k+1)^0,c
  5214  001F9E  0E06               	movlw	6
  5215  001FA0  6E09               	movwf	lamp_test@k^0,c
  5216  001FA2  EFD7  F00F         	goto	l631
  5217  001FA6                     l3898:
  5218                           
  5219                           ; BSR set to: 0
  5220  001FA6  0E00               	movlw	0
  5221  001FA8  6E0A               	movwf	(lamp_test@k+1)^0,c
  5222  001FAA  0E0C               	movlw	12
  5223  001FAC  6E09               	movwf	lamp_test@k^0,c
  5224  001FAE                     l631:
  5225                           
  5226                           ; BSR set to: 0
  5227                           ;main.c: 148:     for (int j = 0; j < k; j++) {
  5228  001FAE  0E00               	movlw	0
  5229  001FB0  6E0C               	movwf	(lamp_test@j_1760+1)^0,c
  5230  001FB2  0E00               	movlw	0
  5231  001FB4  6E0B               	movwf	lamp_test@j_1760^0,c
  5232  001FB6  EFFC  F00F         	goto	l3904
  5233  001FBA                     l3900:
  5234  001FBA  BA8A               	btfsc	138,5,c	;volatile
  5235  001FBC  EFE2  F00F         	goto	u3091
  5236  001FC0  EFE5  F00F         	goto	u3090
  5237  001FC4                     u3091:
  5238  001FC4  0E01               	movlw	1
  5239  001FC6  EFE6  F00F         	goto	u3096
  5240  001FCA                     u3090:
  5241  001FCA  0E00               	movlw	0
  5242  001FCC                     u3096:
  5243  001FCC  0AFF               	xorlw	255
  5244  001FCE  6E07               	movwf	??_lamp_test^0,c
  5245  001FD0  3A07               	swapf	??_lamp_test^0,f,c
  5246  001FD2  4607               	rlncf	??_lamp_test^0,f,c
  5247  001FD4  508A               	movf	138,w,c	;volatile
  5248  001FD6  1807               	xorwf	??_lamp_test^0,w,c
  5249  001FD8  0BDF               	andlw	-33
  5250  001FDA  1807               	xorwf	??_lamp_test^0,w,c
  5251  001FDC  6E8A               	movwf	138,c	;volatile
  5252  001FDE                     
  5253                           ;main.c: 150:         _delay((unsigned long)((125)*(20000000/4000.0)));
  5254  001FDE  0E04               	movlw	4
  5255  001FE0  6E08               	movwf	(??_lamp_test+1)^0,c
  5256  001FE2  0E2C               	movlw	44
  5257  001FE4  6E07               	movwf	??_lamp_test^0,c
  5258  001FE6  0EAC               	movlw	172
  5259  001FE8                     u4317:
  5260  001FE8  2EE8               	decfsz	wreg,f,c
  5261  001FEA  D7FE               	bra	u4317
  5262  001FEC  2E07               	decfsz	??_lamp_test^0,f,c
  5263  001FEE  D7FC               	bra	u4317
  5264  001FF0  2E08               	decfsz	(??_lamp_test+1)^0,f,c
  5265  001FF2  D7FA               	bra	u4317
  5266                           
  5267                           ;main.c: 151:     }
  5268  001FF4  4A0B               	infsnz	lamp_test@j_1760^0,f,c
  5269  001FF6  2A0C               	incf	(lamp_test@j_1760+1)^0,f,c
  5270  001FF8                     l3904:
  5271  001FF8  5009               	movf	lamp_test@k^0,w,c
  5272  001FFA  5C0B               	subwf	lamp_test@j_1760^0,w,c
  5273  001FFC  500C               	movf	(lamp_test@j_1760+1)^0,w,c
  5274  001FFE  0A80               	xorlw	128
  5275  002000  6E07               	movwf	??_lamp_test^0,c
  5276  002002  500A               	movf	(lamp_test@k+1)^0,w,c
  5277  002004  0A80               	xorlw	128
  5278  002006  5807               	subwfb	??_lamp_test^0,w,c
  5279  002008  A0D8               	btfss	status,0,c
  5280  00200A  EF09  F010         	goto	u3101
  5281  00200E  EF0B  F010         	goto	u3100
  5282  002012                     u3101:
  5283  002012  EFDD  F00F         	goto	l3900
  5284  002016                     u3100:
  5285  002016  0012               	return		;funcret
  5286  002018                     __end_of_lamp_test:
  5287                           	callstack 0
  5288                           
  5289 ;; *************** function _SYSTEM_Initialize *****************
  5290 ;; Defined at:
  5291 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;		None
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;		None
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      void 
  5298 ;; Registers used:
  5299 ;;		wreg, status,2, status,0, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5309 ;;Total ram usage:        0 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:    8
  5312 ;; This function calls:
  5313 ;;		_EUSART1_Initialize
  5314 ;;		_INTERRUPT_Initialize
  5315 ;;		_OSCILLATOR_Initialize
  5316 ;;		_PIN_MANAGER_Initialize
  5317 ;;		_TMR0_Initialize
  5318 ;;		_TMR1_Initialize
  5319 ;;		_TMR2_Initialize
  5320 ;;		_TMR3_Initialize
  5321 ;;		_TMR4_Initialize
  5322 ;; This function is called by:
  5323 ;;		_main
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           	psect	text30
  5328  002D38                     __ptext30:
  5329                           	callstack 0
  5330  002D38                     _SYSTEM_Initialize:
  5331                           	callstack 22
  5332  002D38                     
  5333                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  5334  002D38  EC50  F017         	call	_INTERRUPT_Initialize	;wreg free
  5335  002D3C                     
  5336                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5337  002D3C  EC0F  F016         	call	_PIN_MANAGER_Initialize	;wreg free
  5338  002D40                     
  5339                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5340  002D40  EC0F  F017         	call	_OSCILLATOR_Initialize	;wreg free
  5341  002D44                     
  5342                           ;mcc_generated_files/mcc.c: 56:     TMR3_Initialize();
  5343  002D44  EC3A  F014         	call	_TMR3_Initialize	;wreg free
  5344  002D48                     
  5345                           ;mcc_generated_files/mcc.c: 57:     TMR4_Initialize();
  5346  002D48  ECBE  F016         	call	_TMR4_Initialize	;wreg free
  5347  002D4C                     
  5348                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  5349  002D4C  ECCD  F016         	call	_TMR2_Initialize	;wreg free
  5350  002D50                     
  5351                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
  5352  002D50  EC57  F014         	call	_TMR1_Initialize	;wreg free
  5353  002D54                     
  5354                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  5355  002D54  EC02  F015         	call	_TMR0_Initialize	;wreg free
  5356  002D58                     
  5357                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  5358  002D58  ECFC  F013         	call	_EUSART1_Initialize	;wreg free
  5359  002D5C  0012               	return		;funcret
  5360  002D5E                     __end_of_SYSTEM_Initialize:
  5361                           	callstack 0
  5362                           
  5363 ;; *************** function _TMR4_Initialize *****************
  5364 ;; Defined at:
  5365 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;		None
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;		None
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  1    wreg      void 
  5372 ;; Registers used:
  5373 ;;		wreg, status,2, status,0, cstack
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5383 ;;Total ram usage:        0 bytes
  5384 ;; Hardware stack levels used:    1
  5385 ;; Hardware stack levels required when called:    7
  5386 ;; This function calls:
  5387 ;;		_TMR4_SetInterruptHandler
  5388 ;; This function is called by:
  5389 ;;		_SYSTEM_Initialize
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text31
  5394  002D7C                     __ptext31:
  5395                           	callstack 0
  5396  002D7C                     _TMR4_Initialize:
  5397                           	callstack 22
  5398  002D7C                     
  5399                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xF9;
  5400  002D7C  0EF9               	movlw	249
  5401  002D7E  6EA9               	movwf	169,c	;volatile
  5402                           
  5403                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  5404  002D80  0E00               	movlw	0
  5405  002D82  6E87               	movwf	135,c	;volatile
  5406  002D84                     
  5407                           ;mcc_generated_files/tmr4.c: 75:     PIR4bits.TMR4IF = 0;
  5408  002D84  9EB7               	bcf	183,7,c	;volatile
  5409  002D86                     
  5410                           ;mcc_generated_files/tmr4.c: 78:     PIE4bits.TMR4IE = 1;
  5411  002D86  8EB6               	bsf	182,7,c	;volatile
  5412  002D88                     
  5413                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  5414  002D88  0EA8               	movlw	low _TMR4_DefaultInterruptHandler
  5415  002D8A  6E07               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  5416  002D8C  0E2E               	movlw	high _TMR4_DefaultInterruptHandler
  5417  002D8E  6E08               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  5418  002D90  EC25  F017         	call	_TMR4_SetInterruptHandler	;wreg free
  5419  002D94                     
  5420                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x26;
  5421  002D94  0E26               	movlw	38
  5422  002D96  6E88               	movwf	136,c	;volatile
  5423  002D98  0012               	return		;funcret
  5424  002D9A                     __end_of_TMR4_Initialize:
  5425                           	callstack 0
  5426                           
  5427 ;; *************** function _TMR4_SetInterruptHandler *****************
  5428 ;; Defined at:
  5429 ;;		line 147 in file "mcc_generated_files/tmr4.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  5432 ;;		 -> connect(1), TMR4_DefaultInterruptHandler(1), 
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;		None
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  1    wreg      void 
  5437 ;; Registers used:
  5438 ;;		wreg, status,2, status,0
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5447 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5448 ;;Total ram usage:        2 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:    6
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_TMR4_Initialize
  5455 ;;		_main
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           	psect	text32
  5460  002E4A                     __ptext32:
  5461                           	callstack 0
  5462  002E4A                     _TMR4_SetInterruptHandler:
  5463                           	callstack 24
  5464  002E4A                     
  5465                           ;mcc_generated_files/tmr4.c: 148:     TMR4_InterruptHandler = InterruptHandler;
  5466  002E4A  C007  F0E2         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  5467  002E4E  C008  F0E3         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  5468  002E52  0012               	return		;funcret
  5469  002E54                     __end_of_TMR4_SetInterruptHandler:
  5470                           	callstack 0
  5471                           
  5472 ;; *************** function _TMR3_Initialize *****************
  5473 ;; Defined at:
  5474 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;		None
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;		None
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  1    wreg      void 
  5481 ;; Registers used:
  5482 ;;		wreg, status,2, status,0, cstack
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5492 ;;Total ram usage:        2 bytes
  5493 ;; Hardware stack levels used:    1
  5494 ;; Hardware stack levels required when called:    7
  5495 ;; This function calls:
  5496 ;;		_TMR3_SetInterruptHandler
  5497 ;; This function is called by:
  5498 ;;		_SYSTEM_Initialize
  5499 ;;		_main
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	text33
  5504  002874                     __ptext33:
  5505                           	callstack 0
  5506  002874                     _TMR3_Initialize:
  5507                           	callstack 23
  5508  002874                     
  5509                           ;mcc_generated_files/tmr3.c: 69:     T3GCON = 0x00;
  5510  002874  0E00               	movlw	0
  5511  002876  6EB0               	movwf	176,c	;volatile
  5512                           
  5513                           ;mcc_generated_files/tmr3.c: 72:     TMR3H = 0x0B;
  5514  002878  0E0B               	movlw	11
  5515  00287A  6EB3               	movwf	179,c	;volatile
  5516                           
  5517                           ;mcc_generated_files/tmr3.c: 75:     TMR3L = 0xDC;
  5518  00287C  0EDC               	movlw	220
  5519  00287E  6EB2               	movwf	178,c	;volatile
  5520  002880                     
  5521                           ;mcc_generated_files/tmr3.c: 78:     PIR2bits.TMR3IF = 0;
  5522  002880  92A1               	bcf	161,1,c	;volatile
  5523  002882                     
  5524                           ;mcc_generated_files/tmr3.c: 81:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  5525  002882  50B2               	movf	178,w,c	;volatile
  5526  002884  CFB3 F009          	movff	4019,??_TMR3_Initialize	;volatile
  5527  002888  6A0A               	clrf	(??_TMR3_Initialize+1)^0,c
  5528  00288A  C009  F00A         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  5529  00288E  6A09               	clrf	??_TMR3_Initialize^0,c
  5530  002890  1009               	iorwf	??_TMR3_Initialize^0,w,c
  5531  002892  0100               	movlb	0	; () banked
  5532  002894  6FE8               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  5533  002896  500A               	movf	(??_TMR3_Initialize+1)^0,w,c
  5534  002898  6FE9               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  5535  00289A                     
  5536                           ; BSR set to: 0
  5537                           ;mcc_generated_files/tmr3.c: 84:     PIE2bits.TMR3IE = 1;
  5538  00289A  82A0               	bsf	160,1,c	;volatile
  5539  00289C                     
  5540                           ; BSR set to: 0
  5541                           ;mcc_generated_files/tmr3.c: 87:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
  5542  00289C  0EAA               	movlw	low _TMR3_DefaultInterruptHandler
  5543  00289E  6E07               	movwf	TMR3_SetInterruptHandler@InterruptHandler^0,c
  5544  0028A0  0E2E               	movlw	high _TMR3_DefaultInterruptHandler
  5545  0028A2  6E08               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)^0,c
  5546  0028A4  EC2A  F017         	call	_TMR3_SetInterruptHandler	;wreg free
  5547  0028A8                     
  5548                           ;mcc_generated_files/tmr3.c: 90:     T3CON = 0x31;
  5549  0028A8  0E31               	movlw	49
  5550  0028AA  6EB1               	movwf	177,c	;volatile
  5551  0028AC  0012               	return		;funcret
  5552  0028AE                     __end_of_TMR3_Initialize:
  5553                           	callstack 0
  5554                           
  5555 ;; *************** function _TMR3_SetInterruptHandler *****************
  5556 ;; Defined at:
  5557 ;;		line 185 in file "mcc_generated_files/tmr3.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  5560 ;;		 -> Secondes_5(1), TMR3_DefaultInterruptHandler(1), 
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;		None
  5563 ;; Return value:  Size  Location     Type
  5564 ;;                  1    wreg      void 
  5565 ;; Registers used:
  5566 ;;		wreg, status,2, status,0
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5575 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5576 ;;Total ram usage:        2 bytes
  5577 ;; Hardware stack levels used:    1
  5578 ;; Hardware stack levels required when called:    6
  5579 ;; This function calls:
  5580 ;;		Nothing
  5581 ;; This function is called by:
  5582 ;;		_TMR3_Initialize
  5583 ;;		_main
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           	psect	text34
  5588  002E54                     __ptext34:
  5589                           	callstack 0
  5590  002E54                     _TMR3_SetInterruptHandler:
  5591                           	callstack 24
  5592  002E54                     
  5593                           ;mcc_generated_files/tmr3.c: 186:     TMR3_InterruptHandler = InterruptHandler;
  5594  002E54  C007  F0E6         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  5595  002E58  C008  F0E7         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  5596  002E5C  0012               	return		;funcret
  5597  002E5E                     __end_of_TMR3_SetInterruptHandler:
  5598                           	callstack 0
  5599                           
  5600 ;; *************** function _TMR2_Initialize *****************
  5601 ;; Defined at:
  5602 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;		None
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;		None
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  1    wreg      void 
  5609 ;; Registers used:
  5610 ;;		wreg, status,2, status,0, cstack
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5620 ;;Total ram usage:        0 bytes
  5621 ;; Hardware stack levels used:    1
  5622 ;; Hardware stack levels required when called:    7
  5623 ;; This function calls:
  5624 ;;		_TMR2_SetInterruptHandler
  5625 ;; This function is called by:
  5626 ;;		_SYSTEM_Initialize
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           	psect	text35
  5631  002D9A                     __ptext35:
  5632                           	callstack 0
  5633  002D9A                     _TMR2_Initialize:
  5634                           	callstack 22
  5635  002D9A                     
  5636                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x7C;
  5637  002D9A  0E7C               	movlw	124
  5638  002D9C  6ECB               	movwf	203,c	;volatile
  5639                           
  5640                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  5641  002D9E  0E00               	movlw	0
  5642  002DA0  6ECC               	movwf	204,c	;volatile
  5643  002DA2                     
  5644                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  5645  002DA2  929E               	bcf	158,1,c	;volatile
  5646  002DA4                     
  5647                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  5648  002DA4  829D               	bsf	157,1,c	;volatile
  5649  002DA6                     
  5650                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  5651  002DA6  0EAC               	movlw	low _TMR2_DefaultInterruptHandler
  5652  002DA8  6E07               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
  5653  002DAA  0E2E               	movlw	high _TMR2_DefaultInterruptHandler
  5654  002DAC  6E08               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
  5655  002DAE  EC2F  F017         	call	_TMR2_SetInterruptHandler	;wreg free
  5656  002DB2                     
  5657                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4E;
  5658  002DB2  0E4E               	movlw	78
  5659  002DB4  6ECA               	movwf	202,c	;volatile
  5660  002DB6  0012               	return		;funcret
  5661  002DB8                     __end_of_TMR2_Initialize:
  5662                           	callstack 0
  5663                           
  5664 ;; *************** function _TMR2_SetInterruptHandler *****************
  5665 ;; Defined at:
  5666 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  5669 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;		None
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  1    wreg      void 
  5674 ;; Registers used:
  5675 ;;		wreg, status,2, status,0
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5684 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5685 ;;Total ram usage:        2 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; Hardware stack levels required when called:    6
  5688 ;; This function calls:
  5689 ;;		Nothing
  5690 ;; This function is called by:
  5691 ;;		_TMR2_Initialize
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           	psect	text36
  5696  002E5E                     __ptext36:
  5697                           	callstack 0
  5698  002E5E                     _TMR2_SetInterruptHandler:
  5699                           	callstack 22
  5700  002E5E                     
  5701                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  5702  002E5E  C007  F0E4         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  5703  002E62  C008  F0E5         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  5704  002E66  0012               	return		;funcret
  5705  002E68                     __end_of_TMR2_SetInterruptHandler:
  5706                           	callstack 0
  5707                           
  5708 ;; *************** function _TMR1_Initialize *****************
  5709 ;; Defined at:
  5710 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;		None
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;		None
  5715 ;; Return value:  Size  Location     Type
  5716 ;;                  1    wreg      void 
  5717 ;; Registers used:
  5718 ;;		wreg, status,2, status,0, cstack
  5719 ;; Tracked objects:
  5720 ;;		On entry : 0/0
  5721 ;;		On exit  : 0/0
  5722 ;;		Unchanged: 0/0
  5723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5726 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5727 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5728 ;;Total ram usage:        2 bytes
  5729 ;; Hardware stack levels used:    1
  5730 ;; Hardware stack levels required when called:    7
  5731 ;; This function calls:
  5732 ;;		_TMR1_SetInterruptHandler
  5733 ;; This function is called by:
  5734 ;;		_SYSTEM_Initialize
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           	psect	text37
  5739  0028AE                     __ptext37:
  5740                           	callstack 0
  5741  0028AE                     _TMR1_Initialize:
  5742                           	callstack 22
  5743  0028AE                     
  5744                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  5745  0028AE  0E00               	movlw	0
  5746  0028B0  6EAA               	movwf	170,c	;volatile
  5747                           
  5748                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xE7;
  5749  0028B2  0EE7               	movlw	231
  5750  0028B4  6ECF               	movwf	207,c	;volatile
  5751                           
  5752                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x96;
  5753  0028B6  0E96               	movlw	150
  5754  0028B8  6ECE               	movwf	206,c	;volatile
  5755  0028BA                     
  5756                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  5757  0028BA  909E               	bcf	158,0,c	;volatile
  5758  0028BC                     
  5759                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5760  0028BC  50CE               	movf	206,w,c	;volatile
  5761  0028BE  CFCF F009          	movff	4047,??_TMR1_Initialize	;volatile
  5762  0028C2  6A0A               	clrf	(??_TMR1_Initialize+1)^0,c
  5763  0028C4  C009  F00A         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  5764  0028C8  6A09               	clrf	??_TMR1_Initialize^0,c
  5765  0028CA  1009               	iorwf	??_TMR1_Initialize^0,w,c
  5766  0028CC  0100               	movlb	0	; () banked
  5767  0028CE  6FF0               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  5768  0028D0  500A               	movf	(??_TMR1_Initialize+1)^0,w,c
  5769  0028D2  6FF1               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  5770  0028D4                     
  5771                           ; BSR set to: 0
  5772                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  5773  0028D4  809D               	bsf	157,0,c	;volatile
  5774  0028D6                     
  5775                           ; BSR set to: 0
  5776                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  5777  0028D6  0EAE               	movlw	low _TMR1_DefaultInterruptHandler
  5778  0028D8  6E07               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  5779  0028DA  0E2E               	movlw	high _TMR1_DefaultInterruptHandler
  5780  0028DC  6E08               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  5781  0028DE  EC34  F017         	call	_TMR1_SetInterruptHandler	;wreg free
  5782  0028E2                     
  5783                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  5784  0028E2  0E31               	movlw	49
  5785  0028E4  6ECD               	movwf	205,c	;volatile
  5786  0028E6  0012               	return		;funcret
  5787  0028E8                     __end_of_TMR1_Initialize:
  5788                           	callstack 0
  5789                           
  5790 ;; *************** function _TMR1_SetInterruptHandler *****************
  5791 ;; Defined at:
  5792 ;;		line 185 in file "mcc_generated_files/tmr1.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  5795 ;;		 -> Blink_(1), TMR1_DefaultInterruptHandler(1), 
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;		None
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  1    wreg      void 
  5800 ;; Registers used:
  5801 ;;		wreg, status,2, status,0
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5807 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5810 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5811 ;;Total ram usage:        2 bytes
  5812 ;; Hardware stack levels used:    1
  5813 ;; Hardware stack levels required when called:    6
  5814 ;; This function calls:
  5815 ;;		Nothing
  5816 ;; This function is called by:
  5817 ;;		_TMR1_Initialize
  5818 ;;		_main
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           	psect	text38
  5823  002E68                     __ptext38:
  5824                           	callstack 0
  5825  002E68                     _TMR1_SetInterruptHandler:
  5826                           	callstack 24
  5827  002E68                     
  5828                           ;mcc_generated_files/tmr1.c: 186:     TMR1_InterruptHandler = InterruptHandler;
  5829  002E68  C007  F0EE         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  5830  002E6C  C008  F0EF         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  5831  002E70  0012               	return		;funcret
  5832  002E72                     __end_of_TMR1_SetInterruptHandler:
  5833                           	callstack 0
  5834                           
  5835 ;; *************** function _TMR0_Initialize *****************
  5836 ;; Defined at:
  5837 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;		None
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;		None
  5842 ;; Return value:  Size  Location     Type
  5843 ;;                  1    wreg      void 
  5844 ;; Registers used:
  5845 ;;		wreg, status,2, status,0, cstack
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5853 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5855 ;;Total ram usage:        2 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; Hardware stack levels required when called:    7
  5858 ;; This function calls:
  5859 ;;		_TMR0_SetInterruptHandler
  5860 ;; This function is called by:
  5861 ;;		_SYSTEM_Initialize
  5862 ;; This function uses a non-reentrant model
  5863 ;;
  5864                           
  5865                           	psect	text39
  5866  002A04                     __ptext39:
  5867                           	callstack 0
  5868  002A04                     _TMR0_Initialize:
  5869                           	callstack 22
  5870  002A04                     
  5871                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  5872  002A04  9CD5               	bcf	213,6,c	;volatile
  5873  002A06                     
  5874                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x0B;
  5875  002A06  0E0B               	movlw	11
  5876  002A08  6ED7               	movwf	215,c	;volatile
  5877                           
  5878                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0xDB;
  5879  002A0A  0EDB               	movlw	219
  5880  002A0C  6ED6               	movwf	214,c	;volatile
  5881  002A0E                     
  5882                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  5883  002A0E  50D6               	movf	214,w,c	;volatile
  5884  002A10  CFD7 F009          	movff	4055,??_TMR0_Initialize	;volatile
  5885  002A14  6A0A               	clrf	(??_TMR0_Initialize+1)^0,c
  5886  002A16  C009  F00A         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  5887  002A1A  6A09               	clrf	??_TMR0_Initialize^0,c
  5888  002A1C  1009               	iorwf	??_TMR0_Initialize^0,w,c
  5889  002A1E  0100               	movlb	0	; () banked
  5890  002A20  6FEA               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  5891  002A22  500A               	movf	(??_TMR0_Initialize+1)^0,w,c
  5892  002A24  6FEB               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  5893  002A26                     
  5894                           ; BSR set to: 0
  5895                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  5896  002A26  94F2               	bcf	242,2,c	;volatile
  5897  002A28                     
  5898                           ; BSR set to: 0
  5899                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  5900  002A28  8AF2               	bsf	242,5,c	;volatile
  5901  002A2A                     
  5902                           ; BSR set to: 0
  5903                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5904  002A2A  0EB0               	movlw	low _TMR0_DefaultInterruptHandler
  5905  002A2C  6E07               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  5906  002A2E  0E2E               	movlw	high _TMR0_DefaultInterruptHandler
  5907  002A30  6E08               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  5908  002A32  EC39  F017         	call	_TMR0_SetInterruptHandler	;wreg free
  5909  002A36                     
  5910                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x93;
  5911  002A36  0E93               	movlw	147
  5912  002A38  6ED5               	movwf	213,c	;volatile
  5913  002A3A  0012               	return		;funcret
  5914  002A3C                     __end_of_TMR0_Initialize:
  5915                           	callstack 0
  5916                           
  5917 ;; *************** function _TMR0_SetInterruptHandler *****************
  5918 ;; Defined at:
  5919 ;;		line 171 in file "mcc_generated_files/tmr0.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  5922 ;;		 -> Minute(1), TMR0_DefaultInterruptHandler(1), 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;		None
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  1    wreg      void 
  5927 ;; Registers used:
  5928 ;;		wreg, status,2, status,0
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5937 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5938 ;;Total ram usage:        2 bytes
  5939 ;; Hardware stack levels used:    1
  5940 ;; Hardware stack levels required when called:    6
  5941 ;; This function calls:
  5942 ;;		Nothing
  5943 ;; This function is called by:
  5944 ;;		_TMR0_Initialize
  5945 ;;		_main
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           	psect	text40
  5950  002E72                     __ptext40:
  5951                           	callstack 0
  5952  002E72                     _TMR0_SetInterruptHandler:
  5953                           	callstack 24
  5954  002E72                     
  5955                           ;mcc_generated_files/tmr0.c: 172:     TMR0_InterruptHandler = InterruptHandler;
  5956  002E72  C007  F0EC         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  5957  002E76  C008  F0ED         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  5958  002E7A  0012               	return		;funcret
  5959  002E7C                     __end_of_TMR0_SetInterruptHandler:
  5960                           	callstack 0
  5961                           
  5962 ;; *************** function _PIN_MANAGER_Initialize *****************
  5963 ;; Defined at:
  5964 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;		None
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  1    wreg      void 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5982 ;;Total ram usage:        0 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    6
  5985 ;; This function calls:
  5986 ;;		Nothing
  5987 ;; This function is called by:
  5988 ;;		_SYSTEM_Initialize
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	text41
  5993  002C1E                     __ptext41:
  5994                           	callstack 0
  5995  002C1E                     _PIN_MANAGER_Initialize:
  5996                           	callstack 23
  5997  002C1E                     
  5998                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5999  002C1E  0E00               	movlw	0
  6000  002C20  6E89               	movwf	137,c	;volatile
  6001                           
  6002                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x07;
  6003  002C22  0E07               	movlw	7
  6004  002C24  6E8A               	movwf	138,c	;volatile
  6005                           
  6006                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  6007  002C26  0E00               	movlw	0
  6008  002C28  6E8B               	movwf	139,c	;volatile
  6009                           
  6010                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xEF;
  6011  002C2A  0EEF               	movlw	239
  6012  002C2C  6E92               	movwf	146,c	;volatile
  6013                           
  6014                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x98;
  6015  002C2E  0E98               	movlw	152
  6016  002C30  6E93               	movwf	147,c	;volatile
  6017                           
  6018                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  6019  002C32  0EBF               	movlw	191
  6020  002C34  6E94               	movwf	148,c	;volatile
  6021                           
  6022                           ;mcc_generated_files/pin_manager.c: 74:     ANCON0 = 0x1F;
  6023  002C36  0E1F               	movlw	31
  6024  002C38  010F               	movlb	15	; () banked
  6025  002C3A  6F5D               	movwf	93,b	;volatile
  6026                           
  6027                           ;mcc_generated_files/pin_manager.c: 75:     ANCON1 = 0x05;
  6028  002C3C  0E05               	movlw	5
  6029  002C3E  6F5C               	movwf	92,b	;volatile
  6030                           
  6031                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
  6032  002C40  0E00               	movlw	0
  6033  002C42  6F5B               	movwf	91,b	;volatile
  6034  002C44                     
  6035                           ; BSR set to: 15
  6036                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
  6037  002C44  8EF1               	bsf	241,7,c	;volatile
  6038  002C46                     
  6039                           ; BSR set to: 15
  6040  002C46  0012               	return		;funcret
  6041  002C48                     __end_of_PIN_MANAGER_Initialize:
  6042                           	callstack 0
  6043                           
  6044 ;; *************** function _OSCILLATOR_Initialize *****************
  6045 ;; Defined at:
  6046 ;;		line 64 in file "mcc_generated_files/mcc.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;		None
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;		None
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  1    wreg      void 
  6053 ;; Registers used:
  6054 ;;		wreg, status,2
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6064 ;;Total ram usage:        0 bytes
  6065 ;; Hardware stack levels used:    1
  6066 ;; Hardware stack levels required when called:    6
  6067 ;; This function calls:
  6068 ;;		Nothing
  6069 ;; This function is called by:
  6070 ;;		_SYSTEM_Initialize
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           	psect	text42
  6075  002E1E                     __ptext42:
  6076                           	callstack 0
  6077  002E1E                     _OSCILLATOR_Initialize:
  6078                           	callstack 23
  6079  002E1E                     
  6080                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x60;
  6081  002E1E  0E60               	movlw	96
  6082  002E20  6ED3               	movwf	211,c	;volatile
  6083                           
  6084                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x00;
  6085  002E22  0E00               	movlw	0
  6086  002E24  6ED2               	movwf	210,c	;volatile
  6087                           
  6088                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  6089  002E26  0E00               	movlw	0
  6090  002E28  6E9B               	movwf	155,c	;volatile
  6091                           
  6092                           ;mcc_generated_files/mcc.c: 73:     REFOCON = 0x00;
  6093  002E2A  0E00               	movlw	0
  6094  002E2C  6E9A               	movwf	154,c	;volatile
  6095  002E2E  0012               	return		;funcret
  6096  002E30                     __end_of_OSCILLATOR_Initialize:
  6097                           	callstack 0
  6098                           
  6099 ;; *************** function _INTERRUPT_Initialize *****************
  6100 ;; Defined at:
  6101 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;		None
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;		None
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  1    wreg      void 
  6108 ;; Registers used:
  6109 ;;		None
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6119 ;;Total ram usage:        0 bytes
  6120 ;; Hardware stack levels used:    1
  6121 ;; Hardware stack levels required when called:    6
  6122 ;; This function calls:
  6123 ;;		Nothing
  6124 ;; This function is called by:
  6125 ;;		_SYSTEM_Initialize
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           	psect	text43
  6130  002EA0                     __ptext43:
  6131                           	callstack 0
  6132  002EA0                     _INTERRUPT_Initialize:
  6133                           	callstack 23
  6134  002EA0                     
  6135                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  6136  002EA0  9ED0               	bcf	208,7,c	;volatile
  6137  002EA2  0012               	return		;funcret
  6138  002EA4                     __end_of_INTERRUPT_Initialize:
  6139                           	callstack 0
  6140                           
  6141 ;; *************** function _EUSART1_Initialize *****************
  6142 ;; Defined at:
  6143 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;		None
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;		None
  6148 ;; Return value:  Size  Location     Type
  6149 ;;                  1    wreg      void 
  6150 ;; Registers used:
  6151 ;;		wreg, status,2, status,0, cstack
  6152 ;; Tracked objects:
  6153 ;;		On entry : 0/0
  6154 ;;		On exit  : 0/0
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6161 ;;Total ram usage:        0 bytes
  6162 ;; Hardware stack levels used:    1
  6163 ;; Hardware stack levels required when called:    7
  6164 ;; This function calls:
  6165 ;;		_EUSART1_SetErrorHandler
  6166 ;;		_EUSART1_SetFramingErrorHandler
  6167 ;;		_EUSART1_SetOverrunErrorHandler
  6168 ;; This function is called by:
  6169 ;;		_SYSTEM_Initialize
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           	psect	text44
  6174  0027F8                     __ptext44:
  6175                           	callstack 0
  6176  0027F8                     _EUSART1_Initialize:
  6177                           	callstack 22
  6178  0027F8                     
  6179                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  6180  0027F8  0E08               	movlw	8
  6181  0027FA  6EA7               	movwf	167,c	;volatile
  6182                           
  6183                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  6184  0027FC  0E90               	movlw	144
  6185  0027FE  6EAB               	movwf	171,c	;volatile
  6186                           
  6187                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  6188  002800  0E24               	movlw	36
  6189  002802  6EAC               	movwf	172,c	;volatile
  6190                           
  6191                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x08;
  6192  002804  0E08               	movlw	8
  6193  002806  6EAF               	movwf	175,c	;volatile
  6194                           
  6195                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x02;
  6196  002808  0E02               	movlw	2
  6197  00280A  6E7D               	movwf	125,c	;volatile
  6198  00280C                     
  6199                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  6200  00280C  0E00               	movlw	0
  6201  00280E  6E07               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  6202  002810  0E00               	movlw	0
  6203  002812  6E08               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  6204  002814  EC43  F017         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  6205  002818                     
  6206                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  6207  002818  0E00               	movlw	0
  6208  00281A  6E07               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  6209  00281C  0E00               	movlw	0
  6210  00281E  6E08               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6211  002820  EC3E  F017         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  6212  002824                     
  6213                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  6214  002824  0E00               	movlw	0
  6215  002826  6E07               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  6216  002828  0E00               	movlw	0
  6217  00282A  6E08               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  6218  00282C  EC48  F017         	call	_EUSART1_SetErrorHandler	;wreg free
  6219  002830                     
  6220                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  6221  002830  0E00               	movlw	0
  6222  002832  0100               	movlb	0	; () banked
  6223  002834  6F9C               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6224  002836                     
  6225                           ; BSR set to: 0
  6226  002836  0012               	return		;funcret
  6227  002838                     __end_of_EUSART1_Initialize:
  6228                           	callstack 0
  6229                           
  6230 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6231 ;; Defined at:
  6232 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  6235 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;		None
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  1    wreg      void 
  6240 ;; Registers used:
  6241 ;;		wreg, status,2, status,0
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6251 ;;Total ram usage:        2 bytes
  6252 ;; Hardware stack levels used:    1
  6253 ;; Hardware stack levels required when called:    6
  6254 ;; This function calls:
  6255 ;;		Nothing
  6256 ;; This function is called by:
  6257 ;;		_EUSART1_Initialize
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           	psect	text45
  6262  002E7C                     __ptext45:
  6263                           	callstack 0
  6264  002E7C                     _EUSART1_SetOverrunErrorHandler:
  6265                           	callstack 22
  6266  002E7C                     
  6267                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  6268  002E7C  C007  F0F4         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  6269  002E80  C008  F0F5         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  6270  002E84  0012               	return		;funcret
  6271  002E86                     __end_of_EUSART1_SetOverrunErrorHandler:
  6272                           	callstack 0
  6273                           
  6274 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6275 ;; Defined at:
  6276 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  6279 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;		None
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  1    wreg      void 
  6284 ;; Registers used:
  6285 ;;		wreg, status,2, status,0
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6295 ;;Total ram usage:        2 bytes
  6296 ;; Hardware stack levels used:    1
  6297 ;; Hardware stack levels required when called:    6
  6298 ;; This function calls:
  6299 ;;		Nothing
  6300 ;; This function is called by:
  6301 ;;		_EUSART1_Initialize
  6302 ;; This function uses a non-reentrant model
  6303 ;;
  6304                           
  6305                           	psect	text46
  6306  002E86                     __ptext46:
  6307                           	callstack 0
  6308  002E86                     _EUSART1_SetFramingErrorHandler:
  6309                           	callstack 22
  6310  002E86                     
  6311                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  6312  002E86  C007  F0F6         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  6313  002E8A  C008  F0F7         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  6314  002E8E  0012               	return		;funcret
  6315  002E90                     __end_of_EUSART1_SetFramingErrorHandler:
  6316                           	callstack 0
  6317                           
  6318 ;; *************** function _EUSART1_SetErrorHandler *****************
  6319 ;; Defined at:
  6320 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  6323 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  1    wreg      void 
  6328 ;; Registers used:
  6329 ;;		wreg, status,2, status,0
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6338 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6339 ;;Total ram usage:        2 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:    6
  6342 ;; This function calls:
  6343 ;;		Nothing
  6344 ;; This function is called by:
  6345 ;;		_EUSART1_Initialize
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text47
  6350  002E90                     __ptext47:
  6351                           	callstack 0
  6352  002E90                     _EUSART1_SetErrorHandler:
  6353                           	callstack 22
  6354  002E90                     
  6355                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  6356  002E90  C007  F0F2         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  6357  002E94  C008  F0F3         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  6358  002E98  0012               	return		;funcret
  6359  002E9A                     __end_of_EUSART1_SetErrorHandler:
  6360                           	callstack 0
  6361                           
  6362 ;; *************** function _INTERRUPT_InterruptManager *****************
  6363 ;; Defined at:
  6364 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;		None
  6367 ;; Auto vars:     Size  Location     Type
  6368 ;;		None
  6369 ;; Return value:  Size  Location     Type
  6370 ;;                  1    wreg      void 
  6371 ;; Registers used:
  6372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6373 ;; Tracked objects:
  6374 ;;		On entry : 0/0
  6375 ;;		On exit  : 0/0
  6376 ;;		Unchanged: 0/0
  6377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6380 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6381 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6382 ;;Total ram usage:        4 bytes
  6383 ;; Hardware stack levels used:    1
  6384 ;; Hardware stack levels required when called:    5
  6385 ;; This function calls:
  6386 ;;		_TMR0_ISR
  6387 ;;		_TMR1_ISR
  6388 ;;		_TMR2_ISR
  6389 ;;		_TMR3_ISR
  6390 ;;		_TMR4_ISR
  6391 ;; This function is called by:
  6392 ;;		Interrupt level 2
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396                           	psect	intcode
  6397  000008                     __pintcode:
  6398                           	callstack 0
  6399  000008                     _INTERRUPT_InterruptManager:
  6400                           	callstack 13
  6401                           
  6402                           ;incstack = 0
  6403  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6404  00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
  6405  00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6406  000012  CFD9 F005          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6407  000016  CFDA F006          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6408  00001A                     
  6409                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  6410  00001A  AAF2               	btfss	242,5,c	;volatile
  6411  00001C  EF12  F000         	goto	i2u334_41
  6412  000020  EF14  F000         	goto	i2u334_40
  6413  000024                     i2u334_41:
  6414  000024  EF1D  F000         	goto	i2l4024
  6415  000028                     i2u334_40:
  6416  000028  A4F2               	btfss	242,2,c	;volatile
  6417  00002A  EF19  F000         	goto	i2u335_41
  6418  00002E  EF1B  F000         	goto	i2u335_40
  6419  000032                     i2u335_41:
  6420  000032  EF1D  F000         	goto	i2l4024
  6421  000036                     i2u335_40:
  6422  000036                     
  6423                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  6424  000036  EC39  F015         	call	_TMR0_ISR	;wreg free
  6425  00003A                     i2l4024:
  6426                           
  6427                           ;mcc_generated_files/interrupt_manager.c: 65:     if(INTCONbits.PEIE == 1)
  6428  00003A  ACF2               	btfss	242,6,c	;volatile
  6429  00003C  EF22  F000         	goto	i2u336_41
  6430  000040  EF24  F000         	goto	i2u336_40
  6431  000044                     i2u336_41:
  6432  000044  EF64  F000         	goto	i2l438
  6433  000048                     i2u336_40:
  6434  000048                     
  6435                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  6436  000048  A09D               	btfss	157,0,c	;volatile
  6437  00004A  EF29  F000         	goto	i2u337_41
  6438  00004E  EF2B  F000         	goto	i2u337_40
  6439  000052                     i2u337_41:
  6440  000052  EF34  F000         	goto	i2l4032
  6441  000056                     i2u337_40:
  6442  000056  A09E               	btfss	158,0,c	;volatile
  6443  000058  EF30  F000         	goto	i2u338_41
  6444  00005C  EF32  F000         	goto	i2u338_40
  6445  000060                     i2u338_41:
  6446  000060  EF34  F000         	goto	i2l4032
  6447  000064                     i2u338_40:
  6448  000064                     
  6449                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR1_ISR();
  6450  000064  EC91  F014         	call	_TMR1_ISR	;wreg free
  6451  000068                     i2l4032:
  6452                           
  6453                           ;mcc_generated_files/interrupt_manager.c: 71:         if(PIE1bits.TMR2IE == 1 && PIR1bit
      +                          s.TMR2IF == 1)
  6454  000068  A29D               	btfss	157,1,c	;volatile
  6455  00006A  EF39  F000         	goto	i2u339_41
  6456  00006E  EF3B  F000         	goto	i2u339_40
  6457  000072                     i2u339_41:
  6458  000072  EF44  F000         	goto	i2l4038
  6459  000076                     i2u339_40:
  6460  000076  A29E               	btfss	158,1,c	;volatile
  6461  000078  EF40  F000         	goto	i2u340_41
  6462  00007C  EF42  F000         	goto	i2u340_40
  6463  000080                     i2u340_41:
  6464  000080  EF44  F000         	goto	i2l4038
  6465  000084                     i2u340_40:
  6466  000084                     
  6467                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             TMR2_ISR();
  6468  000084  ECE3  F015         	call	_TMR2_ISR	;wreg free
  6469  000088                     i2l4038:
  6470                           
  6471                           ;mcc_generated_files/interrupt_manager.c: 75:         if(PIE2bits.TMR3IE == 1 && PIR2bit
      +                          s.TMR3IF == 1)
  6472  000088  A2A0               	btfss	160,1,c	;volatile
  6473  00008A  EF49  F000         	goto	i2u341_41
  6474  00008E  EF4B  F000         	goto	i2u341_40
  6475  000092                     i2u341_41:
  6476  000092  EF54  F000         	goto	i2l4044
  6477  000096                     i2u341_40:
  6478  000096  A2A1               	btfss	161,1,c	;volatile
  6479  000098  EF50  F000         	goto	i2u342_41
  6480  00009C  EF52  F000         	goto	i2u342_40
  6481  0000A0                     i2u342_41:
  6482  0000A0  EF54  F000         	goto	i2l4044
  6483  0000A4                     i2u342_40:
  6484  0000A4                     
  6485                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR3_ISR();
  6486  0000A4  EC74  F014         	call	_TMR3_ISR	;wreg free
  6487  0000A8                     i2l4044:
  6488                           
  6489                           ;mcc_generated_files/interrupt_manager.c: 79:         if(PIE4bits.TMR4IE == 1 && PIR4bit
      +                          s.TMR4IF == 1)
  6490  0000A8  AEB6               	btfss	182,7,c	;volatile
  6491  0000AA  EF59  F000         	goto	i2u343_41
  6492  0000AE  EF5B  F000         	goto	i2u343_40
  6493  0000B2                     i2u343_41:
  6494  0000B2  EF64  F000         	goto	i2l438
  6495  0000B6                     i2u343_40:
  6496  0000B6  AEB7               	btfss	183,7,c	;volatile
  6497  0000B8  EF60  F000         	goto	i2u344_41
  6498  0000BC  EF62  F000         	goto	i2u344_40
  6499  0000C0                     i2u344_41:
  6500  0000C0  EF64  F000         	goto	i2l438
  6501  0000C4                     i2u344_40:
  6502  0000C4                     
  6503                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR4_ISR();
  6504  0000C4  ECCC  F015         	call	_TMR4_ISR	;wreg free
  6505  0000C8                     i2l438:
  6506  0000C8  C006  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  6507  0000CC  C005  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  6508  0000D0  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6509  0000D4  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6510  0000D8  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6511  0000DA  0011               	retfie		f
  6512  0000DC                     __end_of_INTERRUPT_InterruptManager:
  6513                           	callstack 0
  6514                           
  6515 ;; *************** function _TMR4_ISR *****************
  6516 ;; Defined at:
  6517 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;		None
  6520 ;; Auto vars:     Size  Location     Type
  6521 ;;		None
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  1    wreg      void 
  6524 ;; Registers used:
  6525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6526 ;; Tracked objects:
  6527 ;;		On entry : 0/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6535 ;;Total ram usage:        0 bytes
  6536 ;; Hardware stack levels used:    1
  6537 ;; Hardware stack levels required when called:    4
  6538 ;; This function calls:
  6539 ;;		_TMR4_CallBack
  6540 ;; This function is called by:
  6541 ;;		_INTERRUPT_InterruptManager
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           	psect	text49
  6546  002B98                     __ptext49:
  6547                           	callstack 0
  6548  002B98                     _TMR4_ISR:
  6549                           	callstack 13
  6550  002B98                     
  6551                           ;mcc_generated_files/tmr4.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 124:     PIR4bits.TMR4IF = 0;
  6552  002B98  9EB7               	bcf	183,7,c	;volatile
  6553  002B9A                     
  6554                           ;mcc_generated_files/tmr4.c: 127:     if (++CountCallBack >= 500)
  6555  002B9A  0100               	movlb	0	; () banked
  6556  002B9C  4B91               	infsnz	TMR4_ISR@CountCallBack& (0+255),f,b	;volatile
  6557  002B9E  2B92               	incf	(TMR4_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  6558  002BA0  0EF4               	movlw	244
  6559  002BA2  5D91               	subwf	TMR4_ISR@CountCallBack& (0+255),w,b	;volatile
  6560  002BA4  0E01               	movlw	1
  6561  002BA6  5992               	subwfb	(TMR4_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  6562  002BA8  A0D8               	btfss	status,0,c
  6563  002BAA  EFD9  F015         	goto	i2u303_41
  6564  002BAE  EFDB  F015         	goto	i2u303_40
  6565  002BB2                     i2u303_41:
  6566  002BB2  EFE2  F015         	goto	i2l482
  6567  002BB6                     i2u303_40:
  6568  002BB6                     
  6569                           ; BSR set to: 0
  6570                           ;mcc_generated_files/tmr4.c: 128:     {;mcc_generated_files/tmr4.c: 130:         TMR4_Ca
      +                          llBack();
  6571  002BB6  EC54  F015         	call	_TMR4_CallBack	;wreg free
  6572  002BBA                     
  6573                           ;mcc_generated_files/tmr4.c: 133:         CountCallBack = 0;
  6574  002BBA  0E00               	movlw	0
  6575  002BBC  0100               	movlb	0	; () banked
  6576  002BBE  6F92               	movwf	(TMR4_ISR@CountCallBack+1)& (0+255),b	;volatile
  6577  002BC0  0E00               	movlw	0
  6578  002BC2  6F91               	movwf	TMR4_ISR@CountCallBack& (0+255),b	;volatile
  6579  002BC4                     i2l482:
  6580                           
  6581                           ; BSR set to: 0
  6582  002BC4  0012               	return		;funcret
  6583  002BC6                     __end_of_TMR4_ISR:
  6584                           	callstack 0
  6585                           
  6586 ;; *************** function _TMR4_CallBack *****************
  6587 ;; Defined at:
  6588 ;;		line 137 in file "mcc_generated_files/tmr4.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;		None
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;		None
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  1    wreg      void 
  6595 ;; Registers used:
  6596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6606 ;;Total ram usage:        0 bytes
  6607 ;; Hardware stack levels used:    1
  6608 ;; Hardware stack levels required when called:    3
  6609 ;; This function calls:
  6610 ;;		Absolute function
  6611 ;;		_TMR4_DefaultInterruptHandler
  6612 ;;		_connect
  6613 ;; This function is called by:
  6614 ;;		_TMR4_ISR
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           
  6618                           	psect	text50
  6619  002AA8                     __ptext50:
  6620                           	callstack 0
  6621  002AA8                     _TMR4_CallBack:
  6622                           	callstack 13
  6623  002AA8                     
  6624                           ;mcc_generated_files/tmr4.c: 141:     if(TMR4_InterruptHandler)
  6625  002AA8  0100               	movlb	0	; () banked
  6626  002AAA  51E2               	movf	_TMR4_InterruptHandler& (0+255),w,b
  6627  002AAC  11E3               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
  6628  002AAE  B4D8               	btfsc	status,2,c
  6629  002AB0  EF5C  F015         	goto	i2u294_41
  6630  002AB4  EF5E  F015         	goto	i2u294_40
  6631  002AB8                     i2u294_41:
  6632  002AB8  EF6B  F015         	goto	i2l486
  6633  002ABC                     i2u294_40:
  6634  002ABC                     
  6635                           ; BSR set to: 0
  6636                           ;mcc_generated_files/tmr4.c: 142:     {;mcc_generated_files/tmr4.c: 143:         TMR4_In
      +                          terruptHandler();
  6637  002ABC  D802               	call	i2u295_48
  6638  002ABE  EF6B  F015         	goto	i2u295_49
  6639  002AC2                     i2u295_48:
  6640  002AC2  0005               	push	
  6641  002AC4  6EFA               	movwf	pclath,c
  6642  002AC6  51E2               	movf	_TMR4_InterruptHandler& (0+255),w,b
  6643  002AC8  6EFD               	movwf	tosl,c
  6644  002ACA  51E3               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
  6645  002ACC  6EFE               	movwf	tosh,c
  6646  002ACE  50F8               	movf	tblptru,w,c
  6647  002AD0  6EFF               	movwf	tosu,c
  6648  002AD2  50FA               	movf	pclath,w,c
  6649  002AD4  0012               	return		;indir
  6650  002AD6                     i2u295_49:
  6651  002AD6                     i2l486:
  6652  002AD6  0012               	return		;funcret
  6653  002AD8                     __end_of_TMR4_CallBack:
  6654                           	callstack 0
  6655                           
  6656 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  6657 ;; Defined at:
  6658 ;;		line 151 in file "mcc_generated_files/tmr4.c"
  6659 ;; Parameters:    Size  Location     Type
  6660 ;;		None
  6661 ;; Auto vars:     Size  Location     Type
  6662 ;;		None
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  1    wreg      void 
  6665 ;; Registers used:
  6666 ;;		None
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6676 ;;Total ram usage:        0 bytes
  6677 ;; Hardware stack levels used:    1
  6678 ;; This function calls:
  6679 ;;		Nothing
  6680 ;; This function is called by:
  6681 ;;		_TMR4_Initialize
  6682 ;;		_TMR4_CallBack
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           
  6686                           	psect	text51
  6687  002EA8                     __ptext51:
  6688                           	callstack 0
  6689  002EA8                     _TMR4_DefaultInterruptHandler:
  6690                           	callstack 15
  6691  002EA8  0012               	return		;funcret
  6692  002EAA                     __end_of_TMR4_DefaultInterruptHandler:
  6693                           	callstack 0
  6694                           
  6695 ;; *************** function _connect *****************
  6696 ;; Defined at:
  6697 ;;		line 241 in file "main.c"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;		None
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;		None
  6702 ;; Return value:  Size  Location     Type
  6703 ;;                  1    wreg      void 
  6704 ;; Registers used:
  6705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6706 ;; Tracked objects:
  6707 ;;		On entry : 0/0
  6708 ;;		On exit  : 0/0
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6715 ;;Total ram usage:        0 bytes
  6716 ;; Hardware stack levels used:    1
  6717 ;; Hardware stack levels required when called:    2
  6718 ;; This function calls:
  6719 ;;		_TMR1_WriteTimer
  6720 ;;		i2_lecture
  6721 ;; This function is called by:
  6722 ;;		_main
  6723 ;;		_TMR4_CallBack
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           	psect	text52
  6728  0019E2                     __ptext52:
  6729                           	callstack 0
  6730  0019E2                     _connect:
  6731                           	callstack 13
  6732  0019E2                     
  6733                           ;main.c: 243:     if (c >= 1 && EtatN != null && EtatN != Alarme && EtatN != Eteint) {
  6734  0019E2  0100               	movlb	0	; () banked
  6735  0019E4  BF7C               	btfsc	(_c+1)& (0+255),7,b
  6736  0019E6  EFFD  F00C         	goto	i2u266_41
  6737  0019EA  517C               	movf	(_c+1)& (0+255),w,b
  6738  0019EC  E108               	bnz	i2u266_40
  6739  0019EE  057B               	decf	_c& (0+255),w,b
  6740  0019F0  A0D8               	btfss	status,0,c
  6741  0019F2  EFFD  F00C         	goto	i2u266_41
  6742  0019F6  EFFF  F00C         	goto	i2u266_40
  6743  0019FA                     i2u266_41:
  6744  0019FA  EF3F  F00D         	goto	i2l3614
  6745  0019FE                     i2u266_40:
  6746  0019FE                     
  6747                           ; BSR set to: 0
  6748  0019FE  0E05               	movlw	5
  6749  001A00  1858               	xorwf	_EtatN^0,w,c
  6750  001A02  B4D8               	btfsc	status,2,c
  6751  001A04  EF06  F00D         	goto	i2u267_41
  6752  001A08  EF08  F00D         	goto	i2u267_40
  6753  001A0C                     i2u267_41:
  6754  001A0C  EF3F  F00D         	goto	i2l3614
  6755  001A10                     i2u267_40:
  6756  001A10                     
  6757                           ; BSR set to: 0
  6758  001A10  0E04               	movlw	4
  6759  001A12  1858               	xorwf	_EtatN^0,w,c
  6760  001A14  B4D8               	btfsc	status,2,c
  6761  001A16  EF0F  F00D         	goto	i2u268_41
  6762  001A1A  EF11  F00D         	goto	i2u268_40
  6763  001A1E                     i2u268_41:
  6764  001A1E  EF3F  F00D         	goto	i2l3614
  6765  001A22                     i2u268_40:
  6766  001A22                     
  6767                           ; BSR set to: 0
  6768  001A22  0458               	decf	_EtatN^0,w,c
  6769  001A24  B4D8               	btfsc	status,2,c
  6770  001A26  EF17  F00D         	goto	i2u269_41
  6771  001A2A  EF19  F00D         	goto	i2u269_40
  6772  001A2E                     i2u269_41:
  6773  001A2E  EF3F  F00D         	goto	i2l3614
  6774  001A32                     i2u269_40:
  6775  001A32                     
  6776                           ; BSR set to: 0
  6777                           ;main.c: 244:         if(EtatN == Armed ){
  6778  001A32  0E02               	movlw	2
  6779  001A34  1858               	xorwf	_EtatN^0,w,c
  6780  001A36  A4D8               	btfss	status,2,c
  6781  001A38  EF20  F00D         	goto	i2u270_41
  6782  001A3C  EF22  F00D         	goto	i2u270_40
  6783  001A40                     i2u270_41:
  6784  001A40  EF2F  F00D         	goto	i2l3610
  6785  001A44                     i2u270_40:
  6786  001A44                     
  6787                           ; BSR set to: 0
  6788                           ;main.c: 245:             EtatN = Perdu;
  6789  001A44  0E03               	movlw	3
  6790  001A46  6E58               	movwf	_EtatN^0,c
  6791                           
  6792                           ;main.c: 246:             perte = Oui;
  6793  001A48  0E00               	movlw	0
  6794  001A4A  6FF9               	movwf	_perte& (0+255),b
  6795  001A4C                     
  6796                           ; BSR set to: 0
  6797                           ;main.c: 247:             TMR1_WriteTimer(0);
  6798  001A4C  0E00               	movlw	0
  6799  001A4E  6E02               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  6800  001A50  0E00               	movlw	0
  6801  001A52  6E01               	movwf	TMR1_WriteTimer@timerVal^0,c
  6802  001A54  EC75  F016         	call	_TMR1_WriteTimer	;wreg free
  6803  001A58  8A8A               	bsf	138,5,c	;volatile
  6804  001A5A  EF3A  F00D         	goto	i2l713
  6805  001A5E                     i2l3610:
  6806                           
  6807                           ; BSR set to: 0
  6808  001A5E  0E03               	movlw	3
  6809  001A60  1858               	xorwf	_EtatN^0,w,c
  6810  001A62  B4D8               	btfsc	status,2,c
  6811  001A64  EF36  F00D         	goto	i2u271_41
  6812  001A68  EF38  F00D         	goto	i2u271_40
  6813  001A6C                     i2u271_41:
  6814  001A6C  EF3A  F00D         	goto	i2l713
  6815  001A70                     i2u271_40:
  6816  001A70                     
  6817                           ; BSR set to: 0
  6818                           ;main.c: 250:             EtatN = Eteint;
  6819  001A70  0E01               	movlw	1
  6820  001A72  6E58               	movwf	_EtatN^0,c
  6821  001A74                     i2l713:
  6822                           
  6823                           ;main.c: 252:         c = 0;
  6824  001A74  0E00               	movlw	0
  6825  001A76  0100               	movlb	0	; () banked
  6826  001A78  6F7C               	movwf	(_c+1)& (0+255),b
  6827  001A7A  0E00               	movlw	0
  6828  001A7C  6F7B               	movwf	_c& (0+255),b
  6829  001A7E                     i2l3614:
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;main.c: 254:     if(lecture() == 1 ){
  6833  001A7E  EC35  F011         	call	i2_lecture	;wreg free
  6834  001A82  06E8               	decf	wreg,f,c
  6835  001A84  A4D8               	btfss	status,2,c
  6836  001A86  EF47  F00D         	goto	i2u272_41
  6837  001A8A  EF49  F00D         	goto	i2u272_40
  6838  001A8E                     i2u272_41:
  6839  001A8E  EF87  F00D         	goto	i2l3632
  6840  001A92                     i2u272_40:
  6841  001A92                     
  6842                           ;main.c: 255:         if(EtatN != Perdu && EtatN != null && EtatN != Alarme){
  6843  001A92  0E03               	movlw	3
  6844  001A94  1858               	xorwf	_EtatN^0,w,c
  6845  001A96  B4D8               	btfsc	status,2,c
  6846  001A98  EF50  F00D         	goto	i2u273_41
  6847  001A9C  EF52  F00D         	goto	i2u273_40
  6848  001AA0                     i2u273_41:
  6849  001AA0  EF68  F00D         	goto	i2l3624
  6850  001AA4                     i2u273_40:
  6851  001AA4  0E05               	movlw	5
  6852  001AA6  1858               	xorwf	_EtatN^0,w,c
  6853  001AA8  B4D8               	btfsc	status,2,c
  6854  001AAA  EF59  F00D         	goto	i2u274_41
  6855  001AAE  EF5B  F00D         	goto	i2u274_40
  6856  001AB2                     i2u274_41:
  6857  001AB2  EF68  F00D         	goto	i2l3624
  6858  001AB6                     i2u274_40:
  6859  001AB6  0E04               	movlw	4
  6860  001AB8  1858               	xorwf	_EtatN^0,w,c
  6861  001ABA  B4D8               	btfsc	status,2,c
  6862  001ABC  EF62  F00D         	goto	i2u275_41
  6863  001AC0  EF64  F00D         	goto	i2u275_40
  6864  001AC4                     i2u275_41:
  6865  001AC4  EF68  F00D         	goto	i2l3624
  6866  001AC8                     i2u275_40:
  6867  001AC8                     
  6868                           ;main.c: 256:             EtatN = Reception;
  6869  001AC8  0E00               	movlw	0
  6870  001ACA  6E58               	movwf	_EtatN^0,c
  6871                           
  6872                           ;main.c: 257:         }else if (EtatN != null && EtatN != Alarme && EtatN != Armed){
  6873  001ACC  EF87  F00D         	goto	i2l3632
  6874  001AD0                     i2l3624:
  6875  001AD0  0E05               	movlw	5
  6876  001AD2  1858               	xorwf	_EtatN^0,w,c
  6877  001AD4  B4D8               	btfsc	status,2,c
  6878  001AD6  EF6F  F00D         	goto	i2u276_41
  6879  001ADA  EF71  F00D         	goto	i2u276_40
  6880  001ADE                     i2u276_41:
  6881  001ADE  EF87  F00D         	goto	i2l3632
  6882  001AE2                     i2u276_40:
  6883  001AE2  0E04               	movlw	4
  6884  001AE4  1858               	xorwf	_EtatN^0,w,c
  6885  001AE6  B4D8               	btfsc	status,2,c
  6886  001AE8  EF78  F00D         	goto	i2u277_41
  6887  001AEC  EF7A  F00D         	goto	i2u277_40
  6888  001AF0                     i2u277_41:
  6889  001AF0  EF87  F00D         	goto	i2l3632
  6890  001AF4                     i2u277_40:
  6891  001AF4  0E02               	movlw	2
  6892  001AF6  1858               	xorwf	_EtatN^0,w,c
  6893  001AF8  B4D8               	btfsc	status,2,c
  6894  001AFA  EF81  F00D         	goto	i2u278_41
  6895  001AFE  EF83  F00D         	goto	i2u278_40
  6896  001B02                     i2u278_41:
  6897  001B02  EF87  F00D         	goto	i2l3632
  6898  001B06                     i2u278_40:
  6899  001B06  828A               	bsf	138,1,c	;volatile
  6900  001B08  848A               	bsf	138,2,c	;volatile
  6901  001B0A                     
  6902                           ;main.c: 260:             EtatN = Armed;
  6903  001B0A  0E02               	movlw	2
  6904  001B0C  6E58               	movwf	_EtatN^0,c
  6905  001B0E                     i2l3632:
  6906                           
  6907                           ;main.c: 264:     if(c >= 1 && EtatE != rien && EtatE != EteintE){
  6908  001B0E  0100               	movlb	0	; () banked
  6909  001B10  BF7C               	btfsc	(_c+1)& (0+255),7,b
  6910  001B12  EF93  F00D         	goto	i2u279_41
  6911  001B16  517C               	movf	(_c+1)& (0+255),w,b
  6912  001B18  E108               	bnz	i2u279_40
  6913  001B1A  057B               	decf	_c& (0+255),w,b
  6914  001B1C  A0D8               	btfss	status,0,c
  6915  001B1E  EF93  F00D         	goto	i2u279_41
  6916  001B22  EF95  F00D         	goto	i2u279_40
  6917  001B26                     i2u279_41:
  6918  001B26  EFAC  F00D         	goto	i2l3640
  6919  001B2A                     i2u279_40:
  6920  001B2A                     
  6921                           ; BSR set to: 0
  6922  001B2A  0E03               	movlw	3
  6923  001B2C  1857               	xorwf	_EtatE^0,w,c
  6924  001B2E  B4D8               	btfsc	status,2,c
  6925  001B30  EF9C  F00D         	goto	i2u280_41
  6926  001B34  EF9E  F00D         	goto	i2u280_40
  6927  001B38                     i2u280_41:
  6928  001B38  EFAC  F00D         	goto	i2l3640
  6929  001B3C                     i2u280_40:
  6930  001B3C                     
  6931                           ; BSR set to: 0
  6932  001B3C  0457               	decf	_EtatE^0,w,c
  6933  001B3E  B4D8               	btfsc	status,2,c
  6934  001B40  EFA4  F00D         	goto	i2u281_41
  6935  001B44  EFA6  F00D         	goto	i2u281_40
  6936  001B48                     i2u281_41:
  6937  001B48  EFAC  F00D         	goto	i2l3640
  6938  001B4C                     i2u281_40:
  6939  001B4C                     
  6940                           ; BSR set to: 0
  6941                           ;main.c: 265:         EtatE = EteintE;
  6942  001B4C  0E01               	movlw	1
  6943  001B4E  6E57               	movwf	_EtatE^0,c
  6944                           
  6945                           ;main.c: 266:         c = 0;
  6946  001B50  0E00               	movlw	0
  6947  001B52  6F7C               	movwf	(_c+1)& (0+255),b
  6948  001B54  0E00               	movlw	0
  6949  001B56  6F7B               	movwf	_c& (0+255),b
  6950  001B58                     i2l3640:
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;main.c: 268:     if (lecture() ==1 && EtatN == null )EtatE = ReceptionE;
  6954  001B58  EC35  F011         	call	i2_lecture	;wreg free
  6955  001B5C  06E8               	decf	wreg,f,c
  6956  001B5E  A4D8               	btfss	status,2,c
  6957  001B60  EFB4  F00D         	goto	i2u282_41
  6958  001B64  EFB6  F00D         	goto	i2u282_40
  6959  001B68                     i2u282_41:
  6960  001B68  EFC1  F00D         	goto	i2l3646
  6961  001B6C                     i2u282_40:
  6962  001B6C  0E05               	movlw	5
  6963  001B6E  1858               	xorwf	_EtatN^0,w,c
  6964  001B70  A4D8               	btfss	status,2,c
  6965  001B72  EFBD  F00D         	goto	i2u283_41
  6966  001B76  EFBF  F00D         	goto	i2u283_40
  6967  001B7A                     i2u283_41:
  6968  001B7A  EFC1  F00D         	goto	i2l3646
  6969  001B7E                     i2u283_40:
  6970  001B7E  0E00               	movlw	0
  6971  001B80  6E57               	movwf	_EtatE^0,c
  6972  001B82                     i2l3646:
  6973                           
  6974                           ;main.c: 269:     c++;
  6975  001B82  0100               	movlb	0	; () banked
  6976  001B84  4B7B               	infsnz	_c& (0+255),f,b
  6977  001B86  2B7C               	incf	(_c+1)& (0+255),f,b
  6978  001B88                     
  6979                           ; BSR set to: 0
  6980  001B88  0012               	return		;funcret
  6981  001B8A                     __end_of_connect:
  6982                           	callstack 0
  6983                           
  6984 ;; *************** function i2_lecture *****************
  6985 ;; Defined at:
  6986 ;;		line 386 in file "main.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;		None
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;		None
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      unsigned char 
  6993 ;; Registers used:
  6994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7002 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7004 ;;Total ram usage:        1 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; Hardware stack levels required when called:    1
  7007 ;; This function calls:
  7008 ;;		i2_EUSART1_Read
  7009 ;; This function is called by:
  7010 ;;		_connect
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           	psect	text53
  7015  00226A                     __ptext53:
  7016                           	callstack 0
  7017  00226A                     i2_lecture:
  7018                           	callstack 13
  7019  00226A                     
  7020                           ;main.c: 387:     RCSTA1bits.CREN = 1;
  7021  00226A  88AB               	bsf	171,4,c	;volatile
  7022                           
  7023                           ;main.c: 388:     if (PIR1bits.RC1IF == 1)
  7024  00226C  AA9E               	btfss	158,5,c	;volatile
  7025  00226E  EF3B  F011         	goto	i2u246_41
  7026  002272  EF3D  F011         	goto	i2u246_40
  7027  002276                     i2u246_41:
  7028  002276  EF44  F011         	goto	i2l3472
  7029  00227A                     i2u246_40:
  7030  00227A                     
  7031                           ;main.c: 389:         Hx = EUSART1_Read();
  7032  00227A  EC24  F016         	call	i2_EUSART1_Read	;wreg free
  7033  00227E  6E01               	movwf	??i2_lecture^0,c
  7034  002280  5001               	movf	??i2_lecture^0,w,c
  7035  002282  0100               	movlb	0	; () banked
  7036  002284  6F8F               	movwf	_Hx& (0+255),b
  7037  002286  6B90               	clrf	(_Hx+1)& (0+255),b
  7038  002288                     i2l3472:
  7039                           
  7040                           ;main.c: 390:     if (Hx == 0x7E) {
  7041  002288  0E7E               	movlw	126
  7042  00228A  0100               	movlb	0	; () banked
  7043  00228C  198F               	xorwf	_Hx& (0+255),w,b
  7044  00228E  1190               	iorwf	(_Hx+1)& (0+255),w,b
  7045  002290  A4D8               	btfss	status,2,c
  7046  002292  EF4D  F011         	goto	i2u247_41
  7047  002296  EF4F  F011         	goto	i2u247_40
  7048  00229A                     i2u247_41:
  7049  00229A  EFBD  F011         	goto	i2l3508
  7050  00229E                     i2u247_40:
  7051  00229E                     
  7052                           ; BSR set to: 0
  7053                           ;main.c: 391:         for (i = 0; i < 19; i++) {
  7054  00229E  0E00               	movlw	0
  7055  0022A0  6E55               	movwf	(_i+1)^0,c
  7056  0022A2  0E00               	movlw	0
  7057  0022A4  6E54               	movwf	_i^0,c
  7058  0022A6                     i2l3476:
  7059  0022A6  BE55               	btfsc	(_i+1)^0,7,c
  7060  0022A8  EF5F  F011         	goto	i2u248_41
  7061  0022AC  5055               	movf	(_i+1)^0,w,c
  7062  0022AE  E109               	bnz	i2u248_40
  7063  0022B0  0E13               	movlw	19
  7064  0022B2  5C54               	subwf	_i^0,w,c
  7065  0022B4  A0D8               	btfss	status,0,c
  7066  0022B6  EF5F  F011         	goto	i2u248_41
  7067  0022BA  EF61  F011         	goto	i2u248_40
  7068  0022BE                     i2u248_41:
  7069  0022BE  EF63  F011         	goto	i2l3480
  7070  0022C2                     i2u248_40:
  7071  0022C2  EF70  F011         	goto	i2l3486
  7072  0022C6                     i2l3480:
  7073                           
  7074                           ;main.c: 392:             trame[i] = EUSART1_Read();
  7075  0022C6  0E60               	movlw	low _trame
  7076  0022C8  2454               	addwf	_i^0,w,c
  7077  0022CA  6ED9               	movwf	fsr2l,c
  7078  0022CC  0E00               	movlw	high _trame
  7079  0022CE  2055               	addwfc	(_i+1)^0,w,c
  7080  0022D0  6EDA               	movwf	fsr2h,c
  7081  0022D2  EC24  F016         	call	i2_EUSART1_Read	;wreg free
  7082  0022D6  6EDF               	movwf	indf2,c
  7083  0022D8                     
  7084                           ;main.c: 393:         }
  7085  0022D8  4A54               	infsnz	_i^0,f,c
  7086  0022DA  2A55               	incf	(_i+1)^0,f,c
  7087  0022DC  EF53  F011         	goto	i2l3476
  7088  0022E0                     i2l3486:
  7089                           
  7090                           ;main.c: 394:         t1 = trame[12] << 8;
  7091  0022E0  0100               	movlb	0	; () banked
  7092  0022E2  516C               	movf	(_trame+12)& (0+255),w,b
  7093  0022E4  6F8C               	movwf	(_t1+1)& (0+255),b
  7094  0022E6  6B8B               	clrf	_t1& (0+255),b
  7095                           
  7096                           ;main.c: 395:         t2 = trame[14] << 8;
  7097  0022E8  516E               	movf	(_trame+14)& (0+255),w,b
  7098  0022EA  6F8A               	movwf	(_t2+1)& (0+255),b
  7099  0022EC  6B89               	clrf	_t2& (0+255),b
  7100                           
  7101                           ;main.c: 396:         t3 = trame[16] << 8;
  7102  0022EE  5170               	movf	(_trame+16)& (0+255),w,b
  7103  0022F0  6F88               	movwf	(_t3+1)& (0+255),b
  7104  0022F2  6B87               	clrf	_t3& (0+255),b
  7105  0022F4                     
  7106                           ; BSR set to: 0
  7107                           ;main.c: 398:         if (saving == Non) {
  7108  0022F4  0456               	decf	_saving^0,w,c
  7109  0022F6  A4D8               	btfss	status,2,c
  7110  0022F8  EF80  F011         	goto	i2u249_41
  7111  0022FC  EF82  F011         	goto	i2u249_40
  7112  002300                     i2u249_41:
  7113  002300  EF96  F011         	goto	i2l3492
  7114  002304                     i2u249_40:
  7115  002304                     
  7116                           ; BSR set to: 0
  7117                           ;main.c: 399:             PX = t1 + trame[13];
  7118  002304  516D               	movf	(_trame+13)& (0+255),w,b
  7119  002306  258B               	addwf	_t1& (0+255),w,b
  7120  002308  6E52               	movwf	_PX^0,c
  7121  00230A  0E00               	movlw	0
  7122  00230C  218C               	addwfc	(_t1+1)& (0+255),w,b
  7123  00230E  6E53               	movwf	(_PX+1)^0,c
  7124                           
  7125                           ;main.c: 400:             PY = t2 + trame[15];
  7126  002310  516F               	movf	(_trame+15)& (0+255),w,b
  7127  002312  2589               	addwf	_t2& (0+255),w,b
  7128  002314  6F85               	movwf	_PY& (0+255),b
  7129  002316  0E00               	movlw	0
  7130  002318  218A               	addwfc	(_t2+1)& (0+255),w,b
  7131  00231A  6F86               	movwf	(_PY+1)& (0+255),b
  7132                           
  7133                           ;main.c: 401:             PZ = t3 + trame[17];
  7134  00231C  5171               	movf	(_trame+17)& (0+255),w,b
  7135  00231E  2587               	addwf	_t3& (0+255),w,b
  7136  002320  6F83               	movwf	_PZ& (0+255),b
  7137  002322  0E00               	movlw	0
  7138  002324  2188               	addwfc	(_t3+1)& (0+255),w,b
  7139  002326  6F84               	movwf	(_PZ+1)& (0+255),b
  7140                           
  7141                           ;main.c: 402:         } else if (saving == Oui) {
  7142  002328  EFB2  F011         	goto	i2l3498
  7143  00232C                     i2l3492:
  7144                           
  7145                           ; BSR set to: 0
  7146  00232C  5056               	movf	_saving^0,w,c
  7147  00232E  A4D8               	btfss	status,2,c
  7148  002330  EF9C  F011         	goto	i2u250_41
  7149  002334  EF9E  F011         	goto	i2u250_40
  7150  002338                     i2u250_41:
  7151  002338  EFB2  F011         	goto	i2l3498
  7152  00233C                     i2u250_40:
  7153  00233C                     
  7154                           ; BSR set to: 0
  7155                           ;main.c: 403:             SPX = t1 + trame[13];
  7156  00233C  516D               	movf	(_trame+13)& (0+255),w,b
  7157  00233E  258B               	addwf	_t1& (0+255),w,b
  7158  002340  6F81               	movwf	_SPX& (0+255),b
  7159  002342  0E00               	movlw	0
  7160  002344  218C               	addwfc	(_t1+1)& (0+255),w,b
  7161  002346  6F82               	movwf	(_SPX+1)& (0+255),b
  7162                           
  7163                           ;main.c: 404:             SPY = t2 + trame[15];
  7164  002348  516F               	movf	(_trame+15)& (0+255),w,b
  7165  00234A  2589               	addwf	_t2& (0+255),w,b
  7166  00234C  6F7F               	movwf	_SPY& (0+255),b
  7167  00234E  0E00               	movlw	0
  7168  002350  218A               	addwfc	(_t2+1)& (0+255),w,b
  7169  002352  6F80               	movwf	(_SPY+1)& (0+255),b
  7170                           
  7171                           ;main.c: 405:             SPZ = t3 + trame[17];
  7172  002354  5171               	movf	(_trame+17)& (0+255),w,b
  7173  002356  2587               	addwf	_t3& (0+255),w,b
  7174  002358  6F7D               	movwf	_SPZ& (0+255),b
  7175  00235A  0E00               	movlw	0
  7176  00235C  2188               	addwfc	(_t3+1)& (0+255),w,b
  7177  00235E  6F7E               	movwf	(_SPZ+1)& (0+255),b
  7178  002360                     
  7179                           ; BSR set to: 0
  7180                           ;main.c: 406:             saving = idle;
  7181  002360  0E02               	movlw	2
  7182  002362  6E56               	movwf	_saving^0,c
  7183  002364                     i2l3498:
  7184                           
  7185                           ; BSR set to: 0
  7186                           ;main.c: 408:         c = 0;
  7187  002364  0E00               	movlw	0
  7188  002366  6F7C               	movwf	(_c+1)& (0+255),b
  7189  002368  0E00               	movlw	0
  7190  00236A  6F7B               	movwf	_c& (0+255),b
  7191  00236C                     
  7192                           ; BSR set to: 0
  7193                           ;main.c: 409:         Hx = 0;
  7194  00236C  0E00               	movlw	0
  7195  00236E  6F90               	movwf	(_Hx+1)& (0+255),b
  7196  002370  0E00               	movlw	0
  7197  002372  6F8F               	movwf	_Hx& (0+255),b
  7198  002374                     
  7199                           ; BSR set to: 0
  7200                           ;main.c: 410:         return 1;
  7201  002374  0E01               	movlw	1
  7202  002376  EFBE  F011         	goto	i2l785
  7203  00237A                     i2l3508:
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;main.c: 412:         return 0;
  7207  00237A  0E00               	movlw	0
  7208  00237C                     i2l785:
  7209                           
  7210                           ; BSR set to: 0
  7211  00237C  0012               	return		;funcret
  7212  00237E                     __end_ofi2_lecture:
  7213                           	callstack 0
  7214                           
  7215 ;; *************** function i2_EUSART1_Read *****************
  7216 ;; Defined at:
  7217 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;		None
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;		None
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  1    wreg      unsigned char 
  7224 ;; Registers used:
  7225 ;;		wreg, status,2
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7235 ;;Total ram usage:        0 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; This function calls:
  7238 ;;		Nothing
  7239 ;; This function is called by:
  7240 ;;		i2_lecture
  7241 ;; This function uses a non-reentrant model
  7242 ;;
  7243                           
  7244                           	psect	text54
  7245  002C48                     __ptext54:
  7246                           	callstack 0
  7247  002C48                     i2_EUSART1_Read:
  7248                           	callstack 13
  7249  002C48                     i2l88:
  7250                           
  7251                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  7252  002C48  AA9E               	btfss	158,5,c	;volatile
  7253  002C4A  EF29  F016         	goto	i2u238_41
  7254  002C4E  EF2B  F016         	goto	i2u238_40
  7255  002C52                     i2u238_41:
  7256  002C52  EF24  F016         	goto	i2l88
  7257  002C56                     i2u238_40:
  7258  002C56                     
  7259                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  7260  002C56  0E00               	movlw	0
  7261  002C58  0100               	movlb	0	; () banked
  7262  002C5A  6F9C               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  7263  002C5C                     
  7264                           ; BSR set to: 0
  7265                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  7266  002C5C  A2AB               	btfss	171,1,c	;volatile
  7267  002C5E  EF33  F016         	goto	i2u239_41
  7268  002C62  EF35  F016         	goto	i2u239_40
  7269  002C66                     i2u239_41:
  7270  002C66  EF37  F016         	goto	i2l3356
  7271  002C6A                     i2u239_40:
  7272  002C6A                     
  7273                           ; BSR set to: 0
  7274                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  7275  002C6A  98AB               	bcf	171,4,c	;volatile
  7276                           
  7277                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  7278  002C6C  88AB               	bsf	171,4,c	;volatile
  7279  002C6E                     i2l3356:
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  7283  002C6E  50AE               	movf	174,w,c	;volatile
  7284  002C70                     
  7285                           ; BSR set to: 0
  7286  002C70  0012               	return		;funcret
  7287  002C72                     __end_ofi2_EUSART1_Read:
  7288                           	callstack 0
  7289                           
  7290 ;; *************** function _TMR3_ISR *****************
  7291 ;; Defined at:
  7292 ;;		line 157 in file "mcc_generated_files/tmr3.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;		None
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;		None
  7297 ;; Return value:  Size  Location     Type
  7298 ;;                  1    wreg      void 
  7299 ;; Registers used:
  7300 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7301 ;; Tracked objects:
  7302 ;;		On entry : 0/0
  7303 ;;		On exit  : 0/0
  7304 ;;		Unchanged: 0/0
  7305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7310 ;;Total ram usage:        0 bytes
  7311 ;; Hardware stack levels used:    1
  7312 ;; Hardware stack levels required when called:    2
  7313 ;; This function calls:
  7314 ;;		_TMR3_CallBack
  7315 ;;		i2_TMR3_WriteTimer
  7316 ;; This function is called by:
  7317 ;;		_INTERRUPT_InterruptManager
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321                           	psect	text55
  7322  0028E8                     __ptext55:
  7323                           	callstack 0
  7324  0028E8                     _TMR3_ISR:
  7325                           	callstack 15
  7326  0028E8                     
  7327                           ;mcc_generated_files/tmr3.c: 159:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 162:     PIR2bits.TMR3IF = 0;
  7328  0028E8  92A1               	bcf	161,1,c	;volatile
  7329  0028EA                     
  7330                           ;mcc_generated_files/tmr3.c: 163:     TMR3_WriteTimer(timer3ReloadVal);
  7331  0028EA  C0E8  F001         	movff	_timer3ReloadVal,i2TMR3_WriteTimer@timerVal	;volatile
  7332  0028EE  C0E9  F002         	movff	_timer3ReloadVal+1,i2TMR3_WriteTimer@timerVal+1	;volatile
  7333  0028F2  EC61  F016         	call	i2_TMR3_WriteTimer	;wreg free
  7334  0028F6                     
  7335                           ;mcc_generated_files/tmr3.c: 166:     if (++CountCallBack >= 50)
  7336  0028F6  0100               	movlb	0	; () banked
  7337  0028F8  4B95               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
  7338  0028FA  2B96               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  7339  0028FC  5196               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  7340  0028FE  E109               	bnz	i2u301_40
  7341  002900  0E32               	movlw	50
  7342  002902  5D95               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
  7343  002904  A0D8               	btfss	status,0,c
  7344  002906  EF87  F014         	goto	i2u301_41
  7345  00290A  EF89  F014         	goto	i2u301_40
  7346  00290E                     i2u301_41:
  7347  00290E  EF90  F014         	goto	i2l334
  7348  002912                     i2u301_40:
  7349  002912                     
  7350                           ; BSR set to: 0
  7351                           ;mcc_generated_files/tmr3.c: 167:     {;mcc_generated_files/tmr3.c: 169:         TMR3_Ca
      +                          llBack();
  7352  002912  EC6C  F015         	call	_TMR3_CallBack	;wreg free
  7353  002916                     
  7354                           ;mcc_generated_files/tmr3.c: 172:         CountCallBack = 0;
  7355  002916  0E00               	movlw	0
  7356  002918  0100               	movlb	0	; () banked
  7357  00291A  6F96               	movwf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
  7358  00291C  0E00               	movlw	0
  7359  00291E  6F95               	movwf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
  7360  002920                     i2l334:
  7361                           
  7362                           ; BSR set to: 0
  7363  002920  0012               	return		;funcret
  7364  002922                     __end_of_TMR3_ISR:
  7365                           	callstack 0
  7366                           
  7367 ;; *************** function i2_TMR3_WriteTimer *****************
  7368 ;; Defined at:
  7369 ;;		line 120 in file "mcc_generated_files/tmr3.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;  timerVal        2    0[COMRAM] unsigned short 
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;		None
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  1    wreg      void 
  7376 ;; Registers used:
  7377 ;;		wreg, status,2
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7386 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7387 ;;Total ram usage:        2 bytes
  7388 ;; Hardware stack levels used:    1
  7389 ;; This function calls:
  7390 ;;		Nothing
  7391 ;; This function is called by:
  7392 ;;		_TMR3_ISR
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           	psect	text56
  7397  002CC2                     __ptext56:
  7398                           	callstack 0
  7399  002CC2                     i2_TMR3_WriteTimer:
  7400                           	callstack 16
  7401  002CC2                     
  7402                           ;mcc_generated_files/tmr3.c: 120: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 121: {;mcc_generated_files/tmr3.c: 122:     if (T3CONbits.nT3SYNC == 1)
  7403  002CC2  A4B1               	btfss	177,2,c	;volatile
  7404  002CC4  EF66  F016         	goto	i2u298_41
  7405  002CC8  EF68  F016         	goto	i2u298_40
  7406  002CCC                     i2u298_41:
  7407  002CCC  EF70  F016         	goto	i2l3796
  7408  002CD0                     i2u298_40:
  7409  002CD0                     
  7410                           ;mcc_generated_files/tmr3.c: 123:     {;mcc_generated_files/tmr3.c: 125:         T3CONbi
      +                          ts.TMR3ON = 0;
  7411  002CD0  90B1               	bcf	177,0,c	;volatile
  7412  002CD2                     
  7413                           ;mcc_generated_files/tmr3.c: 128:         TMR3H = (uint8_t)(timerVal >> 8);
  7414  002CD2  5002               	movf	(i2TMR3_WriteTimer@timerVal+1)^0,w,c
  7415  002CD4  6EB3               	movwf	179,c	;volatile
  7416  002CD6                     
  7417                           ;mcc_generated_files/tmr3.c: 129:         TMR3L = (uint8_t)timerVal;
  7418  002CD6  C001  FFB2         	movff	i2TMR3_WriteTimer@timerVal,4018	;volatile
  7419  002CDA                     
  7420                           ;mcc_generated_files/tmr3.c: 132:         T3CONbits.TMR3ON =1;
  7421  002CDA  80B1               	bsf	177,0,c	;volatile
  7422                           
  7423                           ;mcc_generated_files/tmr3.c: 133:     }
  7424  002CDC  EF74  F016         	goto	i2l319
  7425  002CE0                     i2l3796:
  7426                           
  7427                           ;mcc_generated_files/tmr3.c: 135:     {;mcc_generated_files/tmr3.c: 137:         TMR3H =
      +                           (uint8_t)(timerVal >> 8);
  7428  002CE0  5002               	movf	(i2TMR3_WriteTimer@timerVal+1)^0,w,c
  7429  002CE2  6EB3               	movwf	179,c	;volatile
  7430  002CE4                     
  7431                           ;mcc_generated_files/tmr3.c: 138:         TMR3L = (uint8_t)timerVal;
  7432  002CE4  C001  FFB2         	movff	i2TMR3_WriteTimer@timerVal,4018	;volatile
  7433  002CE8                     i2l319:
  7434  002CE8  0012               	return		;funcret
  7435  002CEA                     __end_ofi2_TMR3_WriteTimer:
  7436                           	callstack 0
  7437                           
  7438 ;; *************** function _TMR3_CallBack *****************
  7439 ;; Defined at:
  7440 ;;		line 176 in file "mcc_generated_files/tmr3.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;		None
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;		None
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  1    wreg      void 
  7447 ;; Registers used:
  7448 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7458 ;;Total ram usage:        0 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; Hardware stack levels required when called:    1
  7461 ;; This function calls:
  7462 ;;		Absolute function
  7463 ;;		_Secondes_5
  7464 ;;		_TMR3_DefaultInterruptHandler
  7465 ;; This function is called by:
  7466 ;;		_TMR3_ISR
  7467 ;; This function uses a non-reentrant model
  7468 ;;
  7469                           
  7470                           	psect	text57
  7471  002AD8                     __ptext57:
  7472                           	callstack 0
  7473  002AD8                     _TMR3_CallBack:
  7474                           	callstack 15
  7475  002AD8                     
  7476                           ;mcc_generated_files/tmr3.c: 179:     if(TMR3_InterruptHandler)
  7477  002AD8  0100               	movlb	0	; () banked
  7478  002ADA  51E6               	movf	_TMR3_InterruptHandler& (0+255),w,b
  7479  002ADC  11E7               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
  7480  002ADE  B4D8               	btfsc	status,2,c
  7481  002AE0  EF74  F015         	goto	i2u290_41
  7482  002AE4  EF76  F015         	goto	i2u290_40
  7483  002AE8                     i2u290_41:
  7484  002AE8  EF83  F015         	goto	i2l338
  7485  002AEC                     i2u290_40:
  7486  002AEC                     
  7487                           ; BSR set to: 0
  7488                           ;mcc_generated_files/tmr3.c: 180:     {;mcc_generated_files/tmr3.c: 181:         TMR3_In
      +                          terruptHandler();
  7489  002AEC  D802               	call	i2u291_48
  7490  002AEE  EF83  F015         	goto	i2u291_49
  7491  002AF2                     i2u291_48:
  7492  002AF2  0005               	push	
  7493  002AF4  6EFA               	movwf	pclath,c
  7494  002AF6  51E6               	movf	_TMR3_InterruptHandler& (0+255),w,b
  7495  002AF8  6EFD               	movwf	tosl,c
  7496  002AFA  51E7               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
  7497  002AFC  6EFE               	movwf	tosh,c
  7498  002AFE  50F8               	movf	tblptru,w,c
  7499  002B00  6EFF               	movwf	tosu,c
  7500  002B02  50FA               	movf	pclath,w,c
  7501  002B04  0012               	return		;indir
  7502  002B06                     i2u291_49:
  7503  002B06                     i2l338:
  7504  002B06  0012               	return		;funcret
  7505  002B08                     __end_of_TMR3_CallBack:
  7506                           	callstack 0
  7507                           
  7508 ;; *************** function _Secondes_5 *****************
  7509 ;; Defined at:
  7510 ;;		line 232 in file "main.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;		None
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;		None
  7515 ;; Return value:  Size  Location     Type
  7516 ;;                  1    wreg      void 
  7517 ;; Registers used:
  7518 ;;		wreg, status,2
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7528 ;;Total ram usage:        0 bytes
  7529 ;; Hardware stack levels used:    1
  7530 ;; This function calls:
  7531 ;;		Nothing
  7532 ;; This function is called by:
  7533 ;;		_main
  7534 ;;		_TMR3_CallBack
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           	psect	text58
  7539  002DEE                     __ptext58:
  7540                           	callstack 0
  7541  002DEE                     _Secondes_5:
  7542                           	callstack 15
  7543  002DEE                     
  7544                           ;main.c: 233:     if (sec5 == Oui) {
  7545  002DEE  0100               	movlb	0	; () banked
  7546  002DF0  51FC               	movf	_sec5& (0+255),w,b
  7547  002DF2  A4D8               	btfss	status,2,c
  7548  002DF4  EFFE  F016         	goto	i2u265_41
  7549  002DF8  EF00  F017         	goto	i2u265_40
  7550  002DFC                     i2u265_41:
  7551  002DFC  EF03  F017         	goto	i2l706
  7552  002E00                     i2u265_40:
  7553  002E00                     
  7554                           ; BSR set to: 0
  7555  002E00  828A               	bsf	138,1,c	;volatile
  7556  002E02                     
  7557                           ; BSR set to: 0
  7558                           ;main.c: 235:         sec5 = Non;
  7559  002E02  0E01               	movlw	1
  7560  002E04  6FFC               	movwf	_sec5& (0+255),b
  7561  002E06                     i2l706:
  7562                           
  7563                           ; BSR set to: 0
  7564  002E06  0012               	return		;funcret
  7565  002E08                     __end_of_Secondes_5:
  7566                           	callstack 0
  7567                           
  7568 ;; *************** function _TMR3_DefaultInterruptHandler *****************
  7569 ;; Defined at:
  7570 ;;		line 189 in file "mcc_generated_files/tmr3.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;		None
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;		None
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  1    wreg      void 
  7577 ;; Registers used:
  7578 ;;		None
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7588 ;;Total ram usage:        0 bytes
  7589 ;; Hardware stack levels used:    1
  7590 ;; This function calls:
  7591 ;;		Nothing
  7592 ;; This function is called by:
  7593 ;;		_TMR3_Initialize
  7594 ;;		_TMR3_CallBack
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           	psect	text59
  7599  002EAA                     __ptext59:
  7600                           	callstack 0
  7601  002EAA                     _TMR3_DefaultInterruptHandler:
  7602                           	callstack 15
  7603  002EAA  0012               	return		;funcret
  7604  002EAC                     __end_of_TMR3_DefaultInterruptHandler:
  7605                           	callstack 0
  7606                           
  7607 ;; *************** function _TMR2_ISR *****************
  7608 ;; Defined at:
  7609 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;		None
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;		None
  7614 ;; Return value:  Size  Location     Type
  7615 ;;                  1    wreg      void 
  7616 ;; Registers used:
  7617 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7618 ;; Tracked objects:
  7619 ;;		On entry : 0/0
  7620 ;;		On exit  : 0/0
  7621 ;;		Unchanged: 0/0
  7622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7627 ;;Total ram usage:        0 bytes
  7628 ;; Hardware stack levels used:    1
  7629 ;; Hardware stack levels required when called:    2
  7630 ;; This function calls:
  7631 ;;		_TMR2_CallBack
  7632 ;; This function is called by:
  7633 ;;		_INTERRUPT_InterruptManager
  7634 ;; This function uses a non-reentrant model
  7635 ;;
  7636                           
  7637                           	psect	text60
  7638  002BC6                     __ptext60:
  7639                           	callstack 0
  7640  002BC6                     _TMR2_ISR:
  7641                           	callstack 15
  7642  002BC6                     
  7643                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  7644  002BC6  929E               	bcf	158,1,c	;volatile
  7645  002BC8                     
  7646                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 500)
  7647  002BC8  0100               	movlb	0	; () banked
  7648  002BCA  4B93               	infsnz	TMR2_ISR@CountCallBack& (0+255),f,b	;volatile
  7649  002BCC  2B94               	incf	(TMR2_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  7650  002BCE  0EF4               	movlw	244
  7651  002BD0  5D93               	subwf	TMR2_ISR@CountCallBack& (0+255),w,b	;volatile
  7652  002BD2  0E01               	movlw	1
  7653  002BD4  5994               	subwfb	(TMR2_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  7654  002BD6  A0D8               	btfss	status,0,c
  7655  002BD8  EFF0  F015         	goto	i2u302_41
  7656  002BDC  EFF2  F015         	goto	i2u302_40
  7657  002BE0                     i2u302_41:
  7658  002BE0  EFF9  F015         	goto	i2l388
  7659  002BE4                     i2u302_40:
  7660  002BE4                     
  7661                           ; BSR set to: 0
  7662                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  7663  002BE4  EC84  F015         	call	_TMR2_CallBack	;wreg free
  7664  002BE8                     
  7665                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  7666  002BE8  0E00               	movlw	0
  7667  002BEA  0100               	movlb	0	; () banked
  7668  002BEC  6F94               	movwf	(TMR2_ISR@CountCallBack+1)& (0+255),b	;volatile
  7669  002BEE  0E00               	movlw	0
  7670  002BF0  6F93               	movwf	TMR2_ISR@CountCallBack& (0+255),b	;volatile
  7671  002BF2                     i2l388:
  7672                           
  7673                           ; BSR set to: 0
  7674  002BF2  0012               	return		;funcret
  7675  002BF4                     __end_of_TMR2_ISR:
  7676                           	callstack 0
  7677                           
  7678 ;; *************** function _TMR2_CallBack *****************
  7679 ;; Defined at:
  7680 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  7681 ;; Parameters:    Size  Location     Type
  7682 ;;		None
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;		None
  7685 ;; Return value:  Size  Location     Type
  7686 ;;                  1    wreg      void 
  7687 ;; Registers used:
  7688 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7689 ;; Tracked objects:
  7690 ;;		On entry : 0/0
  7691 ;;		On exit  : 0/0
  7692 ;;		Unchanged: 0/0
  7693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7698 ;;Total ram usage:        0 bytes
  7699 ;; Hardware stack levels used:    1
  7700 ;; Hardware stack levels required when called:    1
  7701 ;; This function calls:
  7702 ;;		Absolute function
  7703 ;;		_TMR2_DefaultInterruptHandler
  7704 ;; This function is called by:
  7705 ;;		_TMR2_ISR
  7706 ;; This function uses a non-reentrant model
  7707 ;;
  7708                           
  7709                           	psect	text61
  7710  002B08                     __ptext61:
  7711                           	callstack 0
  7712  002B08                     _TMR2_CallBack:
  7713                           	callstack 15
  7714  002B08                     
  7715                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  7716  002B08  0100               	movlb	0	; () banked
  7717  002B0A  51E4               	movf	_TMR2_InterruptHandler& (0+255),w,b
  7718  002B0C  11E5               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  7719  002B0E  B4D8               	btfsc	status,2,c
  7720  002B10  EF8C  F015         	goto	i2u292_41
  7721  002B14  EF8E  F015         	goto	i2u292_40
  7722  002B18                     i2u292_41:
  7723  002B18  EF9B  F015         	goto	i2l392
  7724  002B1C                     i2u292_40:
  7725  002B1C                     
  7726                           ; BSR set to: 0
  7727                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  7728  002B1C  D802               	call	i2u293_48
  7729  002B1E  EF9B  F015         	goto	i2u293_49
  7730  002B22                     i2u293_48:
  7731  002B22  0005               	push	
  7732  002B24  6EFA               	movwf	pclath,c
  7733  002B26  51E4               	movf	_TMR2_InterruptHandler& (0+255),w,b
  7734  002B28  6EFD               	movwf	tosl,c
  7735  002B2A  51E5               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  7736  002B2C  6EFE               	movwf	tosh,c
  7737  002B2E  50F8               	movf	tblptru,w,c
  7738  002B30  6EFF               	movwf	tosu,c
  7739  002B32  50FA               	movf	pclath,w,c
  7740  002B34  0012               	return		;indir
  7741  002B36                     i2u293_49:
  7742  002B36                     i2l392:
  7743  002B36  0012               	return		;funcret
  7744  002B38                     __end_of_TMR2_CallBack:
  7745                           	callstack 0
  7746                           
  7747 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  7748 ;; Defined at:
  7749 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;		None
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;		None
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  1    wreg      void 
  7756 ;; Registers used:
  7757 ;;		None
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7767 ;;Total ram usage:        0 bytes
  7768 ;; Hardware stack levels used:    1
  7769 ;; This function calls:
  7770 ;;		Nothing
  7771 ;; This function is called by:
  7772 ;;		_TMR2_Initialize
  7773 ;;		_TMR2_CallBack
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           	psect	text62
  7778  002EAC                     __ptext62:
  7779                           	callstack 0
  7780  002EAC                     _TMR2_DefaultInterruptHandler:
  7781                           	callstack 15
  7782  002EAC  0012               	return		;funcret
  7783  002EAE                     __end_of_TMR2_DefaultInterruptHandler:
  7784                           	callstack 0
  7785                           
  7786 ;; *************** function _TMR1_ISR *****************
  7787 ;; Defined at:
  7788 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;		None
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;		None
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  1    wreg      void 
  7795 ;; Registers used:
  7796 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 0/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7806 ;;Total ram usage:        0 bytes
  7807 ;; Hardware stack levels used:    1
  7808 ;; Hardware stack levels required when called:    2
  7809 ;; This function calls:
  7810 ;;		_TMR1_CallBack
  7811 ;;		_TMR1_WriteTimer
  7812 ;; This function is called by:
  7813 ;;		_INTERRUPT_InterruptManager
  7814 ;; This function uses a non-reentrant model
  7815 ;;
  7816                           
  7817                           	psect	text63
  7818  002922                     __ptext63:
  7819                           	callstack 0
  7820  002922                     _TMR1_ISR:
  7821                           	callstack 15
  7822  002922                     
  7823                           ;mcc_generated_files/tmr1.c: 159:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
  7824  002922  909E               	bcf	158,0,c	;volatile
  7825  002924                     
  7826                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
  7827  002924  C0F0  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  7828  002928  C0F1  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  7829  00292C  EC75  F016         	call	_TMR1_WriteTimer	;wreg free
  7830  002930                     
  7831                           ;mcc_generated_files/tmr1.c: 166:     if (++CountCallBack >= 25)
  7832  002930  0100               	movlb	0	; () banked
  7833  002932  4B99               	infsnz	TMR1_ISR@CountCallBack& (0+255),f,b	;volatile
  7834  002934  2B9A               	incf	(TMR1_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  7835  002936  519A               	movf	(TMR1_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  7836  002938  E109               	bnz	i2u299_40
  7837  00293A  0E19               	movlw	25
  7838  00293C  5D99               	subwf	TMR1_ISR@CountCallBack& (0+255),w,b	;volatile
  7839  00293E  A0D8               	btfss	status,0,c
  7840  002940  EFA4  F014         	goto	i2u299_41
  7841  002944  EFA6  F014         	goto	i2u299_40
  7842  002948                     i2u299_41:
  7843  002948  EFAD  F014         	goto	i2l212
  7844  00294C                     i2u299_40:
  7845  00294C                     
  7846                           ; BSR set to: 0
  7847                           ;mcc_generated_files/tmr1.c: 167:     {;mcc_generated_files/tmr1.c: 169:         TMR1_Ca
      +                          llBack();
  7848  00294C  EC9C  F015         	call	_TMR1_CallBack	;wreg free
  7849  002950                     
  7850                           ;mcc_generated_files/tmr1.c: 172:         CountCallBack = 0;
  7851  002950  0E00               	movlw	0
  7852  002952  0100               	movlb	0	; () banked
  7853  002954  6F9A               	movwf	(TMR1_ISR@CountCallBack+1)& (0+255),b	;volatile
  7854  002956  0E00               	movlw	0
  7855  002958  6F99               	movwf	TMR1_ISR@CountCallBack& (0+255),b	;volatile
  7856  00295A                     i2l212:
  7857                           
  7858                           ; BSR set to: 0
  7859  00295A  0012               	return		;funcret
  7860  00295C                     __end_of_TMR1_ISR:
  7861                           	callstack 0
  7862                           
  7863 ;; *************** function _TMR1_WriteTimer *****************
  7864 ;; Defined at:
  7865 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  7866 ;; Parameters:    Size  Location     Type
  7867 ;;  timerVal        2    0[COMRAM] unsigned short 
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;		None
  7870 ;; Return value:  Size  Location     Type
  7871 ;;                  1    wreg      void 
  7872 ;; Registers used:
  7873 ;;		wreg, status,2
  7874 ;; Tracked objects:
  7875 ;;		On entry : 0/0
  7876 ;;		On exit  : 0/0
  7877 ;;		Unchanged: 0/0
  7878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7882 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7883 ;;Total ram usage:        2 bytes
  7884 ;; Hardware stack levels used:    1
  7885 ;; This function calls:
  7886 ;;		Nothing
  7887 ;; This function is called by:
  7888 ;;		_TMR1_ISR
  7889 ;;		_connect
  7890 ;;		_TMR1_Reload
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           	psect	text64
  7895  002CEA                     __ptext64:
  7896                           	callstack 0
  7897  002CEA                     _TMR1_WriteTimer:
  7898                           	callstack 14
  7899  002CEA                     
  7900                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  7901  002CEA  A4CD               	btfss	205,2,c	;volatile
  7902  002CEC  EF7A  F016         	goto	i2u240_41
  7903  002CF0  EF7C  F016         	goto	i2u240_40
  7904  002CF4                     i2u240_41:
  7905  002CF4  EF84  F016         	goto	i2l3370
  7906  002CF8                     i2u240_40:
  7907  002CF8                     
  7908                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  7909  002CF8  90CD               	bcf	205,0,c	;volatile
  7910  002CFA                     
  7911                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  7912  002CFA  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  7913  002CFC  6ECF               	movwf	207,c	;volatile
  7914  002CFE                     
  7915                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  7916  002CFE  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  7917  002D02                     
  7918                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  7919  002D02  80CD               	bsf	205,0,c	;volatile
  7920                           
  7921                           ;mcc_generated_files/tmr1.c: 133:     }
  7922  002D04  EF88  F016         	goto	i2l197
  7923  002D08                     i2l3370:
  7924                           
  7925                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  7926  002D08  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  7927  002D0A  6ECF               	movwf	207,c	;volatile
  7928  002D0C                     
  7929                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  7930  002D0C  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  7931  002D10                     i2l197:
  7932  002D10  0012               	return		;funcret
  7933  002D12                     __end_of_TMR1_WriteTimer:
  7934                           	callstack 0
  7935                           
  7936 ;; *************** function _TMR1_CallBack *****************
  7937 ;; Defined at:
  7938 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;		None
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;		None
  7943 ;; Return value:  Size  Location     Type
  7944 ;;                  1    wreg      void 
  7945 ;; Registers used:
  7946 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7947 ;; Tracked objects:
  7948 ;;		On entry : 0/0
  7949 ;;		On exit  : 0/0
  7950 ;;		Unchanged: 0/0
  7951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7956 ;;Total ram usage:        0 bytes
  7957 ;; Hardware stack levels used:    1
  7958 ;; Hardware stack levels required when called:    1
  7959 ;; This function calls:
  7960 ;;		Absolute function
  7961 ;;		_Blink_
  7962 ;;		_TMR1_DefaultInterruptHandler
  7963 ;; This function is called by:
  7964 ;;		_TMR1_ISR
  7965 ;; This function uses a non-reentrant model
  7966 ;;
  7967                           
  7968                           	psect	text65
  7969  002B38                     __ptext65:
  7970                           	callstack 0
  7971  002B38                     _TMR1_CallBack:
  7972                           	callstack 15
  7973  002B38                     
  7974                           ;mcc_generated_files/tmr1.c: 179:     if(TMR1_InterruptHandler)
  7975  002B38  0100               	movlb	0	; () banked
  7976  002B3A  51EE               	movf	_TMR1_InterruptHandler& (0+255),w,b
  7977  002B3C  11EF               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  7978  002B3E  B4D8               	btfsc	status,2,c
  7979  002B40  EFA4  F015         	goto	i2u285_41
  7980  002B44  EFA6  F015         	goto	i2u285_40
  7981  002B48                     i2u285_41:
  7982  002B48  EFB3  F015         	goto	i2l216
  7983  002B4C                     i2u285_40:
  7984  002B4C                     
  7985                           ; BSR set to: 0
  7986                           ;mcc_generated_files/tmr1.c: 180:     {;mcc_generated_files/tmr1.c: 181:         TMR1_In
      +                          terruptHandler();
  7987  002B4C  D802               	call	i2u286_48
  7988  002B4E  EFB3  F015         	goto	i2u286_49
  7989  002B52                     i2u286_48:
  7990  002B52  0005               	push	
  7991  002B54  6EFA               	movwf	pclath,c
  7992  002B56  51EE               	movf	_TMR1_InterruptHandler& (0+255),w,b
  7993  002B58  6EFD               	movwf	tosl,c
  7994  002B5A  51EF               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  7995  002B5C  6EFE               	movwf	tosh,c
  7996  002B5E  50F8               	movf	tblptru,w,c
  7997  002B60  6EFF               	movwf	tosu,c
  7998  002B62  50FA               	movf	pclath,w,c
  7999  002B64  0012               	return		;indir
  8000  002B66                     i2u286_49:
  8001  002B66                     i2l216:
  8002  002B66  0012               	return		;funcret
  8003  002B68                     __end_of_TMR1_CallBack:
  8004                           	callstack 0
  8005                           
  8006 ;; *************** function _Blink_ *****************
  8007 ;; Defined at:
  8008 ;;		line 160 in file "main.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;		None
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;		None
  8013 ;; Return value:  Size  Location     Type
  8014 ;;                  1    wreg      void 
  8015 ;; Registers used:
  8016 ;;		wreg, status,2, status,0
  8017 ;; Tracked objects:
  8018 ;;		On entry : 0/0
  8019 ;;		On exit  : 0/0
  8020 ;;		Unchanged: 0/0
  8021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8024 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8026 ;;Total ram usage:        2 bytes
  8027 ;; Hardware stack levels used:    1
  8028 ;; This function calls:
  8029 ;;		Nothing
  8030 ;; This function is called by:
  8031 ;;		_main
  8032 ;;		_TMR1_CallBack
  8033 ;; This function uses a non-reentrant model
  8034 ;;
  8035                           
  8036                           	psect	text66
  8037  0015AC                     __ptext66:
  8038                           	callstack 0
  8039  0015AC                     _Blink_:
  8040                           	callstack 15
  8041  0015AC                     
  8042                           ;main.c: 161:     if (EtatN != null) {
  8043  0015AC  0E05               	movlw	5
  8044  0015AE  1858               	xorwf	_EtatN^0,w,c
  8045  0015B0  B4D8               	btfsc	status,2,c
  8046  0015B2  EFDD  F00A         	goto	i2u251_41
  8047  0015B6  EFDF  F00A         	goto	i2u251_40
  8048  0015BA                     i2u251_41:
  8049  0015BA  EF71  F00B         	goto	i2l3556
  8050  0015BE                     i2u251_40:
  8051  0015BE  EF4C  F00B         	goto	i2l3554
  8052  0015C2                     i2l3532:
  8053  0015C2  B28A               	btfsc	138,1,c	;volatile
  8054  0015C4  EFE6  F00A         	goto	i2u252_41
  8055  0015C8  EFE9  F00A         	goto	i2u252_40
  8056  0015CC                     i2u252_41:
  8057  0015CC  0E01               	movlw	1
  8058  0015CE  EFEA  F00A         	goto	i2u252_46
  8059  0015D2                     i2u252_40:
  8060  0015D2  0E00               	movlw	0
  8061  0015D4                     i2u252_46:
  8062  0015D4  0AFF               	xorlw	255
  8063  0015D6  6E01               	movwf	??_Blink_^0,c
  8064  0015D8  4601               	rlncf	??_Blink_^0,f,c
  8065  0015DA  508A               	movf	138,w,c	;volatile
  8066  0015DC  1801               	xorwf	??_Blink_^0,w,c
  8067  0015DE  0BFD               	andlw	-3
  8068  0015E0  1801               	xorwf	??_Blink_^0,w,c
  8069  0015E2  6E8A               	movwf	138,c	;volatile
  8070  0015E4  848A               	bsf	138,2,c	;volatile
  8071  0015E6  EF71  F00B         	goto	i2l3556
  8072  0015EA                     i2l3536:
  8073  0015EA  B48A               	btfsc	138,2,c	;volatile
  8074  0015EC  EFFA  F00A         	goto	i2u253_41
  8075  0015F0  EFFD  F00A         	goto	i2u253_40
  8076  0015F4                     i2u253_41:
  8077  0015F4  0E01               	movlw	1
  8078  0015F6  EFFE  F00A         	goto	i2u253_46
  8079  0015FA                     i2u253_40:
  8080  0015FA  0E00               	movlw	0
  8081  0015FC                     i2u253_46:
  8082  0015FC  0AFF               	xorlw	255
  8083  0015FE  6E01               	movwf	??_Blink_^0,c
  8084  001600  4601               	rlncf	??_Blink_^0,f,c
  8085  001602  4601               	rlncf	??_Blink_^0,f,c
  8086  001604  508A               	movf	138,w,c	;volatile
  8087  001606  1801               	xorwf	??_Blink_^0,w,c
  8088  001608  0BFB               	andlw	-5
  8089  00160A  1801               	xorwf	??_Blink_^0,w,c
  8090  00160C  6E8A               	movwf	138,c	;volatile
  8091  00160E  828A               	bsf	138,1,c	;volatile
  8092  001610  EF71  F00B         	goto	i2l3556
  8093  001614                     i2l3540:
  8094                           
  8095                           ;main.c: 172:                 if (MINUTE) {
  8096  001614  0100               	movlb	0	; () banked
  8097  001616  519B               	movf	_MINUTE& (0+255),w,b
  8098  001618  B4D8               	btfsc	status,2,c
  8099  00161A  EF11  F00B         	goto	i2u254_41
  8100  00161E  EF13  F00B         	goto	i2u254_40
  8101  001622                     i2u254_41:
  8102  001622  EF26  F00B         	goto	i2l3546
  8103  001626                     i2u254_40:
  8104  001626                     
  8105                           ; BSR set to: 0
  8106  001626  B28A               	btfsc	138,1,c	;volatile
  8107  001628  EF18  F00B         	goto	i2u255_41
  8108  00162C  EF1B  F00B         	goto	i2u255_40
  8109  001630                     i2u255_41:
  8110  001630  0E01               	movlw	1
  8111  001632  EF1C  F00B         	goto	i2u255_46
  8112  001636                     i2u255_40:
  8113  001636  0E00               	movlw	0
  8114  001638                     i2u255_46:
  8115  001638  0AFF               	xorlw	255
  8116  00163A  6E01               	movwf	??_Blink_^0,c
  8117  00163C  4601               	rlncf	??_Blink_^0,f,c
  8118  00163E  508A               	movf	138,w,c	;volatile
  8119  001640  1801               	xorwf	??_Blink_^0,w,c
  8120  001642  0BFD               	andlw	-3
  8121  001644  1801               	xorwf	??_Blink_^0,w,c
  8122  001646  6E8A               	movwf	138,c	;volatile
  8123  001648                     
  8124                           ; BSR set to: 0
  8125                           ;main.c: 174:                     m++;
  8126  001648  4B8D               	infsnz	_m& (0+255),f,b
  8127  00164A  2B8E               	incf	(_m+1)& (0+255),f,b
  8128  00164C                     i2l3546:
  8129                           
  8130                           ; BSR set to: 0
  8131                           ;main.c: 176:                 if (m == 2) {
  8132  00164C  0E02               	movlw	2
  8133  00164E  198D               	xorwf	_m& (0+255),w,b
  8134  001650  118E               	iorwf	(_m+1)& (0+255),w,b
  8135  001652  A4D8               	btfss	status,2,c
  8136  001654  EF2E  F00B         	goto	i2u256_41
  8137  001658  EF30  F00B         	goto	i2u256_40
  8138  00165C                     i2u256_41:
  8139  00165C  EF71  F00B         	goto	i2l3556
  8140  001660                     i2u256_40:
  8141  001660                     
  8142                           ; BSR set to: 0
  8143                           ;main.c: 177:                     MINUTE = 0;
  8144  001660  0E00               	movlw	0
  8145  001662  6F9B               	movwf	_MINUTE& (0+255),b
  8146                           
  8147                           ;main.c: 178:                     minute = Oui;
  8148  001664  0E00               	movlw	0
  8149  001666  6FFB               	movwf	_minute& (0+255),b
  8150                           
  8151                           ;main.c: 179:                     m = 0;
  8152  001668  0E00               	movlw	0
  8153  00166A  6F8E               	movwf	(_m+1)& (0+255),b
  8154  00166C  0E00               	movlw	0
  8155  00166E  6F8D               	movwf	_m& (0+255),b
  8156  001670  EF71  F00B         	goto	i2l3556
  8157  001674                     i2l659:
  8158  001674  828A               	bsf	138,1,c	;volatile
  8159  001676  948A               	bcf	138,2,c	;volatile
  8160  001678  EF71  F00B         	goto	i2l3556
  8161  00167C                     i2l3550:
  8162                           
  8163                           ;main.c: 187:                 if(perte == Oui)do { LATBbits.LATB5 = 0; } while(0);
  8164  00167C  0100               	movlb	0	; () banked
  8165  00167E  51F9               	movf	_perte& (0+255),w,b
  8166  001680  A4D8               	btfss	status,2,c
  8167  001682  EF45  F00B         	goto	i2u257_41
  8168  001686  EF47  F00B         	goto	i2u257_40
  8169  00168A                     i2u257_41:
  8170  00168A  EF48  F00B         	goto	i2l667
  8171  00168E                     i2u257_40:
  8172  00168E                     
  8173                           ; BSR set to: 0
  8174  00168E  9A8A               	bcf	138,5,c	;volatile
  8175  001690                     i2l667:
  8176                           
  8177                           ; BSR set to: 0
  8178  001690  928A               	bcf	138,1,c	;volatile
  8179  001692                     
  8180                           ; BSR set to: 0
  8181  001692  948A               	bcf	138,2,c	;volatile
  8182  001694  EF71  F00B         	goto	i2l3556
  8183  001698                     i2l3554:
  8184  001698  5058               	movf	_EtatN^0,w,c
  8185  00169A  6E01               	movwf	??_Blink_^0,c
  8186  00169C  6A02               	clrf	(??_Blink_+1)^0,c
  8187                           
  8188                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8189                           ; Switch size 1, requested type "simple"
  8190                           ; Number of cases is 1, Range of values is 0 to 0
  8191                           ; switch strategies available:
  8192                           ; Name         Instructions Cycles
  8193                           ; simple_byte            4     3 (average)
  8194                           ;	Chosen strategy is simple_byte
  8195  00169E  5002               	movf	(??_Blink_+1)^0,w,c
  8196  0016A0  0A00               	xorlw	0	; case 0
  8197  0016A2  B4D8               	btfsc	status,2,c
  8198  0016A4  EF56  F00B         	goto	i2l4896
  8199  0016A8  EF71  F00B         	goto	i2l3556
  8200  0016AC                     i2l4896:
  8201                           
  8202                           ; Switch size 1, requested type "simple"
  8203                           ; Number of cases is 6, Range of values is 0 to 5
  8204                           ; switch strategies available:
  8205                           ; Name         Instructions Cycles
  8206                           ; simple_byte           19    10 (average)
  8207                           ;	Chosen strategy is simple_byte
  8208  0016AC  5001               	movf	??_Blink_^0,w,c
  8209  0016AE  0A00               	xorlw	0	; case 0
  8210  0016B0  B4D8               	btfsc	status,2,c
  8211  0016B2  EFE1  F00A         	goto	i2l3532
  8212  0016B6  0A01               	xorlw	1	; case 1
  8213  0016B8  B4D8               	btfsc	status,2,c
  8214  0016BA  EFF5  F00A         	goto	i2l3536
  8215  0016BE  0A03               	xorlw	3	; case 2
  8216  0016C0  B4D8               	btfsc	status,2,c
  8217  0016C2  EF0A  F00B         	goto	i2l3540
  8218  0016C6  0A01               	xorlw	1	; case 3
  8219  0016C8  B4D8               	btfsc	status,2,c
  8220  0016CA  EF3E  F00B         	goto	i2l3550
  8221  0016CE  0A07               	xorlw	7	; case 4
  8222  0016D0  B4D8               	btfsc	status,2,c
  8223  0016D2  EF3A  F00B         	goto	i2l659
  8224  0016D6  0A01               	xorlw	1	; case 5
  8225  0016D8  B4D8               	btfsc	status,2,c
  8226  0016DA  EF71  F00B         	goto	i2l3556
  8227  0016DE  EF71  F00B         	goto	i2l3556
  8228  0016E2                     i2l3556:
  8229                           
  8230                           ;main.c: 195:     if (EtatE != rien) {
  8231  0016E2  0E03               	movlw	3
  8232  0016E4  1857               	xorwf	_EtatE^0,w,c
  8233  0016E6  B4D8               	btfsc	status,2,c
  8234  0016E8  EF78  F00B         	goto	i2u258_41
  8235  0016EC  EF7A  F00B         	goto	i2u258_40
  8236  0016F0                     i2u258_41:
  8237  0016F0  EFF4  F00B         	goto	i2l696
  8238  0016F4                     i2u258_40:
  8239  0016F4  EFD7  F00B         	goto	i2l3576
  8240  0016F8                     i2l3560:
  8241                           
  8242                           ;main.c: 198:                 if (plat == Oui) {
  8243  0016F8  0100               	movlb	0	; () banked
  8244  0016FA  51FA               	movf	_plat& (0+255),w,b
  8245  0016FC  A4D8               	btfss	status,2,c
  8246  0016FE  EF83  F00B         	goto	i2u259_41
  8247  001702  EF85  F00B         	goto	i2u259_40
  8248  001706                     i2u259_41:
  8249  001706  EF89  F00B         	goto	i2l3564
  8250  00170A                     i2u259_40:
  8251  00170A                     
  8252                           ; BSR set to: 0
  8253  00170A  828A               	bsf	138,1,c	;volatile
  8254  00170C                     
  8255                           ; BSR set to: 0
  8256  00170C  948A               	bcf	138,2,c	;volatile
  8257  00170E                     
  8258                           ; BSR set to: 0
  8259                           ;main.c: 201:                     plat = Non;
  8260  00170E  0E01               	movlw	1
  8261  001710  6FFA               	movwf	_plat& (0+255),b
  8262  001712                     i2l3564:
  8263                           
  8264                           ; BSR set to: 0
  8265  001712  B28A               	btfsc	138,1,c	;volatile
  8266  001714  EF8E  F00B         	goto	i2u260_41
  8267  001718  EF91  F00B         	goto	i2u260_40
  8268  00171C                     i2u260_41:
  8269  00171C  0E01               	movlw	1
  8270  00171E  EF92  F00B         	goto	i2u260_46
  8271  001722                     i2u260_40:
  8272  001722  0E00               	movlw	0
  8273  001724                     i2u260_46:
  8274  001724  0AFF               	xorlw	255
  8275  001726  6E01               	movwf	??_Blink_^0,c
  8276  001728  4601               	rlncf	??_Blink_^0,f,c
  8277  00172A  508A               	movf	138,w,c	;volatile
  8278  00172C  1801               	xorwf	??_Blink_^0,w,c
  8279  00172E  0BFD               	andlw	-3
  8280  001730  1801               	xorwf	??_Blink_^0,w,c
  8281  001732  6E8A               	movwf	138,c	;volatile
  8282  001734                     
  8283                           ; BSR set to: 0
  8284  001734  B48A               	btfsc	138,2,c	;volatile
  8285  001736  EF9F  F00B         	goto	i2u261_41
  8286  00173A  EFA2  F00B         	goto	i2u261_40
  8287  00173E                     i2u261_41:
  8288  00173E  0E01               	movlw	1
  8289  001740  EFA3  F00B         	goto	i2u261_46
  8290  001744                     i2u261_40:
  8291  001744  0E00               	movlw	0
  8292  001746                     i2u261_46:
  8293  001746  0AFF               	xorlw	255
  8294  001748  6E01               	movwf	??_Blink_^0,c
  8295  00174A  4601               	rlncf	??_Blink_^0,f,c
  8296  00174C  4601               	rlncf	??_Blink_^0,f,c
  8297  00174E  508A               	movf	138,w,c	;volatile
  8298  001750  1801               	xorwf	??_Blink_^0,w,c
  8299  001752  0BFB               	andlw	-5
  8300  001754  1801               	xorwf	??_Blink_^0,w,c
  8301  001756  6E8A               	movwf	138,c	;volatile
  8302  001758  EFF4  F00B         	goto	i2l696
  8303  00175C                     i2l3568:
  8304  00175C  B28A               	btfsc	138,1,c	;volatile
  8305  00175E  EFB3  F00B         	goto	i2u262_41
  8306  001762  EFB6  F00B         	goto	i2u262_40
  8307  001766                     i2u262_41:
  8308  001766  0E01               	movlw	1
  8309  001768  EFB7  F00B         	goto	i2u262_46
  8310  00176C                     i2u262_40:
  8311  00176C  0E00               	movlw	0
  8312  00176E                     i2u262_46:
  8313  00176E  0AFF               	xorlw	255
  8314  001770  6E01               	movwf	??_Blink_^0,c
  8315  001772  4601               	rlncf	??_Blink_^0,f,c
  8316  001774  508A               	movf	138,w,c	;volatile
  8317  001776  1801               	xorwf	??_Blink_^0,w,c
  8318  001778  0BFD               	andlw	-3
  8319  00177A  1801               	xorwf	??_Blink_^0,w,c
  8320  00177C  6E8A               	movwf	138,c	;volatile
  8321  00177E  848A               	bsf	138,2,c	;volatile
  8322  001780  EFF4  F00B         	goto	i2l696
  8323  001784                     i2l691:
  8324  001784  828A               	bsf	138,1,c	;volatile
  8325  001786  B48A               	btfsc	138,2,c	;volatile
  8326  001788  EFC8  F00B         	goto	i2u263_41
  8327  00178C  EFCB  F00B         	goto	i2u263_40
  8328  001790                     i2u263_41:
  8329  001790  0E01               	movlw	1
  8330  001792  EFCC  F00B         	goto	i2u263_46
  8331  001796                     i2u263_40:
  8332  001796  0E00               	movlw	0
  8333  001798                     i2u263_46:
  8334  001798  0AFF               	xorlw	255
  8335  00179A  6E01               	movwf	??_Blink_^0,c
  8336  00179C  4601               	rlncf	??_Blink_^0,f,c
  8337  00179E  4601               	rlncf	??_Blink_^0,f,c
  8338  0017A0  508A               	movf	138,w,c	;volatile
  8339  0017A2  1801               	xorwf	??_Blink_^0,w,c
  8340  0017A4  0BFB               	andlw	-5
  8341  0017A6  1801               	xorwf	??_Blink_^0,w,c
  8342  0017A8  6E8A               	movwf	138,c	;volatile
  8343  0017AA  EFF4  F00B         	goto	i2l696
  8344  0017AE                     i2l3576:
  8345  0017AE  5057               	movf	_EtatE^0,w,c
  8346  0017B0  6E01               	movwf	??_Blink_^0,c
  8347  0017B2  6A02               	clrf	(??_Blink_+1)^0,c
  8348                           
  8349                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8350                           ; Switch size 1, requested type "simple"
  8351                           ; Number of cases is 1, Range of values is 0 to 0
  8352                           ; switch strategies available:
  8353                           ; Name         Instructions Cycles
  8354                           ; simple_byte            4     3 (average)
  8355                           ;	Chosen strategy is simple_byte
  8356  0017B4  5002               	movf	(??_Blink_+1)^0,w,c
  8357  0017B6  0A00               	xorlw	0	; case 0
  8358  0017B8  B4D8               	btfsc	status,2,c
  8359  0017BA  EFE1  F00B         	goto	i2l4898
  8360  0017BE  EFF4  F00B         	goto	i2l696
  8361  0017C2                     i2l4898:
  8362                           
  8363                           ; Switch size 1, requested type "simple"
  8364                           ; Number of cases is 4, Range of values is 0 to 3
  8365                           ; switch strategies available:
  8366                           ; Name         Instructions Cycles
  8367                           ; simple_byte           13     7 (average)
  8368                           ;	Chosen strategy is simple_byte
  8369  0017C2  5001               	movf	??_Blink_^0,w,c
  8370  0017C4  0A00               	xorlw	0	; case 0
  8371  0017C6  B4D8               	btfsc	status,2,c
  8372  0017C8  EFAE  F00B         	goto	i2l3568
  8373  0017CC  0A01               	xorlw	1	; case 1
  8374  0017CE  B4D8               	btfsc	status,2,c
  8375  0017D0  EFC2  F00B         	goto	i2l691
  8376  0017D4  0A03               	xorlw	3	; case 2
  8377  0017D6  B4D8               	btfsc	status,2,c
  8378  0017D8  EF7C  F00B         	goto	i2l3560
  8379  0017DC  0A01               	xorlw	1	; case 3
  8380  0017DE  B4D8               	btfsc	status,2,c
  8381  0017E0  EFF4  F00B         	goto	i2l696
  8382  0017E4  EFF4  F00B         	goto	i2l696
  8383  0017E8                     i2l696:
  8384  0017E8  0012               	return		;funcret
  8385  0017EA                     __end_of_Blink_:
  8386                           	callstack 0
  8387                           
  8388 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  8389 ;; Defined at:
  8390 ;;		line 189 in file "mcc_generated_files/tmr1.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;		None
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;		None
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  1    wreg      void 
  8397 ;; Registers used:
  8398 ;;		None
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8408 ;;Total ram usage:        0 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_TMR1_Initialize
  8414 ;;		_TMR1_CallBack
  8415 ;; This function uses a non-reentrant model
  8416 ;;
  8417                           
  8418                           	psect	text67
  8419  002EAE                     __ptext67:
  8420                           	callstack 0
  8421  002EAE                     _TMR1_DefaultInterruptHandler:
  8422                           	callstack 15
  8423  002EAE  0012               	return		;funcret
  8424  002EB0                     __end_of_TMR1_DefaultInterruptHandler:
  8425                           	callstack 0
  8426                           
  8427 ;; *************** function _TMR0_ISR *****************
  8428 ;; Defined at:
  8429 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  8430 ;; Parameters:    Size  Location     Type
  8431 ;;		None
  8432 ;; Auto vars:     Size  Location     Type
  8433 ;;		None
  8434 ;; Return value:  Size  Location     Type
  8435 ;;                  1    wreg      void 
  8436 ;; Registers used:
  8437 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8438 ;; Tracked objects:
  8439 ;;		On entry : 0/0
  8440 ;;		On exit  : 0/0
  8441 ;;		Unchanged: 0/0
  8442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8447 ;;Total ram usage:        0 bytes
  8448 ;; Hardware stack levels used:    1
  8449 ;; Hardware stack levels required when called:    2
  8450 ;; This function calls:
  8451 ;;		_TMR0_CallBack
  8452 ;; This function is called by:
  8453 ;;		_INTERRUPT_InterruptManager
  8454 ;; This function uses a non-reentrant model
  8455 ;;
  8456                           
  8457                           	psect	text68
  8458  002A72                     __ptext68:
  8459                           	callstack 0
  8460  002A72                     _TMR0_ISR:
  8461                           	callstack 15
  8462  002A72                     
  8463                           ;mcc_generated_files/tmr0.c: 138:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 141:     INTCONbits.TMR0IF = 0;
  8464  002A72  94F2               	bcf	242,2,c	;volatile
  8465  002A74                     
  8466                           ;mcc_generated_files/tmr0.c: 145:     TMR0H = timer0ReloadVal >> 8;
  8467  002A74  0100               	movlb	0	; () banked
  8468  002A76  51EB               	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
  8469  002A78  6ED7               	movwf	215,c	;volatile
  8470  002A7A                     
  8471                           ; BSR set to: 0
  8472                           ;mcc_generated_files/tmr0.c: 146:     TMR0L = (uint8_t) timer0ReloadVal;
  8473  002A7A  C0EA  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  8474  002A7E                     
  8475                           ; BSR set to: 0
  8476                           ;mcc_generated_files/tmr0.c: 149:     if (++CountCallBack >= 300)
  8477  002A7E  4B97               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
  8478  002A80  2B98               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  8479  002A82  0E2C               	movlw	44
  8480  002A84  5D97               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
  8481  002A86  0E01               	movlw	1
  8482  002A88  5998               	subwfb	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  8483  002A8A  A0D8               	btfss	status,0,c
  8484  002A8C  EF4A  F015         	goto	i2u300_41
  8485  002A90  EF4C  F015         	goto	i2u300_40
  8486  002A94                     i2u300_41:
  8487  002A94  EF53  F015         	goto	i2l266
  8488  002A98                     i2u300_40:
  8489  002A98                     
  8490                           ; BSR set to: 0
  8491                           ;mcc_generated_files/tmr0.c: 150:     {;mcc_generated_files/tmr0.c: 152:         TMR0_Ca
      +                          llBack();
  8492  002A98  ECB4  F015         	call	_TMR0_CallBack	;wreg free
  8493  002A9C                     
  8494                           ;mcc_generated_files/tmr0.c: 155:         CountCallBack = 0;
  8495  002A9C  0E00               	movlw	0
  8496  002A9E  0100               	movlb	0	; () banked
  8497  002AA0  6F98               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
  8498  002AA2  0E00               	movlw	0
  8499  002AA4  6F97               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
  8500  002AA6                     i2l266:
  8501                           
  8502                           ; BSR set to: 0
  8503  002AA6  0012               	return		;funcret
  8504  002AA8                     __end_of_TMR0_ISR:
  8505                           	callstack 0
  8506                           
  8507 ;; *************** function _TMR0_CallBack *****************
  8508 ;; Defined at:
  8509 ;;		line 161 in file "mcc_generated_files/tmr0.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;		None
  8512 ;; Auto vars:     Size  Location     Type
  8513 ;;		None
  8514 ;; Return value:  Size  Location     Type
  8515 ;;                  1    wreg      void 
  8516 ;; Registers used:
  8517 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8518 ;; Tracked objects:
  8519 ;;		On entry : 0/0
  8520 ;;		On exit  : 0/0
  8521 ;;		Unchanged: 0/0
  8522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8527 ;;Total ram usage:        0 bytes
  8528 ;; Hardware stack levels used:    1
  8529 ;; Hardware stack levels required when called:    1
  8530 ;; This function calls:
  8531 ;;		Absolute function
  8532 ;;		_Minute
  8533 ;;		_TMR0_DefaultInterruptHandler
  8534 ;; This function is called by:
  8535 ;;		_TMR0_ISR
  8536 ;; This function uses a non-reentrant model
  8537 ;;
  8538                           
  8539                           	psect	text69
  8540  002B68                     __ptext69:
  8541                           	callstack 0
  8542  002B68                     _TMR0_CallBack:
  8543                           	callstack 15
  8544  002B68                     
  8545                           ;mcc_generated_files/tmr0.c: 165:     if(TMR0_InterruptHandler)
  8546  002B68  0100               	movlb	0	; () banked
  8547  002B6A  51EC               	movf	_TMR0_InterruptHandler& (0+255),w,b
  8548  002B6C  11ED               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  8549  002B6E  B4D8               	btfsc	status,2,c
  8550  002B70  EFBC  F015         	goto	i2u287_41
  8551  002B74  EFBE  F015         	goto	i2u287_40
  8552  002B78                     i2u287_41:
  8553  002B78  EFCB  F015         	goto	i2l270
  8554  002B7C                     i2u287_40:
  8555  002B7C                     
  8556                           ; BSR set to: 0
  8557                           ;mcc_generated_files/tmr0.c: 166:     {;mcc_generated_files/tmr0.c: 167:         TMR0_In
      +                          terruptHandler();
  8558  002B7C  D802               	call	i2u288_48
  8559  002B7E  EFCB  F015         	goto	i2u288_49
  8560  002B82                     i2u288_48:
  8561  002B82  0005               	push	
  8562  002B84  6EFA               	movwf	pclath,c
  8563  002B86  51EC               	movf	_TMR0_InterruptHandler& (0+255),w,b
  8564  002B88  6EFD               	movwf	tosl,c
  8565  002B8A  51ED               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  8566  002B8C  6EFE               	movwf	tosh,c
  8567  002B8E  50F8               	movf	tblptru,w,c
  8568  002B90  6EFF               	movwf	tosu,c
  8569  002B92  50FA               	movf	pclath,w,c
  8570  002B94  0012               	return		;indir
  8571  002B96                     i2u288_49:
  8572  002B96                     i2l270:
  8573  002B96  0012               	return		;funcret
  8574  002B98                     __end_of_TMR0_CallBack:
  8575                           	callstack 0
  8576                           
  8577 ;; *************** function _Minute *****************
  8578 ;; Defined at:
  8579 ;;		line 223 in file "main.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;		None
  8582 ;; Auto vars:     Size  Location     Type
  8583 ;;		None
  8584 ;; Return value:  Size  Location     Type
  8585 ;;                  1    wreg      void 
  8586 ;; Registers used:
  8587 ;;		wreg, status,2
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 0/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8597 ;;Total ram usage:        0 bytes
  8598 ;; Hardware stack levels used:    1
  8599 ;; This function calls:
  8600 ;;		Nothing
  8601 ;; This function is called by:
  8602 ;;		_main
  8603 ;;		_TMR0_CallBack
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           	psect	text70
  8608  002DB8                     __ptext70:
  8609                           	callstack 0
  8610  002DB8                     _Minute:
  8611                           	callstack 15
  8612  002DB8                     
  8613                           ;main.c: 224:     if (minute == Oui) {
  8614  002DB8  0100               	movlb	0	; () banked
  8615  002DBA  51FB               	movf	_minute& (0+255),w,b
  8616  002DBC  A4D8               	btfss	status,2,c
  8617  002DBE  EFE3  F016         	goto	i2u264_41
  8618  002DC2  EFE5  F016         	goto	i2u264_40
  8619  002DC6                     i2u264_41:
  8620  002DC6  EFE9  F016         	goto	i2l700
  8621  002DCA                     i2u264_40:
  8622  002DCA                     
  8623                           ; BSR set to: 0
  8624                           ;main.c: 225:         MINUTE = 1;
  8625  002DCA  0E01               	movlw	1
  8626  002DCC  6F9B               	movwf	_MINUTE& (0+255),b
  8627                           
  8628                           ;main.c: 226:         minute = Non;
  8629  002DCE  0E01               	movlw	1
  8630  002DD0  6FFB               	movwf	_minute& (0+255),b
  8631  002DD2                     i2l700:
  8632                           
  8633                           ; BSR set to: 0
  8634  002DD2  0012               	return		;funcret
  8635  002DD4                     __end_of_Minute:
  8636                           	callstack 0
  8637                           
  8638 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8639 ;; Defined at:
  8640 ;;		line 175 in file "mcc_generated_files/tmr0.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;		None
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;		None
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  1    wreg      void 
  8647 ;; Registers used:
  8648 ;;		None
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8658 ;;Total ram usage:        0 bytes
  8659 ;; Hardware stack levels used:    1
  8660 ;; This function calls:
  8661 ;;		Nothing
  8662 ;; This function is called by:
  8663 ;;		_TMR0_Initialize
  8664 ;;		_TMR0_CallBack
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           	psect	text71
  8669  002EB0                     __ptext71:
  8670                           	callstack 0
  8671  002EB0                     _TMR0_DefaultInterruptHandler:
  8672                           	callstack 15
  8673  002EB0  0012               	return		;funcret
  8674  002EB2                     __end_of_TMR0_DefaultInterruptHandler:
  8675                           	callstack 0
  8676                           
  8677                           	psect	text72
  8678  000000                     __ptext72:
  8679                           	callstack 0
  8680  000000                     
  8681                           	psect	rparam
  8682  0000                     
  8683                           	psect	temp
  8684  000059                     btemp:
  8685                           	callstack 0
  8686  000059                     	ds	1
  8687  0000                     int$flags	set	btemp
  8688  0000                     wtemp8	set	btemp+1
  8689  0000                     ttemp5	set	btemp+1
  8690  0000                     ttemp6	set	btemp+4
  8691  0000                     ttemp7	set	btemp+8
  8692                           
  8693                           	psect	idloc
  8694                           
  8695                           ;Config register IDLOC0 @ 0x200000
  8696                           ;	unspecified, using default values
  8697  200000                     	org	2097152
  8698  200000  FF                 	db	255
  8699                           
  8700                           ;Config register IDLOC1 @ 0x200001
  8701                           ;	unspecified, using default values
  8702  200001                     	org	2097153
  8703  200001  FF                 	db	255
  8704                           
  8705                           ;Config register IDLOC2 @ 0x200002
  8706                           ;	unspecified, using default values
  8707  200002                     	org	2097154
  8708  200002  FF                 	db	255
  8709                           
  8710                           ;Config register IDLOC3 @ 0x200003
  8711                           ;	unspecified, using default values
  8712  200003                     	org	2097155
  8713  200003  FF                 	db	255
  8714                           
  8715                           ;Config register IDLOC4 @ 0x200004
  8716                           ;	unspecified, using default values
  8717  200004                     	org	2097156
  8718  200004  FF                 	db	255
  8719                           
  8720                           ;Config register IDLOC5 @ 0x200005
  8721                           ;	unspecified, using default values
  8722  200005                     	org	2097157
  8723  200005  FF                 	db	255
  8724                           
  8725                           ;Config register IDLOC6 @ 0x200006
  8726                           ;	unspecified, using default values
  8727  200006                     	org	2097158
  8728  200006  FF                 	db	255
  8729                           
  8730                           ;Config register IDLOC7 @ 0x200007
  8731                           ;	unspecified, using default values
  8732  200007                     	org	2097159
  8733  200007  FF                 	db	255
  8734                           
  8735                           	psect	config
  8736                           
  8737                           ;Config register CONFIG1L @ 0x300000
  8738                           ;	VREG Sleep Enable bit
  8739                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
  8740                           ;	LF-INTOSC Low-power Enable bit
  8741                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  8742                           ;	SOSC Power Selection and mode Configuration bits
  8743                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  8744                           ;	Extended Instruction Set
  8745                           ;	XINST = OFF, Disabled
  8746  300000                     	org	3145728
  8747  300000  15                 	db	21
  8748                           
  8749                           ;Config register CONFIG1H @ 0x300001
  8750                           ;	Oscillator
  8751                           ;	FOSC = HS2, HS oscillator (High power, 16 MHz - 25 MHz)
  8752                           ;	PLL x4 Enable bit
  8753                           ;	PLLCFG = OFF, Disabled
  8754                           ;	Fail-Safe Clock Monitor
  8755                           ;	FCMEN = OFF, Disabled
  8756                           ;	Internal External Oscillator Switch Over Mode
  8757                           ;	IESO = OFF, Disabled
  8758  300001                     	org	3145729
  8759  300001  02                 	db	2
  8760                           
  8761                           ;Config register CONFIG2L @ 0x300002
  8762                           ;	Power Up Timer
  8763                           ;	PWRTEN = OFF, Disabled
  8764                           ;	Brown Out Detect
  8765                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
  8766                           ;	Brown-out Reset Voltage bits
  8767                           ;	BORV = 3, 1.8V
  8768                           ;	BORMV Power level
  8769                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  8770  300002                     	org	3145730
  8771  300002  7F                 	db	127
  8772                           
  8773                           ;Config register CONFIG2H @ 0x300003
  8774                           ;	Watchdog Timer
  8775                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  8776                           ;	Watchdog Postscaler
  8777                           ;	WDTPS = 1048576, 1:1048576
  8778  300003                     	org	3145731
  8779  300003  7C                 	db	124
  8780                           
  8781                           ; Padding undefined space
  8782  300004                     	org	3145732
  8783  300004  FF                 	db	255
  8784                           
  8785                           ;Config register CONFIG3H @ 0x300005
  8786                           ;	ECAN Mux bit
  8787                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
  8788                           ;	MSSP address masking
  8789                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
  8790                           ;	Master Clear Enable
  8791                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
  8792  300005                     	org	3145733
  8793  300005  89                 	db	137
  8794                           
  8795                           ;Config register CONFIG4L @ 0x300006
  8796                           ;	Stack Overflow Reset
  8797                           ;	STVREN = ON, Enabled
  8798                           ;	Boot Block Size
  8799                           ;	BBSIZ = BB2K, 2K word Boot Block size
  8800  300006                     	org	3145734
  8801  300006  91                 	db	145
  8802                           
  8803                           ; Padding undefined space
  8804  300007                     	org	3145735
  8805  300007  FF                 	db	255
  8806                           
  8807                           ;Config register CONFIG5L @ 0x300008
  8808                           ;	Code Protect 00800-01FFF
  8809                           ;	CP0 = OFF, Disabled
  8810                           ;	Code Protect 02000-03FFF
  8811                           ;	CP1 = OFF, Disabled
  8812                           ;	Code Protect 04000-05FFF
  8813                           ;	CP2 = OFF, Disabled
  8814                           ;	Code Protect 06000-07FFF
  8815                           ;	CP3 = OFF, Disabled
  8816  300008                     	org	3145736
  8817  300008  0F                 	db	15
  8818                           
  8819                           ;Config register CONFIG5H @ 0x300009
  8820                           ;	Code Protect Boot
  8821                           ;	CPB = OFF, Disabled
  8822                           ;	Data EE Read Protect
  8823                           ;	CPD = OFF, Disabled
  8824  300009                     	org	3145737
  8825  300009  C0                 	db	192
  8826                           
  8827                           ;Config register CONFIG6L @ 0x30000A
  8828                           ;	Table Write Protect 00800-01FFF
  8829                           ;	WRT0 = OFF, Disabled
  8830                           ;	Table Write Protect 02000-03FFF
  8831                           ;	WRT1 = OFF, Disabled
  8832                           ;	Table Write Protect 04000-05FFF
  8833                           ;	WRT2 = OFF, Disabled
  8834                           ;	Table Write Protect 06000-07FFF
  8835                           ;	WRT3 = OFF, Disabled
  8836  30000A                     	org	3145738
  8837  30000A  0F                 	db	15
  8838                           
  8839                           ;Config register CONFIG6H @ 0x30000B
  8840                           ;	Config. Write Protect
  8841                           ;	WRTC = OFF, Disabled
  8842                           ;	Table Write Protect Boot
  8843                           ;	WRTB = OFF, Disabled
  8844                           ;	Data EE Write Protect
  8845                           ;	WRTD = OFF, Disabled
  8846  30000B                     	org	3145739
  8847  30000B  E0                 	db	224
  8848                           
  8849                           ;Config register CONFIG7L @ 0x30000C
  8850                           ;	Table Read Protect 00800-01FFF
  8851                           ;	EBTR0 = OFF, Disabled
  8852                           ;	Table Read Protect 02000-03FFF
  8853                           ;	EBTR1 = OFF, Disabled
  8854                           ;	Table Read Protect 04000-05FFF
  8855                           ;	EBTR2 = OFF, Disabled
  8856                           ;	Table Read Protect 06000-07FFF
  8857                           ;	EBTR3 = OFF, Disabled
  8858  30000C                     	org	3145740
  8859  30000C  0F                 	db	15
  8860                           
  8861                           ;Config register CONFIG7H @ 0x30000D
  8862                           ;	Table Read Protect Boot
  8863                           ;	EBTRB = OFF, Disabled
  8864  30000D                     	org	3145741
  8865  30000D  40                 	db	64
  8866                           tosu	equ	0xFFF
  8867                           tosh	equ	0xFFE
  8868                           tosl	equ	0xFFD
  8869                           stkptr	equ	0xFFC
  8870                           pclatu	equ	0xFFB
  8871                           pclath	equ	0xFFA
  8872                           pcl	equ	0xFF9
  8873                           tblptru	equ	0xFF8
  8874                           tblptrh	equ	0xFF7
  8875                           tblptrl	equ	0xFF6
  8876                           tablat	equ	0xFF5
  8877                           prodh	equ	0xFF4
  8878                           prodl	equ	0xFF3
  8879                           indf0	equ	0xFEF
  8880                           postinc0	equ	0xFEE
  8881                           postdec0	equ	0xFED
  8882                           preinc0	equ	0xFEC
  8883                           plusw0	equ	0xFEB
  8884                           fsr0h	equ	0xFEA
  8885                           fsr0l	equ	0xFE9
  8886                           wreg	equ	0xFE8
  8887                           indf1	equ	0xFE7
  8888                           postinc1	equ	0xFE6
  8889                           postdec1	equ	0xFE5
  8890                           preinc1	equ	0xFE4
  8891                           plusw1	equ	0xFE3
  8892                           fsr1h	equ	0xFE2
  8893                           fsr1l	equ	0xFE1
  8894                           bsr	equ	0xFE0
  8895                           indf2	equ	0xFDF
  8896                           postinc2	equ	0xFDE
  8897                           postdec2	equ	0xFDD
  8898                           preinc2	equ	0xFDC
  8899                           plusw2	equ	0xFDB
  8900                           fsr2h	equ	0xFDA
  8901                           fsr2l	equ	0xFD9
  8902                           status	equ	0xFD8

Data Sizes:
    Strings     74
    Constant    0
    Data        9
    BSS         97
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      88
    BANK0           160     37     159
    BANK1           256      2       2
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2224_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_5(CODE[14]), STR_4(CODE[11]), STR_3(CODE[14]), STR_2(CODE[14]), 
		 -> STR_1(CODE[21]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_5(CODE[14]), STR_4(CODE[11]), STR_3(CODE[14]), STR_2(CODE[14]), 
		 -> STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_5(CODE[14]), STR_4(CODE[11]), STR_3(CODE[14]), STR_2(CODE[14]), 
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_5(CODE[14]), STR_4(CODE[11]), STR_3(CODE[14]), STR_2(CODE[14]), 
		 -> STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> connect(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> connect(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Secondes_5(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Secondes_5(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Minute(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Minute(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Blink_(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Blink_(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _traitementNormale->_TMR3_WriteTimer
    _reception_->_lecture
    _reception_affichage->_affiche
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _LCD_Function->_EUSART_function
    _EUSART_function->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _connect->_TMR1_WriteTimer
    _TMR3_ISR->i2_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR1_CallBack->_Blink_

Critical Paths under _main in BANK0

    _affiche->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_traitementEcran

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   15805
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
                    _TMR3_Initialize
           _TMR3_SetInterruptHandler
           _TMR4_SetInterruptHandler
                          _lamp_test
                    _traitementEcran
                  _traitementNormale
 ---------------------------------------------------------------------------------
 (1) _traitementNormale                                    4     4      0     290
                                              8 COMRAM     4     4      0
                    _TMR3_WriteTimer
                         _reception_
 ---------------------------------------------------------------------------------
 (2) _reception_                                           0     0      0       0
                            _lecture
 ---------------------------------------------------------------------------------
 (2) _TMR3_WriteTimer                                      2     0      2     290
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _traitementEcran                                      2     2      0   13417
                                              0 BANK1      2     2      0
                       _LCD_Function
                _reception_affichage
 ---------------------------------------------------------------------------------
 (2) _reception_affichage                                  0     0      0   12027
                            _affiche
                            _lecture
 ---------------------------------------------------------------------------------
 (3) _affiche                                              1     1      0   12027
                                             80 COMRAM     1     1      0
                       _LCD_Function
                            _lecture
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              12     4      8   10637
                                             25 BANK0     12     4      8
                            _lecture (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   10100
                                             17 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           46    40      6    9567
                                             74 COMRAM     6     0      6
                                              0 BANK0     17    17      0
                               _atoi
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                39    28     11    5385
                                             35 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              8     6      2     512
                                             12 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              6     4      2     191
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    3355
                                             24 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     220
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1506
                                             17 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               9     5      4    1006
                                              8 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0      62
                                              7 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     191
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              6     4      2     191
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    1615
                                             13 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     259
                                              6 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     281
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     512
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _lecture                                              1     1      0       0
                                              6 COMRAM     1     1      0
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LCD_Function                                         5     3      2    1390
                                              8 COMRAM     5     3      2
                      _EUSART1_Write
                    _EUSART_function
 ---------------------------------------------------------------------------------
 (5) _EUSART_function                                      1     1      0      62
                                              7 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Write                                       1     1      0      31
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lamp_test                                           10    10      0     140
                                              6 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1088
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR3_Initialize                                      2     2      0     174
                                              8 COMRAM     2     2      0
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     174
                                              8 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                              8 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          4     4      0     746
                                              2 COMRAM     4     4      0
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR4_ISR                                            0     0      0     316
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR4_CallBack                                       0     0      0     316
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                            _connect *
 ---------------------------------------------------------------------------------
 (16) _connect                                             0     0      0     316
                    _TMR1_WriteTimer
                          i2_lecture
 ---------------------------------------------------------------------------------
 (17) i2_lecture                                           1     1      0       0
                                              0 COMRAM     1     1      0
                     i2_EUSART1_Read
 ---------------------------------------------------------------------------------
 (18) i2_EUSART1_Read                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                            0     0      0     114
                      _TMR3_CallBack
                  i2_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) i2_TMR3_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0       0
                   Absolute function *
                         _Secondes_5 *
       _TMR3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _Secondes_5                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR2_ISR                                            0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR2_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     316
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (17) _TMR1_WriteTimer                                     2     0      2     316
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0       0
                   Absolute function *
                             _Blink_ *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _Blink_                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (14) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
                             _Minute *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _Minute                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR3_Initialize
     _TMR3_SetInterruptHandler
   _TMR3_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _lamp_test
   _traitementEcran
     _LCD_Function
       _EUSART1_Write
       _EUSART_function
         _EUSART1_Write
     _reception_affichage
       _affiche
         _LCD_Function
           _EUSART1_Write
           _EUSART_function
             _EUSART1_Write
         _lecture
           _EUSART1_Read
         _printf
           _lecture (ARG)
             _EUSART1_Read
           _vfprintf (ARG)
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _fputc
                 _putch
                   _EUSART1_Write
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART1_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART1_Write
                   _strlen
                 _toupper
                   _islower
       _lecture
         _EUSART1_Read
   _traitementNormale
     _TMR3_WriteTimer
     _reception_
       _lecture
         _EUSART1_Read

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _Minute *
       _TMR0_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _Blink_ *
       _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _Secondes_5 *
       _TMR3_DefaultInterruptHandler *
     i2_TMR3_WriteTimer
   _TMR4_ISR
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
       _connect *
         _TMR1_WriteTimer
         i2_lecture
           i2_EUSART1_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      2       2       8        0.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     25      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      58       1       93.6%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F9       6        0.0%
DATA                 0      0      F9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue May 17 13:09:15 2022

              __end_of_TMR2_SetInterruptHandler 2E68                                               _c 007B  
                                             _i 0054                                               _m 008D  
                   __end_of_reception_affichage 2D7C                                              l25 2C46  
                                            l71 2836                                              l92 2C1C  
                                            l95 2E0A                                              l88 2BF4  
                                            l98 2E1C                                              _PX 0052  
                                            _PY 0085                                              _PZ 0083  
                                            _Hx 008F                                              _t1 008B  
                                            _t2 0089                                              _t3 0087  
                           ___wmul@multiplicand 0009                                 _timer0ReloadVal 00EA  
                                           l104 2E48                                             l122 2E98  
                                           l116 2E8E                                             l119 2E84  
                                           l151 2D5C                                             l305 28AC  
                                           l154 2E2E                                             l219 2E70  
                                           l245 2A3A                                             l341 2E5C  
                                           l183 28E6                                             l319 2C98  
                                           l273 2E7A                                             l427 2EA2  
                                           l461 2D98                                             l605 2564  
                                           l367 2DB6                                             l631 1FAE  
                                           l395 2E66                                             l637 2016  
                                           l813 2154                                             l743 197E  
                                           l816 2D36                                             l736 184A  
                                           l489 2E52                                             l763 1E98  
                                           l748 19E0                                             l774 2DEA  
                                           l775 2DEC                                             l768 2D74  
                                           l785 2268                                             l793 2446  
                                           l769 2D7A                                             l789 2E3E  
                                           _PR2 000FCB                                             _PR4 000FA9  
                                           _SPX 0081                                             _SPY 007F  
                                           _SPZ 007D                                 _timer1ReloadVal 00F0  
                                           _pad 2448                                 _TMR2_Initialize 2D9A  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                   ?_LCD_Function 0009  
                      __size_of_EUSART_function 0010                                            l1600 26A2  
                                          l4000 1996                                 _timer3ReloadVal 00E8  
                                          l1532 24D0                                            l1541 1314  
                                          l1534 250C                                            l1631 1D18  
                                          l3400 2228                                            l1640 2A02  
                                          l1529 248E                                            l3330 2C16  
                                          l3402 224C                                            l1634 2872  
                                          l1562 1546                                            l1539 130C  
                                          l3332 2C1A                                            l3324 2BF4  
                                          l3404 2250                                            l1628 1D10  
                                          l4300 249A                                            l1564 15AA  
                                          l1548 13A8                                            l3326 2C02  
                                          l3406 2258                                            l3414 2266  
                                          l1654 29CA                                            l4302 24AE  
                                          l1494 2CC0                                            l3512 2E86  
                                          l3520 2E72                                            l3328 2C08  
                                          l3408 2260                                            l1648 27B2  
                                          l4312 2994                                            l4304 24B2  
                                          l4320 2704                                            l4400 1536  
                                          l1593 12D2                                            l3514 2E7C  
                                          l3522 2E54                                            l4242 2E0A  
                                          l4330 29CC                                            l4250 25BE  
                                          l4306 24E0                                            l4402 1556  
                                          l1578 103E                                            l1683 2A70  
                                          l3516 2E90                                            l3524 2E5E  
                                          l3700 2D86                                            l4244 2E18  
                                          l3380 218A                                            l4340 27A8  
                                          l4420 1BC2                                            l4412 1B8A  
                                          l4316 2838                                            l4252 25D0  
                                          l4308 24F4                                            l4324 273A  
                                          l4404 155C                                            l4500 10B6  
                                          l1669 2640                                            l1677 27F6  
                                          l1693 2760                                            l3518 2E68  
                                          l3710 2DA4                                            l3526 2E4A  
                                          l3702 2D88                                            l3382 2192  
                                          l3374 2156                                            l4342 27AC  
                                          l4334 2762                                            l4430 1C18  
                                          l4422 1BF8                                            l4414 1B9E  
                                          l4246 2E42                                            l4254 25DA  
                                          l4262 27B4                                            l4270 2A3C  
                                          l4326 274C                                            l4406 156C  
                                          l4350 12E6                                            l4510 113A  
                                          l4502 10C4                                            l1599 269A  
                                          l3720 28BC                                            l3712 2DA6  
                                          l3704 2D94                                            l3800 2D38  
                                          l3392 21CC                                            l3376 2166  
                                          l4336 2766                                            l4440 1C92  
                                          l4432 1C20                                            l4424 1BFC  
                                          l4416 1BA2                                            l4256 25F8  
                                          l4248 25AC                                            l4264 27C0  
                                          l4272 2A48                                            l4280 295C  
                                          l1688 2758                                            l4408 1582  
                                          l4360 135A                                            l4352 1300  
                                          l4520 11B8                                            l4504 10E4  
                                          l4512 114C                                            l3730 2A06  
                                          l3722 28D4                                            l3714 2DB2  
                                          l3706 2D9A                                            l3810 2D4C  
                                          l3802 2D3C                                            l4602 20F2  
                                          l3394 21E0                                            l3386 21B2  
                                          l3378 2174                                            l4338 277A  
                                          l4434 1C28                                            l4418 1BA6  
                                          l4258 262E                                            l4266 27D2  
                                          l4274 2A4C                                            l4290 2448  
                                          l4370 139C                                            l4362 1362  
                                          l4354 132A                                            l4346 12D4  
                                          l4530 1262                                            l4522 11F4  
                                          l4514 1170                                            l4506 10F2  
                                          l1699 2992                                            l3740 2A36  
                                          l3732 2A0E                                            l3724 28D6  
                                          l3716 28AE                                            l3708 2DA2  
                                          l3812 2D50                                            l3804 2D40  
                                          l3900 1FBA                                            l3396 21F0  
                                          l3388 21C4                                            l4284 2D12  
                                          l4444 1CD0                                            l4436 1C5C  
                                          l4428 1C02                                            l4268 27D6  
                                          l4276 2A64                                            l4292 2458  
                                          l4380 1428                                            l4364 1368  
                                          l4356 1332                                            l4348 12E4  
                                          l4532 1276                                            l4516 1194  
                                          l4460 0F90                                            l4612 2C9A  
                                          l4620 238C                                            l4700 2562  
                                          l3670 27F8                                            l3734 2A26  
                                          l3726 28E2                                            l3718 28BA  
                                          l3814 2D54                                            l3806 2D44  
                                          l3902 1FDE                                            l3398 2218  
                                          l4286 2D2E                                            l4446 1CE2  
                                          l4294 246C                                            l4390 146A  
                                          l4382 143A                                            l4374 13DC  
                                          l4366 1370                                            l4358 1352  
                                          l4518 11AA                                            l4526 1230  
                                          l4462 0F94                                            l4542 129C  
                                          l4454 0F4C                                            l4614 2CA4  
                                          l4630 2410                                            l4622 239A  
                                          l3750 2C72                                            l4702 2576  
                                          l4710 2598                                            ?_pad 0019  
                                          l3672 280C                                            l3680 2EA0  
                                          l3736 2A28                                            l3728 2A04  
                                          l3816 2D58                                            l3808 2D48  
                                          l3904 1FF8                                            l4448 1CF4  
                                          l4296 247A                                            l4376 13EE  
                                          l4384 144E                                            l4368 138C  
                                          l4392 14C8                                            l4544 12C0  
                                          l4528 1254                                            l4536 1282  
                                          l4480 0FC6                                            l4472 0FBA  
                                          l4464 0FA0                                            l4456 0F70  
                                          l4560 2642                                            l4632 241E  
                                          l4624 23D0                                            l4640 2D76  
                                          l3752 2C80                                            l3760 2C90  
                                          l4712 25A0                                            l4704 257E  
                                          l3674 2818                                            l3682 2E1E  
                                          l3666 2C1E                                            l3738 2A2A  
                                          l3690 289A                                            l4570 201E  
                                          l4298 2486                                            l4394 14E4  
                                          l4386 145E                                            l4538 1290  
                                          l4466 0FA2                                            l4490 102C  
                                          l4458 0F7E                                            l4562 264A  
                                          l4634 242C                                            l4626 23DE  
                                          l4618 237E                                            l4650 1D56  
                                          l4642 1D1A                                            l3762 2C94  
                                          l3754 2C82                                            l4706 2582  
                                          l3676 2824                                            l3668 2C44  
                                          l3692 289C                                            l3684 2874  
                                          l4556 2E32                                            l4580 2056  
                                          l4572 2028                                            l4396 1502  
                                          l4388 1464                                            l4492 104C  
                                          l4484 0FCC                                            l4476 0FC0  
                                          l4468 0FB4                                            l4564 2658  
                                          l4628 23FE                                            l4636 2D5E  
                                          l4660 1DA0                                            l4652 1D5C  
                                          l4644 1D28                                            l3756 2C86  
                                          l3678 2830                                            l3694 28A8  
                                          l3686 2880                                            l4558 2E38  
                                          l4582 2060                                            l4590 2084  
                                          l4574 2038                                            l4398 151C  
                                          l4494 104E                                            l4566 267E  
                                          l4638 2D60                                            l4670 1DE8  
                                          l4662 1DB2                                            l4654 1D60  
                                          l4646 1D36                                            l3758 2C8A  
                                          l3688 2882                                            l3696 2D7C  
                                          l3880 1F10                                            l3872 1EA2  
                                          l4592 20BE                                            l4584 206C  
                                          l4576 2042                                            l4568 201A  
                                          l4496 1072                                            l4488 0FD8  
                                          l4680 1E3E                                            l4672 1DEC  
                                          l4664 1DC8                                            l4656 1D78  
                                          l4648 1D44                                            l3776 2DD4  
                                          l3960 17F2                                            l3698 2D84  
                                          l3890 1F56                                            l3874 1EC4  
                                          l3866 1E9A                                            l4594 20C8  
                                          l4586 2078                                            l4578 204C  
                                          l4498 10A8                                            l4674 1E04  
                                          l4682 1E54                                            l4666 1DD0  
                                          l4658 1D8A                                            l3778 2DD6  
                                          l3970 1838                                            l3962 1802  
                                          l3892 1F72                                            l3876 1EDE  
                                          l4596 20D2                                            l4676 1E16  
                                          l4668 1DE4                                            l3980 1884  
                                          l3972 1844                                            l3964 1810  
                                          l3956 17EA                                            l4692 250E  
                                          l3894 1F88                                            l3886 1F18  
                                          l3878 1EFA                                            l4598 20DC  
                                          l4678 1E2C                                            l4686 1E5C  
                                          l3990 1948                                            l3982 18A8  
                                          l3974 1858                                            l3966 1814  
                                          l3958 17EE                                            l4694 2546  
                                          l3896 1F9A                                            l3888 1F3C  
                                          l3984 18D6                                            l3992 1976  
                                          l3976 187A                                            l3968 1826  
                                          l4696 255C                                            l3898 1FA6  
                                          l4890 1C46                                            l3994 198C  
                                          l3986 18F8                                            l3978 1880  
                                          l4698 2560                                            l4892 2098  
                                          l4884 19AA                                            l3996 1990  
                                          l3988 1926                                            l4894 2106  
                                          l4886 1E72                                            l4888 0FFE  
                                          STR_1 0F01                                            STR_2 0F16  
                                          STR_3 0F24                                            STR_4 0F40  
                                          STR_5 0F32                                            u3100 2016  
                                          u3101 2012                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          u3040 1EB2                                            u4000 1072  
                                          u3041 1EAC                                            u4001 106E  
                                          u3050 1EFA                                            u2410 2166  
                                          u4010 10B6                                            u3051 1EF6  
                                          u2411 2162                                            u4011 10B2  
                                          u3060 1F28                                            u2420 218A  
                                          u4020 1134                                            u4100 2D74  
                                          u3300 1926                                            u3061 1F22  
                                          u2421 2186                                            u4021 112E  
                                          u4101 2D70                                            u3301 1922  
                                          u3070 1F72                                            u3046 1EB4  
                                          u2350 2C02                                            u2430 21AE  
                                          u4030 1136                                            u4110 1D28  
                                          u3310 1948                                            u3230 1802  
                                          u3071 1F6E                                            u2351 2BFE  
                                          u2431 21AA                                            u4111 1D24  
                                          u3311 1944                                            u3231 17FE  
                                          u3080 1F9A                                            u2360 2C16  
                                          u2440 21F0                                            u4040 114C  
                                          u4200 1E2C                                            u4120 1D78  
                                          u3320 1976                                            u3240 1810  
                                          u3081 1F96                                            u2361 2C12  
                                          u2441 21EC                                            u4041 1148  
                                          u4201 1E28                                            u4121 1D74  
                                          u3321 1972                                            u3241 180C  
                                          u3090 1FCA                                            u3066 1F2A  
                                          u2450 2228                                            u4050 1170  
                                          u4210 1E3E                                            u4130 1D8A  
                                          u3330 198C                                            u3250 1826  
                                          u3091 1FC4                                            u2451 2224  
                                          u4051 116C                                            u4211 1E3A  
                                          u4131 1D86                                            u3331 1988  
                                          u3251 1822                                            u3500 25BE  
                                          u4060 1194                                            u4220 1E54  
                                          u4140 1DA0                                            u3260 1858  
                                          u3501 25BA                                            u4061 1190  
                                          u4221 1E50                                            u4141 1D9C  
                                          u3261 1854                                            u3510 25D0  
                                          u4070 1254                                            u4150 1DB2  
                                          u3270 18A8                                            u4230 2556  
                                          u3511 25CC                                            u4071 1250  
                                          u4151 1DAE                                            u3271 18A4  
                                          u4231 2550                                            u3096 1FCC  
                                          u3520 25F8                                            u3600 24D0  
                                          u4080 269A                                            u4160 1DC8  
                                          u3280 18D6                                            u4240 2558  
                                          u3521 25F4                                            u3601 24CC  
                                          u4081 2696                                            u4161 1DC4  
                                          u3281 18D2                                            u3530 262E  
                                          u3610 24E0                                            u4090 2410  
                                          u4170 1DE4                                            u3290 18F8  
                                          u4250 2576                                            u4307 1F7C  
                                          u3531 262A                                            u3611 24DC  
                                          u4091 240C                                            u4171 1DE0  
                                          u3291 18F4                                            u4251 2572  
                                          u3700 29FE                                            u3620 29C4  
                                          u3540 27F6                                            u4180 1E04  
                                          u4260 2594                                            u4317 1FE8  
                                          u3621 29BE                                            u3541 27F2  
                                          u4181 1E00                                            u4261 2590  
                                          u3710 277A                                            u3630 29C6  
                                          u3550 2A64                                            u4190 1E16  
                                          u3711 2776                                            u3551 2A60  
                                          u4191 1E12                                            u3720 27A8  
                                          u3640 286C                                            u3560 298C  
                                          u3800 1422                                            u3721 27A4  
                                          u3641 2866                                            u3561 2986  
                                          u3801 141C                                            u3490 2E18  
                                          u3650 286E                                            u3570 298E  
                                          u3810 1424                                            u3730 12E4  
                                          u3491 2E14                                            u3731 12E0  
                                          u3900 1BC2                                            u3580 2458  
                                          u3660 2734                                            u3820 143A  
                                          u3740 1300                                            u4277 1ECE  
                                          u3901 1BBE                                            u3581 2454  
                                          u3661 272E                                            u3821 1436  
                                          u3741 12FC                                            u3910 1BF8  
                                          u3590 247A                                            u3670 2736  
                                          u3830 14A2                                            u3750 132A  
                                          u4287 1F04                                            u3911 1BF4  
                                          u3591 2476                                            u3751 1326  
                                          u3920 1C14                                            u3680 274C  
                                          u3840 14E4                                            u3760 138C  
                                          u2960 2DEA                                            u4297 1F46  
                                          u3921 1C10                                            u3681 2748  
                                          u3841 14E0                                            u3761 1388  
                                          u2961 2DE6                                            u3690 29FC  
                                          u3930 1CCA                                            u3850 1502  
                                          u3770 13D6                                            u2890 2C80  
                                          u3691 29F6                                            u3931 1CC4  
                                          u3851 14FE                                            u3835 1490  
                                          u3771 13D0                                            u2891 2C7C  
                                          u3940 1CCC                                            u3860 151C  
                                          u3780 13D8                                            u3861 1518  
                                          u3950 1CE2                                            u3870 1536  
                                          u3790 13EE                                            u3951 1CDE  
                                          u3871 1532                                            u3791 13EA  
                                          u3960 1CF4                                            u3880 1546  
                                          u3961 1CF0                                            u3881 1542  
                                          u3890 1556                                            u3970 0F70  
                                          u3891 1552                                            u3971 0F6C  
                                          u3980 103E                                            u3981 103A  
                                          u3990 104C                                            u3991 1048  
                                          i2l92 2C70                                            i2l88 2C48  
                                          _TMR2 000FCC                                            _TMR4 000F87  
                                          _WPUB 000F5B                                 lamp_test@j_1760 000B  
                               lamp_test@j_1758 000F                                   _EUSART1_Write 2E08  
                                          _dbuf 009D                                            _atoi 1B8A  
                                          _sec5 00FC                                            _main 250E  
                                 ?_EUSART1_Read 0001                                            _plat 00FA  
                                          _prec 0077                                            _nout 0073  
                                          pad@i 0020                                            pad@p 001D  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0022                                            fsr2l 000FD9  
                                          btemp 0059                                            _xtoa 12D4  
                    __size_ofi2_TMR3_WriteTimer 0028                                            prodh 000FF4  
                                          prodl 000FF3                                            start 00DC  
                               _TMR3_Initialize 2874                      ??_TMR1_SetInterruptHandler 0009  
                    ??_TMR4_SetInterruptHandler 0009                                    ___param_bank 000000  
                                         ??_pad 001F                         __end_of_TMR0_Initialize 2A3C  
                ??_TMR0_DefaultInterruptHandler 0001                  __size_of_OSCILLATOR_Initialize 0012  
                 __end_of_OSCILLATOR_Initialize 2E30                                           ?_atoi 000E  
                                         ?_main 0001                                           _T0CON 000FD5  
                                         ?_xtoa 0024                                           _T1CON 000FCD  
                                         _T2CON 000FCA                                           _T3CON 000FB1  
                                         _T4CON 000F88                                           i2l212 295A  
                                         i2l222 2EAE                                           i2l216 2B66  
                                         i2l270 2B96                                           i2l334 2920  
                                         i2l319 2CE8                                           i2l344 2EAA  
                                         i2l266 2AA6                                           i2l338 2B06  
                                         i2l276 2EB0                                           i2l700 2DD2  
                                         i2l197 2D10                                           i2l438 00C8  
                                         i2l392 2B36                                           i2l704 2E00  
                                         i2l721 1B08                                           i2l713 1A74  
                                         i2l706 2E06                                           i2l482 2BC4  
                                         i2l388 2BF2                                           i2l492 2EA8  
                                         i2l661 1676                                           i2l725 1B88  
                                         i2l398 2EAC                                           i2l486 2AD6  
                                         i2l719 1B06                                           i2l665 168E  
                                         i2l691 1784                                           i2l667 1690  
                                         i2l659 1674                                           i2l676 170A  
                                         i2l669 1692                                           i2l678 170C  
                                         i2l696 17E8                                           i2l785 237C  
                               __end_of_affiche 2448                                    vfpfcnvrt@fmt 004D  
                                         _TMR0H 000FD7                                    vfpfcnvrt@llu 00C1  
                                         _TMR1H 000FCF                                           _TMR0L 000FD6  
                                         _TMR1L 000FCE                                           _TMR3H 000FB3  
                                         _TMR3L 000FB2                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
             __size_of_TMR0_SetInterruptHandler 000A                                 _TMR4_Initialize 2D7C  
                                         _EtatE 0057                                           _EtatN 0058  
             __size_of_TMR3_SetInterruptHandler 000A                       ?_TMR0_SetInterruptHandler 0007  
                                ??_LCD_Function 000B                       ?_TMR3_SetInterruptHandler 0007  
                              __end_of_TMR0_ISR 2AA8                                __end_of_TMR1_ISR 295C  
                              __end_of_TMR2_ISR 2BF4                                __end_of_TMR3_ISR 2922  
                               __end_of_connect 1B8A                                __end_of_TMR4_ISR 2BC6  
                ??_TMR3_DefaultInterruptHandler 0001                                           _flags 0079  
                               __end_of_lecture 226A                                           _fputc 25AC  
                               __end_of_isalpha 2874                                           _fputs 27B4  
                               __end_of_isdigit 2A04                                           _perte 00F9  
                                         atoi@n 001B                                           pad@fp 0019  
                                         atoi@s 000E                                           _trame 0060  
                                         _width 0075                                           _putch 2E40  
                              ??i2_EUSART1_Read 0001                                 __end_of_islower 2994  
                               __end_of_isspace 27B4                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 28E8                                 __end_of_isupper 29CC  
                                         pclath 000FFA                                           tablat 000FF5  
                                ??_EUSART1_Read 0007                                           ttemp5 005A  
                                         ttemp6 005D                                           ttemp7 0061  
                                         status 000FD8                                           wtemp8 005A  
                                         xtoa@c 0049                                           xtoa@d 0026  
                                         xtoa@i 0047                                           xtoa@n 003F  
                                         xtoa@p 003B                                           xtoa@w 003D  
                                         xtoa@x 002E                                 __end_of_toupper 2762  
            _EUSART1_DefaultFramingErrorHandler 000000                                 _TMR1_WriteTimer 2CEA  
                                  _toupper$2419 0013                                 __initialization 26A4  
                                  __end_of_atoi 1D1A                      __end_of_EUSART1_Initialize 2838  
                                  __end_of_main 25AC                                    __end_of_xtoa 15AC  
                            __size_ofi2_lecture 0114                         __end_of_TMR2_Initialize 2DB8  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_atoi 0010  
                      _TMR2_SetInterruptHandler 2E5E                                          ??_main 0052  
                               _traitementEcran 1D1A                                          ??_xtoa 002F  
                                 __activetblptr 000002                           _TMR3_InterruptHandler 00E6  
                                        ?_fputc 0009                                          ?_fputs 0012  
                                        _ANCON0 000F5D                                          _ANCON1 000F5C  
                                    _Secondes_5 2DEE                                          ?_putch 0001  
                                        _T1GCON 000FAA                                          _T3GCON 000FB0  
                       TMR1_WriteTimer@timerVal 0001                         __end_of_TMR3_Initialize 28AE  
                                        i2l4020 0028                                          i2l4030 0064  
                                        i2l4022 0036                                          i2l4040 0096  
                                        i2l4032 0068                                          i2l4024 003A  
                                        i2l4042 00A4                                          i2l4034 0076  
                                        i2l4026 0048                                          i2l4018 001A  
                                        i2l3500 236C                                          i2l4044 00A8  
                                        i2l4036 0084                                          i2l4028 0056  
                                        i2l3350 2C56                                          i2l3502 2374  
                                        i2l4046 00B6                                          i2l4038 0088  
                                        i2l3360 2CEA                                          i2l3352 2C5C  
                                        i2l3600 1A22                                          i2l4048 00C4  
                                        i2l3362 2CF8                                          i2l3370 2D08  
                                        i2l3354 2C6A                                          i2l3610 1A5E  
                                        i2l3602 1A32                                          i2l3540 1614  
                                        i2l3532 15C2                                          i2l3372 2D0C  
                                        i2l3364 2CFA                                          i2l3356 2C6E  
                                        i2l3348 2C48                                          i2l3508 237A  
                                        i2l3620 1AB6                                          i2l3612 1A70  
                                        i2l3604 1A44                                          i2l3550 167C  
                                        i2l3542 1626                                          i2l3534 15E4  
                                        i2l3366 2CFE                                          i2l3470 227A  
                                        i2l3630 1B0A                                          i2l3622 1AC8  
                                        i2l3606 1A4C                                          i2l3614 1A7E  
                                        i2l3560 16F8                                          i2l3544 1648  
                                        i2l3536 15EA                                          i2l3528 15AC  
                                        i2l3368 2D02                                          i2l3480 22C6  
                                        i2l3472 2288                                          i2l3640 1B58  
                                        i2l3624 1AD0                                          i2l3616 1A92  
                                        i2l3632 1B0E                                          i2l3608 1A58  
                                        i2l3570 177E                                          i2l3562 170E  
                                        i2l3546 164C                                          i2l3538 160E  
                                        i2l3554 1698                                          i2l3490 2304  
                                        i2l3482 22D8                                          i2l3474 229E  
                                        i2l3642 1B6C                                          i2l3634 1B2A  
                                        i2l3626 1AE2                                          i2l3618 1AA4  
                                        i2l3572 1786                                          i2l3564 1712  
                                        i2l3548 1660                                          i2l3556 16E2  
                                        i2l3820 2924                                          i2l3492 232C  
                                        i2l3476 22A6                                          i2l3468 226A  
                                        i2l3644 1B7E                                          i2l3636 1B3C  
                                        i2l3628 1AF4                                          i2l3830 2A74  
                                        i2l3566 1734                                          i2l3742 2B38  
                                        i2l3822 2930                                          i2l3590 2DEE  
                                        i2l3494 233C                                          i2l3486 22E0  
                                        i2l3646 1B82                                          i2l3638 1B4C  
                                        i2l3832 2A7A                                          i2l3568 175C  
                                        i2l3576 17AE                                          i2l3744 2B4C  
                                        i2l3824 294C                                          i2l3592 2E02  
                                        i2l3840 28E8                                          i2l3496 2360  
                                        i2l3488 22F4                                          i2l3586 2DB8  
                                        i2l3746 2B68                                          i2l3834 2A7E  
                                        i2l3826 2950                                          i2l3818 2922  
                                        i2l3770 2B1C                                          i2l3850 2BC6  
                                        i2l3842 28EA                                          i2l3498 2364  
                                        i2l3594 19E2                                          i2l3588 2DCA  
                                        i2l3748 2B7C                                          i2l3836 2A98  
                                        i2l3828 2A72                                          i2l3852 2BC8  
                                        i2l3764 2AD8                                          i2l3844 28F6  
                                        i2l3596 19FE                                          i2l3772 2AA8  
                                        i2l3860 2B9A                                          i2l3838 2A9C  
                                        i2l3854 2BE4                                          i2l3766 2AEC  
                                        i2l3790 2CD2                                          i2l3846 2912  
                                        i2l3598 1A10                                          i2l3774 2ABC  
                                        i2l3862 2BB6                                          i2l3768 2B08  
                                        i2l3856 2BE8                                          i2l3792 2CD6  
                                        i2l3848 2916                                          i2l3864 2BBA  
                                        i2l3794 2CDA                                          i2l3786 2CC2  
                                        i2l3858 2B98                                          i2l3788 2CD0  
                                        i2l3796 2CE0                                          i2l3798 2CE4  
                                        i2l4896 16AC                                          i2l4898 17C2  
                                        _RCREG1 000FAE                                          _MINUTE 009B  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                 vfpfcnvrt@done 00CA                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _GoBack 00FE  
                                        _TXSTA1 000FAC                               ??_EUSART_function 0008  
                                        _Blink_ 15AC                                 _TMR3_WriteTimer 2C72  
                                        _Minute 2DB8            __end_of_TMR1_DefaultInterruptHandler 2EB0  
         __size_of_TMR1_DefaultInterruptHandler 0002                    _TMR1_DefaultInterruptHandler 2EAE  
                                  vfprintf@cfmt 00D4                                          ___wmul 2D12  
                                        _goback 00FD                                       ??_affiche 0051  
                      ?_EUSART1_SetErrorHandler 0007                       i2TMR3_WriteTimer@timerVal 0001  
                              ?_TMR0_Initialize 0001                         __end_of_TMR4_Initialize 2D9A  
                                        clear_0 26E8                                          _minute 00FB  
                                        _saving 0056                                          _printf 2C9A  
                                        pad@buf 001B                ??_EUSART1_SetOverrunErrorHandler 0009  
               ?_EUSART1_SetOverrunErrorHandler 0007                                          _strlen 2A3C  
                                     ??_connect 0003            __end_of_TMR4_DefaultInterruptHandler 2EAA  
         __size_of_TMR4_DefaultInterruptHandler 0002                    _TMR4_DefaultInterruptHandler 2EA8  
                                     ??_lecture 0007                                          fputc@c 0009  
                                        fputs@c 0016                                          fputs@i 0017  
                                  __pdataCOMRAM 0056                                          fputs@s 0012  
                                     ??_isalpha 0009                                       ??_isdigit 0009  
                                     ??_islower 0009                                    __mediumconst 0000  
                                     ??_isspace 0009                                          tblptrh 000FF7  
                                     ??_isupper 0009                                          tblptrl 000FF6  
                                        tblptru 000FF8                           __end_of_TMR0_CallBack 2B98  
                              __end_of_vfprintf 26A4                                 ??_EUSART1_Write 0007  
      TMR4_SetInterruptHandler@InterruptHandler 0007        TMR2_SetInterruptHandler@InterruptHandler 0007  
      TMR3_SetInterruptHandler@InterruptHandler 0007        TMR0_SetInterruptHandler@InterruptHandler 0007  
      TMR1_SetInterruptHandler@InterruptHandler 0007                         __end_of_TMR1_WriteTimer 2D12  
                                        xtoa@fp 0024                                       ??_toupper 000F  
                 __size_of_INTERRUPT_Initialize 0004                           __end_of_TMR1_CallBack 2B68  
                             __end_ofi2_lecture 237E                                ?_TMR1_Initialize 0001  
                             _SYSTEM_Initialize 2D38                                      __accesstop 0060  
                       __end_of__initialization 26F6                           __end_of_TMR2_CallBack 2B38  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                         __end_of_TMR3_CallBack 2B08                            __end_of_LCD_Function 2156  
                                __pcstackCOMRAM 0001                           __end_of_TMR4_CallBack 2AD8  
                       __end_of_traitementEcran 1E9A                                    __pidataBANK0 2E9A  
                           ??_SYSTEM_Initialize 000B                                       ?_TMR0_ISR 0001  
                                     ?_TMR1_ISR 0001                                       ?_TMR2_ISR 0001  
               fp__TMR1_DefaultInterruptHandler 0000                   ?_TMR1_DefaultInterruptHandler 0001  
                                     ?_TMR3_ISR 0001                                       ?_TMR4_ISR 0001  
                                 __end_of_fputc 2642                                   __end_of_fputs 27F8  
                                 __end_of_putch 2E4A                                   LCD_Function@x 0009  
                                 LCD_Function@z 000A                                ?_TMR2_Initialize 0001  
                          __end_of_EUSART1_Read 2C1E                           TMR0_ISR@CountCallBack 0097  
                         TMR3_ISR@CountCallBack 0095                 fp__TMR4_DefaultInterruptHandler 0000  
                 ?_TMR4_DefaultInterruptHandler 0001                                         ??_fputc 000D  
                     __end_of_SYSTEM_Initialize 2D5E                                         ??_fputs 0016  
                                   ?_Secondes_5 0001                         __end_of_TMR3_WriteTimer 2C9A  
                                       ??_putch 0008                                      __pbssBANK0 0060  
                            __size_of_lamp_test 017E                                ?_TMR3_Initialize 0001  
                         _TMR4_InterruptHandler 00E2                                         ?_Blink_ 0001  
                                       ?_Minute 0001                 __end_of_EUSART1_SetErrorHandler 2E9A  
              __end_of_TMR0_SetInterruptHandler 2E7C                __end_of_TMR3_SetInterruptHandler 2E5E  
                                       ?___wmul 0007                                      ??_TMR0_ISR 0001  
                                    ??_TMR1_ISR 0003                                      ??_TMR2_ISR 0001  
                                    ??_TMR3_ISR 0003                                      ??_TMR4_ISR 0003  
                              ?_TMR4_Initialize 0001                                         ?_printf 00D6  
                                       ?_strlen 0007          __end_of_EUSART1_SetFramingErrorHandler 2E90  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 2E86  
                  __size_of_reception_affichage 001E                                         _REFOCON 000F9A  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0388  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000F7D  
                              ?_TMR1_WriteTimer 0001                                 __size_of_Blink_ 023E  
                                       __Hparam 0000                                         __Lparam 0000  
                    ??_TMR2_SetInterruptHandler 0009                                 __size_of_Minute 001C  
                              ?_traitementEcran 0001                                 __size_of___wmul 0026  
                                     ?_vfprintf 00CE                                    __psmallconst 0F00  
                                       _affiche 237E                             __size_of_Secondes_5 001A  
                                       __pcinit 26A4                               __end_of_lamp_test 2018  
                                       __ramtop 0F00                                         __ptext0 250E  
                                       __ptext1 17EA                                         __ptext2 2DD4  
                                       __ptext3 2C72                                         __ptext4 1D1A  
                                       __ptext5 2D5E                                         __ptext6 237E  
                                       __ptext7 2C9A                                         __ptext8 2642  
                                       __ptext9 0F4C                                 __size_of_printf 0028  
                                       _connect 19E2                                       _T0CONbits 000FD5  
                ??_TMR1_DefaultInterruptHandler 0001                                 __size_of_strlen 0036  
                                     _T1CONbits 000FCD                                         _lecture 2156  
                         _OSCILLATOR_Initialize 2E1E                                       _T2CONbits 000FCA  
                                  __size_of_pad 00C6                                         _isalpha 2838  
                                       _isdigit 29CC                                       _T3CONbits 000FB1  
             __size_of_TMR1_SetInterruptHandler 000A                                       _T4CONbits 000F88  
                            _EUSART1_Initialize 27F8                                         _islower 295C  
                      ??_PIN_MANAGER_Initialize 0007               __size_of_TMR4_SetInterruptHandler 000A  
                                       _isspace 2762                       ?_TMR1_SetInterruptHandler 0007  
                     ?_TMR4_SetInterruptHandler 0007                                         _isupper 2994  
                               _EUSART_function 2E30                                      _reception_ 2DD4  
                                       atoi@neg 0014                      __size_of_SYSTEM_Initialize 0026  
                                       _toupper 2704                            end_of_initialization 26F6  
                              ?_TMR3_WriteTimer 0007                  ??_TMR4_DefaultInterruptHandler 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 000B  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 00F4  
                                       fputs@fp 0014                           __size_of_LCD_Function 013E  
                             __end_of_vfpfcnvrt 12D4                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 002A                                      ??_vfprintf 0051  
                          ??_EUSART1_Initialize 0009                                         strlen@a 0009  
                                       strlen@s 0007                        _TMR0_SetInterruptHandler 2E72  
                                     _PORTBbits 000F81                        _TMR3_SetInterruptHandler 2E54  
                             LCD_Function@ordre 000D                                      fp__connect 0000  
                                  _LCD_Function 2018                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0007                                    _EUSART1_Read 2BF4  
                                     i2_lecture 226A                                  __end_of_Blink_ 17EA  
                       __size_ofi2_EUSART1_Read 002A                                  __end_of_Minute 2DD4  
                  __end_of_INTERRUPT_Initialize 2EA4            __end_of_TMR2_DefaultInterruptHandler 2EAE  
         __size_of_TMR2_DefaultInterruptHandler 0002                    _TMR2_DefaultInterruptHandler 2EAC  
                                   vfpfcnvrt@ap 004F                                     vfpfcnvrt@fp 004B  
                                __end_of___wmul 2D38                                   __pidataCOMRAM 2EA4  
                             __size_of_TMR0_ISR 0036                               __size_of_TMR1_ISR 003A  
                             __size_of_TMR2_ISR 002E                               __size_of_TMR3_ISR 003A  
                       __end_of_EUSART_function 2E40                               __size_of_TMR4_ISR 002E  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 2CC2  
                                __end_of_strlen 2A72                             start_initialization 26A4  
                                    lamp_test@j 000D                                      lamp_test@k 0009  
                      __size_of_TMR0_Initialize 0038                 __size_of_PIN_MANAGER_Initialize 002A  
                                   ?_reception_ 0001                                     __end_of_pad 250E  
                                  ??_Secondes_5 0001                                     putch@txData 0008  
                            EUSART_function@hex 0008                           __end_of_EUSART1_Write 2E1E  
                                    ?i2_lecture 0001                                        ??_Blink_ 0001  
                           _reception_affichage 2D5E                                        ??_Minute 0001  
                      __size_of_TMR1_Initialize 003A                                     vfprintf@fmt 00D0  
                                      ??___wmul 000B                          __size_of_TMR0_CallBack 0030  
                                   __pdataBANK0 00F9                 fp__TMR2_DefaultInterruptHandler 0000  
                 ?_TMR2_DefaultInterruptHandler 0001                              __end_of_Secondes_5 2E08  
                        __size_of_TMR1_CallBack 0030                                        ??_printf 0051  
                                      ??_strlen 0009                          __size_of_TMR2_CallBack 0030  
                          ?_reception_affichage 0001                           TMR1_ISR@CountCallBack 0099  
                         TMR4_ISR@CountCallBack 0091                                     __pbssCOMRAM 0052  
                                 __pcstackBANK0 00BD                                   __pcstackBANK1 0100  
                      __size_of_TMR2_Initialize 001E                          __size_of_TMR3_CallBack 0030  
                             _traitementNormale 17EA                          __size_of_TMR4_CallBack 0030  
                            ?_traitementNormale 0001                ??_EUSART1_SetFramingErrorHandler 0009  
               ?_EUSART1_SetFramingErrorHandler 0007                                       _atoi$2343 0016  
                                     _atoi$2344 001A                                       _atoi$2345 0018  
                         _TMR0_InterruptHandler 00EC                                       __pnvBANK0 00E2  
                           ??_traitementNormale 0009                          _PIN_MANAGER_Initialize 2C1E  
                      __size_of_TMR3_Initialize 003A                                       __pintcode 0008  
              __end_of_TMR1_SetInterruptHandler 2E72                             __size_of_reception_ 001A  
              __end_of_TMR4_SetInterruptHandler 2E54                                        ?_affiche 0001  
                  ??_INTERRUPT_InterruptManager 0003                                ?_EUSART_function 0001  
                             __size_of_vfprintf 0062                                        ?_connect 0001  
                         ??_reception_affichage 0052                                     __smallconst 0F00  
                                      ?_lecture 0001                                        _BAUDCON1 000FA7  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isalpha 0007  
                                      ?_isdigit 0007                       __end_of_traitementNormale 19E2  
                                     _lamp_test 1E9A                            _EUSART1_ErrorHandler 00F2  
                                      ?_islower 0007                                        ?_isspace 0007  
                                      ?_isupper 0007                         _EUSART1_SetErrorHandler 2E90  
                      __size_of_TMR4_Initialize 001E                                   _TMR0_CallBack 2B68  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                      ?_toupper 000D                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 2EA0                                   _TMR1_CallBack 2B38  
                             ??_TMR0_Initialize 0009                                        _LCD_Mode 00F8  
                                ___wmul@product 000B         EUSART1_SetErrorHandler@interruptHandler 0007  
                                      _LATBbits 000F8A                                     ??i2_lecture 0001  
                                 _TMR2_CallBack 2B08                                        _PIE1bits 000F9D  
                                      _PIE2bits 000FA0                                        _PIE4bits 000FB6  
                      __size_of_TMR1_WriteTimer 0028                                       fp__Blink_ 0000  
                                      i2u300_40 2A98                                        i2u300_41 2A94  
                                      i2u301_40 2912                                        i2u301_41 290E  
                                      i2u302_40 2BE4                                        i2u302_41 2BE0  
                                      i2u303_40 2BB6                                        i2u303_41 2BB2  
           __size_of_INTERRUPT_InterruptManager 00D4                                        i2u240_40 2CF8  
                                      i2u240_41 2CF4                                        i2u250_40 233C  
                                      i2u250_41 2338                                        i2u251_40 15BE  
                                      i2u251_41 15BA                                        i2u260_40 1722  
                                      i2u252_40 15D2                                        i2u340_40 0084  
                                      i2u260_41 171C                                        i2u252_41 15CC  
                                      i2u340_41 0080                                        i2u260_46 1724  
                                      i2u252_46 15D4                                        i2u261_40 1744  
                                      i2u253_40 15FA                                        i2u341_40 0096  
                    ??_TMR0_SetInterruptHandler 0009                                        i2u261_41 173E  
                                      i2u253_41 15F4                                        i2u341_41 0092  
                                      i2u261_46 1746                                        i2u253_46 15FC  
                                      i2u262_40 176C                                        i2u254_40 1626  
                                      i2u238_40 2C56                                        i2u246_40 227A  
                                      i2u270_40 1A44                                        i2u342_40 00A4  
                                      i2u334_40 0028                                  i2_EUSART1_Read 2C48  
                                      i2u262_41 1766                                        i2u254_41 1622  
                                      i2u238_41 2C52                                        i2u246_41 2276  
                                      i2u270_41 1A40                                        i2u342_41 00A0  
                                      i2u334_41 0024                                        i2u262_46 176E  
                                      i2u263_40 1796                                        i2u255_40 1636  
                                      i2u239_40 2C6A                                        i2u247_40 229E  
                                      i2u271_40 1A70                                        i2u343_40 00B6  
                                      i2u335_40 0036                                        i2u263_41 1790  
                                      i2u255_41 1630                                        i2u239_41 2C66  
                                      i2u247_41 229A                                        i2u271_41 1A6C  
                                      i2u343_41 00B2                                        i2u335_41 0032  
                                      i2u263_46 1798                                        i2u255_46 1638  
                                      i2u264_40 2DCA                                        i2u256_40 1660  
                                      i2u248_40 22C2                                        i2u280_40 1B3C  
                                      i2u272_40 1A92                                        i2u344_40 00C4  
                                      i2u336_40 0048                                        i2u264_41 2DC6  
                                      i2u256_41 165C                                        i2u248_41 22BE  
                                      i2u280_41 1B38                                        i2u272_41 1A8E  
                                      i2u344_41 00C0                                        i2u336_41 0044  
                                      i2u257_40 168E                                        i2u265_40 2E00  
                                      i2u249_40 2304                                        i2u281_40 1B4C  
                                      i2u273_40 1AA4                                        i2u337_40 0056  
                                      i2u257_41 168A                                        i2u265_41 2DFC  
                                      i2u249_41 2300                                        i2u281_41 1B48  
                                      i2u273_41 1AA0                                        i2u337_41 0052  
                                      _PIR1bits 000F9E                                        i2u258_40 16F4  
                                      i2u290_40 2AEC                                        i2u282_40 1B6C  
                                      i2u274_40 1AB6                                        i2u266_40 19FE  
                                      i2u338_40 0064                                        i2u258_41 16F0  
                                      i2u290_41 2AE8                                        i2u282_41 1B68  
                                      i2u274_41 1AB2                                        i2u266_41 19FA  
                                      i2u338_41 0060                                        i2u259_40 170A  
                                      i2u283_40 1B7E                                        i2u275_40 1AC8  
                                      i2u267_40 1A10                                        i2u339_40 0076  
                                      i2u259_41 1706                                        i2u283_41 1B7A  
                                      i2u275_41 1AC4                                        i2u267_41 1A0C  
                                      i2u339_41 0072                                        _PIR2bits 000FA1  
                                      i2u292_40 2B1C                                        i2u291_48 2AF2  
                                      i2u276_40 1AE2                                        i2u268_40 1A22  
                                      i2u292_41 2B18                                        i2u291_49 2B06  
                                      i2u276_41 1ADE                                        i2u268_41 1A1E  
                                      i2u285_40 2B4C                                        i2u277_40 1AF4  
                                      i2u269_40 1A32                                        i2u285_41 2B48  
                                      i2u277_41 1AF0                                        i2u269_41 1A2E  
                                      i2u293_48 2B22                                        i2u278_40 1B06  
                                      i2u294_40 2ABC                                        i2u293_49 2B36  
                                      i2u278_41 1B02                                        i2u294_41 2AB8  
                                      i2u287_40 2B7C                                        i2u286_48 2B52  
                                      i2u279_40 1B2A                                        i2u287_41 2B78  
                                      i2u286_49 2B66                                        i2u279_41 1B26  
                                      _PIR4bits 000FB7                                        i2u295_48 2AC2  
                                      i2u295_49 2AD6                      ??_TMR3_SetInterruptHandler 0009  
                                 _TMR3_CallBack 2AD8                                        i2u288_48 2B82  
                                      i2u288_49 2B96                                        i2u298_40 2CD0  
                                      i2u298_41 2CCC                                        i2u299_40 294C  
                                      i2u299_41 2948                                        _RCONbits 000FD0  
                                     fp__Minute 0000                                        _TMR0_ISR 2A72  
                                      _TMR1_ISR 2922                                        _TMR2_ISR 2BC6  
                                      _TMR3_ISR 28E8                                        _TMR4_ISR 2B98  
                                 _TMR4_CallBack 2AA8                                       _vfpfcnvrt 0F4C  
                                     _xtoa$2310 0039                                       _xtoa$2309 0037  
                             ??_TMR1_Initialize 0009                               ___wmul@multiplier 0007  
                      __size_of_traitementEcran 0180                                      ?_lamp_test 0001  
                ??_TMR2_DefaultInterruptHandler 0001               __size_of_TMR2_SetInterruptHandler 000A  
                     ?_TMR2_SetInterruptHandler 0007                                    _isspace$2370 000D  
                                ?_TMR0_CallBack 0001                                      vfpfcnvrt@c 00C9  
                                   _INTCON2bits 000FF1                                       copy_data0 26B8  
                         ?_INTERRUPT_Initialize 0001                                  ?_TMR1_CallBack 0001  
                             ??_TMR2_Initialize 0009                                  ?_TMR2_CallBack 0001  
                                 fp__Secondes_5 0000                          __end_ofi2_EUSART1_Read 2C72  
                                ?_TMR3_CallBack 0001                                        __Hrparam 0000  
                      __size_of_TMR3_WriteTimer 0028                                      vfprintf@ap 00D2  
                                      __Lrparam 0000                                      vfprintf@fp 00CE  
                                ?_TMR4_CallBack 0001                         ??_OSCILLATOR_Initialize 0007  
                   __size_of_EUSART1_Initialize 0040                                      ?_vfpfcnvrt 004B  
                              __size_of_affiche 00CA                               ??_TMR3_Initialize 0009  
                      _TMR1_SetInterruptHandler 2E68                        _TMR4_SetInterruptHandler 2E4A  
                         _TMR1_InterruptHandler 00EE                       ??_EUSART1_SetErrorHandler 0009  
                   _EUSART1_DefaultErrorHandler 000000                                __size_of_connect 01A8  
                    __size_of_traitementNormale 01F8                                __size_of_lecture 0114  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                                  ??_reception_ 0008                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        __ptext10 12D4  
                                      __ptext11 2704                                        __ptext20 1B8A  
                                      __ptext12 295C                                        __ptext21 2762  
                                      __ptext13 2448                                      _T1GCONbits 000FAA  
                                      __ptext30 2D38                                        __ptext22 29CC  
                                      __ptext14 2A3C                                        __ptext31 2D7C  
                                      __ptext23 2D12                                        __ptext15 27B4  
                                      __ptext40 2E72                                        __ptext32 2E4A  
                                      __ptext24 2156                                        __ptext16 25AC  
                                      __ptext41 2C1E                                        __ptext33 2874  
                                      __ptext25 2BF4                                        __ptext17 2E40  
                                      __ptext50 2AA8                                        __ptext42 2E1E  
                                      __ptext34 2E54                                        __ptext26 2018  
                                      __ptext18 2994                                        __ptext51 2EA8  
                                      __ptext43 2EA0                                        __ptext35 2D9A  
                                      __ptext27 2E30                                        __ptext19 2838  
                                      __ptext60 2BC6                                        __ptext52 19E2  
                                      __ptext44 27F8                                        __ptext36 2E5E  
                                      __ptext28 2E08                                        __ptext61 2B08  
                                      __ptext53 226A                                        __ptext45 2E7C  
                                      __ptext37 28AE                                        __ptext29 1E9A  
                                      __ptext70 2DB8                                        __ptext62 2EAC  
                                      __ptext54 2C48                                        __ptext46 2E86  
                                      __ptext38 2E68                                        __ptext71 2EB0  
                                      __ptext63 2922                                        __ptext55 28E8  
                                      __ptext47 2E90                                        __ptext39 2A04  
                                      __ptext72 0000                                        __ptext64 2CEA  
                                      __ptext56 2CC2                                        __ptext65 2B38  
                                      __ptext57 2AD8                                        __ptext49 2B98  
                                      __ptext66 15AC                                        __ptext58 2DEE  
                                      __ptext67 2EAE                                        __ptext59 2EAA  
                                      __ptext68 2A72                                        __ptext69 2B68  
                              __size_of_isupper 0038                                      _T3GCONbits 000FB0  
                       TMR3_WriteTimer@timerVal 0007                                __size_of_toupper 005E  
                             ??_TMR4_Initialize 0009                                   __size_of_atoi 0190  
                                 __size_of_main 009E                                   __size_of_xtoa 02D8  
                               ?i2_EUSART1_Read 0001            __end_of_TMR0_DefaultInterruptHandler 2EB2  
         __size_of_TMR0_DefaultInterruptHandler 0002                    _TMR0_DefaultInterruptHandler 2EB0  
                             i2_TMR3_WriteTimer 2CC2  EUSART1_SetOverrunErrorHandler@interruptHandler 0007  
                                      int$flags 0059                              ?i2_TMR3_WriteTimer 0001  
                            __end_of_reception_ 2DEE                                        _vfprintf 2642  
            __end_of_INTERRUPT_InterruptManager 00DC                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 00D6                               ??_TMR1_WriteTimer 0003  
          __end_of_TMR3_DefaultInterruptHandler 2EAC           __size_of_TMR3_DefaultInterruptHandler 0002  
                  _TMR3_DefaultInterruptHandler 2EAA                     _EUSART1_FramingErrorHandler 00F6  
                           ??i2_TMR3_WriteTimer 0003                                  _vfpfcnvrt$2325 00CC  
                                    _INTCONbits 000FF2                                     ??_lamp_test 0007  
                               ??_TMR0_CallBack 0001                                        isalpha@c 0007  
                                      isdigit@c 0007                          ??_INTERRUPT_Initialize 0007  
                               ??_TMR1_CallBack 0003                               ??_traitementEcran 0100  
                                      intlevel2 0000                                 ??_TMR2_CallBack 0001  
                                      islower@c 0007                                        isspace@c 0007  
                       ?_PIN_MANAGER_Initialize 0001                                 ??_TMR3_CallBack 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 2E86         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 2E7C                                      _RCSTA1bits 000FAB  
                     __end_ofi2_TMR3_WriteTimer 2CEA                                        isupper@c 0007  
                               ??_TMR4_CallBack 0003                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                        printf@ap 00E0  
EUSART1_SetFramingErrorHandler@interruptHandler 0007                                     ??_vfpfcnvrt 00BD  
                             ??_TMR3_WriteTimer 0009                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 009C                 fp__TMR3_DefaultInterruptHandler 0000  
                 ?_TMR3_DefaultInterruptHandler 0001                           TMR2_ISR@CountCallBack 0093  
                               _TMR0_Initialize 2A04                                        toupper@c 000D  
                __end_of_PIN_MANAGER_Initialize 2C48                           _TMR2_InterruptHandler 00E4  
                               _TMR1_Initialize 28AE  
