

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Oct 06 11:58:06 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    91                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    92   000000                     
    93                           ; Version 2.35
    94                           ; Generated 05/05/2021 GMT
    95                           ; 
    96                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    97                           ; All rights reserved.
    98                           ; 
    99                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   100                           ; 
   101                           ; Redistribution and use in source and binary forms, with or without modification, are
   102                           ; permitted provided that the following conditions are met:
   103                           ; 
   104                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   105                           ;        conditions and the following disclaimer.
   106                           ; 
   107                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   108                           ;        of conditions and the following disclaimer in the documentation and/or other
   109                           ;        materials provided with the distribution. Publication is not required when
   110                           ;        this file is used in an embedded application.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F25K80 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128   000000                     
   129 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   130   000000                     
   131 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   132   000000                     
   133 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   134   000000                     
   135                           	psect	idataCOMRAM
   136   003002                     __pidataCOMRAM:
   137                           	callstack 0
   138                           
   139                           ;initializer for _timerCAN
   140   003002  26                 	db	38
   141                           
   142                           ;initializer for _threeLock
   143   003003  03                 	db	3
   144                           
   145                           ;initializer for _cligneLock
   146   003004  01                 	db	1
   147   000000                     _TMR2	set	4044
   148   000000                     _TXREG1	set	4013
   149   000000                     _RCREG1	set	4014
   150   000000                     _SPBRG1	set	4015
   151   000000                     _TXSTA1	set	4012
   152   000000                     _RCSTA1	set	4011
   153   000000                     _T3CON	set	4017
   154   000000                     _TMR3L	set	4018
   155   000000                     _TMR3H	set	4019
   156   000000                     _COMSTATbits	set	3953
   157   000000                     _RXB1SIDH	set	3889
   158   000000                     _RXB1SIDL	set	3890
   159   000000                     _RXB0D7	set	3949
   160   000000                     _RXB0D6	set	3948
   161   000000                     _RXB0D5	set	3947
   162   000000                     _RXB0D4	set	3946
   163   000000                     _RXB0D3	set	3945
   164   000000                     _RXB0D2	set	3944
   165   000000                     _RXB0D1	set	3943
   166   000000                     _RXB0D0	set	3942
   167   000000                     _RXB0DLC	set	3941
   168   000000                     _RXB0SIDH	set	3937
   169   000000                     _RXB0EIDL	set	3940
   170   000000                     _RXB0EIDH	set	3939
   171   000000                     _RXB0SIDL	set	3938
   172   000000                     _TXB2SIDL	set	3842
   173   000000                     _TXB2SIDH	set	3841
   174   000000                     _TXB2EIDH	set	3843
   175   000000                     _TXB2CONbits	set	3840
   176   000000                     _TXB1SIDL	set	3858
   177   000000                     _TXB1SIDH	set	3857
   178   000000                     _TXB1EIDH	set	3859
   179   000000                     _TXB1CONbits	set	3856
   180   000000                     _TXB0SIDL	set	3874
   181   000000                     _TXB0SIDH	set	3873
   182   000000                     _TXB0EIDH	set	3875
   183   000000                     _TXB0CONbits	set	3872
   184   000000                     _RXF5SIDL	set	3829
   185   000000                     _RXF5SIDH	set	3828
   186   000000                     _RXF5EIDL	set	3831
   187   000000                     _RXF5EIDH	set	3830
   188   000000                     _RXF4SIDL	set	3825
   189   000000                     _RXF4SIDH	set	3824
   190   000000                     _RXF4EIDL	set	3827
   191   000000                     _RXF4EIDH	set	3826
   192   000000                     _RXF3SIDL	set	3821
   193   000000                     _RXF3SIDH	set	3820
   194   000000                     _RXF3EIDL	set	3823
   195   000000                     _RXF3EIDH	set	3822
   196   000000                     _RXF2SIDL	set	3817
   197   000000                     _RXF2SIDH	set	3816
   198   000000                     _RXF2EIDL	set	3819
   199   000000                     _RXF2EIDH	set	3818
   200   000000                     _RXF1SIDL	set	3813
   201   000000                     _RXF1SIDH	set	3812
   202   000000                     _RXF1EIDL	set	3815
   203   000000                     _RXF1EIDH	set	3814
   204   000000                     _RXF0SIDL	set	3809
   205   000000                     _RXF0EIDL	set	3811
   206   000000                     _RXM1SIDL	set	3837
   207   000000                     _RXM1SIDH	set	3836
   208   000000                     _RXM1EIDL	set	3839
   209   000000                     _RXM1EIDH	set	3838
   210   000000                     _RXM0SIDL	set	3833
   211   000000                     _RXM0EIDL	set	3835
   212   000000                     _CIOCON	set	3952
   213   000000                     _ECANCON	set	3954
   214                           
   215                           	psect	nvCOMRAM
   216   00002B                     __pnvCOMRAM:
   217                           	callstack 0
   218   00002B                     _TMR2_InterruptHandler:
   219                           	callstack 0
   220   00002B                     	ds	2
   221   00002D                     _INT0_InterruptHandler:
   222                           	callstack 0
   223   00002D                     	ds	2
   224   00002F                     _EUSART1_ErrorHandler:
   225                           	callstack 0
   226   00002F                     	ds	2
   227   000031                     _EUSART1_OverrunErrorHandler:
   228                           	callstack 0
   229   000031                     	ds	2
   230   000033                     _EUSART1_FramingErrorHandler:
   231                           	callstack 0
   232   000033                     	ds	2
   233   000035                     _TMR1_InterruptHandler:
   234                           	callstack 0
   235   000035                     	ds	2
   236   000037                     _timer1ReloadVal:
   237                           	callstack 0
   238   000037                     	ds	2
   239   000039                     _TMR3_InterruptHandler:
   240                           	callstack 0
   241   000039                     	ds	2
   242   00003B                     _timer3ReloadVal:
   243                           	callstack 0
   244   00003B                     	ds	2
   245   000000                     _T2CONbits	set	4042
   246   000000                     _LATAbits	set	3977
   247   000000                     _LATCbits	set	3979
   248   000000                     _RXB0CON	set	3936
   249   000000                     _RCSTA1bits	set	4011
   250   000000                     _TXSTA1bits	set	4012
   251   000000                     _T1GCONbits	set	4010
   252   000000                     _T1CONbits	set	4045
   253   000000                     _T3GCONbits	set	4016
   254   000000                     _T3CONbits	set	4017
   255   000000                     _BRGCON1	set	3651
   256   000000                     _RXF0SIDH	set	3808
   257   000000                     _RXF0EIDH	set	3810
   258   000000                     _RXM0SIDH	set	3832
   259   000000                     _RXM0EIDH	set	3834
   260   000000                     _WPUB	set	3931
   261   000000                     _ANCON1	set	3932
   262   000000                     _ANCON0	set	3933
   263   000000                     _PIE5bits	set	3958
   264   000000                     _RCONbits	set	4048
   265   000000                     _OSCCON2	set	4050
   266   000000                     _OSCCON	set	4051
   267   000000                     _INTCON2bits	set	4081
   268   000000                     _INTCONbits	set	4082
   269   000000                     _SPBRGH1	set	3965
   270   000000                     _LATA	set	3977
   271   000000                     _PIE1bits	set	3997
   272   000000                     _PIE2bits	set	4000
   273   000000                     _PIR5bits	set	3959
   274   000000                     _BAUDCON1	set	4007
   275   000000                     _T1GCON	set	4010
   276   000000                     _T3GCON	set	4016
   277   000000                     _PIR2bits	set	4001
   278   000000                     _PIR1bits	set	3998
   279   000000                     _TRISA	set	3986
   280   000000                     _LATC	set	3979
   281   000000                     _LATB	set	3978
   282   000000                     _REFOCON	set	3994
   283   000000                     _OSCTUNE	set	3995
   284   000000                     _TRISC	set	3988
   285   000000                     _TRISB	set	3987
   286   000000                     _RXB0CONbits	set	3936
   287   000000                     _CANSTAT	set	3950
   288   000000                     _CANCON	set	3951
   289   000000                     _BRGCON3	set	3653
   290   000000                     _BRGCON2	set	3652
   291   000000                     _RXB1CONbits	set	3888
   292   000000                     _TXB0D7	set	3885
   293   000000                     _TXB0D6	set	3884
   294   000000                     _TXB0D5	set	3883
   295   000000                     _TXB0D4	set	3882
   296   000000                     _TXB0D3	set	3881
   297   000000                     _TXB0D2	set	3880
   298   000000                     _TXB0D1	set	3879
   299   000000                     _TXB0D0	set	3878
   300   000000                     _TXB0DLC	set	3877
   301   000000                     _TXB0EIDL	set	3876
   302   000000                     _TXB1D7	set	3869
   303   000000                     _TXB1D6	set	3868
   304   000000                     _TXB1D5	set	3867
   305   000000                     _TXB1D4	set	3866
   306   000000                     _TXB1D3	set	3865
   307   000000                     _TXB1D2	set	3864
   308   000000                     _TXB1D1	set	3863
   309   000000                     _TXB1D0	set	3862
   310   000000                     _TXB1DLC	set	3861
   311   000000                     _TXB1EIDL	set	3860
   312   000000                     _TXB2D7	set	3853
   313   000000                     _TXB2D6	set	3852
   314   000000                     _TXB2D5	set	3851
   315   000000                     _TXB2D4	set	3850
   316   000000                     _TXB2D3	set	3849
   317   000000                     _TXB2D2	set	3848
   318   000000                     _TXB2D1	set	3847
   319   000000                     _TXB2D0	set	3846
   320   000000                     _TXB2DLC	set	3845
   321   000000                     _TXB2EIDL	set	3844
   322   000000                     _RXB1D7	set	3901
   323   000000                     _RXB1D6	set	3900
   324   000000                     _RXB1D5	set	3899
   325   000000                     _RXB1D4	set	3898
   326   000000                     _RXB1D3	set	3897
   327   000000                     _RXB1D2	set	3896
   328   000000                     _RXB1D1	set	3895
   329   000000                     _RXB1D0	set	3894
   330   000000                     _RXB1DLC	set	3893
   331   000000                     _RXB1EIDL	set	3892
   332   000000                     _RXB1EIDH	set	3891
   333   000000                     _T2CON	set	4042
   334   000000                     _PR2	set	4043
   335   000000                     _T1CON	set	4045
   336   000000                     _TMR1L	set	4046
   337   000000                     _TMR1H	set	4047
   338                           
   339                           	psect	smallconst
   340   001000                     __psmallconst:
   341                           	callstack 0
   342   001000  00                 	db	0
   343   001001                     STR_1:
   344   001001  0A                 	db	10
   345   001002  20                 	db	32
   346   001003  54                 	db	84	;'T'
   347   001004  72                 	db	114	;'r'
   348   001005  61                 	db	97	;'a'
   349   001006  6D                 	db	109	;'m'
   350   001007  65                 	db	101	;'e'
   351   001008  20                 	db	32
   352   001009  43                 	db	67	;'C'
   353   00100A  41                 	db	65	;'A'
   354   00100B  4E                 	db	78	;'N'
   355   00100C  20                 	db	32
   356   00100D  3A                 	db	58	;':'
   357   00100E  69                 	db	105	;'i'
   358   00100F  64                 	db	100	;'d'
   359   001010  20                 	db	32
   360   001011  20                 	db	32
   361   001012  20                 	db	32
   362   001013  20                 	db	32
   363   001014  20                 	db	32
   364   001015  3A                 	db	58	;':'
   365   001016  20                 	db	32
   366   001017  25                 	db	37
   367   001018  30                 	db	48	;'0'
   368   001019  32                 	db	50	;'2'
   369   00101A  75                 	db	117	;'u'
   370   00101B  20                 	db	32
   371   00101C  20                 	db	32
   372   00101D  20                 	db	32
   373   00101E  20                 	db	32
   374   00101F  64                 	db	100	;'d'
   375   001020  61                 	db	97	;'a'
   376   001021  74                 	db	116	;'t'
   377   001022  61                 	db	97	;'a'
   378   001023  20                 	db	32
   379   001024  30                 	db	48	;'0'
   380   001025  20                 	db	32
   381   001026  3A                 	db	58	;':'
   382   001027  20                 	db	32
   383   001028  25                 	db	37
   384   001029  30                 	db	48	;'0'
   385   00102A  32                 	db	50	;'2'
   386   00102B  75                 	db	117	;'u'
   387   00102C  20                 	db	32
   388   00102D  20                 	db	32
   389   00102E  20                 	db	32
   390   00102F  20                 	db	32
   391   001030  64                 	db	100	;'d'
   392   001031  61                 	db	97	;'a'
   393   001032  74                 	db	116	;'t'
   394   001033  61                 	db	97	;'a'
   395   001034  20                 	db	32
   396   001035  31                 	db	49	;'1'
   397   001036  20                 	db	32
   398   001037  3A                 	db	58	;':'
   399   001038  20                 	db	32
   400   001039  25                 	db	37
   401   00103A  30                 	db	48	;'0'
   402   00103B  32                 	db	50	;'2'
   403   00103C  75                 	db	117	;'u'
   404   00103D  20                 	db	32
   405   00103E  20                 	db	32
   406   00103F  0A                 	db	10
   407   001040  0D                 	db	13
   408   001041  00                 	db	0
   409   001042                     STR_2:
   410   001042  0A                 	db	10
   411   001043  20                 	db	32
   412   001044  4C                 	db	76	;'L'
   413   001045  75                 	db	117	;'u'
   414   001046  78                 	db	120	;'x'
   415   001047  20                 	db	32
   416   001048  69                 	db	105	;'i'
   417   001049  6E                 	db	110	;'n'
   418   00104A  74                 	db	116	;'t'
   419   00104B  65                 	db	101	;'e'
   420   00104C  72                 	db	114	;'r'
   421   00104D  69                 	db	105	;'i'
   422   00104E  65                 	db	101	;'e'
   423   00104F  75                 	db	117	;'u'
   424   001050  72                 	db	114	;'r'
   425   001051  20                 	db	32
   426   001052  3A                 	db	58	;':'
   427   001053  64                 	db	100	;'d'
   428   001054  61                 	db	97	;'a'
   429   001055  74                 	db	116	;'t'
   430   001056  61                 	db	97	;'a'
   431   001057  20                 	db	32
   432   001058  30                 	db	48	;'0'
   433   001059  20                 	db	32
   434   00105A  3A                 	db	58	;':'
   435   00105B  20                 	db	32
   436   00105C  25                 	db	37
   437   00105D  30                 	db	48	;'0'
   438   00105E  32                 	db	50	;'2'
   439   00105F  75                 	db	117	;'u'
   440   001060  20                 	db	32
   441   001061  20                 	db	32
   442   001062  20                 	db	32
   443   001063  20                 	db	32
   444   001064  64                 	db	100	;'d'
   445   001065  61                 	db	97	;'a'
   446   001066  74                 	db	116	;'t'
   447   001067  61                 	db	97	;'a'
   448   001068  20                 	db	32
   449   001069  31                 	db	49	;'1'
   450   00106A  20                 	db	32
   451   00106B  3A                 	db	58	;':'
   452   00106C  20                 	db	32
   453   00106D  25                 	db	37
   454   00106E  30                 	db	48	;'0'
   455   00106F  32                 	db	50	;'2'
   456   001070  75                 	db	117	;'u'
   457   001071  20                 	db	32
   458   001072  20                 	db	32
   459   001073  0A                 	db	10
   460   001074  0D                 	db	13
   461   001075  00                 	db	0
   462   001076                     STR_4:
   463   001076  0A                 	db	10
   464   001077  20                 	db	32
   465   001078  69                 	db	105	;'i'
   466   001079  64                 	db	100	;'d'
   467   00107A  3A                 	db	58	;':'
   468   00107B  20                 	db	32
   469   00107C  25                 	db	37
   470   00107D  30                 	db	48	;'0'
   471   00107E  32                 	db	50	;'2'
   472   00107F  6C                 	db	108	;'l'
   473   001080  75                 	db	117	;'u'
   474   001081  20                 	db	32
   475   001082  20                 	db	32
   476   001083  20                 	db	32
   477   001084  20                 	db	32
   478   001085  20                 	db	32
   479   001086  20                 	db	32
   480   001087  20                 	db	32
   481   001088  64                 	db	100	;'d'
   482   001089  61                 	db	97	;'a'
   483   00108A  74                 	db	116	;'t'
   484   00108B  61                 	db	97	;'a'
   485   00108C  3A                 	db	58	;':'
   486   00108D  20                 	db	32
   487   00108E  25                 	db	37
   488   00108F  30                 	db	48	;'0'
   489   001090  32                 	db	50	;'2'
   490   001091  75                 	db	117	;'u'
   491   001092  20                 	db	32
   492   001093  20                 	db	32
   493   001094  20                 	db	32
   494   001095  20                 	db	32
   495   001096  0A                 	db	10
   496   001097  0D                 	db	13
   497   001098  00                 	db	0
   498   001099  00                 	db	0	; dummy byte at the end
   499   000000                     
   500                           ; #config settings
   501                           
   502                           	psect	cinit
   503   002A8A                     __pcinit:
   504                           	callstack 0
   505   002A8A                     start_initialization:
   506                           	callstack 0
   507   002A8A                     __initialization:
   508                           	callstack 0
   509                           
   510                           ; Initialize objects allocated to COMRAM (3 bytes)
   511                           ; load TBLPTR registers with __pidataCOMRAM
   512   002A8A  0E02               	movlw	low __pidataCOMRAM
   513   002A8C  6EF6               	movwf	tblptrl,c
   514   002A8E  0E30               	movlw	high __pidataCOMRAM
   515   002A90  6EF7               	movwf	tblptrh,c
   516   002A92  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   517   002A94  6EF8               	movwf	tblptru,c
   518   002A96  0009               	tblrd		*+	;fetch initializer
   519   002A98  CFF5 F04B          	movff	tablat,__pdataCOMRAM
   520   002A9C  0009               	tblrd		*+	;fetch initializer
   521   002A9E  CFF5 F04C          	movff	tablat,__pdataCOMRAM+1
   522   002AA2  0009               	tblrd		*+	;fetch initializer
   523   002AA4  CFF5 F04D          	movff	tablat,__pdataCOMRAM+2
   524                           
   525                           ; Clear objects allocated to BANK1 (32 bytes)
   526   002AA8  EE01  F000         	lfsr	0,__pbssBANK1
   527   002AAC  0E20               	movlw	32
   528   002AAE                     clear_0:
   529   002AAE  6AEE               	clrf	postinc0,c
   530   002AB0  06E8               	decf	wreg,f,c
   531   002AB2  E1FD               	bnz	clear_0
   532                           
   533                           ; Clear objects allocated to BANK0 (48 bytes)
   534   002AB4  EE00  F0CE         	lfsr	0,__pbssBANK0
   535   002AB8  0E30               	movlw	48
   536   002ABA                     clear_1:
   537   002ABA  6AEE               	clrf	postinc0,c
   538   002ABC  06E8               	decf	wreg,f,c
   539   002ABE  E1FD               	bnz	clear_1
   540                           
   541                           ; Clear objects allocated to COMRAM (14 bytes)
   542   002AC0  EE00  F03D         	lfsr	0,__pbssCOMRAM
   543   002AC4  0E0E               	movlw	14
   544   002AC6                     clear_2:
   545   002AC6  6AEE               	clrf	postinc0,c
   546   002AC8  06E8               	decf	wreg,f,c
   547   002ACA  E1FD               	bnz	clear_2
   548   002ACC                     end_of_initialization:
   549                           	callstack 0
   550   002ACC                     __end_of__initialization:
   551                           	callstack 0
   552   002ACC  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   553   002ACE  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   554   002AD0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   555   002AD2  6EF8               	movwf	tblptru,c
   556   002AD4  0100               	movlb	0
   557   002AD6  EFDC  F00B         	goto	_main	;jump to C main() function
   558                           
   559                           	psect	bssCOMRAM
   560   00003D                     __pbssCOMRAM:
   561                           	callstack 0
   562   00003D                     TMR2_ISR@CountCallBack:
   563                           	callstack 0
   564   00003D                     	ds	2
   565   00003F                     TMR3_ISR@CountCallBack:
   566                           	callstack 0
   567   00003F                     	ds	2
   568   000041                     _WakeUpInterruptHandler:
   569                           	callstack 0
   570   000041                     	ds	2
   571   000043                     _RXB0InterruptHandler:
   572                           	callstack 0
   573   000043                     	ds	2
   574   000045                     _changeRight:
   575                           	callstack 0
   576   000045                     	ds	1
   577   000046                     _delayRight:
   578                           	callstack 0
   579   000046                     	ds	1
   580   000047                     _changeLeft:
   581                           	callstack 0
   582   000047                     	ds	1
   583   000048                     _delayLeft:
   584                           	callstack 0
   585   000048                     	ds	1
   586   000049                     _pwm_Switch:
   587                           	callstack 0
   588   000049                     	ds	1
   589   00004A                     _eusart1RxLastError:
   590                           	callstack 0
   591   00004A                     	ds	1
   592                           
   593                           	psect	dataCOMRAM
   594   00004B                     __pdataCOMRAM:
   595                           	callstack 0
   596   00004B                     _timerCAN:
   597                           	callstack 0
   598   00004B                     	ds	1
   599   00004C                     _threeLock:
   600                           	callstack 0
   601   00004C                     	ds	1
   602   00004D                     _cligneLock:
   603                           	callstack 0
   604   00004D                     	ds	1
   605                           
   606                           	psect	bssBANK0
   607   0000CE                     __pbssBANK0:
   608                           	callstack 0
   609   0000CE                     _Lux_EXT_Rx:
   610                           	callstack 0
   611   0000CE                     	ds	14
   612   0000DC                     _idCAN:
   613                           	callstack 0
   614   0000DC                     	ds	4
   615   0000E0                     _width:
   616                           	callstack 0
   617   0000E0                     	ds	2
   618   0000E2                     _prec:
   619                           	callstack 0
   620   0000E2                     	ds	2
   621   0000E4                     _compteurTTCAN:
   622                           	callstack 0
   623   0000E4                     	ds	2
   624   0000E6                     _flags:
   625                           	callstack 0
   626   0000E6                     	ds	1
   627   0000E7                     _test_Lux_Int:
   628                           	callstack 0
   629   0000E7                     	ds	1
   630   0000E8                     _cligneRight:
   631                           	callstack 0
   632   0000E8                     	ds	1
   633   0000E9                     _cligneLeft:
   634                           	callstack 0
   635   0000E9                     	ds	1
   636   0000EA                     _vKey:
   637                           	callstack 0
   638   0000EA                     	ds	1
   639   0000EB                     _vLock:
   640                           	callstack 0
   641   0000EB                     	ds	1
   642   0000EC                     _vStart:
   643                           	callstack 0
   644   0000EC                     	ds	1
   645   0000ED                     _lux_State:
   646                           	callstack 0
   647   0000ED                     	ds	1
   648   0000EE                     _dataCAN1:
   649                           	callstack 0
   650   0000EE                     	ds	1
   651   0000EF                     _dataCAN0:
   652                           	callstack 0
   653   0000EF                     	ds	1
   654   0000F0                     _Lux_check_Tx:
   655                           	callstack 0
   656   0000F0                     	ds	14
   657                           
   658                           	psect	bssBANK1
   659   000100                     __pbssBANK1:
   660                           	callstack 0
   661   000100                     _dbuf:
   662                           	callstack 0
   663   000100                     	ds	32
   664                           
   665                           	psect	cstackBANK0
   666   000060                     __pcstackBANK0:
   667                           	callstack 0
   668   000060                     ??_Etat_LUX_EXT:
   669   000060                     ?_isdigit:
   670                           	callstack 0
   671   000060                     ?_isspace:
   672                           	callstack 0
   673   000060                     ?___wmul:
   674                           	callstack 0
   675   000060                     ?___lodiv:
   676                           	callstack 0
   677   000060                     ?___lomod:
   678                           	callstack 0
   679   000060                     EUSART1_Write@txData:
   680                           	callstack 0
   681   000060                     ECAN_SetRXB0InterruptHandler@handler:
   682                           	callstack 0
   683   000060                     ECAN_SetWakeUpInterruptHandler@handler:
   684                           	callstack 0
   685   000060                     TMR3_SetInterruptHandler@InterruptHandler:
   686                           	callstack 0
   687   000060                     TMR1_SetInterruptHandler@InterruptHandler:
   688                           	callstack 0
   689   000060                     EUSART1_SetFramingErrorHandler@interruptHandler:
   690                           	callstack 0
   691   000060                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   692                           	callstack 0
   693   000060                     EUSART1_SetErrorHandler@interruptHandler:
   694                           	callstack 0
   695   000060                     INT0_SetInterruptHandler@InterruptHandler:
   696                           	callstack 0
   697   000060                     TMR2_SetInterruptHandler@InterruptHandler:
   698                           	callstack 0
   699   000060                     ___wmul@multiplier:
   700                           	callstack 0
   701   000060                     isdigit@c:
   702                           	callstack 0
   703   000060                     isspace@c:
   704                           	callstack 0
   705   000060                     convertCANid2Reg@tempPassedInID:
   706                           	callstack 0
   707   000060                     ___lodiv@dividend:
   708                           	callstack 0
   709   000060                     ___lomod@dividend:
   710                           	callstack 0
   711                           
   712                           ; 8 bytes @ 0x0
   713   000060                     	ds	1
   714   000061                     putch@txData:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x1
   718   000061                     	ds	1
   719   000062                     ??_TMR3_Initialize:
   720   000062                     ??_TMR1_Initialize:
   721   000062                     ??_isdigit:
   722   000062                     ??_isspace:
   723   000062                     ??_ECAN_Initialize:
   724   000062                     ___wmul@multiplicand:
   725                           	callstack 0
   726   000062                     fputc@c:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x2
   730   000062                     	ds	2
   731   000064                     convertCANid2Reg@canIdType:
   732                           	callstack 0
   733   000064                     _isspace$2887:
   734                           	callstack 0
   735   000064                     ___wmul@product:
   736                           	callstack 0
   737   000064                     fputc@fp:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x4
   741   000064                     	ds	1
   742   000065                     convertCANid2Reg@passedInEIDH:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x5
   746   000065                     	ds	1
   747   000066                     ??_fputc:
   748   000066                     ?_atoi:
   749                           	callstack 0
   750   000066                     atoi@s:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x6
   754   000066                     	ds	1
   755   000067                     convertCANid2Reg@passedInEIDL:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x7
   759   000067                     	ds	1
   760   000068                     ??_atoi:
   761   000068                     ___lodiv@divisor:
   762                           	callstack 0
   763   000068                     ___lomod@divisor:
   764                           	callstack 0
   765                           
   766                           ; 8 bytes @ 0x8
   767   000068                     	ds	1
   768   000069                     convertCANid2Reg@passedInSIDH:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x9
   772   000069                     	ds	2
   773   00006B                     convertCANid2Reg@passedInSIDL:
   774                           	callstack 0
   775   00006B                     atoi@neg:
   776                           	callstack 0
   777   00006B                     fputs@s:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0xB
   781   00006B                     	ds	2
   782   00006D                     ??_convertCANid2Reg:
   783   00006D                     atoi@n:
   784                           	callstack 0
   785   00006D                     fputs@fp:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0xD
   789   00006D                     	ds	2
   790   00006F                     fputs@c:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0xF
   794   00006F                     	ds	1
   795   000070                     ___lomod@counter:
   796                           	callstack 0
   797   000070                     fputs@i:
   798                           	callstack 0
   799   000070                     ___lodiv@quotient:
   800                           	callstack 0
   801                           
   802                           ; 8 bytes @ 0x10
   803   000070                     	ds	1
   804   000071                     convertCANid2Reg@wipSIDL:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x11
   808   000071                     	ds	1
   809   000072                     CAN_transmit@tempCanMsg:
   810                           	callstack 0
   811   000072                     pad@fp:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x12
   815   000072                     	ds	2
   816   000074                     CAN_transmit@returnValue:
   817                           	callstack 0
   818   000074                     pad@buf:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x14
   822   000074                     	ds	1
   823   000075                     CAN_transmit@tempEIDH:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x15
   827   000075                     	ds	1
   828   000076                     CAN_transmit@tempEIDL:
   829                           	callstack 0
   830   000076                     pad@p:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x16
   834   000076                     	ds	1
   835   000077                     CAN_transmit@tempSIDH:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x17
   839   000077                     	ds	1
   840   000078                     ??_pad:
   841   000078                     CAN_transmit@tempSIDL:
   842                           	callstack 0
   843   000078                     ___lodiv@counter:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x18
   847   000078                     	ds	1
   848   000079                     pad@i:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x19
   852   000079                     	ds	2
   853   00007B                     pad@w:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x1B
   857   00007B                     	ds	2
   858   00007D                     utoa@fp:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x1D
   862   00007D                     	ds	2
   863   00007F                     utoa@d:
   864                           	callstack 0
   865                           
   866                           ; 8 bytes @ 0x1F
   867   00007F                     	ds	8
   868   000087                     ??_utoa:
   869                           
   870                           ; 1 bytes @ 0x27
   871   000087                     	ds	8
   872   00008F                     utoa@p:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x2F
   876   00008F                     	ds	2
   877   000091                     utoa@w:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x31
   881   000091                     	ds	2
   882   000093                     utoa@n:
   883                           	callstack 0
   884                           
   885                           ; 8 bytes @ 0x33
   886   000093                     	ds	8
   887   00009B                     utoa@i:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x3B
   891   00009B                     	ds	2
   892   00009D                     vfpfcnvrt@fp:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x3D
   896   00009D                     	ds	2
   897   00009F                     vfpfcnvrt@fmt:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x3F
   901   00009F                     	ds	2
   902   0000A1                     vfpfcnvrt@ap:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x41
   906   0000A1                     	ds	2
   907   0000A3                     ??_vfpfcnvrt:
   908                           
   909                           ; 1 bytes @ 0x43
   910   0000A3                     	ds	6
   911   0000A9                     vfpfcnvrt@convarg:
   912                           	callstack 0
   913                           
   914                           ; 8 bytes @ 0x49
   915   0000A9                     	ds	8
   916   0000B1                     vfpfcnvrt@done:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x51
   920   0000B1                     	ds	2
   921   0000B3                     vfpfcnvrt@c:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x53
   925   0000B3                     	ds	1
   926   0000B4                     vfpfcnvrt@cp:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x54
   930   0000B4                     	ds	2
   931   0000B6                     ?_vfprintf:
   932                           	callstack 0
   933   0000B6                     vfprintf@fp:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x56
   937   0000B6                     	ds	2
   938   0000B8                     vfprintf@fmt:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x58
   942   0000B8                     	ds	2
   943   0000BA                     vfprintf@ap:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x5A
   947   0000BA                     	ds	2
   948   0000BC                     vfprintf@cfmt:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x5C
   952   0000BC                     	ds	2
   953   0000BE                     ?_printf:
   954                           	callstack 0
   955   0000BE                     printf@fmt:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x5E
   959   0000BE                     	ds	10
   960   0000C8                     printf@ap:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x68
   964   0000C8                     	ds	2
   965   0000CA                     ??_main:
   966                           
   967                           ; 1 bytes @ 0x6A
   968   0000CA                     	ds	4
   969                           
   970                           	psect	cstackCOMRAM
   971   000001                     __pcstackCOMRAM:
   972                           	callstack 0
   973   000001                     ??_TTCAN_20ms:
   974   000001                     ??_Lock_Blink:
   975   000001                     ?_convertReg2ExtendedCANid:
   976                           	callstack 0
   977   000001                     ?_convertReg2StandardCANid:
   978                           	callstack 0
   979   000001                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   980                           	callstack 0
   981   000001                     convertReg2StandardCANid@tempRXBn_SIDL:
   982                           	callstack 0
   983   000001                     TMR3_WriteTimer@timerVal:
   984                           	callstack 0
   985   000001                     TMR1_WriteTimer@timerVal:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x0
   989   000001                     	ds	1
   990   000002                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   991                           	callstack 0
   992                           
   993                           ; 1 bytes @ 0x1
   994   000002                     	ds	1
   995   000003                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x2
   999   000003                     	ds	2
  1000   000005                     ??_convertReg2ExtendedCANid:
  1001   000005                     ??_convertReg2StandardCANid:
  1002                           
  1003                           ; 1 bytes @ 0x4
  1004   000005                     	ds	2
  1005   000007                     convertReg2StandardCANid@tempRXBn_SIDH:
  1006                           	callstack 0
  1007                           
  1008                           ; 1 bytes @ 0x6
  1009   000007                     	ds	1
  1010   000008                     convertReg2StandardCANid@returnValue:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x7
  1014   000008                     	ds	1
  1015   000009                     convertReg2ExtendedCANid@tempRXBn_EIDH:
  1016                           	callstack 0
  1017                           
  1018                           ; 1 bytes @ 0x8
  1019   000009                     	ds	1
  1020   00000A                     convertReg2ExtendedCANid@returnValue:
  1021                           	callstack 0
  1022                           
  1023                           ; 4 bytes @ 0x9
  1024   00000A                     	ds	2
  1025   00000C                     convertReg2StandardCANid@ConvertedID:
  1026                           	callstack 0
  1027                           
  1028                           ; 4 bytes @ 0xB
  1029   00000C                     	ds	2
  1030   00000E                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
  1031                           	callstack 0
  1032                           
  1033                           ; 1 bytes @ 0xD
  1034   00000E                     	ds	1
  1035   00000F                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
  1036                           	callstack 0
  1037                           
  1038                           ; 1 bytes @ 0xE
  1039   00000F                     	ds	1
  1040   000010                     convertReg2ExtendedCANid@ConvertedID:
  1041                           	callstack 0
  1042                           
  1043                           ; 4 bytes @ 0xF
  1044   000010                     	ds	4
  1045   000014                     CAN_receive@tempCanMsg:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x13
  1049   000014                     	ds	2
  1050   000016                     ??_receptionTTCAN:
  1051   000016                     
  1052                           ; 1 bytes @ 0x15
  1053   000016                     	ds	1
  1054   000017                     receptionTTCAN@Message_recu:
  1055                           	callstack 0
  1056                           
  1057                           ; 14 bytes @ 0x16
  1058   000017                     	ds	14
  1059   000025                     ??_INTERRUPT_InterruptManager:
  1060                           
  1061                           ; 1 bytes @ 0x24
  1062   000025                     	ds	6
  1063                           
  1064 ;;
  1065 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1066 ;;
  1067 ;; *************** function _main *****************
  1068 ;; Defined at:
  1069 ;;		line 90 in file "main.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1085 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1086 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1087 ;;Total ram usage:        4 bytes
  1088 ;; Hardware stack levels required when called: 15
  1089 ;; This function calls:
  1090 ;;		_CAN_transmit
  1091 ;;		_CligneL
  1092 ;;		_CligneR
  1093 ;;		_Default_Output_State
  1094 ;;		_ECAN_SetRXB0InterruptHandler
  1095 ;;		_Etat_LUX_EXT
  1096 ;;		_INT0_SetInterruptHandler
  1097 ;;		_SYSTEM_Initialize
  1098 ;;		_TMR1_SetInterruptHandler
  1099 ;;		_TMR2_SetInterruptHandler
  1100 ;;		_TMR3_SetInterruptHandler
  1101 ;;		_printCAN
  1102 ;;		_printf
  1103 ;; This function is called by:
  1104 ;;		Startup code after reset
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           	psect	text0
  1109   0017B8                     __ptext0:
  1110                           	callstack 0
  1111   0017B8                     _main:
  1112                           	callstack 16
  1113   0017B8                     
  1114                           ;main.c: 92:     SYSTEM_Initialize();
  1115   0017B8  EC43  F017         	call	_SYSTEM_Initialize	;wreg free
  1116                           
  1117                           ;main.c: 95:     TMR1_SetInterruptHandler(TTCAN_20ms);
  1118   0017BC  0E6A               	movlw	low _TTCAN_20ms
  1119   0017BE  0100               	movlb	0	; () banked
  1120   0017C0  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  1121   0017C2  0E2D               	movlw	high _TTCAN_20ms
  1122   0017C4  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1123   0017C6  ECD2  F017         	call	_TMR1_SetInterruptHandler	;wreg free
  1124                           
  1125                           ;main.c: 96:     ECAN_SetRXB0InterruptHandler(receptionTTCAN);
  1126   0017CA  0E4A               	movlw	low _receptionTTCAN
  1127   0017CC  0100               	movlb	0	; () banked
  1128   0017CE  6F60               	movwf	ECAN_SetRXB0InterruptHandler@handler& (0+255),b
  1129   0017D0  0E28               	movlw	high _receptionTTCAN
  1130   0017D2  6F61               	movwf	(ECAN_SetRXB0InterruptHandler@handler+1)& (0+255),b
  1131   0017D4  ECF0  F017         	call	_ECAN_SetRXB0InterruptHandler	;wreg free
  1132                           
  1133                           ;main.c: 98:     TMR2_SetInterruptHandler(Lock_Blink);
  1134   0017D8  0E50               	movlw	low _Lock_Blink
  1135   0017DA  0100               	movlb	0	; () banked
  1136   0017DC  6F60               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  1137   0017DE  0E27               	movlw	high _Lock_Blink
  1138   0017E0  6F61               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1139   0017E2  ECCD  F017         	call	_TMR2_SetInterruptHandler	;wreg free
  1140                           
  1141                           ;main.c: 99:     TMR3_SetInterruptHandler(Clignotant_PWM);
  1142   0017E6  0E20               	movlw	low _Clignotant_PWM
  1143   0017E8  0100               	movlb	0	; () banked
  1144   0017EA  6F60               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  1145   0017EC  0E2F               	movlw	high _Clignotant_PWM
  1146   0017EE  6F61               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1147   0017F0  ECC8  F017         	call	_TMR3_SetInterruptHandler	;wreg free
  1148                           
  1149                           ;main.c: 100:     INT0_SetInterruptHandler(GetADC_LuxINT);
  1150   0017F4  0EF2               	movlw	low _GetADC_LuxINT
  1151   0017F6  0100               	movlb	0	; () banked
  1152   0017F8  6F60               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  1153   0017FA  0E2F               	movlw	high _GetADC_LuxINT
  1154   0017FC  6F61               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1155   0017FE  ECD7  F017         	call	_INT0_SetInterruptHandler	;wreg free
  1156   001802                     
  1157                           ;main.c: 103:     (INTCONbits.GIE = 1);
  1158   001802  8EF2               	bsf	242,7,c	;volatile
  1159   001804                     
  1160                           ;main.c: 104:     (INTCONbits.PEIE = 1);
  1161   001804  8CF2               	bsf	242,6,c	;volatile
  1162   001806                     
  1163                           ;main.c: 112:     RXB0CON = 0x60;
  1164   001806  0E60               	movlw	96
  1165   001808  6E60               	movwf	96,c	;volatile
  1166   00180A                     
  1167                           ;main.c: 114:     Lux_check_Tx.frame.id = 0x61;
  1168   00180A  0E61               	movlw	97
  1169   00180C  0100               	movlb	0	; () banked
  1170   00180E  6FF1               	movwf	(_Lux_check_Tx+1)& (0+255),b
  1171   001810  0E00               	movlw	0
  1172   001812  6FF2               	movwf	(_Lux_check_Tx+2)& (0+255),b
  1173   001814  0E00               	movlw	0
  1174   001816  6FF3               	movwf	(_Lux_check_Tx+3)& (0+255),b
  1175   001818  0E00               	movlw	0
  1176   00181A  6FF4               	movwf	(_Lux_check_Tx+4)& (0+255),b
  1177   00181C                     
  1178                           ; BSR set to: 0
  1179                           ;main.c: 115:     Lux_check_Tx.frame.dlc = 0x00;
  1180   00181C  0E00               	movlw	0
  1181   00181E  6FF5               	movwf	(_Lux_check_Tx+5)& (0+255),b
  1182   001820                     
  1183                           ; BSR set to: 0
  1184                           ;main.c: 117:     Default_Output_State();
  1185   001820  ECEF  F014         	call	_Default_Output_State	;wreg free
  1186   001824                     l5288:
  1187                           
  1188                           ;main.c: 121:         idCAN = Lux_EXT_Rx.frame.id;
  1189   001824  C0CF  F0DC         	movff	_Lux_EXT_Rx+1,_idCAN
  1190   001828  C0D0  F0DD         	movff	_Lux_EXT_Rx+2,_idCAN+1
  1191   00182C  C0D1  F0DE         	movff	_Lux_EXT_Rx+3,_idCAN+2
  1192   001830  C0D2  F0DF         	movff	_Lux_EXT_Rx+4,_idCAN+3
  1193   001834                     
  1194                           ;main.c: 122:         dataCAN0 = Lux_EXT_Rx.frame.data0;
  1195   001834  C0D4  F0EF         	movff	_Lux_EXT_Rx+6,_dataCAN0
  1196   001838                     
  1197                           ;main.c: 123:         dataCAN1 = Lux_EXT_Rx.frame.data1;
  1198   001838  C0D5  F0EE         	movff	_Lux_EXT_Rx+7,_dataCAN1
  1199   00183C                     
  1200                           ;main.c: 125:         printf("\n Trame CAN :"
  1201   00183C  0E01               	movlw	low STR_1
  1202   00183E  0100               	movlb	0	; () banked
  1203   001840  6FBE               	movwf	printf@fmt& (0+255),b
  1204   001842  0E10               	movlw	high STR_1
  1205   001844  6FBF               	movwf	(printf@fmt+1)& (0+255),b
  1206   001846  C0DC  F0C0         	movff	_idCAN,?_printf+2
  1207   00184A  C0DD  F0C1         	movff	_idCAN+1,?_printf+3
  1208   00184E  C0DE  F0C2         	movff	_idCAN+2,?_printf+4
  1209   001852  C0DF  F0C3         	movff	_idCAN+3,?_printf+5
  1210   001856  C0EF  F0C4         	movff	_dataCAN0,?_printf+6
  1211   00185A  6BC5               	clrf	(?_printf+7)& (0+255),b
  1212   00185C  C0EE  F0C6         	movff	_dataCAN1,?_printf+8
  1213   001860  6BC7               	clrf	(?_printf+9)& (0+255),b
  1214   001862  ECE0  F016         	call	_printf	;wreg free
  1215   001866                     
  1216                           ;main.c: 131:         if (!vStart) {
  1217   001866  0100               	movlb	0	; () banked
  1218   001868  51EC               	movf	_vStart& (0+255),w,b
  1219   00186A  A4D8               	btfss	status,2,c
  1220   00186C  EF3A  F00C         	goto	u3011
  1221   001870  EF3C  F00C         	goto	u3010
  1222   001874                     u3011:
  1223   001874  EF1C  F00D         	goto	l5370
  1224   001878                     u3010:
  1225   001878  EF96  F00C         	goto	l5334
  1226   00187C                     l5300:
  1227                           
  1228                           ; BSR set to: 0
  1229                           ;main.c: 135:                     printf("\n Lux interieur :"
  1230   00187C  0E42               	movlw	low STR_2
  1231   00187E  6FBE               	movwf	printf@fmt& (0+255),b
  1232   001880  0E10               	movlw	high STR_2
  1233   001882  6FBF               	movwf	(printf@fmt+1)& (0+255),b
  1234   001884  C0EF  F0C0         	movff	_dataCAN0,?_printf+2
  1235   001888  6BC1               	clrf	(?_printf+3)& (0+255),b
  1236   00188A  C0EE  F0C2         	movff	_dataCAN1,?_printf+4
  1237   00188E  6BC3               	clrf	(?_printf+5)& (0+255),b
  1238   001890  ECE0  F016         	call	_printf	;wreg free
  1239                           
  1240                           ;main.c: 138:                     break;
  1241   001894  EF72  F00D         	goto	l5384
  1242   001898                     l5302:
  1243                           
  1244                           ; BSR set to: 0
  1245                           ;main.c: 142:                     if (dataCAN0 == 0x01) {
  1246   001898  05EF               	decf	_dataCAN0& (0+255),w,b
  1247   00189A  A4D8               	btfss	status,2,c
  1248   00189C  EF52  F00C         	goto	u3021
  1249   0018A0  EF54  F00C         	goto	u3020
  1250   0018A4                     u3021:
  1251   0018A4  EF58  F00C         	goto	l5306
  1252   0018A8                     u3020:
  1253   0018A8                     
  1254                           ; BSR set to: 0
  1255                           ;main.c: 143:                         vStart = 1;
  1256   0018A8  0E01               	movlw	1
  1257   0018AA  6FEC               	movwf	_vStart& (0+255),b
  1258                           
  1259                           ;main.c: 144:                     } else if (dataCAN0 == 0x00) {
  1260   0018AC  EF62  F00C         	goto	l5310
  1261   0018B0                     l5306:
  1262                           
  1263                           ; BSR set to: 0
  1264   0018B0  51EF               	movf	_dataCAN0& (0+255),w,b
  1265   0018B2  A4D8               	btfss	status,2,c
  1266   0018B4  EF5E  F00C         	goto	u3031
  1267   0018B8  EF60  F00C         	goto	u3030
  1268   0018BC                     u3031:
  1269   0018BC  EF62  F00C         	goto	l5310
  1270   0018C0                     u3030:
  1271   0018C0                     
  1272                           ; BSR set to: 0
  1273                           ;main.c: 145:                         vStart = 0;
  1274   0018C0  0E00               	movlw	0
  1275   0018C2  6FEC               	movwf	_vStart& (0+255),b
  1276   0018C4                     l5310:
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;main.c: 147:                     printCAN();
  1280   0018C4  EC30  F017         	call	_printCAN	;wreg free
  1281                           
  1282                           ;main.c: 148:                     break;
  1283   0018C8  EF72  F00D         	goto	l5384
  1284   0018CC                     l5312:
  1285                           
  1286                           ; BSR set to: 0
  1287                           ;main.c: 151:                     if (dataCAN0 == 0x01) {
  1288   0018CC  05EF               	decf	_dataCAN0& (0+255),w,b
  1289   0018CE  A4D8               	btfss	status,2,c
  1290   0018D0  EF6C  F00C         	goto	u3041
  1291   0018D4  EF6E  F00C         	goto	u3040
  1292   0018D8                     u3041:
  1293   0018D8  EF72  F00C         	goto	l5316
  1294   0018DC                     u3040:
  1295   0018DC                     
  1296                           ; BSR set to: 0
  1297                           ;main.c: 152:                         vKey = 1;
  1298   0018DC  0E01               	movlw	1
  1299   0018DE  6FEA               	movwf	_vKey& (0+255),b
  1300                           
  1301                           ;main.c: 153:                     } else if (dataCAN0 == 0x00) {
  1302   0018E0  EF62  F00C         	goto	l5310
  1303   0018E4                     l5316:
  1304                           
  1305                           ; BSR set to: 0
  1306   0018E4  51EF               	movf	_dataCAN0& (0+255),w,b
  1307   0018E6  A4D8               	btfss	status,2,c
  1308   0018E8  EF78  F00C         	goto	u3051
  1309   0018EC  EF7A  F00C         	goto	u3050
  1310   0018F0                     u3051:
  1311   0018F0  EF62  F00C         	goto	l5310
  1312   0018F4                     u3050:
  1313   0018F4                     
  1314                           ; BSR set to: 0
  1315                           ;main.c: 154:                         vKey = 0;
  1316   0018F4  0E00               	movlw	0
  1317   0018F6  6FEA               	movwf	_vKey& (0+255),b
  1318   0018F8  EF62  F00C         	goto	l5310
  1319   0018FC                     l5322:
  1320                           
  1321                           ; BSR set to: 0
  1322                           ;main.c: 160:                     if (dataCAN0 == 0x01) {
  1323   0018FC  05EF               	decf	_dataCAN0& (0+255),w,b
  1324   0018FE  A4D8               	btfss	status,2,c
  1325   001900  EF84  F00C         	goto	u3061
  1326   001904  EF86  F00C         	goto	u3060
  1327   001908                     u3061:
  1328   001908  EF8A  F00C         	goto	l5326
  1329   00190C                     u3060:
  1330   00190C                     
  1331                           ; BSR set to: 0
  1332                           ;main.c: 161:                         vLock = 0;
  1333   00190C  0E00               	movlw	0
  1334   00190E  6FEB               	movwf	_vLock& (0+255),b
  1335                           
  1336                           ;main.c: 162:                     } else if (dataCAN0 == 0x00) {
  1337   001910  EF62  F00C         	goto	l5310
  1338   001914                     l5326:
  1339                           
  1340                           ; BSR set to: 0
  1341   001914  51EF               	movf	_dataCAN0& (0+255),w,b
  1342   001916  A4D8               	btfss	status,2,c
  1343   001918  EF90  F00C         	goto	u3071
  1344   00191C  EF92  F00C         	goto	u3070
  1345   001920                     u3071:
  1346   001920  EF62  F00C         	goto	l5310
  1347   001924                     u3070:
  1348   001924                     
  1349                           ; BSR set to: 0
  1350                           ;main.c: 163:                         vLock = 1;
  1351   001924  0E01               	movlw	1
  1352   001926  6FEB               	movwf	_vLock& (0+255),b
  1353   001928  EF62  F00C         	goto	l5310
  1354   00192C                     l5334:
  1355                           
  1356                           ; BSR set to: 0
  1357   00192C  C0DC  F0CA         	movff	_idCAN,??_main
  1358   001930  C0DD  F0CB         	movff	_idCAN+1,??_main+1
  1359   001934  C0DE  F0CC         	movff	_idCAN+2,??_main+2
  1360   001938  C0DF  F0CD         	movff	_idCAN+3,??_main+3
  1361                           
  1362                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1363                           ; Switch size 1, requested type "simple"
  1364                           ; Number of cases is 1, Range of values is 0 to 0
  1365                           ; switch strategies available:
  1366                           ; Name         Instructions Cycles
  1367                           ; simple_byte            4     3 (average)
  1368                           ;	Chosen strategy is simple_byte
  1369   00193C  51CD               	movf	(??_main+3)& (0+255),w,b
  1370   00193E  0A00               	xorlw	0	; case 0
  1371   001940  B4D8               	btfsc	status,2,c
  1372   001942  EFBF  F00C         	goto	l5822
  1373   001946  EF72  F00D         	goto	l5384
  1374   00194A                     l5820:
  1375                           
  1376                           ; BSR set to: 0
  1377                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1378                           ; Switch size 1, requested type "simple"
  1379                           ; Number of cases is 1, Range of values is 0 to 0
  1380                           ; switch strategies available:
  1381                           ; Name         Instructions Cycles
  1382                           ; simple_byte            4     3 (average)
  1383                           ;	Chosen strategy is simple_byte
  1384   00194A  51CB               	movf	(??_main+1)& (0+255),w,b
  1385   00194C  0A00               	xorlw	0	; case 0
  1386   00194E  B4D8               	btfsc	status,2,c
  1387   001950  EFAC  F00C         	goto	l5824
  1388   001954  EF72  F00D         	goto	l5384
  1389   001958                     l5824:
  1390                           
  1391                           ; BSR set to: 0
  1392                           ; Switch size 1, requested type "simple"
  1393                           ; Number of cases is 4, Range of values is 17 to 97
  1394                           ; switch strategies available:
  1395                           ; Name         Instructions Cycles
  1396                           ; simple_byte           13     7 (average)
  1397                           ;	Chosen strategy is simple_byte
  1398   001958  51CA               	movf	??_main& (0+255),w,b
  1399   00195A  0A11               	xorlw	17	; case 17
  1400   00195C  B4D8               	btfsc	status,2,c
  1401   00195E  EF4C  F00C         	goto	l5302
  1402   001962  0A03               	xorlw	3	; case 18
  1403   001964  B4D8               	btfsc	status,2,c
  1404   001966  EF66  F00C         	goto	l5312
  1405   00196A  0A01               	xorlw	1	; case 19
  1406   00196C  B4D8               	btfsc	status,2,c
  1407   00196E  EF7E  F00C         	goto	l5322
  1408   001972  0A72               	xorlw	114	; case 97
  1409   001974  B4D8               	btfsc	status,2,c
  1410   001976  EF3E  F00C         	goto	l5300
  1411   00197A  EF72  F00D         	goto	l5384
  1412   00197E                     l5822:
  1413                           
  1414                           ; BSR set to: 0
  1415                           ; Switch size 1, requested type "simple"
  1416                           ; Number of cases is 1, Range of values is 0 to 0
  1417                           ; switch strategies available:
  1418                           ; Name         Instructions Cycles
  1419                           ; simple_byte            4     3 (average)
  1420                           ;	Chosen strategy is simple_byte
  1421   00197E  51CC               	movf	(??_main+2)& (0+255),w,b
  1422   001980  0A00               	xorlw	0	; case 0
  1423   001982  B4D8               	btfsc	status,2,c
  1424   001984  EFA5  F00C         	goto	l5820
  1425   001988  EF72  F00D         	goto	l5384
  1426   00198C                     l5336:
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;main.c: 173:                     printf("\n Lux interieur :"
  1430   00198C  0E42               	movlw	low STR_2
  1431   00198E  6FBE               	movwf	printf@fmt& (0+255),b
  1432   001990  0E10               	movlw	high STR_2
  1433   001992  6FBF               	movwf	(printf@fmt+1)& (0+255),b
  1434   001994  C0EF  F0C0         	movff	_dataCAN0,?_printf+2
  1435   001998  6BC1               	clrf	(?_printf+3)& (0+255),b
  1436   00199A  C0EE  F0C2         	movff	_dataCAN1,?_printf+4
  1437   00199E  6BC3               	clrf	(?_printf+5)& (0+255),b
  1438   0019A0  ECE0  F016         	call	_printf	;wreg free
  1439                           
  1440                           ;main.c: 176:                     break;
  1441   0019A4  EF50  F00D         	goto	l5372
  1442   0019A8                     l5338:
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;main.c: 180:                     if (dataCAN0 == 0x01) {
  1446   0019A8  05EF               	decf	_dataCAN0& (0+255),w,b
  1447   0019AA  A4D8               	btfss	status,2,c
  1448   0019AC  EFDA  F00C         	goto	u3081
  1449   0019B0  EFDC  F00C         	goto	u3080
  1450   0019B4                     u3081:
  1451   0019B4  EFE0  F00C         	goto	l5342
  1452   0019B8                     u3080:
  1453   0019B8                     
  1454                           ; BSR set to: 0
  1455                           ;main.c: 181:                         vStart = 1;
  1456   0019B8  0E01               	movlw	1
  1457   0019BA  6FEC               	movwf	_vStart& (0+255),b
  1458                           
  1459                           ;main.c: 182:                     } else if (dataCAN0 == 0x00) {
  1460   0019BC  EFEA  F00C         	goto	l5346
  1461   0019C0                     l5342:
  1462                           
  1463                           ; BSR set to: 0
  1464   0019C0  51EF               	movf	_dataCAN0& (0+255),w,b
  1465   0019C2  A4D8               	btfss	status,2,c
  1466   0019C4  EFE6  F00C         	goto	u3091
  1467   0019C8  EFE8  F00C         	goto	u3090
  1468   0019CC                     u3091:
  1469   0019CC  EFEA  F00C         	goto	l5346
  1470   0019D0                     u3090:
  1471   0019D0                     
  1472                           ; BSR set to: 0
  1473                           ;main.c: 183:                         vStart = 0;
  1474   0019D0  0E00               	movlw	0
  1475   0019D2  6FEC               	movwf	_vStart& (0+255),b
  1476   0019D4                     l5346:
  1477                           
  1478                           ;main.c: 185:                     printCAN();
  1479   0019D4  EC30  F017         	call	_printCAN	;wreg free
  1480                           
  1481                           ;main.c: 186:                     break;
  1482   0019D8  EF50  F00D         	goto	l5372
  1483   0019DC                     l5348:
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;main.c: 189:                     if (dataCAN0 == 0x01) {
  1487   0019DC  05EF               	decf	_dataCAN0& (0+255),w,b
  1488   0019DE  A4D8               	btfss	status,2,c
  1489   0019E0  EFF4  F00C         	goto	u3101
  1490   0019E4  EFF6  F00C         	goto	u3100
  1491   0019E8                     u3101:
  1492   0019E8  EFFA  F00C         	goto	l5352
  1493   0019EC                     u3100:
  1494   0019EC                     
  1495                           ; BSR set to: 0
  1496                           ;main.c: 190:                         cligneLeft = 1;
  1497   0019EC  0E01               	movlw	1
  1498   0019EE  6FE9               	movwf	_cligneLeft& (0+255),b
  1499                           
  1500                           ;main.c: 191:                     } else if (dataCAN0 == 0x00) {
  1501   0019F0  EFEA  F00C         	goto	l5346
  1502   0019F4                     l5352:
  1503                           
  1504                           ; BSR set to: 0
  1505   0019F4  51EF               	movf	_dataCAN0& (0+255),w,b
  1506   0019F6  A4D8               	btfss	status,2,c
  1507   0019F8  EF00  F00D         	goto	u3111
  1508   0019FC  EF02  F00D         	goto	u3110
  1509   001A00                     u3111:
  1510   001A00  EFEA  F00C         	goto	l5346
  1511   001A04                     u3110:
  1512   001A04                     
  1513                           ; BSR set to: 0
  1514                           ;main.c: 192:                         cligneLeft = 0;
  1515   001A04  0E00               	movlw	0
  1516   001A06  6FE9               	movwf	_cligneLeft& (0+255),b
  1517   001A08  EFEA  F00C         	goto	l5346
  1518   001A0C                     l5358:
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;main.c: 198:                     if (dataCAN0 == 0x01) {
  1522   001A0C  05EF               	decf	_dataCAN0& (0+255),w,b
  1523   001A0E  A4D8               	btfss	status,2,c
  1524   001A10  EF0C  F00D         	goto	u3121
  1525   001A14  EF0E  F00D         	goto	u3120
  1526   001A18                     u3121:
  1527   001A18  EF12  F00D         	goto	l5362
  1528   001A1C                     u3120:
  1529   001A1C                     
  1530                           ; BSR set to: 0
  1531                           ;main.c: 199:                         cligneRight = 1;
  1532   001A1C  0E01               	movlw	1
  1533   001A1E  6FE8               	movwf	_cligneRight& (0+255),b
  1534                           
  1535                           ;main.c: 200:                     } else {
  1536   001A20  EFEA  F00C         	goto	l5346
  1537   001A24                     l5362:
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;main.c: 201:                         cligneRight = 0;
  1541   001A24  0E00               	movlw	0
  1542   001A26  6FE8               	movwf	_cligneRight& (0+255),b
  1543   001A28  EFEA  F00C         	goto	l5346
  1544   001A2C                     l809:
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;main.c: 207:                     lux_State = dataCAN0;
  1548   001A2C  C0EF  F0ED         	movff	_dataCAN0,_lux_State
  1549   001A30                     
  1550                           ; BSR set to: 0
  1551                           ;main.c: 208:                     Etat_LUX_EXT();
  1552   001A30  EC8D  F014         	call	_Etat_LUX_EXT	;wreg free
  1553   001A34  EFEA  F00C         	goto	l5346
  1554   001A38                     l5370:
  1555                           
  1556                           ; BSR set to: 0
  1557   001A38  C0DC  F0CA         	movff	_idCAN,??_main
  1558   001A3C  C0DD  F0CB         	movff	_idCAN+1,??_main+1
  1559   001A40  C0DE  F0CC         	movff	_idCAN+2,??_main+2
  1560   001A44  C0DF  F0CD         	movff	_idCAN+3,??_main+3
  1561                           
  1562                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1563                           ; Switch size 1, requested type "simple"
  1564                           ; Number of cases is 1, Range of values is 0 to 0
  1565                           ; switch strategies available:
  1566                           ; Name         Instructions Cycles
  1567                           ; simple_byte            4     3 (average)
  1568                           ;	Chosen strategy is simple_byte
  1569   001A48  51CD               	movf	(??_main+3)& (0+255),w,b
  1570   001A4A  0A00               	xorlw	0	; case 0
  1571   001A4C  B4D8               	btfsc	status,2,c
  1572   001A4E  EF49  F00D         	goto	l5828
  1573   001A52  EF50  F00D         	goto	l5372
  1574   001A56                     l5826:
  1575                           
  1576                           ; BSR set to: 0
  1577                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1578                           ; Switch size 1, requested type "simple"
  1579                           ; Number of cases is 1, Range of values is 0 to 0
  1580                           ; switch strategies available:
  1581                           ; Name         Instructions Cycles
  1582                           ; simple_byte            4     3 (average)
  1583                           ;	Chosen strategy is simple_byte
  1584   001A56  51CB               	movf	(??_main+1)& (0+255),w,b
  1585   001A58  0A00               	xorlw	0	; case 0
  1586   001A5A  B4D8               	btfsc	status,2,c
  1587   001A5C  EF32  F00D         	goto	l5830
  1588   001A60  EF50  F00D         	goto	l5372
  1589   001A64                     l5830:
  1590                           
  1591                           ; BSR set to: 0
  1592                           ; Switch size 1, requested type "simple"
  1593                           ; Number of cases is 5, Range of values is 17 to 97
  1594                           ; switch strategies available:
  1595                           ; Name         Instructions Cycles
  1596                           ; simple_byte           16     9 (average)
  1597                           ;	Chosen strategy is simple_byte
  1598   001A64  51CA               	movf	??_main& (0+255),w,b
  1599   001A66  0A11               	xorlw	17	; case 17
  1600   001A68  B4D8               	btfsc	status,2,c
  1601   001A6A  EFD4  F00C         	goto	l5338
  1602   001A6E  0A40               	xorlw	64	; case 81
  1603   001A70  B4D8               	btfsc	status,2,c
  1604   001A72  EFEE  F00C         	goto	l5348
  1605   001A76  0A03               	xorlw	3	; case 82
  1606   001A78  B4D8               	btfsc	status,2,c
  1607   001A7A  EF06  F00D         	goto	l5358
  1608   001A7E  0A06               	xorlw	6	; case 84
  1609   001A80  B4D8               	btfsc	status,2,c
  1610   001A82  EF16  F00D         	goto	l809
  1611   001A86  0A35               	xorlw	53	; case 97
  1612   001A88  B4D8               	btfsc	status,2,c
  1613   001A8A  EFC6  F00C         	goto	l5336
  1614   001A8E  EF50  F00D         	goto	l5372
  1615   001A92                     l5828:
  1616                           
  1617                           ; BSR set to: 0
  1618                           ; Switch size 1, requested type "simple"
  1619                           ; Number of cases is 1, Range of values is 0 to 0
  1620                           ; switch strategies available:
  1621                           ; Name         Instructions Cycles
  1622                           ; simple_byte            4     3 (average)
  1623                           ;	Chosen strategy is simple_byte
  1624   001A92  51CC               	movf	(??_main+2)& (0+255),w,b
  1625   001A94  0A00               	xorlw	0	; case 0
  1626   001A96  B4D8               	btfsc	status,2,c
  1627   001A98  EF2B  F00D         	goto	l5826
  1628   001A9C  EF50  F00D         	goto	l5372
  1629   001AA0                     l5372:
  1630                           
  1631                           ;main.c: 213:             CligneL();
  1632   001AA0  ECBE  F014         	call	_CligneL	;wreg free
  1633                           
  1634                           ;main.c: 214:             CligneR();
  1635   001AA4  EC5B  F014         	call	_CligneR	;wreg free
  1636   001AA8  EF72  F00D         	goto	l5384
  1637   001AAC                     l5374:
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;main.c: 221:                 if (test_Lux_Int) {
  1641   001AAC  51E7               	movf	_test_Lux_Int& (0+255),w,b
  1642   001AAE  B4D8               	btfsc	status,2,c
  1643   001AB0  EF5C  F00D         	goto	u3131
  1644   001AB4  EF5E  F00D         	goto	u3130
  1645   001AB8                     u3131:
  1646   001AB8  EF12  F00C         	goto	l5288
  1647   001ABC                     u3130:
  1648   001ABC                     l5378:
  1649   001ABC  0EF0               	movlw	low _Lux_check_Tx
  1650   001ABE  0100               	movlb	0	; () banked
  1651   001AC0  6F72               	movwf	CAN_transmit@tempCanMsg& (0+255),b
  1652   001AC2  0E00               	movlw	high _Lux_check_Tx
  1653   001AC4  6F73               	movwf	(CAN_transmit@tempCanMsg+1)& (0+255),b
  1654   001AC6  EC4D  F008         	call	_CAN_transmit	;wreg free
  1655   001ACA  0900               	iorlw	0
  1656   001ACC  A4D8               	btfss	status,2,c
  1657   001ACE  EF6B  F00D         	goto	u3141
  1658   001AD2  EF6D  F00D         	goto	u3140
  1659   001AD6                     u3141:
  1660   001AD6  EF5E  F00D         	goto	l5378
  1661   001ADA                     u3140:
  1662   001ADA                     
  1663                           ;main.c: 223:                     test_Lux_Int = 0;
  1664   001ADA  0E00               	movlw	0
  1665   001ADC  0100               	movlb	0	; () banked
  1666   001ADE  6FE7               	movwf	_test_Lux_Int& (0+255),b
  1667   001AE0  EF12  F00C         	goto	l5288
  1668   001AE4                     l5384:
  1669   001AE4  C0E4  F0CA         	movff	_compteurTTCAN,??_main
  1670   001AE8  C0E5  F0CB         	movff	_compteurTTCAN+1,??_main+1
  1671                           
  1672                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1673                           ; Switch size 1, requested type "simple"
  1674                           ; Number of cases is 1, Range of values is 0 to 0
  1675                           ; switch strategies available:
  1676                           ; Name         Instructions Cycles
  1677                           ; simple_byte            4     3 (average)
  1678                           ;	Chosen strategy is simple_byte
  1679   001AEC  0100               	movlb	0	; () banked
  1680   001AEE  51CB               	movf	(??_main+1)& (0+255),w,b
  1681   001AF0  0A00               	xorlw	0	; case 0
  1682   001AF2  B4D8               	btfsc	status,2,c
  1683   001AF4  EF7E  F00D         	goto	l5832
  1684   001AF8  EF12  F00C         	goto	l5288
  1685   001AFC                     l5832:
  1686                           
  1687                           ; BSR set to: 0
  1688                           ; Switch size 1, requested type "simple"
  1689                           ; Number of cases is 1, Range of values is 16 to 16
  1690                           ; switch strategies available:
  1691                           ; Name         Instructions Cycles
  1692                           ; simple_byte            4     3 (average)
  1693                           ;	Chosen strategy is simple_byte
  1694   001AFC  51CA               	movf	??_main& (0+255),w,b
  1695   001AFE  0A10               	xorlw	16	; case 16
  1696   001B00  B4D8               	btfsc	status,2,c
  1697   001B02  EF56  F00D         	goto	l5374
  1698   001B06  EF12  F00C         	goto	l5288
  1699   001B0A  EFA4  F000         	goto	start
  1700   001B0E                     __end_of_main:
  1701                           	callstack 0
  1702                           
  1703 ;; *************** function _printCAN *****************
  1704 ;; Defined at:
  1705 ;;		line 398 in file "main.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;		None
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;		None
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1723 ;;Total ram usage:        0 bytes
  1724 ;; Hardware stack levels used: 1
  1725 ;; Hardware stack levels required when called: 14
  1726 ;; This function calls:
  1727 ;;		_printf
  1728 ;; This function is called by:
  1729 ;;		_main
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           	psect	text1
  1734   002E60                     __ptext1:
  1735                           	callstack 0
  1736   002E60                     _printCAN:
  1737                           	callstack 16
  1738   002E60                     
  1739                           ;main.c: 399:     printf("\n id: %02lu       data: %02u    \n\r", idCAN, dataCAN0);
  1740   002E60  0E76               	movlw	low STR_4
  1741   002E62  0100               	movlb	0	; () banked
  1742   002E64  6FBE               	movwf	printf@fmt& (0+255),b
  1743   002E66  0E10               	movlw	high STR_4
  1744   002E68  6FBF               	movwf	(printf@fmt+1)& (0+255),b
  1745   002E6A  C0DC  F0C0         	movff	_idCAN,?_printf+2
  1746   002E6E  C0DD  F0C1         	movff	_idCAN+1,?_printf+3
  1747   002E72  C0DE  F0C2         	movff	_idCAN+2,?_printf+4
  1748   002E76  C0DF  F0C3         	movff	_idCAN+3,?_printf+5
  1749   002E7A  C0EF  F0C4         	movff	_dataCAN0,?_printf+6
  1750   002E7E  6BC5               	clrf	(?_printf+7)& (0+255),b
  1751   002E80  ECE0  F016         	call	_printf	;wreg free
  1752   002E84  0012               	return		;funcret
  1753   002E86                     __end_of_printCAN:
  1754                           	callstack 0
  1755                           
  1756 ;; *************** function _printf *****************
  1757 ;; Defined at:
  1758 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  fmt             2   94[BANK0 ] PTR const unsigned char 
  1761 ;;		 -> STR_4(35), STR_3(52), STR_2(52), STR_1(65), 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  ap              2  104[BANK0 ] PTR void [1]
  1764 ;;		 -> ?_printf(2), 
  1765 ;;  ret             2    0        int 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  2   94[BANK0 ] int 
  1768 ;; Registers used:
  1769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1775 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1776 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1778 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1779 ;;Total ram usage:       12 bytes
  1780 ;; Hardware stack levels used: 1
  1781 ;; Hardware stack levels required when called: 13
  1782 ;; This function calls:
  1783 ;;		_vfprintf
  1784 ;; This function is called by:
  1785 ;;		_main
  1786 ;;		_printCAN
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text2
  1791   002DC0                     __ptext2:
  1792                           	callstack 0
  1793   002DC0                     _printf:
  1794                           	callstack 17
  1795   002DC0  0EC0               	movlw	low (?_printf+2)
  1796   002DC2  0100               	movlb	0	; () banked
  1797   002DC4  6FC8               	movwf	printf@ap& (0+255),b
  1798   002DC6  0E00               	movlw	high (?_printf+2)
  1799   002DC8  6FC9               	movwf	(printf@ap+1)& (0+255),b
  1800   002DCA                     
  1801                           ; BSR set to: 0
  1802   002DCA  0E00               	movlw	0
  1803   002DCC  6FB6               	movwf	vfprintf@fp& (0+255),b
  1804   002DCE  0E00               	movlw	0
  1805   002DD0  6FB7               	movwf	(vfprintf@fp+1)& (0+255),b
  1806   002DD2  C0BE  F0B8         	movff	printf@fmt,vfprintf@fmt
  1807   002DD6  C0BF  F0B9         	movff	printf@fmt+1,vfprintf@fmt+1
  1808   002DDA  0EC8               	movlw	low printf@ap
  1809   002DDC  6FBA               	movwf	vfprintf@ap& (0+255),b
  1810   002DDE  0E00               	movlw	high printf@ap
  1811   002DE0  6FBB               	movwf	(vfprintf@ap+1)& (0+255),b
  1812   002DE2  EC1C  F015         	call	_vfprintf	;wreg free
  1813   002DE6  0012               	return		;funcret
  1814   002DE8                     __end_of_printf:
  1815                           	callstack 0
  1816                           
  1817 ;; *************** function _vfprintf *****************
  1818 ;; Defined at:
  1819 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  fp              2   86[BANK0 ] PTR struct _IO_FILE
  1822 ;;		 -> NULL(0), 
  1823 ;;  fmt             2   88[BANK0 ] PTR const unsigned char 
  1824 ;;		 -> STR_4(35), STR_3(52), STR_2(52), STR_1(65), 
  1825 ;;  ap              2   90[BANK0 ] PTR PTR void 
  1826 ;;		 -> printf@ap(2), 
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  cfmt            2   92[BANK0 ] PTR unsigned char 
  1829 ;;		 -> STR_4(35), STR_3(52), STR_2(52), STR_1(65), 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  2   86[BANK0 ] int 
  1832 ;; Registers used:
  1833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1839 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1842 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1843 ;;Total ram usage:        8 bytes
  1844 ;; Hardware stack levels used: 1
  1845 ;; Hardware stack levels required when called: 12
  1846 ;; This function calls:
  1847 ;;		_vfpfcnvrt
  1848 ;; This function is called by:
  1849 ;;		_printf
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text3
  1854   002A38                     __ptext3:
  1855                           	callstack 0
  1856   002A38                     _vfprintf:
  1857                           	callstack 17
  1858   002A38                     
  1859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1860   002A38  C0B8  F0BC         	movff	vfprintf@fmt,vfprintf@cfmt
  1861   002A3C  C0B9  F0BD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1862                           
  1863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1864   002A40  EF31  F015         	goto	l4986
  1865   002A44                     l4984:
  1866                           
  1867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1868   002A44  C0B6  F09D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1869   002A48  C0B7  F09E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1870   002A4C  0EBC               	movlw	low vfprintf@cfmt
  1871   002A4E  0100               	movlb	0	; () banked
  1872   002A50  6F9F               	movwf	vfpfcnvrt@fmt& (0+255),b
  1873   002A52  0E00               	movlw	high vfprintf@cfmt
  1874   002A54  6FA0               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1875   002A56  C0BA  F0A1         	movff	vfprintf@ap,vfpfcnvrt@ap
  1876   002A5A  C0BB  F0A2         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1877   002A5E  EC18  F00A         	call	_vfpfcnvrt	;wreg free
  1878   002A62                     l4986:
  1879                           
  1880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1881   002A62  C0BC  FFF6         	movff	vfprintf@cfmt,tblptrl
  1882   002A66  C0BD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1883   002A6A                     	if	0	;tblptru may be non-zero
  1884   002A6A                     	endif
  1885   002A6A                     	if	0	;tblptru may be non-zero
  1886   002A6A                     	endif
  1887   002A6A  0008               	tblrd		*
  1888   002A6C  50F5               	movf	tablat,w,c
  1889   002A6E  0900               	iorlw	0
  1890   002A70  A4D8               	btfss	status,2,c
  1891   002A72  EF3D  F015         	goto	u2841
  1892   002A76  EF3F  F015         	goto	u2840
  1893   002A7A                     u2841:
  1894   002A7A  EF22  F015         	goto	l4984
  1895   002A7E                     u2840:
  1896   002A7E                     
  1897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1898   002A7E  0E00               	movlw	0
  1899   002A80  0100               	movlb	0	; () banked
  1900   002A82  6FB7               	movwf	(?_vfprintf+1)& (0+255),b
  1901   002A84  0E00               	movlw	0
  1902   002A86  6FB6               	movwf	?_vfprintf& (0+255),b
  1903   002A88                     
  1904                           ; BSR set to: 0
  1905   002A88  0012               	return		;funcret
  1906   002A8A                     __end_of_vfprintf:
  1907                           	callstack 0
  1908                           
  1909 ;; *************** function _vfpfcnvrt *****************
  1910 ;; Defined at:
  1911 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  1914 ;;		 -> NULL(0), 
  1915 ;;  fmt             2   63[BANK0 ] PTR PTR unsigned char 
  1916 ;;		 -> vfprintf@cfmt(2), 
  1917 ;;  ap              2   65[BANK0 ] PTR PTR void 
  1918 ;;		 -> printf@ap(2), 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;  convarg         8   73[BANK0 ] struct .
  1921 ;;  cp              2   84[BANK0 ] PTR unsigned char 
  1922 ;;		 -> STR_4(35), STR_3(52), STR_2(52), STR_1(65), 
  1923 ;;  done            2   81[BANK0 ] int 
  1924 ;;  i               2    0        int 
  1925 ;;  c               1   83[BANK0 ] unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1935 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1936 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1937 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1938 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1939 ;;Total ram usage:       25 bytes
  1940 ;; Hardware stack levels used: 1
  1941 ;; Hardware stack levels required when called: 11
  1942 ;; This function calls:
  1943 ;;		_atoi
  1944 ;;		_fputc
  1945 ;;		_isdigit
  1946 ;;		_utoa
  1947 ;; This function is called by:
  1948 ;;		_vfprintf
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text4
  1953   001430                     __ptext4:
  1954                           	callstack 0
  1955   001430                     _vfpfcnvrt:
  1956                           	callstack 17
  1957   001430                     
  1958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1959   001430  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1960   001434  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1961   001438  CFDE FFF6          	movff	postinc2,tblptrl
  1962   00143C  CFDD FFF7          	movff	postdec2,tblptrh
  1963   001440                     	if	0	;tblptru may be non-zero
  1964   001440                     	endif
  1965   001440                     	if	0	;tblptru may be non-zero
  1966   001440                     	endif
  1967   001440  0008               	tblrd		*
  1968   001442  50F5               	movf	tablat,w,c
  1969   001444  0A25               	xorlw	37
  1970   001446  A4D8               	btfss	status,2,c
  1971   001448  EF28  F00A         	goto	u2781
  1972   00144C  EF2A  F00A         	goto	u2780
  1973   001450                     u2781:
  1974   001450  EFC6  F00B         	goto	l4934
  1975   001454                     u2780:
  1976   001454                     
  1977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1978   001454  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1979   001458  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1980   00145C  2ADE               	incf	postinc2,f,c
  1981   00145E  0E00               	movlw	0
  1982   001460  22DD               	addwfc	postdec2,f,c
  1983   001462                     
  1984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1985   001462  0E00               	movlw	0
  1986   001464  0100               	movlb	0	; () banked
  1987   001466  6FE1               	movwf	(_width+1)& (0+255),b
  1988   001468  0E00               	movlw	0
  1989   00146A  6FE0               	movwf	_width& (0+255),b
  1990   00146C  C0E0  F0E6         	movff	_width,_flags
  1991   001470                     
  1992                           ; BSR set to: 0
  1993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1994   001470  69E2               	setf	_prec& (0+255),b
  1995   001472  69E3               	setf	(_prec+1)& (0+255),b
  1996   001474                     
  1997                           ; BSR set to: 0
  1998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  1999   001474  0E00               	movlw	0
  2000   001476  6FB2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2001   001478  0E00               	movlw	0
  2002   00147A  6FB1               	movwf	vfpfcnvrt@done& (0+255),b
  2003                           
  2004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  2005   00147C  EF6A  F00A         	goto	l4878
  2006   001480                     l4868:
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  2010   001480  83E6               	bsf	_flags& (0+255),1,b
  2011   001482                     
  2012                           ; BSR set to: 0
  2013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  2014   001482  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2015   001486  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2016   00148A  2ADE               	incf	postinc2,f,c
  2017   00148C  0E00               	movlw	0
  2018   00148E  22DD               	addwfc	postdec2,f,c
  2019                           
  2020                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  2021   001490  EF6A  F00A         	goto	l4878
  2022   001494                     l4872:
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  2026   001494  0E00               	movlw	0
  2027   001496  6FB2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2028   001498  0E01               	movlw	1
  2029   00149A  6FB1               	movwf	vfpfcnvrt@done& (0+255),b
  2030                           
  2031                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  2032   00149C  EF6A  F00A         	goto	l4878
  2033   0014A0                     l4876:
  2034                           
  2035                           ; BSR set to: 0
  2036   0014A0  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2037   0014A4  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2038   0014A8  CFDE FFF6          	movff	postinc2,tblptrl
  2039   0014AC  CFDD FFF7          	movff	postdec2,tblptrh
  2040   0014B0                     	if	0	;tblptru may be non-zero
  2041   0014B0                     	endif
  2042   0014B0                     	if	0	;tblptru may be non-zero
  2043   0014B0                     	endif
  2044   0014B0  0008               	tblrd		*
  2045   0014B2  50F5               	movf	tablat,w,c
  2046   0014B4  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  2047   0014B6  6BA4               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2048                           
  2049                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2050                           ; Switch size 1, requested type "simple"
  2051                           ; Number of cases is 1, Range of values is 0 to 0
  2052                           ; switch strategies available:
  2053                           ; Name         Instructions Cycles
  2054                           ; simple_byte            4     3 (average)
  2055                           ;	Chosen strategy is simple_byte
  2056   0014B8  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2057   0014BA  0A00               	xorlw	0	; case 0
  2058   0014BC  B4D8               	btfsc	status,2,c
  2059   0014BE  EF63  F00A         	goto	l5834
  2060   0014C2  EF4A  F00A         	goto	l4872
  2061   0014C6                     l5834:
  2062                           
  2063                           ; BSR set to: 0
  2064                           ; Switch size 1, requested type "simple"
  2065                           ; Number of cases is 1, Range of values is 48 to 48
  2066                           ; switch strategies available:
  2067                           ; Name         Instructions Cycles
  2068                           ; simple_byte            4     3 (average)
  2069                           ;	Chosen strategy is simple_byte
  2070   0014C6  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  2071   0014C8  0A30               	xorlw	48	; case 48
  2072   0014CA  B4D8               	btfsc	status,2,c
  2073   0014CC  EF40  F00A         	goto	l4868
  2074   0014D0  EF4A  F00A         	goto	l4872
  2075   0014D4                     l4878:
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  2079   0014D4  51B1               	movf	vfpfcnvrt@done& (0+255),w,b
  2080   0014D6  11B2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2081   0014D8  B4D8               	btfsc	status,2,c
  2082   0014DA  EF71  F00A         	goto	u2791
  2083   0014DE  EF73  F00A         	goto	u2790
  2084   0014E2                     u2791:
  2085   0014E2  EF50  F00A         	goto	l4876
  2086   0014E6                     u2790:
  2087   0014E6                     
  2088                           ; BSR set to: 0
  2089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  2090   0014E6  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2091   0014EA  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2092   0014EE  CFDE FFF6          	movff	postinc2,tblptrl
  2093   0014F2  CFDD FFF7          	movff	postdec2,tblptrh
  2094   0014F6                     	if	0	;tblptru may be non-zero
  2095   0014F6                     	endif
  2096   0014F6                     	if	0	;tblptru may be non-zero
  2097   0014F6                     	endif
  2098   0014F6  0008               	tblrd		*
  2099   0014F8  50F5               	movf	tablat,w,c
  2100   0014FA  0A2A               	xorlw	42
  2101   0014FC  A4D8               	btfss	status,2,c
  2102   0014FE  EF83  F00A         	goto	u2801
  2103   001502  EF85  F00A         	goto	u2800
  2104   001506                     u2801:
  2105   001506  EFAE  F00A         	goto	l4888
  2106   00150A                     u2800:
  2107   00150A                     
  2108                           ; BSR set to: 0
  2109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  2110   00150A  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2111   00150E  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2112   001512  2ADE               	incf	postinc2,f,c
  2113   001514  0E00               	movlw	0
  2114   001516  22DD               	addwfc	postdec2,f,c
  2115                           
  2116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2117   001518  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2118   00151C  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2119   001520  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  2120   001524  0E02               	movlw	2
  2121   001526  26DE               	addwf	postinc2,f,c
  2122   001528  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  2123   00152C  0E00               	movlw	0
  2124   00152E  22DD               	addwfc	postdec2,f,c
  2125   001530  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2126   001534  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2127   001538  CFDE F0E0          	movff	postinc2,_width
  2128   00153C  CFDD F0E1          	movff	postdec2,_width+1
  2129   001540                     
  2130                           ; BSR set to: 0
  2131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  2132   001540  BFE1               	btfsc	(_width+1)& (0+255),7,b
  2133   001542  EFA7  F00A         	goto	u2810
  2134   001546  EFA5  F00A         	goto	u2811
  2135   00154A                     u2811:
  2136   00154A  EFE2  F00A         	goto	l4896
  2137   00154E                     u2810:
  2138   00154E                     
  2139                           ; BSR set to: 0
  2140                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  2141   00154E  81E6               	bsf	_flags& (0+255),0,b
  2142                           
  2143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  2144   001550  6DE0               	negf	_width& (0+255),b
  2145   001552  1FE1               	comf	(_width+1)& (0+255),f,b
  2146   001554  B0D8               	btfsc	status,0,c
  2147   001556  2BE1               	incf	(_width+1)& (0+255),f,b
  2148   001558  EFE2  F00A         	goto	l4896
  2149   00155C                     l4888:
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  2153   00155C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2154   001560  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2155   001564  CFDE F066          	movff	postinc2,atoi@s
  2156   001568  CFDD F067          	movff	postdec2,atoi@s+1
  2157   00156C  EC66  F010         	call	_atoi	;wreg free
  2158   001570  C066  F0E0         	movff	?_atoi,_width
  2159   001574  C067  F0E1         	movff	?_atoi+1,_width+1
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2162   001578  EFC5  F00A         	goto	l4894
  2163   00157C                     l4890:
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  2167   00157C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2168   001580  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2169   001584  2ADE               	incf	postinc2,f,c
  2170   001586  0E00               	movlw	0
  2171   001588  22DD               	addwfc	postdec2,f,c
  2172   00158A                     l4894:
  2173   00158A  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2174   00158E  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2175   001592  CFDE FFF6          	movff	postinc2,tblptrl
  2176   001596  CFDD FFF7          	movff	postdec2,tblptrh
  2177   00159A                     	if	0	;tblptru may be non-zero
  2178   00159A                     	endif
  2179   00159A                     	if	0	;tblptru may be non-zero
  2180   00159A                     	endif
  2181   00159A  0008               	tblrd		*
  2182   00159C  CFF5 F0A3          	movff	tablat,??_vfpfcnvrt
  2183   0015A0  0ED0               	movlw	208
  2184   0015A2  0100               	movlb	0	; () banked
  2185   0015A4  25A3               	addwf	??_vfpfcnvrt& (0+255),w,b
  2186   0015A6  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2187   0015A8  6BA5               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  2188   0015AA  0EFF               	movlw	255
  2189   0015AC  23A5               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  2190   0015AE  51A5               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  2191   0015B0  E109               	bnz	u2820
  2192   0015B2  0E0A               	movlw	10
  2193   0015B4  5DA4               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  2194   0015B6  A0D8               	btfss	status,0,c
  2195   0015B8  EFE0  F00A         	goto	u2821
  2196   0015BC  EFE2  F00A         	goto	u2820
  2197   0015C0                     u2821:
  2198   0015C0  EFBE  F00A         	goto	l4890
  2199   0015C4                     u2820:
  2200   0015C4                     l4896:
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2204   0015C4  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2205   0015C8  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2206   0015CC  CFDE F0B4          	movff	postinc2,vfpfcnvrt@cp
  2207   0015D0  CFDD F0B5          	movff	postdec2,vfpfcnvrt@cp+1
  2208   0015D4                     
  2209                           ; BSR set to: 0
  2210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1119:   c = *cp;
  2211   0015D4  C0B4  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2212   0015D8  C0B5  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2213   0015DC                     	if	0	;tblptru may be non-zero
  2214   0015DC                     	endif
  2215   0015DC                     	if	0	;tblptru may be non-zero
  2216   0015DC                     	endif
  2217   0015DC  0008               	tblrd		*
  2218   0015DE  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  2219                           
  2220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1120:   switch(c)
      +                           {
  2221   0015E2  EFFF  F00A         	goto	l4908
  2222   0015E6                     l4900:
  2223                           
  2224                           ; BSR set to: 0
  2225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1135:     cp++;
  2226   0015E6  4BB4               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2227   0015E8  2BB5               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2228                           
  2229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1142:     break;
  2230   0015EA  EF14  F00B         	goto	l4910
  2231   0015EE                     l4902:
  2232                           
  2233                           ; BSR set to: 0
  2234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1176:     c = 'i'
      +                          ;
  2235   0015EE  0E69               	movlw	105
  2236   0015F0  6FB3               	movwf	vfpfcnvrt@c& (0+255),b
  2237                           
  2238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1177:     break;
  2239   0015F2  EF14  F00B         	goto	l4910
  2240   0015F6                     l4904:
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1179:     c = 0;
  2244   0015F6  0E00               	movlw	0
  2245   0015F8  6FB3               	movwf	vfpfcnvrt@c& (0+255),b
  2246                           
  2247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1180:     break;
  2248   0015FA  EF14  F00B         	goto	l4910
  2249   0015FE                     l4908:
  2250                           
  2251                           ; BSR set to: 0
  2252   0015FE  51B3               	movf	vfpfcnvrt@c& (0+255),w,b
  2253   001600  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  2254   001602  6BA4               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2255                           
  2256                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2257                           ; Switch size 1, requested type "simple"
  2258                           ; Number of cases is 1, Range of values is 0 to 0
  2259                           ; switch strategies available:
  2260                           ; Name         Instructions Cycles
  2261                           ; simple_byte            4     3 (average)
  2262                           ;	Chosen strategy is simple_byte
  2263   001604  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2264   001606  0A00               	xorlw	0	; case 0
  2265   001608  B4D8               	btfsc	status,2,c
  2266   00160A  EF09  F00B         	goto	l5836
  2267   00160E  EFFB  F00A         	goto	l4904
  2268   001612                     l5836:
  2269                           
  2270                           ; BSR set to: 0
  2271                           ; Switch size 1, requested type "simple"
  2272                           ; Number of cases is 2, Range of values is 108 to 117
  2273                           ; switch strategies available:
  2274                           ; Name         Instructions Cycles
  2275                           ; simple_byte            7     4 (average)
  2276                           ;	Chosen strategy is simple_byte
  2277   001612  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  2278   001614  0A6C               	xorlw	108	; case 108
  2279   001616  B4D8               	btfsc	status,2,c
  2280   001618  EFF3  F00A         	goto	l4900
  2281   00161C  0A19               	xorlw	25	; case 117
  2282   00161E  B4D8               	btfsc	status,2,c
  2283   001620  EFF7  F00A         	goto	l4902
  2284   001624  EFFB  F00A         	goto	l4904
  2285   001628                     l4910:
  2286                           
  2287                           ; BSR set to: 0
  2288   001628  C0B4  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2289   00162C  C0B5  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2290   001630                     	if	0	;tblptru may be non-zero
  2291   001630                     	endif
  2292   001630                     	if	0	;tblptru may be non-zero
  2293   001630                     	endif
  2294   001630  0008               	tblrd		*
  2295   001632  50F5               	movf	tablat,w,c
  2296   001634  0A75               	xorlw	117
  2297   001636  A4D8               	btfss	status,2,c
  2298   001638  EF20  F00B         	goto	u2831
  2299   00163C  EF22  F00B         	goto	u2830
  2300   001640                     u2831:
  2301   001640  EFBD  F00B         	goto	l4930
  2302   001644                     u2830:
  2303   001644  EF6A  F00B         	goto	l4918
  2304   001648                     l4912:
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1256:      convar
      +                          g.llu = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)a
      +                          p, (unsigned int)0));
  2308   001648  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2309   00164C  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2310   001650  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  2311   001654  0E02               	movlw	2
  2312   001656  26DE               	addwf	postinc2,f,c
  2313   001658  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  2314   00165C  0E00               	movlw	0
  2315   00165E  22DD               	addwfc	postdec2,f,c
  2316   001660  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2317   001664  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2318   001668  CFDE F0A5          	movff	postinc2,??_vfpfcnvrt+2
  2319   00166C  CFDD F0A6          	movff	postdec2,??_vfpfcnvrt+3
  2320   001670  C0A5  F0A9         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  2321   001674  C0A6  F0AA         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  2322   001678  6BAB               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  2323   00167A  6BAC               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  2324   00167C  6BAD               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  2325   00167E  6BAE               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  2326   001680  6BAF               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  2327   001682  6BB0               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  2328                           
  2329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1257:      break;
  2330   001684  EF7F  F00B         	goto	l4920
  2331   001688                     l4914:
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1270:      convar
      +                          g.llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned
      +                           long)0));
  2335   001688  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2336   00168C  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2337   001690  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  2338   001694  0E04               	movlw	4
  2339   001696  26DE               	addwf	postinc2,f,c
  2340   001698  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  2341   00169C  0E00               	movlw	0
  2342   00169E  22DD               	addwfc	postdec2,f,c
  2343   0016A0  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2344   0016A4  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2345   0016A8  CFDE F0A5          	movff	postinc2,??_vfpfcnvrt+2
  2346   0016AC  CFDE F0A6          	movff	postinc2,??_vfpfcnvrt+3
  2347   0016B0  CFDE F0A7          	movff	postinc2,??_vfpfcnvrt+4
  2348   0016B4  CFDE F0A8          	movff	postinc2,??_vfpfcnvrt+5
  2349   0016B8  51A5               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  2350   0016BA  6FA9               	movwf	vfpfcnvrt@convarg& (0+255),b
  2351   0016BC  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2352   0016BE  6FAA               	movwf	(vfpfcnvrt@convarg+1)& (0+255),b
  2353   0016C0  51A7               	movf	(??_vfpfcnvrt+4)& (0+255),w,b
  2354   0016C2  6FAB               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2355   0016C4  51A8               	movf	(??_vfpfcnvrt+5)& (0+255),w,b
  2356   0016C6  6FAC               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2357   0016C8  6BAD               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  2358   0016CA  6BAE               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  2359   0016CC  6BAF               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  2360   0016CE  6BB0               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  2361                           
  2362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1271:      break;
  2363   0016D0  EF7F  F00B         	goto	l4920
  2364   0016D4                     l4918:
  2365                           
  2366                           ; BSR set to: 0
  2367   0016D4  51B3               	movf	vfpfcnvrt@c& (0+255),w,b
  2368   0016D6  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  2369   0016D8  6BA4               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2370                           
  2371                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2372                           ; Switch size 1, requested type "simple"
  2373                           ; Number of cases is 1, Range of values is 0 to 0
  2374                           ; switch strategies available:
  2375                           ; Name         Instructions Cycles
  2376                           ; simple_byte            4     3 (average)
  2377                           ;	Chosen strategy is simple_byte
  2378   0016DA  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2379   0016DC  0A00               	xorlw	0	; case 0
  2380   0016DE  B4D8               	btfsc	status,2,c
  2381   0016E0  EF74  F00B         	goto	l5838
  2382   0016E4  EF7F  F00B         	goto	l4920
  2383   0016E8                     l5838:
  2384                           
  2385                           ; BSR set to: 0
  2386                           ; Switch size 1, requested type "simple"
  2387                           ; Number of cases is 2, Range of values is 105 to 108
  2388                           ; switch strategies available:
  2389                           ; Name         Instructions Cycles
  2390                           ; simple_byte            7     4 (average)
  2391                           ;	Chosen strategy is simple_byte
  2392   0016E8  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  2393   0016EA  0A69               	xorlw	105	; case 105
  2394   0016EC  B4D8               	btfsc	status,2,c
  2395   0016EE  EF24  F00B         	goto	l4912
  2396   0016F2  0A05               	xorlw	5	; case 108
  2397   0016F4  B4D8               	btfsc	status,2,c
  2398   0016F6  EF44  F00B         	goto	l4914
  2399   0016FA  EF7F  F00B         	goto	l4920
  2400   0016FE                     l4920:
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  2404   0016FE  0E01               	movlw	1
  2405   001700  25B4               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2406   001702  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  2407   001704  0E00               	movlw	0
  2408   001706  21B5               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2409   001708  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2410   00170A  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2411   00170E  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2412   001712  C0A3  FFDE         	movff	??_vfpfcnvrt,postinc2
  2413   001716  C0A4  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  2416   00171A  EFA7  F00B         	goto	l4928
  2417   00171E                     l4922:
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  2421   00171E  C09D  F07D         	movff	vfpfcnvrt@fp,utoa@fp
  2422   001722  C09E  F07E         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2423   001726  C0A9  F07F         	movff	vfpfcnvrt@convarg,utoa@d
  2424   00172A  C0AA  F080         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  2425   00172E  C0AB  F081         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  2426   001732  C0AC  F082         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  2427   001736  C0AD  F083         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  2428   00173A  C0AE  F084         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  2429   00173E  C0AF  F085         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  2430   001742  C0B0  F086         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  2431   001746  ECAC  F00E         	call	_utoa	;wreg free
  2432   00174A  EFDB  F00B         	goto	l1764
  2433   00174E                     l4928:
  2434                           
  2435                           ; BSR set to: 0
  2436   00174E  C0B4  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2437   001752  C0B5  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2438   001756                     	if	0	;tblptru may be non-zero
  2439   001756                     	endif
  2440   001756                     	if	0	;tblptru may be non-zero
  2441   001756                     	endif
  2442   001756  0008               	tblrd		*
  2443   001758  50F5               	movf	tablat,w,c
  2444   00175A  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  2445   00175C  6BA4               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2446                           
  2447                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2448                           ; Switch size 1, requested type "simple"
  2449                           ; Number of cases is 1, Range of values is 0 to 0
  2450                           ; switch strategies available:
  2451                           ; Name         Instructions Cycles
  2452                           ; simple_byte            4     3 (average)
  2453                           ;	Chosen strategy is simple_byte
  2454   00175E  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2455   001760  0A00               	xorlw	0	; case 0
  2456   001762  B4D8               	btfsc	status,2,c
  2457   001764  EFB6  F00B         	goto	l5840
  2458   001768  EFBD  F00B         	goto	l4930
  2459   00176C                     l5840:
  2460                           
  2461                           ; BSR set to: 0
  2462                           ; Switch size 1, requested type "simple"
  2463                           ; Number of cases is 1, Range of values is 117 to 117
  2464                           ; switch strategies available:
  2465                           ; Name         Instructions Cycles
  2466                           ; simple_byte            4     3 (average)
  2467                           ;	Chosen strategy is simple_byte
  2468   00176C  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  2469   00176E  0A75               	xorlw	117	; case 117
  2470   001770  B4D8               	btfsc	status,2,c
  2471   001772  EF8F  F00B         	goto	l4922
  2472   001776  EFBD  F00B         	goto	l4930
  2473   00177A                     l4930:
  2474                           
  2475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2476   00177A  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2477   00177E  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2478   001782  2ADE               	incf	postinc2,f,c
  2479   001784  0E00               	movlw	0
  2480   001786  22DD               	addwfc	postdec2,f,c
  2481   001788  EFDB  F00B         	goto	l1764
  2482   00178C                     l4934:
  2483                           
  2484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2485   00178C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2486   001790  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2487   001794  CFDE FFF6          	movff	postinc2,tblptrl
  2488   001798  CFDD FFF7          	movff	postdec2,tblptrh
  2489   00179C                     	if	0	;tblptru may be non-zero
  2490   00179C                     	endif
  2491   00179C                     	if	0	;tblptru may be non-zero
  2492   00179C                     	endif
  2493   00179C  0008               	tblrd		*
  2494   00179E  50F5               	movf	tablat,w,c
  2495   0017A0  0100               	movlb	0	; () banked
  2496   0017A2  6F62               	movwf	fputc@c& (0+255),b
  2497   0017A4  6B63               	clrf	(fputc@c+1)& (0+255),b
  2498   0017A6  C09D  F064         	movff	vfpfcnvrt@fp,fputc@fp
  2499   0017AA  C09E  F065         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2500   0017AE  EC5C  F013         	call	_fputc	;wreg free
  2501   0017B2  EFBD  F00B         	goto	l4930
  2502   0017B6                     l1764:
  2503   0017B6  0012               	return		;funcret
  2504   0017B8                     __end_of_vfpfcnvrt:
  2505                           	callstack 0
  2506                           
  2507 ;; *************** function _utoa *****************
  2508 ;; Defined at:
  2509 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  2512 ;;		 -> NULL(0), 
  2513 ;;  d               8   31[BANK0 ] unsigned long long 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  n               8   51[BANK0 ] unsigned long long 
  2516 ;;  i               2   59[BANK0 ] int 
  2517 ;;  w               2   49[BANK0 ] int 
  2518 ;;  p               2   47[BANK0 ] int 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  1    wreg      void 
  2521 ;; Registers used:
  2522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2528 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2529 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2530 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2531 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2532 ;;Total ram usage:       32 bytes
  2533 ;; Hardware stack levels used: 1
  2534 ;; Hardware stack levels required when called: 10
  2535 ;; This function calls:
  2536 ;;		___lodiv
  2537 ;;		___lomod
  2538 ;;		_pad
  2539 ;; This function is called by:
  2540 ;;		_vfpfcnvrt
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text5
  2545   001D58                     __ptext5:
  2546                           	callstack 0
  2547   001D58                     _utoa:
  2548                           	callstack 17
  2549   001D58                     
  2550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 901:     if (!(prec < 0)) {
  2551   001D58  0100               	movlb	0	; () banked
  2552   001D5A  BFE3               	btfsc	(_prec+1)& (0+255),7,b
  2553   001D5C  EFB2  F00E         	goto	u2671
  2554   001D60  EFB4  F00E         	goto	u2670
  2555   001D64                     u2671:
  2556   001D64  EFB5  F00E         	goto	l4794
  2557   001D68                     u2670:
  2558   001D68                     
  2559                           ; BSR set to: 0
  2560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 902:         flag
      +                          s &= ~(1 << 1);
  2561   001D68  93E6               	bcf	_flags& (0+255),1,b
  2562   001D6A                     l4794:
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 905:     p = (0 <
      +                           prec) ? prec : 1;
  2566   001D6A  BFE3               	btfsc	(_prec+1)& (0+255),7,b
  2567   001D6C  EFC2  F00E         	goto	u2680
  2568   001D70  51E3               	movf	(_prec+1)& (0+255),w,b
  2569   001D72  E106               	bnz	u2681
  2570   001D74  05E2               	decf	_prec& (0+255),w,b
  2571   001D76  B0D8               	btfsc	status,0,c
  2572   001D78  EFC0  F00E         	goto	u2681
  2573   001D7C  EFC2  F00E         	goto	u2680
  2574   001D80                     u2681:
  2575   001D80  EFC8  F00E         	goto	l1721
  2576   001D84                     u2680:
  2577   001D84                     
  2578                           ; BSR set to: 0
  2579   001D84  0E00               	movlw	0
  2580   001D86  6F90               	movwf	(utoa@p+1)& (0+255),b
  2581   001D88  0E01               	movlw	1
  2582   001D8A  6F8F               	movwf	utoa@p& (0+255),b
  2583   001D8C  EFCC  F00E         	goto	l1723
  2584   001D90                     l1721:
  2585                           
  2586                           ; BSR set to: 0
  2587   001D90  C0E2  F08F         	movff	_prec,utoa@p
  2588   001D94  C0E3  F090         	movff	_prec+1,utoa@p+1
  2589   001D98                     l1723:
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  2593   001D98  C0E0  F091         	movff	_width,utoa@w
  2594   001D9C  C0E1  F092         	movff	_width+1,utoa@w+1
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  2597   001DA0  C07F  F093         	movff	utoa@d,utoa@n
  2598   001DA4  C080  F094         	movff	utoa@d+1,utoa@n+1
  2599   001DA8  C081  F095         	movff	utoa@d+2,utoa@n+2
  2600   001DAC  C082  F096         	movff	utoa@d+3,utoa@n+3
  2601   001DB0  C083  F097         	movff	utoa@d+4,utoa@n+4
  2602   001DB4  C084  F098         	movff	utoa@d+5,utoa@n+5
  2603   001DB8  C085  F099         	movff	utoa@d+6,utoa@n+6
  2604   001DBC  C086  F09A         	movff	utoa@d+7,utoa@n+7
  2605   001DC0                     
  2606                           ; BSR set to: 0
  2607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  2608   001DC0  0E00               	movlw	0
  2609   001DC2  6F9C               	movwf	(utoa@i+1)& (0+255),b
  2610   001DC4  0E1F               	movlw	31
  2611   001DC6  6F9B               	movwf	utoa@i& (0+255),b
  2612   001DC8                     
  2613                           ; BSR set to: 0
  2614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  2615   001DC8  0E00               	movlw	0
  2616   001DCA  0101               	movlb	1	; () banked
  2617   001DCC  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  2620   001DCE  EF60  F00F         	goto	l4812
  2621   001DD2                     l4802:
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  2625   001DD2  079B               	decf	utoa@i& (0+255),f,b
  2626   001DD4  A0D8               	btfss	status,0,c
  2627   001DD6  079C               	decf	(utoa@i+1)& (0+255),f,b
  2628   001DD8                     
  2629                           ; BSR set to: 0
  2630                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  2631   001DD8  0E00               	movlw	low _dbuf
  2632   001DDA  259B               	addwf	utoa@i& (0+255),w,b
  2633   001DDC  6ED9               	movwf	fsr2l,c
  2634   001DDE  0E01               	movlw	high _dbuf
  2635   001DE0  219C               	addwfc	(utoa@i+1)& (0+255),w,b
  2636   001DE2  6EDA               	movwf	fsr2h,c
  2637   001DE4  C093  F060         	movff	utoa@n,___lomod@dividend
  2638   001DE8  C094  F061         	movff	utoa@n+1,___lomod@dividend+1
  2639   001DEC  C095  F062         	movff	utoa@n+2,___lomod@dividend+2
  2640   001DF0  C096  F063         	movff	utoa@n+3,___lomod@dividend+3
  2641   001DF4  C097  F064         	movff	utoa@n+4,___lomod@dividend+4
  2642   001DF8  C098  F065         	movff	utoa@n+5,___lomod@dividend+5
  2643   001DFC  C099  F066         	movff	utoa@n+6,___lomod@dividend+6
  2644   001E00  C09A  F067         	movff	utoa@n+7,___lomod@dividend+7
  2645   001E04  0E0A               	movlw	10
  2646   001E06  6F68               	movwf	___lomod@divisor& (0+255),b
  2647   001E08  0E00               	movlw	0
  2648   001E0A  6F69               	movwf	(___lomod@divisor+1)& (0+255),b
  2649   001E0C  0E00               	movlw	0
  2650   001E0E  6F6A               	movwf	(___lomod@divisor+2)& (0+255),b
  2651   001E10  0E00               	movlw	0
  2652   001E12  6F6B               	movwf	(___lomod@divisor+3)& (0+255),b
  2653   001E14  0E00               	movlw	0
  2654   001E16  6F6C               	movwf	(___lomod@divisor+4)& (0+255),b
  2655   001E18  0E00               	movlw	0
  2656   001E1A  6F6D               	movwf	(___lomod@divisor+5)& (0+255),b
  2657   001E1C  0E00               	movlw	0
  2658   001E1E  6F6E               	movwf	(___lomod@divisor+6)& (0+255),b
  2659   001E20  0E00               	movlw	0
  2660   001E22  6F6F               	movwf	(___lomod@divisor+7)& (0+255),b
  2661   001E24  EC9B  F012         	call	___lomod	;wreg free
  2662   001E28  C060  F087         	movff	?___lomod,??_utoa
  2663   001E2C  C061  F088         	movff	?___lomod+1,??_utoa+1
  2664   001E30  C062  F089         	movff	?___lomod+2,??_utoa+2
  2665   001E34  C063  F08A         	movff	?___lomod+3,??_utoa+3
  2666   001E38  C064  F08B         	movff	?___lomod+4,??_utoa+4
  2667   001E3C  C065  F08C         	movff	?___lomod+5,??_utoa+5
  2668   001E40  C066  F08D         	movff	?___lomod+6,??_utoa+6
  2669   001E44  C067  F08E         	movff	?___lomod+7,??_utoa+7
  2670   001E48  0100               	movlb	0	; () banked
  2671   001E4A  5187               	movf	??_utoa& (0+255),w,b
  2672   001E4C  0F30               	addlw	48
  2673   001E4E  6EDF               	movwf	indf2,c
  2674   001E50                     
  2675                           ; BSR set to: 0
  2676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  2677   001E50  078F               	decf	utoa@p& (0+255),f,b
  2678   001E52  A0D8               	btfss	status,0,c
  2679   001E54  0790               	decf	(utoa@p+1)& (0+255),f,b
  2680   001E56                     
  2681                           ; BSR set to: 0
  2682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  2683   001E56  0791               	decf	utoa@w& (0+255),f,b
  2684   001E58  A0D8               	btfss	status,0,c
  2685   001E5A  0792               	decf	(utoa@w+1)& (0+255),f,b
  2686   001E5C                     
  2687                           ; BSR set to: 0
  2688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  2689   001E5C  C093  F060         	movff	utoa@n,___lodiv@dividend
  2690   001E60  C094  F061         	movff	utoa@n+1,___lodiv@dividend+1
  2691   001E64  C095  F062         	movff	utoa@n+2,___lodiv@dividend+2
  2692   001E68  C096  F063         	movff	utoa@n+3,___lodiv@dividend+3
  2693   001E6C  C097  F064         	movff	utoa@n+4,___lodiv@dividend+4
  2694   001E70  C098  F065         	movff	utoa@n+5,___lodiv@dividend+5
  2695   001E74  C099  F066         	movff	utoa@n+6,___lodiv@dividend+6
  2696   001E78  C09A  F067         	movff	utoa@n+7,___lodiv@dividend+7
  2697   001E7C  0E0A               	movlw	10
  2698   001E7E  6F68               	movwf	___lodiv@divisor& (0+255),b
  2699   001E80  0E00               	movlw	0
  2700   001E82  6F69               	movwf	(___lodiv@divisor+1)& (0+255),b
  2701   001E84  0E00               	movlw	0
  2702   001E86  6F6A               	movwf	(___lodiv@divisor+2)& (0+255),b
  2703   001E88  0E00               	movlw	0
  2704   001E8A  6F6B               	movwf	(___lodiv@divisor+3)& (0+255),b
  2705   001E8C  0E00               	movlw	0
  2706   001E8E  6F6C               	movwf	(___lodiv@divisor+4)& (0+255),b
  2707   001E90  0E00               	movlw	0
  2708   001E92  6F6D               	movwf	(___lodiv@divisor+5)& (0+255),b
  2709   001E94  0E00               	movlw	0
  2710   001E96  6F6E               	movwf	(___lodiv@divisor+6)& (0+255),b
  2711   001E98  0E00               	movlw	0
  2712   001E9A  6F6F               	movwf	(___lodiv@divisor+7)& (0+255),b
  2713   001E9C  ECAA  F011         	call	___lodiv	;wreg free
  2714   001EA0  C060  F093         	movff	?___lodiv,utoa@n
  2715   001EA4  C061  F094         	movff	?___lodiv+1,utoa@n+1
  2716   001EA8  C062  F095         	movff	?___lodiv+2,utoa@n+2
  2717   001EAC  C063  F096         	movff	?___lodiv+3,utoa@n+3
  2718   001EB0  C064  F097         	movff	?___lodiv+4,utoa@n+4
  2719   001EB4  C065  F098         	movff	?___lodiv+5,utoa@n+5
  2720   001EB8  C066  F099         	movff	?___lodiv+6,utoa@n+6
  2721   001EBC  C067  F09A         	movff	?___lodiv+7,utoa@n+7
  2722   001EC0                     l4812:
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  2725   001EC0  0100               	movlb	0	; () banked
  2726   001EC2  519B               	movf	utoa@i& (0+255),w,b
  2727   001EC4  119C               	iorwf	(utoa@i+1)& (0+255),w,b
  2728   001EC6  B4D8               	btfsc	status,2,c
  2729   001EC8  EF68  F00F         	goto	u2691
  2730   001ECC  EF6A  F00F         	goto	u2690
  2731   001ED0                     u2691:
  2732   001ED0  EF9A  F00F         	goto	l4822
  2733   001ED4                     u2690:
  2734   001ED4                     
  2735                           ; BSR set to: 0
  2736   001ED4  5193               	movf	utoa@n& (0+255),w,b
  2737   001ED6  1194               	iorwf	(utoa@n+1)& (0+255),w,b
  2738   001ED8  1195               	iorwf	(utoa@n+2)& (0+255),w,b
  2739   001EDA  1196               	iorwf	(utoa@n+3)& (0+255),w,b
  2740   001EDC  1197               	iorwf	(utoa@n+4)& (0+255),w,b
  2741   001EDE  1198               	iorwf	(utoa@n+5)& (0+255),w,b
  2742   001EE0  1199               	iorwf	(utoa@n+6)& (0+255),w,b
  2743   001EE2  119A               	iorwf	(utoa@n+7)& (0+255),w,b
  2744   001EE4  A4D8               	btfss	status,2,c
  2745   001EE6  EF77  F00F         	goto	u2701
  2746   001EEA  EF79  F00F         	goto	u2700
  2747   001EEE                     u2701:
  2748   001EEE  EFE9  F00E         	goto	l4802
  2749   001EF2                     u2700:
  2750   001EF2                     
  2751                           ; BSR set to: 0
  2752   001EF2  BF90               	btfsc	(utoa@p+1)& (0+255),7,b
  2753   001EF4  EF86  F00F         	goto	u2710
  2754   001EF8  5190               	movf	(utoa@p+1)& (0+255),w,b
  2755   001EFA  E106               	bnz	u2711
  2756   001EFC  058F               	decf	utoa@p& (0+255),w,b
  2757   001EFE  B0D8               	btfsc	status,0,c
  2758   001F00  EF84  F00F         	goto	u2711
  2759   001F04  EF86  F00F         	goto	u2710
  2760   001F08                     u2711:
  2761   001F08  EFE9  F00E         	goto	l4802
  2762   001F0C                     u2710:
  2763   001F0C                     
  2764                           ; BSR set to: 0
  2765   001F0C  BF92               	btfsc	(utoa@w+1)& (0+255),7,b
  2766   001F0E  EF91  F00F         	goto	u2721
  2767   001F12  5192               	movf	(utoa@w+1)& (0+255),w,b
  2768   001F14  E108               	bnz	u2720
  2769   001F16  0591               	decf	utoa@w& (0+255),w,b
  2770   001F18  A0D8               	btfss	status,0,c
  2771   001F1A  EF91  F00F         	goto	u2721
  2772   001F1E  EF93  F00F         	goto	u2720
  2773   001F22                     u2721:
  2774   001F22  EF9A  F00F         	goto	l4822
  2775   001F26                     u2720:
  2776   001F26                     
  2777                           ; BSR set to: 0
  2778   001F26  B3E6               	btfsc	_flags& (0+255),1,b
  2779   001F28  EF98  F00F         	goto	u2731
  2780   001F2C  EF9A  F00F         	goto	u2730
  2781   001F30                     u2731:
  2782   001F30  EFE9  F00E         	goto	l4802
  2783   001F34                     u2730:
  2784   001F34                     l4822:
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2788   001F34  C07D  F072         	movff	utoa@fp,pad@fp
  2789   001F38  C07E  F073         	movff	utoa@fp+1,pad@fp+1
  2790   001F3C  0E00               	movlw	low _dbuf
  2791   001F3E  259B               	addwf	utoa@i& (0+255),w,b
  2792   001F40  6F74               	movwf	pad@buf& (0+255),b
  2793   001F42  0E01               	movlw	high _dbuf
  2794   001F44  219C               	addwfc	(utoa@i+1)& (0+255),w,b
  2795   001F46  6F75               	movwf	(pad@buf+1)& (0+255),b
  2796   001F48  C091  F076         	movff	utoa@w,pad@p
  2797   001F4C  C092  F077         	movff	utoa@w+1,pad@p+1
  2798   001F50  EC04  F013         	call	_pad	;wreg free
  2799   001F54  0012               	return		;funcret
  2800   001F56                     __end_of_utoa:
  2801                           	callstack 0
  2802                           
  2803 ;; *************** function _pad *****************
  2804 ;; Defined at:
  2805 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  2808 ;;		 -> NULL(0), 
  2809 ;;  buf             2   20[BANK0 ] PTR unsigned char 
  2810 ;;		 -> dbuf(32), 
  2811 ;;  p               2   22[BANK0 ] int 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  w               2   27[BANK0 ] int 
  2814 ;;  i               2   25[BANK0 ] int 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2824 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2825 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2826 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2827 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2828 ;;Total ram usage:       11 bytes
  2829 ;; Hardware stack levels used: 1
  2830 ;; Hardware stack levels required when called: 9
  2831 ;; This function calls:
  2832 ;;		_fputc
  2833 ;;		_fputs
  2834 ;; This function is called by:
  2835 ;;		_utoa
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text6
  2840   002608                     __ptext6:
  2841                           	callstack 0
  2842   002608                     _pad:
  2843                           	callstack 17
  2844   002608                     
  2845                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  2846   002608  0100               	movlb	0	; () banked
  2847   00260A  A1E6               	btfss	_flags& (0+255),0,b
  2848   00260C  EF0A  F013         	goto	u2591
  2849   002610  EF0C  F013         	goto	u2590
  2850   002614                     u2591:
  2851   002614  EF16  F013         	goto	l4760
  2852   002618                     u2590:
  2853   002618                     
  2854                           ; BSR set to: 0
  2855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  2856   002618  C074  F06B         	movff	pad@buf,fputs@s
  2857   00261C  C075  F06C         	movff	pad@buf+1,fputs@s+1
  2858   002620  C072  F06D         	movff	pad@fp,fputs@fp
  2859   002624  C073  F06E         	movff	pad@fp+1,fputs@fp+1
  2860   002628  EC6D  F015         	call	_fputs	;wreg free
  2861   00262C                     l4760:
  2862                           
  2863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  2864   00262C  0100               	movlb	0	; () banked
  2865   00262E  BF77               	btfsc	(pad@p+1)& (0+255),7,b
  2866   002630  EF1C  F013         	goto	u2601
  2867   002634  EF1E  F013         	goto	u2600
  2868   002638                     u2601:
  2869   002638  EF24  F013         	goto	l4764
  2870   00263C                     u2600:
  2871   00263C                     
  2872                           ; BSR set to: 0
  2873   00263C  C076  F07B         	movff	pad@p,pad@w
  2874   002640  C077  F07C         	movff	pad@p+1,pad@w+1
  2875   002644  EF28  F013         	goto	l1711
  2876   002648                     l4764:
  2877                           
  2878                           ; BSR set to: 0
  2879   002648  0E00               	movlw	0
  2880   00264A  6F7C               	movwf	(pad@w+1)& (0+255),b
  2881   00264C  0E00               	movlw	0
  2882   00264E  6F7B               	movwf	pad@w& (0+255),b
  2883   002650                     l1711:
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2887   002650  0E00               	movlw	0
  2888   002652  6F7A               	movwf	(pad@i+1)& (0+255),b
  2889   002654  0E00               	movlw	0
  2890   002656  6F79               	movwf	pad@i& (0+255),b
  2891                           
  2892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2893   002658  EF3B  F013         	goto	l4770
  2894   00265C                     l4766:
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2898   00265C  0E00               	movlw	0
  2899   00265E  6F63               	movwf	(fputc@c+1)& (0+255),b
  2900   002660  0E20               	movlw	32
  2901   002662  6F62               	movwf	fputc@c& (0+255),b
  2902   002664  C072  F064         	movff	pad@fp,fputc@fp
  2903   002668  C073  F065         	movff	pad@fp+1,fputc@fp+1
  2904   00266C  EC5C  F013         	call	_fputc	;wreg free
  2905   002670                     
  2906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2907   002670  0100               	movlb	0	; () banked
  2908   002672  4B79               	infsnz	pad@i& (0+255),f,b
  2909   002674  2B7A               	incf	(pad@i+1)& (0+255),f,b
  2910   002676                     l4770:
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2914   002676  517B               	movf	pad@w& (0+255),w,b
  2915   002678  5D79               	subwf	pad@i& (0+255),w,b
  2916   00267A  517A               	movf	(pad@i+1)& (0+255),w,b
  2917   00267C  0A80               	xorlw	128
  2918   00267E  6F78               	movwf	??_pad& (0+255),b
  2919   002680  517C               	movf	(pad@w+1)& (0+255),w,b
  2920   002682  0A80               	xorlw	128
  2921   002684  5978               	subwfb	??_pad& (0+255),w,b
  2922   002686  A0D8               	btfss	status,0,c
  2923   002688  EF48  F013         	goto	u2611
  2924   00268C  EF4A  F013         	goto	u2610
  2925   002690                     u2611:
  2926   002690  EF2E  F013         	goto	l4766
  2927   002694                     u2610:
  2928   002694                     
  2929                           ; BSR set to: 0
  2930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  2931   002694  B1E6               	btfsc	_flags& (0+255),0,b
  2932   002696  EF4F  F013         	goto	u2621
  2933   00269A  EF51  F013         	goto	u2620
  2934   00269E                     u2621:
  2935   00269E  EF5B  F013         	goto	l1716
  2936   0026A2                     u2620:
  2937   0026A2                     
  2938                           ; BSR set to: 0
  2939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2940   0026A2  C074  F06B         	movff	pad@buf,fputs@s
  2941   0026A6  C075  F06C         	movff	pad@buf+1,fputs@s+1
  2942   0026AA  C072  F06D         	movff	pad@fp,fputs@fp
  2943   0026AE  C073  F06E         	movff	pad@fp+1,fputs@fp+1
  2944   0026B2  EC6D  F015         	call	_fputs	;wreg free
  2945   0026B6                     l1716:
  2946   0026B6  0012               	return		;funcret
  2947   0026B8                     __end_of_pad:
  2948                           	callstack 0
  2949                           
  2950 ;; *************** function _fputs *****************
  2951 ;; Defined at:
  2952 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  s               2   11[BANK0 ] PTR const unsigned char 
  2955 ;;		 -> dbuf(32), 
  2956 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  2957 ;;		 -> NULL(0), 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  i               2   16[BANK0 ] int 
  2960 ;;  c               1   15[BANK0 ] unsigned char 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  2   11[BANK0 ] int 
  2963 ;; Registers used:
  2964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2970 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2971 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2973 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2974 ;;Total ram usage:        7 bytes
  2975 ;; Hardware stack levels used: 1
  2976 ;; Hardware stack levels required when called: 8
  2977 ;; This function calls:
  2978 ;;		_fputc
  2979 ;; This function is called by:
  2980 ;;		_pad
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text7
  2985   002ADA                     __ptext7:
  2986                           	callstack 0
  2987   002ADA                     _fputs:
  2988                           	callstack 17
  2989   002ADA  0E00               	movlw	0
  2990   002ADC  0100               	movlb	0	; () banked
  2991   002ADE  6F71               	movwf	(fputs@i+1)& (0+255),b
  2992   002AE0  0E00               	movlw	0
  2993   002AE2  6F70               	movwf	fputs@i& (0+255),b
  2994   002AE4  EF80  F015         	goto	l4710
  2995   002AE8                     l4706:
  2996                           
  2997                           ; BSR set to: 0
  2998   002AE8  C06F  F062         	movff	fputs@c,fputc@c
  2999   002AEC  6B63               	clrf	(fputc@c+1)& (0+255),b
  3000   002AEE  C06D  F064         	movff	fputs@fp,fputc@fp
  3001   002AF2  C06E  F065         	movff	fputs@fp+1,fputc@fp+1
  3002   002AF6  EC5C  F013         	call	_fputc	;wreg free
  3003   002AFA  0100               	movlb	0	; () banked
  3004   002AFC  4B70               	infsnz	fputs@i& (0+255),f,b
  3005   002AFE  2B71               	incf	(fputs@i+1)& (0+255),f,b
  3006   002B00                     l4710:
  3007                           
  3008                           ; BSR set to: 0
  3009   002B00  5170               	movf	fputs@i& (0+255),w,b
  3010   002B02  256B               	addwf	fputs@s& (0+255),w,b
  3011   002B04  6ED9               	movwf	fsr2l,c
  3012   002B06  5171               	movf	(fputs@i+1)& (0+255),w,b
  3013   002B08  216C               	addwfc	(fputs@s+1)& (0+255),w,b
  3014   002B0A  6EDA               	movwf	fsr2h,c
  3015   002B0C  50DF               	movf	indf2,w,c
  3016   002B0E  6F6F               	movwf	fputs@c& (0+255),b
  3017   002B10  516F               	movf	fputs@c& (0+255),w,b
  3018   002B12  A4D8               	btfss	status,2,c
  3019   002B14  EF8E  F015         	goto	u2511
  3020   002B18  EF90  F015         	goto	u2510
  3021   002B1C                     u2511:
  3022   002B1C  EF74  F015         	goto	l4706
  3023   002B20                     u2510:
  3024   002B20                     
  3025                           ; BSR set to: 0
  3026   002B20  0012               	return		;funcret
  3027   002B22                     __end_of_fputs:
  3028                           	callstack 0
  3029                           
  3030 ;; *************** function _fputc *****************
  3031 ;; Defined at:
  3032 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  c               2    2[BANK0 ] int 
  3035 ;;  fp              2    4[BANK0 ] PTR struct _IO_FILE
  3036 ;;		 -> NULL(0), 
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  2    2[BANK0 ] int 
  3041 ;; Registers used:
  3042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3048 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3050 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3051 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3052 ;;Total ram usage:        9 bytes
  3053 ;; Hardware stack levels used: 1
  3054 ;; Hardware stack levels required when called: 7
  3055 ;; This function calls:
  3056 ;;		_putch
  3057 ;; This function is called by:
  3058 ;;		_pad
  3059 ;;		_vfpfcnvrt
  3060 ;;		_fputs
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text8
  3065   0026B8                     __ptext8:
  3066                           	callstack 0
  3067   0026B8                     _fputc:
  3068                           	callstack 17
  3069   0026B8  0100               	movlb	0	; () banked
  3070   0026BA  5164               	movf	fputc@fp& (0+255),w,b
  3071   0026BC  1165               	iorwf	(fputc@fp+1)& (0+255),w,b
  3072   0026BE  B4D8               	btfsc	status,2,c
  3073   0026C0  EF64  F013         	goto	u2471
  3074   0026C4  EF66  F013         	goto	u2470
  3075   0026C8                     u2471:
  3076   0026C8  EF6F  F013         	goto	l4694
  3077   0026CC                     u2470:
  3078   0026CC                     
  3079                           ; BSR set to: 0
  3080   0026CC  5164               	movf	fputc@fp& (0+255),w,b
  3081   0026CE  1165               	iorwf	(fputc@fp+1)& (0+255),w,b
  3082   0026D0  A4D8               	btfss	status,2,c
  3083   0026D2  EF6D  F013         	goto	u2481
  3084   0026D6  EF6F  F013         	goto	u2480
  3085   0026DA                     u2481:
  3086   0026DA  EF74  F013         	goto	l4696
  3087   0026DE                     u2480:
  3088   0026DE                     l4694:
  3089                           
  3090                           ; BSR set to: 0
  3091   0026DE  5162               	movf	fputc@c& (0+255),w,b
  3092   0026E0  ECBA  F017         	call	_putch
  3093   0026E4  EFA7  F013         	goto	l1822
  3094   0026E8                     l4696:
  3095                           
  3096                           ; BSR set to: 0
  3097   0026E8  EE20 F009          	lfsr	2,9
  3098   0026EC  5164               	movf	fputc@fp& (0+255),w,b
  3099   0026EE  26D9               	addwf	fsr2l,f,c
  3100   0026F0  5165               	movf	(fputc@fp+1)& (0+255),w,b
  3101   0026F2  22DA               	addwfc	fsr2h,f,c
  3102   0026F4  50DE               	movf	postinc2,w,c
  3103   0026F6  10DE               	iorwf	postinc2,w,c
  3104   0026F8  B4D8               	btfsc	status,2,c
  3105   0026FA  EF81  F013         	goto	u2491
  3106   0026FE  EF83  F013         	goto	u2490
  3107   002702                     u2491:
  3108   002702  EF9E  F013         	goto	l4700
  3109   002706                     u2490:
  3110   002706                     
  3111                           ; BSR set to: 0
  3112   002706  EE20 F009          	lfsr	2,9
  3113   00270A  5164               	movf	fputc@fp& (0+255),w,b
  3114   00270C  26D9               	addwf	fsr2l,f,c
  3115   00270E  5165               	movf	(fputc@fp+1)& (0+255),w,b
  3116   002710  22DA               	addwfc	fsr2h,f,c
  3117   002712  EE10 F003          	lfsr	1,3
  3118   002716  5164               	movf	fputc@fp& (0+255),w,b
  3119   002718  26E1               	addwf	fsr1l,f,c
  3120   00271A  5165               	movf	(fputc@fp+1)& (0+255),w,b
  3121   00271C  22E2               	addwfc	fsr1h,f,c
  3122   00271E  50DE               	movf	postinc2,w,c
  3123   002720  5CE6               	subwf	postinc1,w,c
  3124   002722  50E6               	movf	postinc1,w,c
  3125   002724  0A80               	xorlw	128
  3126   002726  6F6A               	movwf	(??_fputc+4)& (0+255),b
  3127   002728  50DE               	movf	postinc2,w,c
  3128   00272A  0A80               	xorlw	128
  3129   00272C  596A               	subwfb	(??_fputc+4)& (0+255),w,b
  3130   00272E  B0D8               	btfsc	status,0,c
  3131   002730  EF9C  F013         	goto	u2501
  3132   002734  EF9E  F013         	goto	u2500
  3133   002738                     u2501:
  3134   002738  EFA7  F013         	goto	l1822
  3135   00273C                     u2500:
  3136   00273C                     l4700:
  3137                           
  3138                           ; BSR set to: 0
  3139   00273C  EE20 F003          	lfsr	2,3
  3140   002740  5164               	movf	fputc@fp& (0+255),w,b
  3141   002742  26D9               	addwf	fsr2l,f,c
  3142   002744  5165               	movf	(fputc@fp+1)& (0+255),w,b
  3143   002746  22DA               	addwfc	fsr2h,f,c
  3144   002748  2ADE               	incf	postinc2,f,c
  3145   00274A  0E00               	movlw	0
  3146   00274C  22DD               	addwfc	postdec2,f,c
  3147   00274E                     l1822:
  3148   00274E  0012               	return		;funcret
  3149   002750                     __end_of_fputc:
  3150                           	callstack 0
  3151                           
  3152 ;; *************** function _putch *****************
  3153 ;; Defined at:
  3154 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  txData          1    wreg     unsigned char 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  txData          1    1[BANK0 ] unsigned char 
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  1    wreg      void 
  3161 ;; Registers used:
  3162 ;;		wreg, status,2, cstack
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3169 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3171 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3172 ;;Total ram usage:        1 bytes
  3173 ;; Hardware stack levels used: 1
  3174 ;; Hardware stack levels required when called: 6
  3175 ;; This function calls:
  3176 ;;		_EUSART1_Write
  3177 ;; This function is called by:
  3178 ;;		_fputc
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           	psect	text9
  3183   002F74                     __ptext9:
  3184                           	callstack 0
  3185   002F74                     _putch:
  3186                           	callstack 17
  3187                           
  3188                           ;incstack = 0
  3189                           ;putch@txData stored from wreg
  3190   002F74  0100               	movlb	0	; () banked
  3191   002F76  6F61               	movwf	putch@txData& (0+255),b
  3192   002F78                     
  3193                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  3194   002F78  0100               	movlb	0	; () banked
  3195   002F7A  5161               	movf	putch@txData& (0+255),w,b
  3196   002F7C  EC84  F017         	call	_EUSART1_Write
  3197   002F80  0012               	return		;funcret
  3198   002F82                     __end_of_putch:
  3199                           	callstack 0
  3200                           
  3201 ;; *************** function _EUSART1_Write *****************
  3202 ;; Defined at:
  3203 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  txData          1    wreg     unsigned char 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  txData          1    0[BANK0 ] unsigned char 
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      void 
  3210 ;; Registers used:
  3211 ;;		wreg
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3220 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3221 ;;Total ram usage:        1 bytes
  3222 ;; Hardware stack levels used: 1
  3223 ;; Hardware stack levels required when called: 5
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_putch
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text10
  3232   002F08                     __ptext10:
  3233                           	callstack 0
  3234   002F08                     _EUSART1_Write:
  3235                           	callstack 17
  3236                           
  3237                           ;incstack = 0
  3238                           ;EUSART1_Write@txData stored from wreg
  3239   002F08  0100               	movlb	0	; () banked
  3240   002F0A  6F60               	movwf	EUSART1_Write@txData& (0+255),b
  3241   002F0C                     l631:
  3242                           
  3243                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  3244   002F0C  A89E               	btfss	158,4,c	;volatile
  3245   002F0E  EF8B  F017         	goto	u2461
  3246   002F12  EF8D  F017         	goto	u2460
  3247   002F16                     u2461:
  3248   002F16  EF86  F017         	goto	l631
  3249   002F1A                     u2460:
  3250   002F1A                     
  3251                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  3252   002F1A  C060  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3253   002F1E  0012               	return		;funcret
  3254   002F20                     __end_of_EUSART1_Write:
  3255                           	callstack 0
  3256                           
  3257 ;; *************** function ___lomod *****************
  3258 ;; Defined at:
  3259 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  dividend        8    0[BANK0 ] unsigned long long 
  3262 ;;  divisor         8    8[BANK0 ] unsigned long long 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  counter         1   16[BANK0 ] unsigned char 
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  8    0[BANK0 ] unsigned long long 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2, status,0
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3274 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3275 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3277 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3278 ;;Total ram usage:       17 bytes
  3279 ;; Hardware stack levels used: 1
  3280 ;; Hardware stack levels required when called: 5
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_utoa
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text11
  3289   002536                     __ptext11:
  3290                           	callstack 0
  3291   002536                     ___lomod:
  3292                           	callstack 21
  3293   002536  0100               	movlb	0	; () banked
  3294   002538  5168               	movf	___lomod@divisor& (0+255),w,b
  3295   00253A  1169               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  3296   00253C  116A               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  3297   00253E  116B               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  3298   002540  116C               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  3299   002542  116D               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  3300   002544  116E               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  3301   002546  116F               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  3302   002548  B4D8               	btfsc	status,2,c
  3303   00254A  EFA9  F012         	goto	u2561
  3304   00254E  EFAB  F012         	goto	u2560
  3305   002552                     u2561:
  3306   002552  EFF3  F012         	goto	l1456
  3307   002556                     u2560:
  3308   002556                     
  3309                           ; BSR set to: 0
  3310   002556  0E01               	movlw	1
  3311   002558  6F70               	movwf	___lomod@counter& (0+255),b
  3312   00255A  EFB9  F012         	goto	l4746
  3313   00255E                     l4744:
  3314                           
  3315                           ; BSR set to: 0
  3316   00255E  90D8               	bcf	status,0,c
  3317   002560  3768               	rlcf	___lomod@divisor& (0+255),f,b
  3318   002562  3769               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  3319   002564  376A               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  3320   002566  376B               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  3321   002568  376C               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  3322   00256A  376D               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  3323   00256C  376E               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  3324   00256E  376F               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  3325   002570  2B70               	incf	___lomod@counter& (0+255),f,b
  3326   002572                     l4746:
  3327                           
  3328                           ; BSR set to: 0
  3329   002572  AF6F               	btfss	(___lomod@divisor+7)& (0+255),7,b
  3330   002574  EFBE  F012         	goto	u2571
  3331   002578  EFC0  F012         	goto	u2570
  3332   00257C                     u2571:
  3333   00257C  EFAF  F012         	goto	l4744
  3334   002580                     u2570:
  3335   002580                     l4748:
  3336                           
  3337                           ; BSR set to: 0
  3338   002580  5168               	movf	___lomod@divisor& (0+255),w,b
  3339   002582  5D60               	subwf	___lomod@dividend& (0+255),w,b
  3340   002584  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3341   002586  5961               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  3342   002588  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3343   00258A  5962               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  3344   00258C  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3345   00258E  5963               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  3346   002590  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3347   002592  5964               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  3348   002594  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3349   002596  5965               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  3350   002598  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3351   00259A  5966               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  3352   00259C  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3353   00259E  5967               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  3354   0025A0  A0D8               	btfss	status,0,c
  3355   0025A2  EFD5  F012         	goto	u2581
  3356   0025A6  EFD7  F012         	goto	u2580
  3357   0025AA                     u2581:
  3358   0025AA  EFE7  F012         	goto	l4752
  3359   0025AE                     u2580:
  3360   0025AE                     
  3361                           ; BSR set to: 0
  3362   0025AE  5168               	movf	___lomod@divisor& (0+255),w,b
  3363   0025B0  5F60               	subwf	___lomod@dividend& (0+255),f,b
  3364   0025B2  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3365   0025B4  5B61               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  3366   0025B6  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3367   0025B8  5B62               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  3368   0025BA  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3369   0025BC  5B63               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  3370   0025BE  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3371   0025C0  5B64               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  3372   0025C2  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3373   0025C4  5B65               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  3374   0025C6  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3375   0025C8  5B66               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  3376   0025CA  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3377   0025CC  5B67               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  3378   0025CE                     l4752:
  3379                           
  3380                           ; BSR set to: 0
  3381   0025CE  90D8               	bcf	status,0,c
  3382   0025D0  336F               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  3383   0025D2  336E               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  3384   0025D4  336D               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  3385   0025D6  336C               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  3386   0025D8  336B               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  3387   0025DA  336A               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  3388   0025DC  3369               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  3389   0025DE  3368               	rrcf	___lomod@divisor& (0+255),f,b
  3390   0025E0                     
  3391                           ; BSR set to: 0
  3392   0025E0  2F70               	decfsz	___lomod@counter& (0+255),f,b
  3393   0025E2  EFC0  F012         	goto	l4748
  3394   0025E6                     l1456:
  3395                           
  3396                           ; BSR set to: 0
  3397   0025E6  C060  F060         	movff	___lomod@dividend,?___lomod
  3398   0025EA  C061  F061         	movff	___lomod@dividend+1,?___lomod+1
  3399   0025EE  C062  F062         	movff	___lomod@dividend+2,?___lomod+2
  3400   0025F2  C063  F063         	movff	___lomod@dividend+3,?___lomod+3
  3401   0025F6  C064  F064         	movff	___lomod@dividend+4,?___lomod+4
  3402   0025FA  C065  F065         	movff	___lomod@dividend+5,?___lomod+5
  3403   0025FE  C066  F066         	movff	___lomod@dividend+6,?___lomod+6
  3404   002602  C067  F067         	movff	___lomod@dividend+7,?___lomod+7
  3405   002606                     
  3406                           ; BSR set to: 0
  3407   002606  0012               	return		;funcret
  3408   002608                     __end_of___lomod:
  3409                           	callstack 0
  3410                           
  3411 ;; *************** function ___lodiv *****************
  3412 ;; Defined at:
  3413 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  dividend        8    0[BANK0 ] unsigned long long 
  3416 ;;  divisor         8    8[BANK0 ] unsigned long long 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  quotient        8   16[BANK0 ] unsigned long long 
  3419 ;;  counter         1   24[BANK0 ] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  8    0[BANK0 ] unsigned long long 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3429 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3430 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3432 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3433 ;;Total ram usage:       25 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; Hardware stack levels required when called: 5
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_utoa
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text12
  3444   002354                     __ptext12:
  3445                           	callstack 0
  3446   002354                     ___lodiv:
  3447                           	callstack 21
  3448   002354  EE20  F070         	lfsr	2,___lodiv@quotient
  3449   002358  0E07               	movlw	7
  3450   00235A                     u2521:
  3451   00235A  6ADE               	clrf	postinc2,c
  3452   00235C  06E8               	decf	wreg,f,c
  3453   00235E  E2FD               	bc	u2521
  3454   002360  0100               	movlb	0	; () banked
  3455   002362  5168               	movf	___lodiv@divisor& (0+255),w,b
  3456   002364  1169               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  3457   002366  116A               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  3458   002368  116B               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  3459   00236A  116C               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  3460   00236C  116D               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  3461   00236E  116E               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  3462   002370  116F               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  3463   002372  B4D8               	btfsc	status,2,c
  3464   002374  EFBE  F011         	goto	u2531
  3465   002378  EFC0  F011         	goto	u2530
  3466   00237C                     u2531:
  3467   00237C  EF12  F012         	goto	l1446
  3468   002380                     u2530:
  3469   002380                     
  3470                           ; BSR set to: 0
  3471   002380  0E01               	movlw	1
  3472   002382  6F78               	movwf	___lodiv@counter& (0+255),b
  3473   002384  EFCE  F011         	goto	l4726
  3474   002388                     l4724:
  3475                           
  3476                           ; BSR set to: 0
  3477   002388  90D8               	bcf	status,0,c
  3478   00238A  3768               	rlcf	___lodiv@divisor& (0+255),f,b
  3479   00238C  3769               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  3480   00238E  376A               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  3481   002390  376B               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  3482   002392  376C               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  3483   002394  376D               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  3484   002396  376E               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  3485   002398  376F               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  3486   00239A  2B78               	incf	___lodiv@counter& (0+255),f,b
  3487   00239C                     l4726:
  3488                           
  3489                           ; BSR set to: 0
  3490   00239C  AF6F               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  3491   00239E  EFD3  F011         	goto	u2541
  3492   0023A2  EFD5  F011         	goto	u2540
  3493   0023A6                     u2541:
  3494   0023A6  EFC4  F011         	goto	l4724
  3495   0023AA                     u2540:
  3496   0023AA                     l4728:
  3497                           
  3498                           ; BSR set to: 0
  3499   0023AA  90D8               	bcf	status,0,c
  3500   0023AC  3770               	rlcf	___lodiv@quotient& (0+255),f,b
  3501   0023AE  3771               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  3502   0023B0  3772               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  3503   0023B2  3773               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  3504   0023B4  3774               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  3505   0023B6  3775               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  3506   0023B8  3776               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  3507   0023BA  3777               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  3508   0023BC                     
  3509                           ; BSR set to: 0
  3510   0023BC  5168               	movf	___lodiv@divisor& (0+255),w,b
  3511   0023BE  5D60               	subwf	___lodiv@dividend& (0+255),w,b
  3512   0023C0  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3513   0023C2  5961               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  3514   0023C4  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3515   0023C6  5962               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  3516   0023C8  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3517   0023CA  5963               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  3518   0023CC  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3519   0023CE  5964               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  3520   0023D0  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3521   0023D2  5965               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  3522   0023D4  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3523   0023D6  5966               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  3524   0023D8  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3525   0023DA  5967               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  3526   0023DC  A0D8               	btfss	status,0,c
  3527   0023DE  EFF3  F011         	goto	u2551
  3528   0023E2  EFF5  F011         	goto	u2550
  3529   0023E6                     u2551:
  3530   0023E6  EF06  F012         	goto	l4736
  3531   0023EA                     u2550:
  3532   0023EA                     
  3533                           ; BSR set to: 0
  3534   0023EA  5168               	movf	___lodiv@divisor& (0+255),w,b
  3535   0023EC  5F60               	subwf	___lodiv@dividend& (0+255),f,b
  3536   0023EE  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3537   0023F0  5B61               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  3538   0023F2  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3539   0023F4  5B62               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  3540   0023F6  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3541   0023F8  5B63               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  3542   0023FA  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3543   0023FC  5B64               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  3544   0023FE  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3545   002400  5B65               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  3546   002402  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3547   002404  5B66               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  3548   002406  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3549   002408  5B67               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  3550   00240A                     
  3551                           ; BSR set to: 0
  3552   00240A  8170               	bsf	___lodiv@quotient& (0+255),0,b
  3553   00240C                     l4736:
  3554                           
  3555                           ; BSR set to: 0
  3556   00240C  90D8               	bcf	status,0,c
  3557   00240E  336F               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  3558   002410  336E               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  3559   002412  336D               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  3560   002414  336C               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  3561   002416  336B               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  3562   002418  336A               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  3563   00241A  3369               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  3564   00241C  3368               	rrcf	___lodiv@divisor& (0+255),f,b
  3565   00241E                     
  3566                           ; BSR set to: 0
  3567   00241E  2F78               	decfsz	___lodiv@counter& (0+255),f,b
  3568   002420  EFD5  F011         	goto	l4728
  3569   002424                     l1446:
  3570                           
  3571                           ; BSR set to: 0
  3572   002424  C070  F060         	movff	___lodiv@quotient,?___lodiv
  3573   002428  C071  F061         	movff	___lodiv@quotient+1,?___lodiv+1
  3574   00242C  C072  F062         	movff	___lodiv@quotient+2,?___lodiv+2
  3575   002430  C073  F063         	movff	___lodiv@quotient+3,?___lodiv+3
  3576   002434  C074  F064         	movff	___lodiv@quotient+4,?___lodiv+4
  3577   002438  C075  F065         	movff	___lodiv@quotient+5,?___lodiv+5
  3578   00243C  C076  F066         	movff	___lodiv@quotient+6,?___lodiv+6
  3579   002440  C077  F067         	movff	___lodiv@quotient+7,?___lodiv+7
  3580   002444                     
  3581                           ; BSR set to: 0
  3582   002444  0012               	return		;funcret
  3583   002446                     __end_of___lodiv:
  3584                           	callstack 0
  3585                           
  3586 ;; *************** function _atoi *****************
  3587 ;; Defined at:
  3588 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  3591 ;;		 -> STR_4(35), STR_3(52), STR_2(52), STR_1(65), 
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  n               2   13[BANK0 ] int 
  3594 ;;  neg             2   11[BANK0 ] int 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  2    6[BANK0 ] int 
  3597 ;; Registers used:
  3598 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3604 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3605 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3606 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3607 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3608 ;;Total ram usage:        9 bytes
  3609 ;; Hardware stack levels used: 1
  3610 ;; Hardware stack levels required when called: 6
  3611 ;; This function calls:
  3612 ;;		___wmul
  3613 ;;		_isdigit
  3614 ;;		_isspace
  3615 ;; This function is called by:
  3616 ;;		_vfpfcnvrt
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           	psect	text13
  3621   0020CC                     __ptext13:
  3622                           	callstack 0
  3623   0020CC                     _atoi:
  3624                           	callstack 21
  3625   0020CC  0E00               	movlw	0
  3626   0020CE  0100               	movlb	0	; () banked
  3627   0020D0  6F6E               	movwf	(atoi@n+1)& (0+255),b
  3628   0020D2  0E00               	movlw	0
  3629   0020D4  6F6D               	movwf	atoi@n& (0+255),b
  3630   0020D6  0E00               	movlw	0
  3631   0020D8  6F6C               	movwf	(atoi@neg+1)& (0+255),b
  3632   0020DA  0E00               	movlw	0
  3633   0020DC  6F6B               	movwf	atoi@neg& (0+255),b
  3634   0020DE  EF73  F010         	goto	l4832
  3635   0020E2                     l4828:
  3636                           
  3637                           ; BSR set to: 0
  3638   0020E2  4B66               	infsnz	atoi@s& (0+255),f,b
  3639   0020E4  2B67               	incf	(atoi@s+1)& (0+255),f,b
  3640   0020E6                     l4832:
  3641                           
  3642                           ; BSR set to: 0
  3643   0020E6  C066  FFF6         	movff	atoi@s,tblptrl
  3644   0020EA  C067  FFF7         	movff	atoi@s+1,tblptrh
  3645   0020EE                     	if	0	;tblptru may be non-zero
  3646   0020EE                     	endif
  3647   0020EE                     	if	0	;tblptru may be non-zero
  3648   0020EE                     	endif
  3649   0020EE  0008               	tblrd		*
  3650   0020F0  50F5               	movf	tablat,w,c
  3651   0020F2  0A20               	xorlw	32
  3652   0020F4  B4D8               	btfsc	status,2,c
  3653   0020F6  EF7F  F010         	goto	u2741
  3654   0020FA  EF81  F010         	goto	u2740
  3655   0020FE                     u2741:
  3656   0020FE  EF71  F010         	goto	l4828
  3657   002102                     u2740:
  3658   002102                     
  3659                           ; BSR set to: 0
  3660   002102  C066  FFF6         	movff	atoi@s,tblptrl
  3661   002106  C067  FFF7         	movff	atoi@s+1,tblptrh
  3662   00210A                     	if	0	;tblptru may be non-zero
  3663   00210A                     	endif
  3664   00210A                     	if	0	;tblptru may be non-zero
  3665   00210A                     	endif
  3666   00210A  0008               	tblrd		*
  3667   00210C  CFF5 F068          	movff	tablat,??_atoi
  3668   002110  0EF7               	movlw	247
  3669   002112  2568               	addwf	??_atoi& (0+255),w,b
  3670   002114  6F69               	movwf	(??_atoi+1)& (0+255),b
  3671   002116  6B6A               	clrf	(??_atoi+2)& (0+255),b
  3672   002118  0EFF               	movlw	255
  3673   00211A  236A               	addwfc	(??_atoi+2)& (0+255),f,b
  3674   00211C  516A               	movf	(??_atoi+2)& (0+255),w,b
  3675   00211E  E109               	bnz	u2750
  3676   002120  0E05               	movlw	5
  3677   002122  5D69               	subwf	(??_atoi+1)& (0+255),w,b
  3678   002124  A0D8               	btfss	status,0,c
  3679   002126  EF97  F010         	goto	u2751
  3680   00212A  EF99  F010         	goto	u2750
  3681   00212E                     u2751:
  3682   00212E  EF71  F010         	goto	l4828
  3683   002132                     u2750:
  3684   002132  EFA3  F010         	goto	l4840
  3685   002136                     l4836:
  3686                           
  3687                           ; BSR set to: 0
  3688   002136  0E00               	movlw	0
  3689   002138  6F6C               	movwf	(atoi@neg+1)& (0+255),b
  3690   00213A  0E01               	movlw	1
  3691   00213C  6F6B               	movwf	atoi@neg& (0+255),b
  3692   00213E                     l4838:
  3693                           
  3694                           ; BSR set to: 0
  3695   00213E  4B66               	infsnz	atoi@s& (0+255),f,b
  3696   002140  2B67               	incf	(atoi@s+1)& (0+255),f,b
  3697   002142  EFD9  F010         	goto	l4848
  3698   002146                     l4840:
  3699                           
  3700                           ; BSR set to: 0
  3701   002146  C066  FFF6         	movff	atoi@s,tblptrl
  3702   00214A  C067  FFF7         	movff	atoi@s+1,tblptrh
  3703   00214E                     	if	0	;tblptru may be non-zero
  3704   00214E                     	endif
  3705   00214E                     	if	0	;tblptru may be non-zero
  3706   00214E                     	endif
  3707   00214E  0008               	tblrd		*
  3708   002150  50F5               	movf	tablat,w,c
  3709   002152  6F68               	movwf	??_atoi& (0+255),b
  3710   002154  6B69               	clrf	(??_atoi+1)& (0+255),b
  3711                           
  3712                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3713                           ; Switch size 1, requested type "simple"
  3714                           ; Number of cases is 1, Range of values is 0 to 0
  3715                           ; switch strategies available:
  3716                           ; Name         Instructions Cycles
  3717                           ; simple_byte            4     3 (average)
  3718                           ;	Chosen strategy is simple_byte
  3719   002156  5169               	movf	(??_atoi+1)& (0+255),w,b
  3720   002158  0A00               	xorlw	0	; case 0
  3721   00215A  B4D8               	btfsc	status,2,c
  3722   00215C  EFB2  F010         	goto	l5842
  3723   002160  EFD9  F010         	goto	l4848
  3724   002164                     l5842:
  3725                           
  3726                           ; BSR set to: 0
  3727                           ; Switch size 1, requested type "simple"
  3728                           ; Number of cases is 2, Range of values is 43 to 45
  3729                           ; switch strategies available:
  3730                           ; Name         Instructions Cycles
  3731                           ; simple_byte            7     4 (average)
  3732                           ;	Chosen strategy is simple_byte
  3733   002164  5168               	movf	??_atoi& (0+255),w,b
  3734   002166  0A2B               	xorlw	43	; case 43
  3735   002168  B4D8               	btfsc	status,2,c
  3736   00216A  EF9F  F010         	goto	l4838
  3737   00216E  0A06               	xorlw	6	; case 45
  3738   002170  B4D8               	btfsc	status,2,c
  3739   002172  EF9B  F010         	goto	l4836
  3740   002176  EFD9  F010         	goto	l4848
  3741   00217A                     l4842:
  3742                           
  3743                           ; BSR set to: 0
  3744   00217A  C06D  F060         	movff	atoi@n,___wmul@multiplier
  3745   00217E  C06E  F061         	movff	atoi@n+1,___wmul@multiplier+1
  3746   002182  0E00               	movlw	0
  3747   002184  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3748   002186  0E0A               	movlw	10
  3749   002188  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3750   00218A  ECF4  F016         	call	___wmul	;wreg free
  3751   00218E  C066  FFF6         	movff	atoi@s,tblptrl
  3752   002192  C067  FFF7         	movff	atoi@s+1,tblptrh
  3753   002196                     	if	0	;tblptru may be non-zero
  3754   002196                     	endif
  3755   002196                     	if	0	;tblptru may be non-zero
  3756   002196                     	endif
  3757   002196  0008               	tblrd		*
  3758   002198  50F5               	movf	tablat,w,c
  3759   00219A  0100               	movlb	0	; () banked
  3760   00219C  5F60               	subwf	?___wmul& (0+255),f,b
  3761   00219E  0E00               	movlw	0
  3762   0021A0  5B61               	subwfb	(?___wmul+1)& (0+255),f,b
  3763   0021A2  0E30               	movlw	48
  3764   0021A4  2560               	addwf	?___wmul& (0+255),w,b
  3765   0021A6  6F6D               	movwf	atoi@n& (0+255),b
  3766   0021A8  0E00               	movlw	0
  3767   0021AA  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  3768   0021AC  6F6E               	movwf	(atoi@n+1)& (0+255),b
  3769   0021AE  EF9F  F010         	goto	l4838
  3770   0021B2                     l4848:
  3771                           
  3772                           ; BSR set to: 0
  3773   0021B2  C066  FFF6         	movff	atoi@s,tblptrl
  3774   0021B6  C067  FFF7         	movff	atoi@s+1,tblptrh
  3775   0021BA                     	if	0	;tblptru may be non-zero
  3776   0021BA                     	endif
  3777   0021BA                     	if	0	;tblptru may be non-zero
  3778   0021BA                     	endif
  3779   0021BA  0008               	tblrd		*
  3780   0021BC  CFF5 F068          	movff	tablat,??_atoi
  3781   0021C0  0ED0               	movlw	208
  3782   0021C2  2568               	addwf	??_atoi& (0+255),w,b
  3783   0021C4  6F69               	movwf	(??_atoi+1)& (0+255),b
  3784   0021C6  6B6A               	clrf	(??_atoi+2)& (0+255),b
  3785   0021C8  0EFF               	movlw	255
  3786   0021CA  236A               	addwfc	(??_atoi+2)& (0+255),f,b
  3787   0021CC  516A               	movf	(??_atoi+2)& (0+255),w,b
  3788   0021CE  E109               	bnz	u2760
  3789   0021D0  0E0A               	movlw	10
  3790   0021D2  5D69               	subwf	(??_atoi+1)& (0+255),w,b
  3791   0021D4  A0D8               	btfss	status,0,c
  3792   0021D6  EFEF  F010         	goto	u2761
  3793   0021DA  EFF1  F010         	goto	u2760
  3794   0021DE                     u2761:
  3795   0021DE  EFBD  F010         	goto	l4842
  3796   0021E2                     u2760:
  3797   0021E2                     
  3798                           ; BSR set to: 0
  3799   0021E2  516B               	movf	atoi@neg& (0+255),w,b
  3800   0021E4  116C               	iorwf	(atoi@neg+1)& (0+255),w,b
  3801   0021E6  A4D8               	btfss	status,2,c
  3802   0021E8  EFF8  F010         	goto	u2771
  3803   0021EC  EFFA  F010         	goto	u2770
  3804   0021F0                     u2771:
  3805   0021F0  EF08  F011         	goto	l1793
  3806   0021F4                     u2770:
  3807   0021F4                     
  3808                           ; BSR set to: 0
  3809   0021F4  C06D  F068         	movff	atoi@n,??_atoi
  3810   0021F8  C06E  F069         	movff	atoi@n+1,??_atoi+1
  3811   0021FC  1F68               	comf	??_atoi& (0+255),f,b
  3812   0021FE  1F69               	comf	(??_atoi+1)& (0+255),f,b
  3813   002200  4B68               	infsnz	??_atoi& (0+255),f,b
  3814   002202  2B69               	incf	(??_atoi+1)& (0+255),f,b
  3815   002204  C068  F066         	movff	??_atoi,?_atoi
  3816   002208  C069  F067         	movff	??_atoi+1,?_atoi+1
  3817   00220C  EF0C  F011         	goto	l1796
  3818   002210                     l1793:
  3819                           
  3820                           ; BSR set to: 0
  3821   002210  C06D  F066         	movff	atoi@n,?_atoi
  3822   002214  C06E  F067         	movff	atoi@n+1,?_atoi+1
  3823   002218                     l1796:
  3824                           
  3825                           ; BSR set to: 0
  3826   002218  0012               	return		;funcret
  3827   00221A                     __end_of_atoi:
  3828                           	callstack 0
  3829                           
  3830 ;; *************** function _isspace *****************
  3831 ;; Defined at:
  3832 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;  c               2    0[BANK0 ] int 
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  2    0[BANK0 ] int 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3846 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3848 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3849 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3850 ;;Total ram usage:        5 bytes
  3851 ;; Hardware stack levels used: 1
  3852 ;; Hardware stack levels required when called: 5
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		_atoi
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text14
  3861   002B22                     __ptext14:
  3862                           	callstack 0
  3863   002B22                     _isspace:
  3864                           	callstack 21
  3865   002B22  0E01               	movlw	1
  3866   002B24  0100               	movlb	0	; () banked
  3867   002B26  6F64               	movwf	_isspace$2887& (0+255),b
  3868   002B28                     
  3869                           ; BSR set to: 0
  3870   002B28  0E20               	movlw	32
  3871   002B2A  1960               	xorwf	isspace@c& (0+255),w,b
  3872   002B2C  1161               	iorwf	(isspace@c+1)& (0+255),w,b
  3873   002B2E  B4D8               	btfsc	status,2,c
  3874   002B30  EF9C  F015         	goto	u2651
  3875   002B34  EF9E  F015         	goto	u2650
  3876   002B38                     u2651:
  3877   002B38  EFB1  F015         	goto	l4786
  3878   002B3C                     u2650:
  3879   002B3C                     
  3880                           ; BSR set to: 0
  3881   002B3C  0EF7               	movlw	247
  3882   002B3E  2560               	addwf	isspace@c& (0+255),w,b
  3883   002B40  6F62               	movwf	??_isspace& (0+255),b
  3884   002B42  0EFF               	movlw	255
  3885   002B44  2161               	addwfc	(isspace@c+1)& (0+255),w,b
  3886   002B46  6F63               	movwf	(??_isspace+1)& (0+255),b
  3887   002B48  5163               	movf	(??_isspace+1)& (0+255),w,b
  3888   002B4A  E109               	bnz	u2660
  3889   002B4C  0E05               	movlw	5
  3890   002B4E  5D62               	subwf	??_isspace& (0+255),w,b
  3891   002B50  A0D8               	btfss	status,0,c
  3892   002B52  EFAD  F015         	goto	u2661
  3893   002B56  EFAF  F015         	goto	u2660
  3894   002B5A                     u2661:
  3895   002B5A  EFB1  F015         	goto	l4786
  3896   002B5E                     u2660:
  3897   002B5E                     
  3898                           ; BSR set to: 0
  3899   002B5E  0E00               	movlw	0
  3900   002B60  6F64               	movwf	_isspace$2887& (0+255),b
  3901   002B62                     l4786:
  3902                           
  3903                           ; BSR set to: 0
  3904   002B62  C064  F060         	movff	_isspace$2887,?_isspace
  3905   002B66  6B61               	clrf	(?_isspace+1)& (0+255),b
  3906   002B68                     
  3907                           ; BSR set to: 0
  3908   002B68  0012               	return		;funcret
  3909   002B6A                     __end_of_isspace:
  3910                           	callstack 0
  3911                           
  3912 ;; *************** function _isdigit *****************
  3913 ;; Defined at:
  3914 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  c               2    0[BANK0 ] int 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;		None
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  2    0[BANK0 ] int 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2, status,0
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3928 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3930 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3931 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3932 ;;Total ram usage:        4 bytes
  3933 ;; Hardware stack levels used: 1
  3934 ;; Hardware stack levels required when called: 5
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_vfpfcnvrt
  3939 ;;		_atoi
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text15
  3944   002C58                     __ptext15:
  3945                           	callstack 0
  3946   002C58                     _isdigit:
  3947                           	callstack 22
  3948   002C58  0ED0               	movlw	208
  3949   002C5A  0100               	movlb	0	; () banked
  3950   002C5C  2560               	addwf	isdigit@c& (0+255),w,b
  3951   002C5E  6F62               	movwf	??_isdigit& (0+255),b
  3952   002C60  0EFF               	movlw	255
  3953   002C62  2161               	addwfc	(isdigit@c+1)& (0+255),w,b
  3954   002C64  6F63               	movwf	(??_isdigit+1)& (0+255),b
  3955   002C66  5163               	movf	(??_isdigit+1)& (0+255),w,b
  3956   002C68  E10A               	bnz	u2630
  3957   002C6A  0E0A               	movlw	10
  3958   002C6C  5D62               	subwf	??_isdigit& (0+255),w,b
  3959   002C6E  A0D8               	btfss	status,0,c
  3960   002C70  EF3C  F016         	goto	u2631
  3961   002C74  EF3F  F016         	goto	u2630
  3962   002C78                     u2631:
  3963   002C78  0E01               	movlw	1
  3964   002C7A  EF40  F016         	goto	u2640
  3965   002C7E                     u2630:
  3966   002C7E  0E00               	movlw	0
  3967   002C80                     u2640:
  3968   002C80  6F60               	movwf	?_isdigit& (0+255),b
  3969   002C82  6B61               	clrf	(?_isdigit+1)& (0+255),b
  3970   002C84                     
  3971                           ; BSR set to: 0
  3972   002C84  0012               	return		;funcret
  3973   002C86                     __end_of_isdigit:
  3974                           	callstack 0
  3975                           
  3976 ;; *************** function ___wmul *****************
  3977 ;; Defined at:
  3978 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3981 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;  product         2    4[BANK0 ] unsigned int 
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  2    0[BANK0 ] unsigned int 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0, prodl, prodh
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3993 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3994 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3996 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3997 ;;Total ram usage:        6 bytes
  3998 ;; Hardware stack levels used: 1
  3999 ;; Hardware stack levels required when called: 5
  4000 ;; This function calls:
  4001 ;;		Nothing
  4002 ;; This function is called by:
  4003 ;;		_atoi
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           	psect	text16
  4008   002DE8                     __ptext16:
  4009                           	callstack 0
  4010   002DE8                     ___wmul:
  4011                           	callstack 21
  4012   002DE8  0100               	movlb	0	; () banked
  4013   002DEA  5160               	movf	___wmul@multiplier& (0+255),w,b
  4014   002DEC  0362               	mulwf	___wmul@multiplicand& (0+255),b
  4015   002DEE  CFF3 F064          	movff	prodl,___wmul@product
  4016   002DF2  CFF4 F065          	movff	prodh,___wmul@product+1
  4017   002DF6  5160               	movf	___wmul@multiplier& (0+255),w,b
  4018   002DF8  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  4019   002DFA  50F3               	movf	243,w,c
  4020   002DFC  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  4021   002DFE  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  4022   002E00  0362               	mulwf	___wmul@multiplicand& (0+255),b
  4023   002E02  50F3               	movf	243,w,c
  4024   002E04  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  4025   002E06                     
  4026                           ; BSR set to: 0
  4027   002E06  C064  F060         	movff	___wmul@product,?___wmul
  4028   002E0A  C065  F061         	movff	___wmul@product+1,?___wmul+1
  4029   002E0E                     
  4030                           ; BSR set to: 0
  4031   002E0E  0012               	return		;funcret
  4032   002E10                     __end_of___wmul:
  4033                           	callstack 0
  4034                           
  4035 ;; *************** function _SYSTEM_Initialize *****************
  4036 ;; Defined at:
  4037 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;		None
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;		None
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  1    wreg      void 
  4044 ;; Registers used:
  4045 ;;		wreg, status,2, status,0, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4055 ;;Total ram usage:        0 bytes
  4056 ;; Hardware stack levels used: 1
  4057 ;; Hardware stack levels required when called: 7
  4058 ;; This function calls:
  4059 ;;		_ECAN_Initialize
  4060 ;;		_EUSART1_Initialize
  4061 ;;		_EXT_INT_Initialize
  4062 ;;		_INTERRUPT_Initialize
  4063 ;;		_OSCILLATOR_Initialize
  4064 ;;		_PIN_MANAGER_Initialize
  4065 ;;		_TMR1_Initialize
  4066 ;;		_TMR2_Initialize
  4067 ;;		_TMR3_Initialize
  4068 ;; This function is called by:
  4069 ;;		_main
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           	psect	text17
  4074   002E86                     __ptext17:
  4075                           	callstack 0
  4076   002E86                     _SYSTEM_Initialize:
  4077                           	callstack 23
  4078   002E86                     
  4079                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4080   002E86  ECFD  F017         	call	_INTERRUPT_Initialize	;wreg free
  4081   002E8A                     
  4082                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4083   002E8A  EC9F  F016         	call	_PIN_MANAGER_Initialize	;wreg free
  4084   002E8E                     
  4085                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4086   002E8E  ECB1  F017         	call	_OSCILLATOR_Initialize	;wreg free
  4087   002E92                     
  4088                           ;mcc_generated_files/mcc.c: 56:     TMR3_Initialize();
  4089   002E92  ECD7  F015         	call	_TMR3_Initialize	;wreg free
  4090   002E96                     
  4091                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  4092   002E96  EC56  F017         	call	_TMR2_Initialize	;wreg free
  4093   002E9A                     
  4094                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
  4095   002E9A  EC9C  F017         	call	_EXT_INT_Initialize	;wreg free
  4096   002E9E                     
  4097                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
  4098   002E9E  ECF4  F015         	call	_TMR1_Initialize	;wreg free
  4099   002EA2                     
  4100                           ;mcc_generated_files/mcc.c: 60:     EUSART1_Initialize();
  4101   002EA2  ECB5  F015         	call	_EUSART1_Initialize	;wreg free
  4102   002EA6                     
  4103                           ;mcc_generated_files/mcc.c: 61:     ECAN_Initialize();
  4104   002EA6  EC23  F012         	call	_ECAN_Initialize	;wreg free
  4105   002EAA  0012               	return		;funcret
  4106   002EAC                     __end_of_SYSTEM_Initialize:
  4107                           	callstack 0
  4108                           
  4109 ;; *************** function _TMR3_Initialize *****************
  4110 ;; Defined at:
  4111 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;		None
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;		None
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  1    wreg      void 
  4118 ;; Registers used:
  4119 ;;		wreg, status,2, status,0, cstack
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4127 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4128 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4129 ;;Total ram usage:        2 bytes
  4130 ;; Hardware stack levels used: 1
  4131 ;; Hardware stack levels required when called: 6
  4132 ;; This function calls:
  4133 ;;		_TMR3_SetInterruptHandler
  4134 ;; This function is called by:
  4135 ;;		_SYSTEM_Initialize
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           	psect	text18
  4140   002BAE                     __ptext18:
  4141                           	callstack 0
  4142   002BAE                     _TMR3_Initialize:
  4143                           	callstack 23
  4144   002BAE                     
  4145                           ;mcc_generated_files/tmr3.c: 69:     T3GCON = 0x00;
  4146   002BAE  0E00               	movlw	0
  4147   002BB0  6EB0               	movwf	176,c	;volatile
  4148                           
  4149                           ;mcc_generated_files/tmr3.c: 72:     TMR3H = 0x3C;
  4150   002BB2  0E3C               	movlw	60
  4151   002BB4  6EB3               	movwf	179,c	;volatile
  4152                           
  4153                           ;mcc_generated_files/tmr3.c: 75:     TMR3L = 0xB0;
  4154   002BB6  0EB0               	movlw	176
  4155   002BB8  6EB2               	movwf	178,c	;volatile
  4156   002BBA                     
  4157                           ;mcc_generated_files/tmr3.c: 78:     PIR2bits.TMR3IF = 0;
  4158   002BBA  92A1               	bcf	161,1,c	;volatile
  4159   002BBC                     
  4160                           ;mcc_generated_files/tmr3.c: 81:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  4161   002BBC  50B2               	movf	178,w,c	;volatile
  4162   002BBE  CFB3 F062          	movff	4019,??_TMR3_Initialize	;volatile
  4163   002BC2  0100               	movlb	0	; () banked
  4164   002BC4  6B63               	clrf	(??_TMR3_Initialize+1)& (0+255),b
  4165   002BC6  C062  F063         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  4166   002BCA  6B62               	clrf	??_TMR3_Initialize& (0+255),b
  4167   002BCC  1162               	iorwf	??_TMR3_Initialize& (0+255),w,b
  4168   002BCE  6E3B               	movwf	_timer3ReloadVal^0,c	;volatile
  4169   002BD0  5163               	movf	(??_TMR3_Initialize+1)& (0+255),w,b
  4170   002BD2  6E3C               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
  4171   002BD4                     
  4172                           ; BSR set to: 0
  4173                           ;mcc_generated_files/tmr3.c: 84:     PIE2bits.TMR3IE = 1;
  4174   002BD4  82A0               	bsf	160,1,c	;volatile
  4175   002BD6                     
  4176                           ; BSR set to: 0
  4177                           ;mcc_generated_files/tmr3.c: 87:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
  4178   002BD6  0E06               	movlw	low _TMR3_DefaultInterruptHandler
  4179   002BD8  6F60               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  4180   002BDA  0E30               	movlw	high _TMR3_DefaultInterruptHandler
  4181   002BDC  6F61               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4182   002BDE  ECC8  F017         	call	_TMR3_SetInterruptHandler	;wreg free
  4183   002BE2                     
  4184                           ;mcc_generated_files/tmr3.c: 90:     T3CON = 0x71;
  4185   002BE2  0E71               	movlw	113
  4186   002BE4  6EB1               	movwf	177,c	;volatile
  4187   002BE6  0012               	return		;funcret
  4188   002BE8                     __end_of_TMR3_Initialize:
  4189                           	callstack 0
  4190                           
  4191 ;; *************** function _TMR3_SetInterruptHandler *****************
  4192 ;; Defined at:
  4193 ;;		line 185 in file "mcc_generated_files/tmr3.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4196 ;;		 -> Clignotant_PWM(1), TMR3_DefaultInterruptHandler(1), 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;		None
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  1    wreg      void 
  4201 ;; Registers used:
  4202 ;;		wreg, status,2, status,0
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4208 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4211 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4212 ;;Total ram usage:        2 bytes
  4213 ;; Hardware stack levels used: 1
  4214 ;; Hardware stack levels required when called: 5
  4215 ;; This function calls:
  4216 ;;		Nothing
  4217 ;; This function is called by:
  4218 ;;		_TMR3_Initialize
  4219 ;;		_main
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text19
  4224   002F90                     __ptext19:
  4225                           	callstack 0
  4226   002F90                     _TMR3_SetInterruptHandler:
  4227                           	callstack 25
  4228   002F90                     
  4229                           ;mcc_generated_files/tmr3.c: 186:     TMR3_InterruptHandler = InterruptHandler;
  4230   002F90  C060  F039         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  4231   002F94  C061  F03A         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  4232   002F98  0012               	return		;funcret
  4233   002F9A                     __end_of_TMR3_SetInterruptHandler:
  4234                           	callstack 0
  4235                           
  4236 ;; *************** function _TMR2_Initialize *****************
  4237 ;; Defined at:
  4238 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      void 
  4245 ;; Registers used:
  4246 ;;		wreg, status,2, status,0, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4256 ;;Total ram usage:        0 bytes
  4257 ;; Hardware stack levels used: 1
  4258 ;; Hardware stack levels required when called: 6
  4259 ;; This function calls:
  4260 ;;		_TMR2_SetInterruptHandler
  4261 ;; This function is called by:
  4262 ;;		_SYSTEM_Initialize
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text20
  4267   002EAC                     __ptext20:
  4268                           	callstack 0
  4269   002EAC                     _TMR2_Initialize:
  4270                           	callstack 23
  4271   002EAC                     
  4272                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xC2;
  4273   002EAC  0EC2               	movlw	194
  4274   002EAE  6ECB               	movwf	203,c	;volatile
  4275                           
  4276                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  4277   002EB0  0E00               	movlw	0
  4278   002EB2  6ECC               	movwf	204,c	;volatile
  4279   002EB4                     
  4280                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  4281   002EB4  929E               	bcf	158,1,c	;volatile
  4282   002EB6                     
  4283                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  4284   002EB6  829D               	bsf	157,1,c	;volatile
  4285   002EB8                     
  4286                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  4287   002EB8  0E08               	movlw	low _TMR2_DefaultInterruptHandler
  4288   002EBA  0100               	movlb	0	; () banked
  4289   002EBC  6F60               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  4290   002EBE  0E30               	movlw	high _TMR2_DefaultInterruptHandler
  4291   002EC0  6F61               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4292   002EC2  ECCD  F017         	call	_TMR2_SetInterruptHandler	;wreg free
  4293   002EC6                     
  4294                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x7E;
  4295   002EC6  0E7E               	movlw	126
  4296   002EC8  6ECA               	movwf	202,c	;volatile
  4297   002ECA  0012               	return		;funcret
  4298   002ECC                     __end_of_TMR2_Initialize:
  4299                           	callstack 0
  4300                           
  4301 ;; *************** function _TMR2_SetInterruptHandler *****************
  4302 ;; Defined at:
  4303 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4306 ;;		 -> TMR2_DefaultInterruptHandler(1), Lock_Blink(1), 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4318 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4321 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4322 ;;Total ram usage:        2 bytes
  4323 ;; Hardware stack levels used: 1
  4324 ;; Hardware stack levels required when called: 5
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_main
  4329 ;;		_TMR2_Initialize
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text21
  4334   002F9A                     __ptext21:
  4335                           	callstack 0
  4336   002F9A                     _TMR2_SetInterruptHandler:
  4337                           	callstack 25
  4338   002F9A                     
  4339                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  4340   002F9A  C060  F02B         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  4341   002F9E  C061  F02C         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  4342   002FA2  0012               	return		;funcret
  4343   002FA4                     __end_of_TMR2_SetInterruptHandler:
  4344                           	callstack 0
  4345                           
  4346 ;; *************** function _TMR1_Initialize *****************
  4347 ;; Defined at:
  4348 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;		None
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;		None
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  1    wreg      void 
  4355 ;; Registers used:
  4356 ;;		wreg, status,2, status,0, cstack
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4364 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4365 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4366 ;;Total ram usage:        2 bytes
  4367 ;; Hardware stack levels used: 1
  4368 ;; Hardware stack levels required when called: 6
  4369 ;; This function calls:
  4370 ;;		_TMR1_SetInterruptHandler
  4371 ;; This function is called by:
  4372 ;;		_SYSTEM_Initialize
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           	psect	text22
  4377   002BE8                     __ptext22:
  4378                           	callstack 0
  4379   002BE8                     _TMR1_Initialize:
  4380                           	callstack 23
  4381   002BE8                     
  4382                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4383   002BE8  0E00               	movlw	0
  4384   002BEA  6EAA               	movwf	170,c	;volatile
  4385                           
  4386                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x3C;
  4387   002BEC  0E3C               	movlw	60
  4388   002BEE  6ECF               	movwf	207,c	;volatile
  4389                           
  4390                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xB0;
  4391   002BF0  0EB0               	movlw	176
  4392   002BF2  6ECE               	movwf	206,c	;volatile
  4393   002BF4                     
  4394                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  4395   002BF4  909E               	bcf	158,0,c	;volatile
  4396   002BF6                     
  4397                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4398   002BF6  50CE               	movf	206,w,c	;volatile
  4399   002BF8  CFCF F062          	movff	4047,??_TMR1_Initialize	;volatile
  4400   002BFC  0100               	movlb	0	; () banked
  4401   002BFE  6B63               	clrf	(??_TMR1_Initialize+1)& (0+255),b
  4402   002C00  C062  F063         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  4403   002C04  6B62               	clrf	??_TMR1_Initialize& (0+255),b
  4404   002C06  1162               	iorwf	??_TMR1_Initialize& (0+255),w,b
  4405   002C08  6E37               	movwf	_timer1ReloadVal^0,c	;volatile
  4406   002C0A  5163               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
  4407   002C0C  6E38               	movwf	(_timer1ReloadVal+1)^0,c	;volatile
  4408   002C0E                     
  4409                           ; BSR set to: 0
  4410                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  4411   002C0E  809D               	bsf	157,0,c	;volatile
  4412   002C10                     
  4413                           ; BSR set to: 0
  4414                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4415   002C10  0E0A               	movlw	low _TMR1_DefaultInterruptHandler
  4416   002C12  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  4417   002C14  0E30               	movlw	high _TMR1_DefaultInterruptHandler
  4418   002C16  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4419   002C18  ECD2  F017         	call	_TMR1_SetInterruptHandler	;wreg free
  4420   002C1C                     
  4421                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x11;
  4422   002C1C  0E11               	movlw	17
  4423   002C1E  6ECD               	movwf	205,c	;volatile
  4424   002C20  0012               	return		;funcret
  4425   002C22                     __end_of_TMR1_Initialize:
  4426                           	callstack 0
  4427                           
  4428 ;; *************** function _TMR1_SetInterruptHandler *****************
  4429 ;; Defined at:
  4430 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4433 ;;		 -> TTCAN_20ms(1), TMR1_DefaultInterruptHandler(1), 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;		None
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4448 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4449 ;;Total ram usage:        2 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; Hardware stack levels required when called: 5
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_TMR1_Initialize
  4456 ;;		_main
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text23
  4461   002FA4                     __ptext23:
  4462                           	callstack 0
  4463   002FA4                     _TMR1_SetInterruptHandler:
  4464                           	callstack 25
  4465   002FA4                     
  4466                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  4467   002FA4  C060  F035         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  4468   002FA8  C061  F036         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  4469   002FAC  0012               	return		;funcret
  4470   002FAE                     __end_of_TMR1_SetInterruptHandler:
  4471                           	callstack 0
  4472                           
  4473 ;; *************** function _PIN_MANAGER_Initialize *****************
  4474 ;; Defined at:
  4475 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;		None
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;		None
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      void 
  4482 ;; Registers used:
  4483 ;;		wreg, status,2
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4493 ;;Total ram usage:        0 bytes
  4494 ;; Hardware stack levels used: 1
  4495 ;; Hardware stack levels required when called: 5
  4496 ;; This function calls:
  4497 ;;		Nothing
  4498 ;; This function is called by:
  4499 ;;		_SYSTEM_Initialize
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           	psect	text24
  4504   002D3E                     __ptext24:
  4505                           	callstack 0
  4506   002D3E                     _PIN_MANAGER_Initialize:
  4507                           	callstack 24
  4508   002D3E                     
  4509                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4510   002D3E  0E00               	movlw	0
  4511   002D40  6E89               	movwf	137,c	;volatile
  4512                           
  4513                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4514   002D42  0E00               	movlw	0
  4515   002D44  6E8A               	movwf	138,c	;volatile
  4516                           
  4517                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4518   002D46  0E00               	movlw	0
  4519   002D48  6E8B               	movwf	139,c	;volatile
  4520                           
  4521                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xCF;
  4522   002D4A  0ECF               	movlw	207
  4523   002D4C  6E92               	movwf	146,c	;volatile
  4524                           
  4525                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFB;
  4526   002D4E  0EFB               	movlw	251
  4527   002D50  6E93               	movwf	147,c	;volatile
  4528                           
  4529                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xA0;
  4530   002D52  0EA0               	movlw	160
  4531   002D54  6E94               	movwf	148,c	;volatile
  4532                           
  4533                           ;mcc_generated_files/pin_manager.c: 74:     ANCON0 = 0x1F;
  4534   002D56  0E1F               	movlw	31
  4535   002D58  010F               	movlb	15	; () banked
  4536   002D5A  6F5D               	movwf	93,b	;volatile
  4537                           
  4538                           ;mcc_generated_files/pin_manager.c: 75:     ANCON1 = 0x03;
  4539   002D5C  0E03               	movlw	3
  4540   002D5E  6F5C               	movwf	92,b	;volatile
  4541                           
  4542                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
  4543   002D60  0E00               	movlw	0
  4544   002D62  6F5B               	movwf	91,b	;volatile
  4545   002D64                     
  4546                           ; BSR set to: 15
  4547                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
  4548   002D64  8EF1               	bsf	241,7,c	;volatile
  4549   002D66                     
  4550                           ; BSR set to: 15
  4551                           ;mcc_generated_files/pin_manager.c: 90:     INTCONbits.RBIE = 1;
  4552   002D66  86F2               	bsf	242,3,c	;volatile
  4553   002D68                     
  4554                           ; BSR set to: 15
  4555   002D68  0012               	return		;funcret
  4556   002D6A                     __end_of_PIN_MANAGER_Initialize:
  4557                           	callstack 0
  4558                           
  4559 ;; *************** function _OSCILLATOR_Initialize *****************
  4560 ;; Defined at:
  4561 ;;		line 64 in file "mcc_generated_files/mcc.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;		None
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;		None
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      void 
  4568 ;; Registers used:
  4569 ;;		wreg, status,2
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4579 ;;Total ram usage:        0 bytes
  4580 ;; Hardware stack levels used: 1
  4581 ;; Hardware stack levels required when called: 5
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		_SYSTEM_Initialize
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           	psect	text25
  4590   002F62                     __ptext25:
  4591                           	callstack 0
  4592   002F62                     _OSCILLATOR_Initialize:
  4593                           	callstack 24
  4594   002F62                     
  4595                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x60;
  4596   002F62  0E60               	movlw	96
  4597   002F64  6ED3               	movwf	211,c	;volatile
  4598                           
  4599                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x00;
  4600   002F66  0E00               	movlw	0
  4601   002F68  6ED2               	movwf	210,c	;volatile
  4602                           
  4603                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  4604   002F6A  0E00               	movlw	0
  4605   002F6C  6E9B               	movwf	155,c	;volatile
  4606                           
  4607                           ;mcc_generated_files/mcc.c: 73:     REFOCON = 0x00;
  4608   002F6E  0E00               	movlw	0
  4609   002F70  6E9A               	movwf	154,c	;volatile
  4610   002F72  0012               	return		;funcret
  4611   002F74                     __end_of_OSCILLATOR_Initialize:
  4612                           	callstack 0
  4613                           
  4614 ;; *************** function _INTERRUPT_Initialize *****************
  4615 ;; Defined at:
  4616 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;		None
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;		None
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  1    wreg      void 
  4623 ;; Registers used:
  4624 ;;		None
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4634 ;;Total ram usage:        0 bytes
  4635 ;; Hardware stack levels used: 1
  4636 ;; Hardware stack levels required when called: 5
  4637 ;; This function calls:
  4638 ;;		Nothing
  4639 ;; This function is called by:
  4640 ;;		_SYSTEM_Initialize
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text26
  4645   002FFA                     __ptext26:
  4646                           	callstack 0
  4647   002FFA                     _INTERRUPT_Initialize:
  4648                           	callstack 24
  4649   002FFA                     
  4650                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4651   002FFA  9ED0               	bcf	208,7,c	;volatile
  4652   002FFC  0012               	return		;funcret
  4653   002FFE                     __end_of_INTERRUPT_Initialize:
  4654                           	callstack 0
  4655                           
  4656 ;; *************** function _EXT_INT_Initialize *****************
  4657 ;; Defined at:
  4658 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;		None
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;		None
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      void 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0, cstack
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4676 ;;Total ram usage:        0 bytes
  4677 ;; Hardware stack levels used: 1
  4678 ;; Hardware stack levels required when called: 6
  4679 ;; This function calls:
  4680 ;;		_INT0_SetInterruptHandler
  4681 ;; This function is called by:
  4682 ;;		_SYSTEM_Initialize
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text27
  4687   002F38                     __ptext27:
  4688                           	callstack 0
  4689   002F38                     _EXT_INT_Initialize:
  4690                           	callstack 23
  4691   002F38                     
  4692                           ;mcc_generated_files/ext_int.c: 64:     (INTCONbits.INT0IF = 0);
  4693   002F38  92F2               	bcf	242,1,c	;volatile
  4694                           
  4695                           ;mcc_generated_files/ext_int.c: 65:     (INTCON2bits.INTEDG0 = 0);
  4696   002F3A  9CF1               	bcf	241,6,c	;volatile
  4697   002F3C                     
  4698                           ;mcc_generated_files/ext_int.c: 67:     INT0_SetInterruptHandler(INT0_DefaultInterruptHa
      +                          ndler);
  4699   002F3C  0E0C               	movlw	low _INT0_DefaultInterruptHandler
  4700   002F3E  0100               	movlb	0	; () banked
  4701   002F40  6F60               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4702   002F42  0E30               	movlw	high _INT0_DefaultInterruptHandler
  4703   002F44  6F61               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4704   002F46  ECD7  F017         	call	_INT0_SetInterruptHandler	;wreg free
  4705   002F4A                     
  4706                           ;mcc_generated_files/ext_int.c: 68:     (INTCONbits.INT0IE = 1);
  4707   002F4A  88F2               	bsf	242,4,c	;volatile
  4708   002F4C  0012               	return		;funcret
  4709   002F4E                     __end_of_EXT_INT_Initialize:
  4710                           	callstack 0
  4711                           
  4712 ;; *************** function _INT0_SetInterruptHandler *****************
  4713 ;; Defined at:
  4714 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  4715 ;; Parameters:    Size  Location     Type
  4716 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4717 ;;		 -> GetADC_LuxINT(1), INT0_DefaultInterruptHandler(1), 
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  1    wreg      void 
  4722 ;; Registers used:
  4723 ;;		wreg, status,2, status,0
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4729 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4732 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4733 ;;Total ram usage:        2 bytes
  4734 ;; Hardware stack levels used: 1
  4735 ;; Hardware stack levels required when called: 5
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_EXT_INT_Initialize
  4740 ;;		_main
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text28
  4745   002FAE                     __ptext28:
  4746                           	callstack 0
  4747   002FAE                     _INT0_SetInterruptHandler:
  4748                           	callstack 23
  4749   002FAE                     
  4750                           ;mcc_generated_files/ext_int.c: 51:     INT0_InterruptHandler = InterruptHandler;
  4751   002FAE  C060  F02D         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  4752   002FB2  C061  F02E         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  4753   002FB6  0012               	return		;funcret
  4754   002FB8                     __end_of_INT0_SetInterruptHandler:
  4755                           	callstack 0
  4756                           
  4757 ;; *************** function _EUSART1_Initialize *****************
  4758 ;; Defined at:
  4759 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;		None
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;		None
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  1    wreg      void 
  4766 ;; Registers used:
  4767 ;;		wreg, status,2, status,0, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4777 ;;Total ram usage:        0 bytes
  4778 ;; Hardware stack levels used: 1
  4779 ;; Hardware stack levels required when called: 6
  4780 ;; This function calls:
  4781 ;;		_EUSART1_SetErrorHandler
  4782 ;;		_EUSART1_SetFramingErrorHandler
  4783 ;;		_EUSART1_SetOverrunErrorHandler
  4784 ;; This function is called by:
  4785 ;;		_SYSTEM_Initialize
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text29
  4790   002B6A                     __ptext29:
  4791                           	callstack 0
  4792   002B6A                     _EUSART1_Initialize:
  4793                           	callstack 23
  4794   002B6A                     
  4795                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  4796   002B6A  0E08               	movlw	8
  4797   002B6C  6EA7               	movwf	167,c	;volatile
  4798                           
  4799                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  4800   002B6E  0E90               	movlw	144
  4801   002B70  6EAB               	movwf	171,c	;volatile
  4802                           
  4803                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  4804   002B72  0E24               	movlw	36
  4805   002B74  6EAC               	movwf	172,c	;volatile
  4806                           
  4807                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x08;
  4808   002B76  0E08               	movlw	8
  4809   002B78  6EAF               	movwf	175,c	;volatile
  4810                           
  4811                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x02;
  4812   002B7A  0E02               	movlw	2
  4813   002B7C  6E7D               	movwf	125,c	;volatile
  4814   002B7E                     
  4815                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  4816   002B7E  0E00               	movlw	0
  4817   002B80  0100               	movlb	0	; () banked
  4818   002B82  6F60               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  4819   002B84  0E00               	movlw	0
  4820   002B86  6F61               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  4821   002B88  ECE1  F017         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4822   002B8C                     
  4823                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  4824   002B8C  0E00               	movlw	0
  4825   002B8E  0100               	movlb	0	; () banked
  4826   002B90  6F60               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  4827   002B92  0E00               	movlw	0
  4828   002B94  6F61               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  4829   002B96  ECDC  F017         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4830   002B9A                     
  4831                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  4832   002B9A  0E00               	movlw	0
  4833   002B9C  0100               	movlb	0	; () banked
  4834   002B9E  6F60               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  4835   002BA0  0E00               	movlw	0
  4836   002BA2  6F61               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  4837   002BA4  ECE6  F017         	call	_EUSART1_SetErrorHandler	;wreg free
  4838   002BA8                     
  4839                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  4840   002BA8  0E00               	movlw	0
  4841   002BAA  6E4A               	movwf	_eusart1RxLastError^0,c	;volatile
  4842   002BAC  0012               	return		;funcret
  4843   002BAE                     __end_of_EUSART1_Initialize:
  4844                           	callstack 0
  4845                           
  4846 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4847 ;; Defined at:
  4848 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4851 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;		None
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  1    wreg      void 
  4856 ;; Registers used:
  4857 ;;		wreg, status,2, status,0
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4863 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4866 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4867 ;;Total ram usage:        2 bytes
  4868 ;; Hardware stack levels used: 1
  4869 ;; Hardware stack levels required when called: 5
  4870 ;; This function calls:
  4871 ;;		Nothing
  4872 ;; This function is called by:
  4873 ;;		_EUSART1_Initialize
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           	psect	text30
  4878   002FB8                     __ptext30:
  4879                           	callstack 0
  4880   002FB8                     _EUSART1_SetOverrunErrorHandler:
  4881                           	callstack 23
  4882   002FB8                     
  4883                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  4884   002FB8  C060  F031         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4885   002FBC  C061  F032         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4886   002FC0  0012               	return		;funcret
  4887   002FC2                     __end_of_EUSART1_SetOverrunErrorHandler:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4891 ;; Defined at:
  4892 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4895 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;		None
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  1    wreg      void 
  4900 ;; Registers used:
  4901 ;;		wreg, status,2, status,0
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4907 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4910 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4911 ;;Total ram usage:        2 bytes
  4912 ;; Hardware stack levels used: 1
  4913 ;; Hardware stack levels required when called: 5
  4914 ;; This function calls:
  4915 ;;		Nothing
  4916 ;; This function is called by:
  4917 ;;		_EUSART1_Initialize
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text31
  4922   002FC2                     __ptext31:
  4923                           	callstack 0
  4924   002FC2                     _EUSART1_SetFramingErrorHandler:
  4925                           	callstack 23
  4926   002FC2                     
  4927                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  4928   002FC2  C060  F033         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4929   002FC6  C061  F034         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4930   002FCA  0012               	return		;funcret
  4931   002FCC                     __end_of_EUSART1_SetFramingErrorHandler:
  4932                           	callstack 0
  4933                           
  4934 ;; *************** function _EUSART1_SetErrorHandler *****************
  4935 ;; Defined at:
  4936 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4939 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;		None
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  1    wreg      void 
  4944 ;; Registers used:
  4945 ;;		wreg, status,2, status,0
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4951 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4954 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4955 ;;Total ram usage:        2 bytes
  4956 ;; Hardware stack levels used: 1
  4957 ;; Hardware stack levels required when called: 5
  4958 ;; This function calls:
  4959 ;;		Nothing
  4960 ;; This function is called by:
  4961 ;;		_EUSART1_Initialize
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965                           	psect	text32
  4966   002FCC                     __ptext32:
  4967                           	callstack 0
  4968   002FCC                     _EUSART1_SetErrorHandler:
  4969                           	callstack 23
  4970   002FCC                     
  4971                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  4972   002FCC  C060  F02F         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4973   002FD0  C061  F030         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4974   002FD4  0012               	return		;funcret
  4975   002FD6                     __end_of_EUSART1_SetErrorHandler:
  4976                           	callstack 0
  4977                           
  4978 ;; *************** function _ECAN_Initialize *****************
  4979 ;; Defined at:
  4980 ;;		line 67 in file "mcc_generated_files/ecan.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;		None
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1    wreg      void 
  4987 ;; Registers used:
  4988 ;;		wreg, status,2, status,0, cstack
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4996 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4997 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4998 ;;Total ram usage:        1 bytes
  4999 ;; Hardware stack levels used: 1
  5000 ;; Hardware stack levels required when called: 6
  5001 ;; This function calls:
  5002 ;;		_ECAN_SetRXB0InterruptHandler
  5003 ;;		_ECAN_SetWakeUpInterruptHandler
  5004 ;; This function is called by:
  5005 ;;		_SYSTEM_Initialize
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           	psect	text33
  5010   002446                     __ptext33:
  5011                           	callstack 0
  5012   002446                     _ECAN_Initialize:
  5013                           	callstack 23
  5014   002446                     
  5015                           ;mcc_generated_files/ecan.c: 69:     CANCON = 0x80;
  5016   002446  0E80               	movlw	128
  5017   002448  6E6F               	movwf	111,c	;volatile
  5018   00244A                     l5002:
  5019   00244A  506E               	movf	110,w,c	;volatile
  5020   00244C  0BE0               	andlw	224
  5021   00244E  0A80               	xorlw	128
  5022   002450  A4D8               	btfss	status,2,c
  5023   002452  EF2D  F012         	goto	u2851
  5024   002456  EF2F  F012         	goto	u2850
  5025   00245A                     u2851:
  5026   00245A  EF25  F012         	goto	l5002
  5027   00245E                     u2850:
  5028   00245E                     
  5029                           ;mcc_generated_files/ecan.c: 75:     ECANCON = 0x00;
  5030   00245E  0E00               	movlw	0
  5031   002460  6E72               	movwf	114,c	;volatile
  5032                           
  5033                           ;mcc_generated_files/ecan.c: 80:     CIOCON = 0x20;
  5034   002462  0E20               	movlw	32
  5035   002464  6E70               	movwf	112,c	;volatile
  5036                           
  5037                           ;mcc_generated_files/ecan.c: 93:     RXM0EIDH = 0x00;
  5038   002466  0E00               	movlw	0
  5039   002468  010E               	movlb	14	; () banked
  5040   00246A  6FFA               	movwf	250,b	;volatile
  5041                           
  5042                           ;mcc_generated_files/ecan.c: 94:     RXM0EIDL = 0x00;
  5043   00246C  0E00               	movlw	0
  5044   00246E  6FFB               	movwf	251,b	;volatile
  5045                           
  5046                           ;mcc_generated_files/ecan.c: 95:     RXM0SIDH = 0x00;
  5047   002470  0E00               	movlw	0
  5048   002472  6FF8               	movwf	248,b	;volatile
  5049                           
  5050                           ;mcc_generated_files/ecan.c: 96:     RXM0SIDL = 0x00;
  5051   002474  0E00               	movlw	0
  5052   002476  6FF9               	movwf	249,b	;volatile
  5053                           
  5054                           ;mcc_generated_files/ecan.c: 97:     RXM1EIDH = 0x00;
  5055   002478  0E00               	movlw	0
  5056   00247A  6FFE               	movwf	254,b	;volatile
  5057                           
  5058                           ;mcc_generated_files/ecan.c: 98:     RXM1EIDL = 0x00;
  5059   00247C  0E00               	movlw	0
  5060   00247E  6FFF               	movwf	255,b	;volatile
  5061                           
  5062                           ;mcc_generated_files/ecan.c: 99:     RXM1SIDH = 0x00;
  5063   002480  0E00               	movlw	0
  5064   002482  6FFC               	movwf	252,b	;volatile
  5065                           
  5066                           ;mcc_generated_files/ecan.c: 100:     RXM1SIDL = 0x00;
  5067   002484  0E00               	movlw	0
  5068   002486  6FFD               	movwf	253,b	;volatile
  5069                           
  5070                           ;mcc_generated_files/ecan.c: 105:     RXF0EIDH = 0x00;
  5071   002488  0E00               	movlw	0
  5072   00248A  6FE2               	movwf	226,b	;volatile
  5073                           
  5074                           ;mcc_generated_files/ecan.c: 106:     RXF0EIDL = 0x00;
  5075   00248C  0E00               	movlw	0
  5076   00248E  6FE3               	movwf	227,b	;volatile
  5077                           
  5078                           ;mcc_generated_files/ecan.c: 107:     RXF0SIDH = 0x00;
  5079   002490  0E00               	movlw	0
  5080   002492  6FE0               	movwf	224,b	;volatile
  5081                           
  5082                           ;mcc_generated_files/ecan.c: 108:     RXF0SIDL = 0x00;
  5083   002494  0E00               	movlw	0
  5084   002496  6FE1               	movwf	225,b	;volatile
  5085                           
  5086                           ;mcc_generated_files/ecan.c: 109:     RXF1EIDH = 0x00;
  5087   002498  0E00               	movlw	0
  5088   00249A  6FE6               	movwf	230,b	;volatile
  5089                           
  5090                           ;mcc_generated_files/ecan.c: 110:     RXF1EIDL = 0x00;
  5091   00249C  0E00               	movlw	0
  5092   00249E  6FE7               	movwf	231,b	;volatile
  5093                           
  5094                           ;mcc_generated_files/ecan.c: 111:     RXF1SIDH = 0x00;
  5095   0024A0  0E00               	movlw	0
  5096   0024A2  6FE4               	movwf	228,b	;volatile
  5097                           
  5098                           ;mcc_generated_files/ecan.c: 112:     RXF1SIDL = 0x00;
  5099   0024A4  0E00               	movlw	0
  5100   0024A6  6FE5               	movwf	229,b	;volatile
  5101                           
  5102                           ;mcc_generated_files/ecan.c: 113:     RXF2EIDH = 0x00;
  5103   0024A8  0E00               	movlw	0
  5104   0024AA  6FEA               	movwf	234,b	;volatile
  5105                           
  5106                           ;mcc_generated_files/ecan.c: 114:     RXF2EIDL = 0x00;
  5107   0024AC  0E00               	movlw	0
  5108   0024AE  6FEB               	movwf	235,b	;volatile
  5109                           
  5110                           ;mcc_generated_files/ecan.c: 115:     RXF2SIDH = 0x00;
  5111   0024B0  0E00               	movlw	0
  5112   0024B2  6FE8               	movwf	232,b	;volatile
  5113                           
  5114                           ;mcc_generated_files/ecan.c: 116:     RXF2SIDL = 0x00;
  5115   0024B4  0E00               	movlw	0
  5116   0024B6  6FE9               	movwf	233,b	;volatile
  5117                           
  5118                           ;mcc_generated_files/ecan.c: 117:     RXF3EIDH = 0x00;
  5119   0024B8  0E00               	movlw	0
  5120   0024BA  6FEE               	movwf	238,b	;volatile
  5121                           
  5122                           ;mcc_generated_files/ecan.c: 118:     RXF3EIDL = 0x00;
  5123   0024BC  0E00               	movlw	0
  5124   0024BE  6FEF               	movwf	239,b	;volatile
  5125                           
  5126                           ;mcc_generated_files/ecan.c: 119:     RXF3SIDH = 0x00;
  5127   0024C0  0E00               	movlw	0
  5128   0024C2  6FEC               	movwf	236,b	;volatile
  5129                           
  5130                           ;mcc_generated_files/ecan.c: 120:     RXF3SIDL = 0x00;
  5131   0024C4  0E00               	movlw	0
  5132   0024C6  6FED               	movwf	237,b	;volatile
  5133                           
  5134                           ;mcc_generated_files/ecan.c: 121:     RXF4EIDH = 0x00;
  5135   0024C8  0E00               	movlw	0
  5136   0024CA  6FF2               	movwf	242,b	;volatile
  5137                           
  5138                           ;mcc_generated_files/ecan.c: 122:     RXF4EIDL = 0x00;
  5139   0024CC  0E00               	movlw	0
  5140   0024CE  6FF3               	movwf	243,b	;volatile
  5141                           
  5142                           ;mcc_generated_files/ecan.c: 123:     RXF4SIDH = 0x00;
  5143   0024D0  0E00               	movlw	0
  5144   0024D2  6FF0               	movwf	240,b	;volatile
  5145                           
  5146                           ;mcc_generated_files/ecan.c: 124:     RXF4SIDL = 0x00;
  5147   0024D4  0E00               	movlw	0
  5148   0024D6  6FF1               	movwf	241,b	;volatile
  5149                           
  5150                           ;mcc_generated_files/ecan.c: 125:     RXF5EIDH = 0x00;
  5151   0024D8  0E00               	movlw	0
  5152   0024DA  6FF6               	movwf	246,b	;volatile
  5153                           
  5154                           ;mcc_generated_files/ecan.c: 126:     RXF5EIDL = 0x00;
  5155   0024DC  0E00               	movlw	0
  5156   0024DE  6FF7               	movwf	247,b	;volatile
  5157                           
  5158                           ;mcc_generated_files/ecan.c: 127:     RXF5SIDH = 0x00;
  5159   0024E0  0E00               	movlw	0
  5160   0024E2  6FF4               	movwf	244,b	;volatile
  5161                           
  5162                           ;mcc_generated_files/ecan.c: 128:     RXF5SIDL = 0x00;
  5163   0024E4  0E00               	movlw	0
  5164   0024E6  6FF5               	movwf	245,b	;volatile
  5165                           
  5166                           ;mcc_generated_files/ecan.c: 143:     BRGCON1 = 0x13;
  5167   0024E8  0E13               	movlw	19
  5168   0024EA  6F43               	movwf	67,b	;volatile
  5169                           
  5170                           ;mcc_generated_files/ecan.c: 144:     BRGCON2 = 0xBF;
  5171   0024EC  0EBF               	movlw	191
  5172   0024EE  6F44               	movwf	68,b	;volatile
  5173                           
  5174                           ;mcc_generated_files/ecan.c: 145:     BRGCON3 = 0x07;
  5175   0024F0  0E07               	movlw	7
  5176   0024F2  6F45               	movwf	69,b	;volatile
  5177   0024F4                     
  5178                           ; BSR set to: 14
  5179                           ;mcc_generated_files/ecan.c: 147:     ECAN_SetRXB0InterruptHandler(RXB0DefaultInterruptH
      +                          andler);
  5180   0024F4  0E10               	movlw	low _RXB0DefaultInterruptHandler
  5181   0024F6  0100               	movlb	0	; () banked
  5182   0024F8  6F60               	movwf	ECAN_SetRXB0InterruptHandler@handler& (0+255),b
  5183   0024FA  0E30               	movlw	high _RXB0DefaultInterruptHandler
  5184   0024FC  6F61               	movwf	(ECAN_SetRXB0InterruptHandler@handler+1)& (0+255),b
  5185   0024FE  ECF0  F017         	call	_ECAN_SetRXB0InterruptHandler	;wreg free
  5186   002502                     
  5187                           ;mcc_generated_files/ecan.c: 148:     PIR5bits.RXB0IF = 0;
  5188   002502  9077               	bcf	119,0,c	;volatile
  5189   002504                     
  5190                           ;mcc_generated_files/ecan.c: 149:     PIE5bits.RXB0IE = 1;
  5191   002504  8076               	bsf	118,0,c	;volatile
  5192   002506                     
  5193                           ;mcc_generated_files/ecan.c: 151:     ECAN_SetWakeUpInterruptHandler(WakeUpDefaultInterr
      +                          uptHandler);
  5194   002506  0E0E               	movlw	low _WakeUpDefaultInterruptHandler
  5195   002508  0100               	movlb	0	; () banked
  5196   00250A  6F60               	movwf	ECAN_SetWakeUpInterruptHandler@handler& (0+255),b
  5197   00250C  0E30               	movlw	high _WakeUpDefaultInterruptHandler
  5198   00250E  6F61               	movwf	(ECAN_SetWakeUpInterruptHandler@handler+1)& (0+255),b
  5199   002510  ECEB  F017         	call	_ECAN_SetWakeUpInterruptHandler	;wreg free
  5200   002514                     
  5201                           ;mcc_generated_files/ecan.c: 152:     PIR5bits.WAKIF = 0;
  5202   002514  9C77               	bcf	119,6,c	;volatile
  5203   002516                     
  5204                           ;mcc_generated_files/ecan.c: 153:     PIE5bits.WAKIE = 1;
  5205   002516  8C76               	bsf	118,6,c	;volatile
  5206                           
  5207                           ;mcc_generated_files/ecan.c: 155:     CANCON = 0x00;
  5208   002518  0E00               	movlw	0
  5209   00251A  6E6F               	movwf	111,c	;volatile
  5210   00251C                     l5018:
  5211   00251C  CF6E F062          	movff	3950,??_ECAN_Initialize	;volatile
  5212   002520  0EE0               	movlw	224
  5213   002522  0100               	movlb	0	; () banked
  5214   002524  1762               	andwf	??_ECAN_Initialize& (0+255),f,b
  5215   002526  A4D8               	btfss	status,2,c
  5216   002528  EF98  F012         	goto	u2861
  5217   00252C  EF9A  F012         	goto	u2860
  5218   002530                     u2861:
  5219   002530  EF8E  F012         	goto	l5018
  5220   002534                     u2860:
  5221   002534                     
  5222                           ; BSR set to: 0
  5223   002534  0012               	return		;funcret
  5224   002536                     __end_of_ECAN_Initialize:
  5225                           	callstack 0
  5226                           
  5227 ;; *************** function _ECAN_SetWakeUpInterruptHandler *****************
  5228 ;; Defined at:
  5229 ;;		line 456 in file "mcc_generated_files/ecan.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  5232 ;;		 -> WakeUpDefaultInterruptHandler(1), 
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;		None
  5235 ;; Return value:  Size  Location     Type
  5236 ;;                  1    wreg      void 
  5237 ;; Registers used:
  5238 ;;		wreg, status,2, status,0
  5239 ;; Tracked objects:
  5240 ;;		On entry : 0/0
  5241 ;;		On exit  : 0/0
  5242 ;;		Unchanged: 0/0
  5243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5244 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5247 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5248 ;;Total ram usage:        2 bytes
  5249 ;; Hardware stack levels used: 1
  5250 ;; Hardware stack levels required when called: 5
  5251 ;; This function calls:
  5252 ;;		Nothing
  5253 ;; This function is called by:
  5254 ;;		_ECAN_Initialize
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           	psect	text34
  5259   002FD6                     __ptext34:
  5260                           	callstack 0
  5261   002FD6                     _ECAN_SetWakeUpInterruptHandler:
  5262                           	callstack 23
  5263   002FD6                     
  5264                           ;mcc_generated_files/ecan.c: 456: void ECAN_SetWakeUpInterruptHandler(void (*handler)(vo
      +                          id));mcc_generated_files/ecan.c: 457: {;mcc_generated_files/ecan.c: 458:     WakeUpInter
      +                          ruptHandler = handler;
  5265   002FD6  C060  F041         	movff	ECAN_SetWakeUpInterruptHandler@handler,_WakeUpInterruptHandler
  5266   002FDA  C061  F042         	movff	ECAN_SetWakeUpInterruptHandler@handler+1,_WakeUpInterruptHandler+1
  5267   002FDE  0012               	return		;funcret
  5268   002FE0                     __end_of_ECAN_SetWakeUpInterruptHandler:
  5269                           	callstack 0
  5270                           
  5271 ;; *************** function _ECAN_SetRXB0InterruptHandler *****************
  5272 ;; Defined at:
  5273 ;;		line 445 in file "mcc_generated_files/ecan.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  5276 ;;		 -> receptionTTCAN(1), RXB0DefaultInterruptHandler(1), 
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;		None
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  1    wreg      void 
  5281 ;; Registers used:
  5282 ;;		wreg, status,2, status,0
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5288 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5291 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5292 ;;Total ram usage:        2 bytes
  5293 ;; Hardware stack levels used: 1
  5294 ;; Hardware stack levels required when called: 5
  5295 ;; This function calls:
  5296 ;;		Nothing
  5297 ;; This function is called by:
  5298 ;;		_ECAN_Initialize
  5299 ;;		_main
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           	psect	text35
  5304   002FE0                     __ptext35:
  5305                           	callstack 0
  5306   002FE0                     _ECAN_SetRXB0InterruptHandler:
  5307                           	callstack 23
  5308   002FE0                     
  5309                           ;mcc_generated_files/ecan.c: 445: void ECAN_SetRXB0InterruptHandler(void (*handler)(void
      +                          ));mcc_generated_files/ecan.c: 446: {;mcc_generated_files/ecan.c: 447:     RXB0Interrupt
      +                          Handler = handler;
  5310   002FE0  C060  F043         	movff	ECAN_SetRXB0InterruptHandler@handler,_RXB0InterruptHandler
  5311   002FE4  C061  F044         	movff	ECAN_SetRXB0InterruptHandler@handler+1,_RXB0InterruptHandler+1
  5312   002FE8  0012               	return		;funcret
  5313   002FEA                     __end_of_ECAN_SetRXB0InterruptHandler:
  5314                           	callstack 0
  5315                           
  5316 ;; *************** function _Etat_LUX_EXT *****************
  5317 ;; Defined at:
  5318 ;;		line 347 in file "main.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;		None
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;		None
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  1    wreg      void 
  5325 ;; Registers used:
  5326 ;;		wreg, status,2, status,0
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5334 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5335 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5336 ;;Total ram usage:        2 bytes
  5337 ;; Hardware stack levels used: 1
  5338 ;; Hardware stack levels required when called: 5
  5339 ;; This function calls:
  5340 ;;		Nothing
  5341 ;; This function is called by:
  5342 ;;		_main
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           	psect	text36
  5347   00291A                     __ptext36:
  5348                           	callstack 0
  5349   00291A                     _Etat_LUX_EXT:
  5350                           	callstack 25
  5351   00291A                     
  5352                           ;main.c: 348:     switch (lux_State) {
  5353   00291A  EF9F  F014         	goto	l5242
  5354   00291E                     l913:
  5355                           
  5356                           ; BSR set to: 0
  5357   00291E  908B               	bcf	139,0,c	;volatile
  5358   002920                     
  5359                           ; BSR set to: 0
  5360   002920  928B               	bcf	139,1,c	;volatile
  5361   002922  EFBD  F014         	goto	l933
  5362   002926                     l919:
  5363                           
  5364                           ; BSR set to: 0
  5365   002926  808B               	bsf	139,0,c	;volatile
  5366   002928                     
  5367                           ; BSR set to: 0
  5368   002928  928B               	bcf	139,1,c	;volatile
  5369   00292A  EFBD  F014         	goto	l933
  5370   00292E                     l924:
  5371                           
  5372                           ; BSR set to: 0
  5373   00292E  908B               	bcf	139,0,c	;volatile
  5374   002930                     
  5375                           ; BSR set to: 0
  5376   002930  828B               	bsf	139,1,c	;volatile
  5377   002932  EFBD  F014         	goto	l933
  5378   002936                     l929:
  5379                           
  5380                           ; BSR set to: 0
  5381   002936  808B               	bsf	139,0,c	;volatile
  5382   002938                     
  5383                           ; BSR set to: 0
  5384   002938  828B               	bsf	139,1,c	;volatile
  5385   00293A  EFBD  F014         	goto	l933
  5386   00293E                     l5242:
  5387   00293E  0100               	movlb	0	; () banked
  5388   002940  51ED               	movf	_lux_State& (0+255),w,b
  5389   002942  6F60               	movwf	??_Etat_LUX_EXT& (0+255),b
  5390   002944  6B61               	clrf	(??_Etat_LUX_EXT+1)& (0+255),b
  5391                           
  5392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5393                           ; Switch size 1, requested type "simple"
  5394                           ; Number of cases is 1, Range of values is 0 to 0
  5395                           ; switch strategies available:
  5396                           ; Name         Instructions Cycles
  5397                           ; simple_byte            4     3 (average)
  5398                           ;	Chosen strategy is simple_byte
  5399   002946  5161               	movf	(??_Etat_LUX_EXT+1)& (0+255),w,b
  5400   002948  0A00               	xorlw	0	; case 0
  5401   00294A  B4D8               	btfsc	status,2,c
  5402   00294C  EFAA  F014         	goto	l5844
  5403   002950  EFBD  F014         	goto	l933
  5404   002954                     l5844:
  5405                           
  5406                           ; BSR set to: 0
  5407                           ; Switch size 1, requested type "simple"
  5408                           ; Number of cases is 4, Range of values is 0 to 3
  5409                           ; switch strategies available:
  5410                           ; Name         Instructions Cycles
  5411                           ; simple_byte           13     7 (average)
  5412                           ;	Chosen strategy is simple_byte
  5413   002954  5160               	movf	??_Etat_LUX_EXT& (0+255),w,b
  5414   002956  0A00               	xorlw	0	; case 0
  5415   002958  B4D8               	btfsc	status,2,c
  5416   00295A  EF8F  F014         	goto	l913
  5417   00295E  0A01               	xorlw	1	; case 1
  5418   002960  B4D8               	btfsc	status,2,c
  5419   002962  EF93  F014         	goto	l919
  5420   002966  0A03               	xorlw	3	; case 2
  5421   002968  B4D8               	btfsc	status,2,c
  5422   00296A  EF97  F014         	goto	l924
  5423   00296E  0A01               	xorlw	1	; case 3
  5424   002970  B4D8               	btfsc	status,2,c
  5425   002972  EF9B  F014         	goto	l929
  5426   002976  EFBD  F014         	goto	l933
  5427   00297A                     l933:
  5428                           
  5429                           ; BSR set to: 0
  5430   00297A  0012               	return		;funcret
  5431   00297C                     __end_of_Etat_LUX_EXT:
  5432                           	callstack 0
  5433                           
  5434 ;; *************** function _Default_Output_State *****************
  5435 ;; Defined at:
  5436 ;;		line 323 in file "main.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;		None
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;		None
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  1    wreg      void 
  5443 ;; Registers used:
  5444 ;;		wreg, status,2
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5454 ;;Total ram usage:        0 bytes
  5455 ;; Hardware stack levels used: 1
  5456 ;; Hardware stack levels required when called: 5
  5457 ;; This function calls:
  5458 ;;		Nothing
  5459 ;; This function is called by:
  5460 ;;		_main
  5461 ;;		_CheckVehiculeState
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text37
  5466   0029DE                     __ptext37:
  5467                           	callstack 0
  5468   0029DE                     _Default_Output_State:
  5469                           	callstack 25
  5470   0029DE  908B               	bcf	139,0,c	;volatile
  5471   0029E0  928B               	bcf	139,1,c	;volatile
  5472   0029E2  948B               	bcf	139,2,c	;volatile
  5473   0029E4  968B               	bcf	139,3,c	;volatile
  5474   0029E6  988B               	bcf	139,4,c	;volatile
  5475   0029E8                     
  5476                           ;main.c: 329:     vStart = 0;
  5477   0029E8  0E00               	movlw	0
  5478   0029EA  0100               	movlb	0	; () banked
  5479   0029EC  6FEC               	movwf	_vStart& (0+255),b
  5480                           
  5481                           ;main.c: 330:     vLock = 0;
  5482   0029EE  0E00               	movlw	0
  5483   0029F0  6FEB               	movwf	_vLock& (0+255),b
  5484                           
  5485                           ;main.c: 331:     vKey = 0;
  5486   0029F2  0E00               	movlw	0
  5487   0029F4  6FEA               	movwf	_vKey& (0+255),b
  5488                           
  5489                           ;main.c: 332:     cligneLock = 0;
  5490   0029F6  0E00               	movlw	0
  5491   0029F8  6E4D               	movwf	_cligneLock^0,c
  5492                           
  5493                           ;main.c: 333:     pwm_Switch = 0;
  5494   0029FA  0E00               	movlw	0
  5495   0029FC  6E49               	movwf	_pwm_Switch^0,c
  5496                           
  5497                           ;main.c: 334:     cligneLeft = 0;
  5498   0029FE  0E00               	movlw	0
  5499   002A00  6FE9               	movwf	_cligneLeft& (0+255),b
  5500                           
  5501                           ;main.c: 335:     delayLeft = 0;
  5502   002A02  0E00               	movlw	0
  5503   002A04  6E48               	movwf	_delayLeft^0,c
  5504                           
  5505                           ;main.c: 336:     changeLeft = 0;
  5506   002A06  0E00               	movlw	0
  5507   002A08  6E47               	movwf	_changeLeft^0,c
  5508                           
  5509                           ;main.c: 337:     cligneRight = 0;
  5510   002A0A  0E00               	movlw	0
  5511   002A0C  6FE8               	movwf	_cligneRight& (0+255),b
  5512                           
  5513                           ;main.c: 338:     delayRight = 0;
  5514   002A0E  0E00               	movlw	0
  5515   002A10  6E46               	movwf	_delayRight^0,c
  5516                           
  5517                           ;main.c: 339:     changeRight = 0;
  5518   002A12  0E00               	movlw	0
  5519   002A14  6E45               	movwf	_changeRight^0,c
  5520                           
  5521                           ;main.c: 340:     idCAN = 0x0000;
  5522   002A16  0E00               	movlw	0
  5523   002A18  6FDC               	movwf	_idCAN& (0+255),b
  5524   002A1A  0E00               	movlw	0
  5525   002A1C  6FDD               	movwf	(_idCAN+1)& (0+255),b
  5526   002A1E  0E00               	movlw	0
  5527   002A20  6FDE               	movwf	(_idCAN+2)& (0+255),b
  5528   002A22  0E00               	movlw	0
  5529   002A24  6FDF               	movwf	(_idCAN+3)& (0+255),b
  5530                           
  5531                           ;main.c: 341:     dataCAN0 = 0x00;
  5532   002A26  0E00               	movlw	0
  5533   002A28  6FEF               	movwf	_dataCAN0& (0+255),b
  5534                           
  5535                           ;main.c: 342:     dataCAN1 = 0x00;
  5536   002A2A  0E00               	movlw	0
  5537   002A2C  6FEE               	movwf	_dataCAN1& (0+255),b
  5538                           
  5539                           ;main.c: 343:     lux_State = 0x00;
  5540   002A2E  0E00               	movlw	0
  5541   002A30  6FED               	movwf	_lux_State& (0+255),b
  5542                           
  5543                           ;main.c: 344:     test_Lux_Int = 0;
  5544   002A32  0E00               	movlw	0
  5545   002A34  6FE7               	movwf	_test_Lux_Int& (0+255),b
  5546   002A36                     
  5547                           ; BSR set to: 0
  5548   002A36  0012               	return		;funcret
  5549   002A38                     __end_of_Default_Output_State:
  5550                           	callstack 0
  5551                           
  5552 ;; *************** function _CligneR *****************
  5553 ;; Defined at:
  5554 ;;		line 280 in file "main.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;		None
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;		None
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  1    wreg      void 
  5561 ;; Registers used:
  5562 ;;		wreg, status,2, status,0
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5572 ;;Total ram usage:        0 bytes
  5573 ;; Hardware stack levels used: 1
  5574 ;; Hardware stack levels required when called: 5
  5575 ;; This function calls:
  5576 ;;		Nothing
  5577 ;; This function is called by:
  5578 ;;		_main
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text38
  5583   0028B6                     __ptext38:
  5584                           	callstack 0
  5585   0028B6                     _CligneR:
  5586                           	callstack 25
  5587   0028B6                     
  5588                           ;main.c: 281:     if (pwm_Switch) {
  5589   0028B6  5049               	movf	_pwm_Switch^0,w,c
  5590   0028B8  B4D8               	btfsc	status,2,c
  5591   0028BA  EF61  F014         	goto	u2971
  5592   0028BE  EF63  F014         	goto	u2970
  5593   0028C2                     u2971:
  5594   0028C2  EF72  F014         	goto	l864
  5595   0028C6                     u2970:
  5596   0028C6                     
  5597                           ;main.c: 282:         if (cligneRight) {
  5598   0028C6  0100               	movlb	0	; () banked
  5599   0028C8  51E8               	movf	_cligneRight& (0+255),w,b
  5600   0028CA  B4D8               	btfsc	status,2,c
  5601   0028CC  EF6A  F014         	goto	u2981
  5602   0028D0  EF6C  F014         	goto	u2980
  5603   0028D4                     u2981:
  5604   0028D4  EF6F  F014         	goto	l861
  5605   0028D8                     u2980:
  5606   0028D8                     
  5607                           ; BSR set to: 0
  5608   0028D8  868B               	bsf	139,3,c	;volatile
  5609   0028DA  EF73  F014         	goto	l5266
  5610   0028DE                     l861:
  5611                           
  5612                           ; BSR set to: 0
  5613   0028DE  968B               	bcf	139,3,c	;volatile
  5614   0028E0  EF73  F014         	goto	l5266
  5615   0028E4                     l864:
  5616   0028E4  968B               	bcf	139,3,c	;volatile
  5617   0028E6                     l5266:
  5618                           
  5619                           ;main.c: 291:     if (cligneRight != delayRight) {
  5620   0028E6  5046               	movf	_delayRight^0,w,c
  5621   0028E8  0100               	movlb	0	; () banked
  5622   0028EA  19E8               	xorwf	_cligneRight& (0+255),w,b
  5623   0028EC  B4D8               	btfsc	status,2,c
  5624   0028EE  EF7B  F014         	goto	u2991
  5625   0028F2  EF7D  F014         	goto	u2990
  5626   0028F6                     u2991:
  5627   0028F6  EF81  F014         	goto	l5270
  5628   0028FA                     u2990:
  5629   0028FA                     
  5630                           ; BSR set to: 0
  5631                           ;main.c: 292:         delayRight = cligneRight;
  5632   0028FA  C0E8  F046         	movff	_cligneRight,_delayRight
  5633                           
  5634                           ;main.c: 293:     } else {
  5635   0028FE  EF8C  F014         	goto	l869
  5636   002902                     l5270:
  5637                           
  5638                           ; BSR set to: 0
  5639                           ;main.c: 294:         if (delayRight != changeRight) {
  5640   002902  5045               	movf	_changeRight^0,w,c
  5641   002904  1846               	xorwf	_delayRight^0,w,c
  5642   002906  B4D8               	btfsc	status,2,c
  5643   002908  EF88  F014         	goto	u3001
  5644   00290C  EF8A  F014         	goto	u3000
  5645   002910                     u3001:
  5646   002910  EF8C  F014         	goto	l869
  5647   002914                     u3000:
  5648   002914                     
  5649                           ; BSR set to: 0
  5650                           ;main.c: 295:             changeRight = delayRight;
  5651   002914  C046  F045         	movff	_delayRight,_changeRight
  5652   002918                     l869:
  5653                           
  5654                           ; BSR set to: 0
  5655   002918  0012               	return		;funcret
  5656   00291A                     __end_of_CligneR:
  5657                           	callstack 0
  5658                           
  5659 ;; *************** function _CligneL *****************
  5660 ;; Defined at:
  5661 ;;		line 259 in file "main.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;		None
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;		None
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  1    wreg      void 
  5668 ;; Registers used:
  5669 ;;		wreg, status,2, status,0
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5679 ;;Total ram usage:        0 bytes
  5680 ;; Hardware stack levels used: 1
  5681 ;; Hardware stack levels required when called: 5
  5682 ;; This function calls:
  5683 ;;		Nothing
  5684 ;; This function is called by:
  5685 ;;		_main
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           	psect	text39
  5690   00297C                     __ptext39:
  5691                           	callstack 0
  5692   00297C                     _CligneL:
  5693                           	callstack 25
  5694   00297C                     
  5695                           ;main.c: 260:     if (pwm_Switch) {
  5696   00297C  5049               	movf	_pwm_Switch^0,w,c
  5697   00297E  B4D8               	btfsc	status,2,c
  5698   002980  EFC4  F014         	goto	u2931
  5699   002984  EFC6  F014         	goto	u2930
  5700   002988                     u2931:
  5701   002988  EFD4  F014         	goto	l848
  5702   00298C                     u2930:
  5703   00298C                     
  5704                           ;main.c: 261:         if (changeLeft) {
  5705   00298C  5047               	movf	_changeLeft^0,w,c
  5706   00298E  B4D8               	btfsc	status,2,c
  5707   002990  EFCC  F014         	goto	u2941
  5708   002994  EFCE  F014         	goto	u2940
  5709   002998                     u2941:
  5710   002998  EFD1  F014         	goto	l845
  5711   00299C                     u2940:
  5712   00299C  848B               	bsf	139,2,c	;volatile
  5713   00299E  EFD5  F014         	goto	l5254
  5714   0029A2                     l845:
  5715   0029A2  948B               	bcf	139,2,c	;volatile
  5716   0029A4  EFD5  F014         	goto	l5254
  5717   0029A8                     l848:
  5718   0029A8  948B               	bcf	139,2,c	;volatile
  5719   0029AA                     l5254:
  5720                           
  5721                           ;main.c: 270:     if (cligneLeft != delayLeft) {
  5722   0029AA  5048               	movf	_delayLeft^0,w,c
  5723   0029AC  0100               	movlb	0	; () banked
  5724   0029AE  19E9               	xorwf	_cligneLeft& (0+255),w,b
  5725   0029B0  B4D8               	btfsc	status,2,c
  5726   0029B2  EFDD  F014         	goto	u2951
  5727   0029B6  EFDF  F014         	goto	u2950
  5728   0029BA                     u2951:
  5729   0029BA  EFE3  F014         	goto	l5258
  5730   0029BE                     u2950:
  5731   0029BE                     
  5732                           ; BSR set to: 0
  5733                           ;main.c: 271:         delayLeft = cligneLeft;
  5734   0029BE  C0E9  F048         	movff	_cligneLeft,_delayLeft
  5735                           
  5736                           ;main.c: 272:     } else {
  5737   0029C2  EFEE  F014         	goto	l853
  5738   0029C6                     l5258:
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;main.c: 273:         if (delayLeft != changeLeft) {
  5742   0029C6  5047               	movf	_changeLeft^0,w,c
  5743   0029C8  1848               	xorwf	_delayLeft^0,w,c
  5744   0029CA  B4D8               	btfsc	status,2,c
  5745   0029CC  EFEA  F014         	goto	u2961
  5746   0029D0  EFEC  F014         	goto	u2960
  5747   0029D4                     u2961:
  5748   0029D4  EFEE  F014         	goto	l853
  5749   0029D8                     u2960:
  5750   0029D8                     
  5751                           ; BSR set to: 0
  5752                           ;main.c: 274:             changeLeft = delayLeft;
  5753   0029D8  C048  F047         	movff	_delayLeft,_changeLeft
  5754   0029DC                     l853:
  5755                           
  5756                           ; BSR set to: 0
  5757   0029DC  0012               	return		;funcret
  5758   0029DE                     __end_of_CligneL:
  5759                           	callstack 0
  5760                           
  5761 ;; *************** function _CAN_transmit *****************
  5762 ;; Defined at:
  5763 ;;		line 171 in file "mcc_generated_files/ecan.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;  tempCanMsg      2   18[BANK0 ] PTR struct .
  5766 ;;		 -> Lux_check_Tx(14), 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;  tempSIDL        1   24[BANK0 ] unsigned char 
  5769 ;;  tempSIDH        1   23[BANK0 ] unsigned char 
  5770 ;;  tempEIDL        1   22[BANK0 ] unsigned char 
  5771 ;;  tempEIDH        1   21[BANK0 ] unsigned char 
  5772 ;;  returnValue     1   20[BANK0 ] unsigned char 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  1    wreg      unsigned char 
  5775 ;; Registers used:
  5776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5782 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5783 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5785 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5786 ;;Total ram usage:        7 bytes
  5787 ;; Hardware stack levels used: 1
  5788 ;; Hardware stack levels required when called: 6
  5789 ;; This function calls:
  5790 ;;		_convertCANid2Reg
  5791 ;; This function is called by:
  5792 ;;		_main
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           	psect	text40
  5797   00109A                     __ptext40:
  5798                           	callstack 0
  5799   00109A                     _CAN_transmit:
  5800                           	callstack 24
  5801   00109A                     
  5802                           ;mcc_generated_files/ecan.c: 172:     uint8_t tempEIDH = 0;
  5803   00109A  0E00               	movlw	0
  5804   00109C  0100               	movlb	0	; () banked
  5805   00109E  6F75               	movwf	CAN_transmit@tempEIDH& (0+255),b
  5806                           
  5807                           ;mcc_generated_files/ecan.c: 173:     uint8_t tempEIDL = 0;
  5808   0010A0  0E00               	movlw	0
  5809   0010A2  6F76               	movwf	CAN_transmit@tempEIDL& (0+255),b
  5810                           
  5811                           ;mcc_generated_files/ecan.c: 174:     uint8_t tempSIDH = 0;
  5812   0010A4  0E00               	movlw	0
  5813   0010A6  6F77               	movwf	CAN_transmit@tempSIDH& (0+255),b
  5814                           
  5815                           ;mcc_generated_files/ecan.c: 175:     uint8_t tempSIDL = 0;
  5816   0010A8  0E00               	movlw	0
  5817   0010AA  6F78               	movwf	CAN_transmit@tempSIDL& (0+255),b
  5818                           
  5819                           ;mcc_generated_files/ecan.c: 177:     uint8_t returnValue = 0;
  5820   0010AC  0E00               	movlw	0
  5821   0010AE  6F74               	movwf	CAN_transmit@returnValue& (0+255),b
  5822   0010B0                     
  5823                           ; BSR set to: 0
  5824                           ;mcc_generated_files/ecan.c: 179:     if (TXB0CONbits.TXREQ != 1)
  5825   0010B0  010F               	movlb	15	; () banked
  5826   0010B2  B720               	btfsc	32,3,b	;volatile
  5827   0010B4  EF5E  F008         	goto	u2901
  5828   0010B8  EF60  F008         	goto	u2900
  5829   0010BC                     u2901:
  5830   0010BC  EFEF  F008         	goto	l344
  5831   0010C0                     u2900:
  5832   0010C0                     
  5833                           ; BSR set to: 15
  5834                           ;mcc_generated_files/ecan.c: 180:     {;mcc_generated_files/ecan.c: 181:         convert
      +                          CANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH, &tempEIDL, &tempSID
      +                          H, &tempSIDL);
  5835   0010C0  0100               	movlb	0	; () banked
  5836   0010C2  EE20 F001          	lfsr	2,1
  5837   0010C6  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  5838   0010C8  26D9               	addwf	fsr2l,f,c
  5839   0010CA  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  5840   0010CC  22DA               	addwfc	fsr2h,f,c
  5841   0010CE  CFDE F060          	movff	postinc2,convertCANid2Reg@tempPassedInID
  5842   0010D2  CFDE F061          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  5843   0010D6  CFDE F062          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  5844   0010DA  CFDE F063          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  5845   0010DE  C072  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  5846   0010E2  C073  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  5847   0010E6  50DF               	movf	indf2,w,c
  5848   0010E8  6F64               	movwf	convertCANid2Reg@canIdType& (0+255),b
  5849   0010EA  0E75               	movlw	low CAN_transmit@tempEIDH
  5850   0010EC  6F65               	movwf	convertCANid2Reg@passedInEIDH& (0+255),b
  5851   0010EE  0E00               	movlw	high CAN_transmit@tempEIDH
  5852   0010F0  6F66               	movwf	(convertCANid2Reg@passedInEIDH+1)& (0+255),b
  5853   0010F2  0E76               	movlw	low CAN_transmit@tempEIDL
  5854   0010F4  6F67               	movwf	convertCANid2Reg@passedInEIDL& (0+255),b
  5855   0010F6  0E00               	movlw	high CAN_transmit@tempEIDL
  5856   0010F8  6F68               	movwf	(convertCANid2Reg@passedInEIDL+1)& (0+255),b
  5857   0010FA  0E77               	movlw	low CAN_transmit@tempSIDH
  5858   0010FC  6F69               	movwf	convertCANid2Reg@passedInSIDH& (0+255),b
  5859   0010FE  0E00               	movlw	high CAN_transmit@tempSIDH
  5860   001100  6F6A               	movwf	(convertCANid2Reg@passedInSIDH+1)& (0+255),b
  5861   001102  0E78               	movlw	low CAN_transmit@tempSIDL
  5862   001104  6F6B               	movwf	convertCANid2Reg@passedInSIDL& (0+255),b
  5863   001106  0E00               	movlw	high CAN_transmit@tempSIDL
  5864   001108  6F6C               	movwf	(convertCANid2Reg@passedInSIDL+1)& (0+255),b
  5865   00110A  ECAB  F00F         	call	_convertCANid2Reg	;wreg free
  5866   00110E                     
  5867                           ;mcc_generated_files/ecan.c: 183:         TXB0EIDH = tempEIDH;
  5868   00110E  C075  FF23         	movff	CAN_transmit@tempEIDH,3875	;volatile
  5869   001112                     
  5870                           ;mcc_generated_files/ecan.c: 184:         TXB0EIDL = tempEIDL;
  5871   001112  C076  FF24         	movff	CAN_transmit@tempEIDL,3876	;volatile
  5872   001116                     
  5873                           ;mcc_generated_files/ecan.c: 185:         TXB0SIDH = tempSIDH;
  5874   001116  C077  FF21         	movff	CAN_transmit@tempSIDH,3873	;volatile
  5875   00111A                     
  5876                           ;mcc_generated_files/ecan.c: 186:         TXB0SIDL = tempSIDL;
  5877   00111A  C078  FF22         	movff	CAN_transmit@tempSIDL,3874	;volatile
  5878   00111E                     
  5879                           ;mcc_generated_files/ecan.c: 187:         TXB0DLC = tempCanMsg->frame.dlc;
  5880   00111E  0100               	movlb	0	; () banked
  5881   001120  EE20 F005          	lfsr	2,5
  5882   001124  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  5883   001126  26D9               	addwf	fsr2l,f,c
  5884   001128  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  5885   00112A  22DA               	addwfc	fsr2h,f,c
  5886   00112C  50DF               	movf	indf2,w,c
  5887   00112E  010F               	movlb	15	; () banked
  5888   001130  6F25               	movwf	37,b	;volatile
  5889   001132                     
  5890                           ; BSR set to: 15
  5891                           ;mcc_generated_files/ecan.c: 188:         TXB0D0 = tempCanMsg->frame.data0;
  5892   001132  0100               	movlb	0	; () banked
  5893   001134  EE20 F006          	lfsr	2,6
  5894   001138  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  5895   00113A  26D9               	addwf	fsr2l,f,c
  5896   00113C  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  5897   00113E  22DA               	addwfc	fsr2h,f,c
  5898   001140  50DF               	movf	indf2,w,c
  5899   001142  010F               	movlb	15	; () banked
  5900   001144  6F26               	movwf	38,b	;volatile
  5901   001146                     
  5902                           ; BSR set to: 15
  5903                           ;mcc_generated_files/ecan.c: 189:         TXB0D1 = tempCanMsg->frame.data1;
  5904   001146  0100               	movlb	0	; () banked
  5905   001148  EE20 F007          	lfsr	2,7
  5906   00114C  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  5907   00114E  26D9               	addwf	fsr2l,f,c
  5908   001150  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  5909   001152  22DA               	addwfc	fsr2h,f,c
  5910   001154  50DF               	movf	indf2,w,c
  5911   001156  010F               	movlb	15	; () banked
  5912   001158  6F27               	movwf	39,b	;volatile
  5913   00115A                     
  5914                           ; BSR set to: 15
  5915                           ;mcc_generated_files/ecan.c: 190:         TXB0D2 = tempCanMsg->frame.data2;
  5916   00115A  0100               	movlb	0	; () banked
  5917   00115C  EE20 F008          	lfsr	2,8
  5918   001160  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  5919   001162  26D9               	addwf	fsr2l,f,c
  5920   001164  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  5921   001166  22DA               	addwfc	fsr2h,f,c
  5922   001168  50DF               	movf	indf2,w,c
  5923   00116A  010F               	movlb	15	; () banked
  5924   00116C  6F28               	movwf	40,b	;volatile
  5925   00116E                     
  5926                           ; BSR set to: 15
  5927                           ;mcc_generated_files/ecan.c: 191:         TXB0D3 = tempCanMsg->frame.data3;
  5928   00116E  0100               	movlb	0	; () banked
  5929   001170  EE20 F009          	lfsr	2,9
  5930   001174  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  5931   001176  26D9               	addwf	fsr2l,f,c
  5932   001178  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  5933   00117A  22DA               	addwfc	fsr2h,f,c
  5934   00117C  50DF               	movf	indf2,w,c
  5935   00117E  010F               	movlb	15	; () banked
  5936   001180  6F29               	movwf	41,b	;volatile
  5937   001182                     
  5938                           ; BSR set to: 15
  5939                           ;mcc_generated_files/ecan.c: 192:         TXB0D4 = tempCanMsg->frame.data4;
  5940   001182  0100               	movlb	0	; () banked
  5941   001184  EE20 F00A          	lfsr	2,10
  5942   001188  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  5943   00118A  26D9               	addwf	fsr2l,f,c
  5944   00118C  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  5945   00118E  22DA               	addwfc	fsr2h,f,c
  5946   001190  50DF               	movf	indf2,w,c
  5947   001192  010F               	movlb	15	; () banked
  5948   001194  6F2A               	movwf	42,b	;volatile
  5949   001196                     
  5950                           ; BSR set to: 15
  5951                           ;mcc_generated_files/ecan.c: 193:         TXB0D5 = tempCanMsg->frame.data5;
  5952   001196  0100               	movlb	0	; () banked
  5953   001198  EE20 F00B          	lfsr	2,11
  5954   00119C  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  5955   00119E  26D9               	addwf	fsr2l,f,c
  5956   0011A0  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  5957   0011A2  22DA               	addwfc	fsr2h,f,c
  5958   0011A4  50DF               	movf	indf2,w,c
  5959   0011A6  010F               	movlb	15	; () banked
  5960   0011A8  6F2B               	movwf	43,b	;volatile
  5961   0011AA                     
  5962                           ; BSR set to: 15
  5963                           ;mcc_generated_files/ecan.c: 194:         TXB0D6 = tempCanMsg->frame.data6;
  5964   0011AA  0100               	movlb	0	; () banked
  5965   0011AC  EE20 F00C          	lfsr	2,12
  5966   0011B0  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  5967   0011B2  26D9               	addwf	fsr2l,f,c
  5968   0011B4  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  5969   0011B6  22DA               	addwfc	fsr2h,f,c
  5970   0011B8  50DF               	movf	indf2,w,c
  5971   0011BA  010F               	movlb	15	; () banked
  5972   0011BC  6F2C               	movwf	44,b	;volatile
  5973   0011BE                     
  5974                           ; BSR set to: 15
  5975                           ;mcc_generated_files/ecan.c: 195:         TXB0D7 = tempCanMsg->frame.data7;
  5976   0011BE  0100               	movlb	0	; () banked
  5977   0011C0  EE20 F00D          	lfsr	2,13
  5978   0011C4  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  5979   0011C6  26D9               	addwf	fsr2l,f,c
  5980   0011C8  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  5981   0011CA  22DA               	addwfc	fsr2h,f,c
  5982   0011CC  50DF               	movf	indf2,w,c
  5983   0011CE  010F               	movlb	15	; () banked
  5984   0011D0  6F2D               	movwf	45,b	;volatile
  5985   0011D2                     
  5986                           ; BSR set to: 15
  5987                           ;mcc_generated_files/ecan.c: 197:         TXB0CONbits.TXREQ = 1;
  5988   0011D2  8720               	bsf	32,3,b	;volatile
  5989   0011D4                     l5146:
  5990                           
  5991                           ; BSR set to: 15
  5992                           ;mcc_generated_files/ecan.c: 198:         returnValue = 1;
  5993   0011D4  0E01               	movlw	1
  5994   0011D6  0100               	movlb	0	; () banked
  5995   0011D8  6F74               	movwf	CAN_transmit@returnValue& (0+255),b
  5996                           
  5997                           ;mcc_generated_files/ecan.c: 200:     }
  5998   0011DA  EF15  F00A         	goto	l5212
  5999   0011DE                     l344:
  6000                           
  6001                           ; BSR set to: 15
  6002   0011DE  B710               	btfsc	16,3,b	;volatile
  6003   0011E0  EFF4  F008         	goto	u2911
  6004   0011E4  EFF6  F008         	goto	u2910
  6005   0011E8                     u2911:
  6006   0011E8  EF82  F009         	goto	l346
  6007   0011EC                     u2910:
  6008   0011EC                     
  6009                           ; BSR set to: 15
  6010                           ;mcc_generated_files/ecan.c: 202:     {;mcc_generated_files/ecan.c: 204:         convert
      +                          CANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH, &tempEIDL, &tempSID
      +                          H, &tempSIDL);
  6011   0011EC  0100               	movlb	0	; () banked
  6012   0011EE  EE20 F001          	lfsr	2,1
  6013   0011F2  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6014   0011F4  26D9               	addwf	fsr2l,f,c
  6015   0011F6  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6016   0011F8  22DA               	addwfc	fsr2h,f,c
  6017   0011FA  CFDE F060          	movff	postinc2,convertCANid2Reg@tempPassedInID
  6018   0011FE  CFDE F061          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  6019   001202  CFDE F062          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  6020   001206  CFDE F063          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  6021   00120A  C072  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  6022   00120E  C073  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  6023   001212  50DF               	movf	indf2,w,c
  6024   001214  6F64               	movwf	convertCANid2Reg@canIdType& (0+255),b
  6025   001216  0E75               	movlw	low CAN_transmit@tempEIDH
  6026   001218  6F65               	movwf	convertCANid2Reg@passedInEIDH& (0+255),b
  6027   00121A  0E00               	movlw	high CAN_transmit@tempEIDH
  6028   00121C  6F66               	movwf	(convertCANid2Reg@passedInEIDH+1)& (0+255),b
  6029   00121E  0E76               	movlw	low CAN_transmit@tempEIDL
  6030   001220  6F67               	movwf	convertCANid2Reg@passedInEIDL& (0+255),b
  6031   001222  0E00               	movlw	high CAN_transmit@tempEIDL
  6032   001224  6F68               	movwf	(convertCANid2Reg@passedInEIDL+1)& (0+255),b
  6033   001226  0E77               	movlw	low CAN_transmit@tempSIDH
  6034   001228  6F69               	movwf	convertCANid2Reg@passedInSIDH& (0+255),b
  6035   00122A  0E00               	movlw	high CAN_transmit@tempSIDH
  6036   00122C  6F6A               	movwf	(convertCANid2Reg@passedInSIDH+1)& (0+255),b
  6037   00122E  0E78               	movlw	low CAN_transmit@tempSIDL
  6038   001230  6F6B               	movwf	convertCANid2Reg@passedInSIDL& (0+255),b
  6039   001232  0E00               	movlw	high CAN_transmit@tempSIDL
  6040   001234  6F6C               	movwf	(convertCANid2Reg@passedInSIDL+1)& (0+255),b
  6041   001236  ECAB  F00F         	call	_convertCANid2Reg	;wreg free
  6042   00123A                     
  6043                           ;mcc_generated_files/ecan.c: 206:         TXB1EIDH = tempEIDH;
  6044   00123A  C075  FF13         	movff	CAN_transmit@tempEIDH,3859	;volatile
  6045   00123E                     
  6046                           ;mcc_generated_files/ecan.c: 207:         TXB1EIDL = tempEIDL;
  6047   00123E  C076  FF14         	movff	CAN_transmit@tempEIDL,3860	;volatile
  6048   001242                     
  6049                           ;mcc_generated_files/ecan.c: 208:         TXB1SIDH = tempSIDH;
  6050   001242  C077  FF11         	movff	CAN_transmit@tempSIDH,3857	;volatile
  6051   001246                     
  6052                           ;mcc_generated_files/ecan.c: 209:         TXB1SIDL = tempSIDL;
  6053   001246  C078  FF12         	movff	CAN_transmit@tempSIDL,3858	;volatile
  6054   00124A                     
  6055                           ;mcc_generated_files/ecan.c: 210:         TXB1DLC = tempCanMsg->frame.dlc;
  6056   00124A  0100               	movlb	0	; () banked
  6057   00124C  EE20 F005          	lfsr	2,5
  6058   001250  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6059   001252  26D9               	addwf	fsr2l,f,c
  6060   001254  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6061   001256  22DA               	addwfc	fsr2h,f,c
  6062   001258  50DF               	movf	indf2,w,c
  6063   00125A  010F               	movlb	15	; () banked
  6064   00125C  6F15               	movwf	21,b	;volatile
  6065   00125E                     
  6066                           ; BSR set to: 15
  6067                           ;mcc_generated_files/ecan.c: 211:         TXB1D0 = tempCanMsg->frame.data0;
  6068   00125E  0100               	movlb	0	; () banked
  6069   001260  EE20 F006          	lfsr	2,6
  6070   001264  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6071   001266  26D9               	addwf	fsr2l,f,c
  6072   001268  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6073   00126A  22DA               	addwfc	fsr2h,f,c
  6074   00126C  50DF               	movf	indf2,w,c
  6075   00126E  010F               	movlb	15	; () banked
  6076   001270  6F16               	movwf	22,b	;volatile
  6077   001272                     
  6078                           ; BSR set to: 15
  6079                           ;mcc_generated_files/ecan.c: 212:         TXB1D1 = tempCanMsg->frame.data1;
  6080   001272  0100               	movlb	0	; () banked
  6081   001274  EE20 F007          	lfsr	2,7
  6082   001278  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6083   00127A  26D9               	addwf	fsr2l,f,c
  6084   00127C  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6085   00127E  22DA               	addwfc	fsr2h,f,c
  6086   001280  50DF               	movf	indf2,w,c
  6087   001282  010F               	movlb	15	; () banked
  6088   001284  6F17               	movwf	23,b	;volatile
  6089   001286                     
  6090                           ; BSR set to: 15
  6091                           ;mcc_generated_files/ecan.c: 213:         TXB1D2 = tempCanMsg->frame.data2;
  6092   001286  0100               	movlb	0	; () banked
  6093   001288  EE20 F008          	lfsr	2,8
  6094   00128C  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6095   00128E  26D9               	addwf	fsr2l,f,c
  6096   001290  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6097   001292  22DA               	addwfc	fsr2h,f,c
  6098   001294  50DF               	movf	indf2,w,c
  6099   001296  010F               	movlb	15	; () banked
  6100   001298  6F18               	movwf	24,b	;volatile
  6101   00129A                     
  6102                           ; BSR set to: 15
  6103                           ;mcc_generated_files/ecan.c: 214:         TXB1D3 = tempCanMsg->frame.data3;
  6104   00129A  0100               	movlb	0	; () banked
  6105   00129C  EE20 F009          	lfsr	2,9
  6106   0012A0  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6107   0012A2  26D9               	addwf	fsr2l,f,c
  6108   0012A4  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6109   0012A6  22DA               	addwfc	fsr2h,f,c
  6110   0012A8  50DF               	movf	indf2,w,c
  6111   0012AA  010F               	movlb	15	; () banked
  6112   0012AC  6F19               	movwf	25,b	;volatile
  6113   0012AE                     
  6114                           ; BSR set to: 15
  6115                           ;mcc_generated_files/ecan.c: 215:         TXB1D4 = tempCanMsg->frame.data4;
  6116   0012AE  0100               	movlb	0	; () banked
  6117   0012B0  EE20 F00A          	lfsr	2,10
  6118   0012B4  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6119   0012B6  26D9               	addwf	fsr2l,f,c
  6120   0012B8  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6121   0012BA  22DA               	addwfc	fsr2h,f,c
  6122   0012BC  50DF               	movf	indf2,w,c
  6123   0012BE  010F               	movlb	15	; () banked
  6124   0012C0  6F1A               	movwf	26,b	;volatile
  6125   0012C2                     
  6126                           ; BSR set to: 15
  6127                           ;mcc_generated_files/ecan.c: 216:         TXB1D5 = tempCanMsg->frame.data5;
  6128   0012C2  0100               	movlb	0	; () banked
  6129   0012C4  EE20 F00B          	lfsr	2,11
  6130   0012C8  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6131   0012CA  26D9               	addwf	fsr2l,f,c
  6132   0012CC  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6133   0012CE  22DA               	addwfc	fsr2h,f,c
  6134   0012D0  50DF               	movf	indf2,w,c
  6135   0012D2  010F               	movlb	15	; () banked
  6136   0012D4  6F1B               	movwf	27,b	;volatile
  6137   0012D6                     
  6138                           ; BSR set to: 15
  6139                           ;mcc_generated_files/ecan.c: 217:         TXB1D6 = tempCanMsg->frame.data6;
  6140   0012D6  0100               	movlb	0	; () banked
  6141   0012D8  EE20 F00C          	lfsr	2,12
  6142   0012DC  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6143   0012DE  26D9               	addwf	fsr2l,f,c
  6144   0012E0  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6145   0012E2  22DA               	addwfc	fsr2h,f,c
  6146   0012E4  50DF               	movf	indf2,w,c
  6147   0012E6  010F               	movlb	15	; () banked
  6148   0012E8  6F1C               	movwf	28,b	;volatile
  6149   0012EA                     
  6150                           ; BSR set to: 15
  6151                           ;mcc_generated_files/ecan.c: 218:         TXB1D7 = tempCanMsg->frame.data7;
  6152   0012EA  0100               	movlb	0	; () banked
  6153   0012EC  EE20 F00D          	lfsr	2,13
  6154   0012F0  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6155   0012F2  26D9               	addwf	fsr2l,f,c
  6156   0012F4  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6157   0012F6  22DA               	addwfc	fsr2h,f,c
  6158   0012F8  50DF               	movf	indf2,w,c
  6159   0012FA  010F               	movlb	15	; () banked
  6160   0012FC  6F1D               	movwf	29,b	;volatile
  6161   0012FE                     
  6162                           ; BSR set to: 15
  6163                           ;mcc_generated_files/ecan.c: 220:         TXB1CONbits.TXREQ = 1;
  6164   0012FE  8710               	bsf	16,3,b	;volatile
  6165   001300  EFEA  F008         	goto	l5146
  6166   001304                     l346:
  6167                           
  6168                           ; BSR set to: 15
  6169   001304  B700               	btfsc	0,3,b	;volatile
  6170   001306  EF87  F009         	goto	u2921
  6171   00130A  EF89  F009         	goto	u2920
  6172   00130E                     u2921:
  6173   00130E  EF15  F00A         	goto	l5212
  6174   001312                     u2920:
  6175   001312                     
  6176                           ; BSR set to: 15
  6177                           ;mcc_generated_files/ecan.c: 224:     {;mcc_generated_files/ecan.c: 226:         convert
      +                          CANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH, &tempEIDL, &tempSID
      +                          H, &tempSIDL);
  6178   001312  0100               	movlb	0	; () banked
  6179   001314  EE20 F001          	lfsr	2,1
  6180   001318  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6181   00131A  26D9               	addwf	fsr2l,f,c
  6182   00131C  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6183   00131E  22DA               	addwfc	fsr2h,f,c
  6184   001320  CFDE F060          	movff	postinc2,convertCANid2Reg@tempPassedInID
  6185   001324  CFDE F061          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  6186   001328  CFDE F062          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  6187   00132C  CFDE F063          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  6188   001330  C072  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  6189   001334  C073  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  6190   001338  50DF               	movf	indf2,w,c
  6191   00133A  6F64               	movwf	convertCANid2Reg@canIdType& (0+255),b
  6192   00133C  0E75               	movlw	low CAN_transmit@tempEIDH
  6193   00133E  6F65               	movwf	convertCANid2Reg@passedInEIDH& (0+255),b
  6194   001340  0E00               	movlw	high CAN_transmit@tempEIDH
  6195   001342  6F66               	movwf	(convertCANid2Reg@passedInEIDH+1)& (0+255),b
  6196   001344  0E76               	movlw	low CAN_transmit@tempEIDL
  6197   001346  6F67               	movwf	convertCANid2Reg@passedInEIDL& (0+255),b
  6198   001348  0E00               	movlw	high CAN_transmit@tempEIDL
  6199   00134A  6F68               	movwf	(convertCANid2Reg@passedInEIDL+1)& (0+255),b
  6200   00134C  0E77               	movlw	low CAN_transmit@tempSIDH
  6201   00134E  6F69               	movwf	convertCANid2Reg@passedInSIDH& (0+255),b
  6202   001350  0E00               	movlw	high CAN_transmit@tempSIDH
  6203   001352  6F6A               	movwf	(convertCANid2Reg@passedInSIDH+1)& (0+255),b
  6204   001354  0E78               	movlw	low CAN_transmit@tempSIDL
  6205   001356  6F6B               	movwf	convertCANid2Reg@passedInSIDL& (0+255),b
  6206   001358  0E00               	movlw	high CAN_transmit@tempSIDL
  6207   00135A  6F6C               	movwf	(convertCANid2Reg@passedInSIDL+1)& (0+255),b
  6208   00135C  ECAB  F00F         	call	_convertCANid2Reg	;wreg free
  6209   001360                     
  6210                           ;mcc_generated_files/ecan.c: 228:         TXB2EIDH = tempEIDH;
  6211   001360  C075  FF03         	movff	CAN_transmit@tempEIDH,3843	;volatile
  6212   001364                     
  6213                           ;mcc_generated_files/ecan.c: 229:         TXB2EIDL = tempEIDL;
  6214   001364  C076  FF04         	movff	CAN_transmit@tempEIDL,3844	;volatile
  6215   001368                     
  6216                           ;mcc_generated_files/ecan.c: 230:         TXB2SIDH = tempSIDH;
  6217   001368  C077  FF01         	movff	CAN_transmit@tempSIDH,3841	;volatile
  6218   00136C                     
  6219                           ;mcc_generated_files/ecan.c: 231:         TXB2SIDL = tempSIDL;
  6220   00136C  C078  FF02         	movff	CAN_transmit@tempSIDL,3842	;volatile
  6221   001370                     
  6222                           ;mcc_generated_files/ecan.c: 232:         TXB2DLC = tempCanMsg->frame.dlc;
  6223   001370  0100               	movlb	0	; () banked
  6224   001372  EE20 F005          	lfsr	2,5
  6225   001376  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6226   001378  26D9               	addwf	fsr2l,f,c
  6227   00137A  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6228   00137C  22DA               	addwfc	fsr2h,f,c
  6229   00137E  50DF               	movf	indf2,w,c
  6230   001380  010F               	movlb	15	; () banked
  6231   001382  6F05               	movwf	5,b	;volatile
  6232   001384                     
  6233                           ; BSR set to: 15
  6234                           ;mcc_generated_files/ecan.c: 233:         TXB2D0 = tempCanMsg->frame.data0;
  6235   001384  0100               	movlb	0	; () banked
  6236   001386  EE20 F006          	lfsr	2,6
  6237   00138A  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6238   00138C  26D9               	addwf	fsr2l,f,c
  6239   00138E  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6240   001390  22DA               	addwfc	fsr2h,f,c
  6241   001392  50DF               	movf	indf2,w,c
  6242   001394  010F               	movlb	15	; () banked
  6243   001396  6F06               	movwf	6,b	;volatile
  6244   001398                     
  6245                           ; BSR set to: 15
  6246                           ;mcc_generated_files/ecan.c: 234:         TXB2D1 = tempCanMsg->frame.data1;
  6247   001398  0100               	movlb	0	; () banked
  6248   00139A  EE20 F007          	lfsr	2,7
  6249   00139E  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6250   0013A0  26D9               	addwf	fsr2l,f,c
  6251   0013A2  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6252   0013A4  22DA               	addwfc	fsr2h,f,c
  6253   0013A6  50DF               	movf	indf2,w,c
  6254   0013A8  010F               	movlb	15	; () banked
  6255   0013AA  6F07               	movwf	7,b	;volatile
  6256   0013AC                     
  6257                           ; BSR set to: 15
  6258                           ;mcc_generated_files/ecan.c: 235:         TXB2D2 = tempCanMsg->frame.data2;
  6259   0013AC  0100               	movlb	0	; () banked
  6260   0013AE  EE20 F008          	lfsr	2,8
  6261   0013B2  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6262   0013B4  26D9               	addwf	fsr2l,f,c
  6263   0013B6  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6264   0013B8  22DA               	addwfc	fsr2h,f,c
  6265   0013BA  50DF               	movf	indf2,w,c
  6266   0013BC  010F               	movlb	15	; () banked
  6267   0013BE  6F08               	movwf	8,b	;volatile
  6268   0013C0                     
  6269                           ; BSR set to: 15
  6270                           ;mcc_generated_files/ecan.c: 236:         TXB2D3 = tempCanMsg->frame.data3;
  6271   0013C0  0100               	movlb	0	; () banked
  6272   0013C2  EE20 F009          	lfsr	2,9
  6273   0013C6  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6274   0013C8  26D9               	addwf	fsr2l,f,c
  6275   0013CA  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6276   0013CC  22DA               	addwfc	fsr2h,f,c
  6277   0013CE  50DF               	movf	indf2,w,c
  6278   0013D0  010F               	movlb	15	; () banked
  6279   0013D2  6F09               	movwf	9,b	;volatile
  6280   0013D4                     
  6281                           ; BSR set to: 15
  6282                           ;mcc_generated_files/ecan.c: 237:         TXB2D4 = tempCanMsg->frame.data4;
  6283   0013D4  0100               	movlb	0	; () banked
  6284   0013D6  EE20 F00A          	lfsr	2,10
  6285   0013DA  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6286   0013DC  26D9               	addwf	fsr2l,f,c
  6287   0013DE  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6288   0013E0  22DA               	addwfc	fsr2h,f,c
  6289   0013E2  50DF               	movf	indf2,w,c
  6290   0013E4  010F               	movlb	15	; () banked
  6291   0013E6  6F0A               	movwf	10,b	;volatile
  6292   0013E8                     
  6293                           ; BSR set to: 15
  6294                           ;mcc_generated_files/ecan.c: 238:         TXB2D5 = tempCanMsg->frame.data5;
  6295   0013E8  0100               	movlb	0	; () banked
  6296   0013EA  EE20 F00B          	lfsr	2,11
  6297   0013EE  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6298   0013F0  26D9               	addwf	fsr2l,f,c
  6299   0013F2  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6300   0013F4  22DA               	addwfc	fsr2h,f,c
  6301   0013F6  50DF               	movf	indf2,w,c
  6302   0013F8  010F               	movlb	15	; () banked
  6303   0013FA  6F0B               	movwf	11,b	;volatile
  6304   0013FC                     
  6305                           ; BSR set to: 15
  6306                           ;mcc_generated_files/ecan.c: 239:         TXB2D6 = tempCanMsg->frame.data6;
  6307   0013FC  0100               	movlb	0	; () banked
  6308   0013FE  EE20 F00C          	lfsr	2,12
  6309   001402  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6310   001404  26D9               	addwf	fsr2l,f,c
  6311   001406  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6312   001408  22DA               	addwfc	fsr2h,f,c
  6313   00140A  50DF               	movf	indf2,w,c
  6314   00140C  010F               	movlb	15	; () banked
  6315   00140E  6F0C               	movwf	12,b	;volatile
  6316   001410                     
  6317                           ; BSR set to: 15
  6318                           ;mcc_generated_files/ecan.c: 240:         TXB2D7 = tempCanMsg->frame.data7;
  6319   001410  0100               	movlb	0	; () banked
  6320   001412  EE20 F00D          	lfsr	2,13
  6321   001416  5172               	movf	CAN_transmit@tempCanMsg& (0+255),w,b
  6322   001418  26D9               	addwf	fsr2l,f,c
  6323   00141A  5173               	movf	(CAN_transmit@tempCanMsg+1)& (0+255),w,b
  6324   00141C  22DA               	addwfc	fsr2h,f,c
  6325   00141E  50DF               	movf	indf2,w,c
  6326   001420  010F               	movlb	15	; () banked
  6327   001422  6F0D               	movwf	13,b	;volatile
  6328   001424                     
  6329                           ; BSR set to: 15
  6330                           ;mcc_generated_files/ecan.c: 242:         TXB2CONbits.TXREQ = 1;
  6331   001424  8700               	bsf	0,3,b	;volatile
  6332   001426  EFEA  F008         	goto	l5146
  6333   00142A                     l5212:
  6334                           
  6335                           ;mcc_generated_files/ecan.c: 246:     return (returnValue);
  6336   00142A  0100               	movlb	0	; () banked
  6337   00142C  5174               	movf	CAN_transmit@returnValue& (0+255),w,b
  6338   00142E                     
  6339                           ; BSR set to: 0
  6340   00142E  0012               	return		;funcret
  6341   001430                     __end_of_CAN_transmit:
  6342                           	callstack 0
  6343                           
  6344 ;; *************** function _convertCANid2Reg *****************
  6345 ;; Defined at:
  6346 ;;		line 408 in file "mcc_generated_files/ecan.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;  tempPassedIn    4    0[BANK0 ] unsigned long 
  6349 ;;  canIdType       1    4[BANK0 ] unsigned char 
  6350 ;;  passedInEIDH    2    5[BANK0 ] PTR unsigned char 
  6351 ;;		 -> CAN_transmit@tempEIDH(1), 
  6352 ;;  passedInEIDL    2    7[BANK0 ] PTR unsigned char 
  6353 ;;		 -> CAN_transmit@tempEIDL(1), 
  6354 ;;  passedInSIDH    2    9[BANK0 ] PTR unsigned char 
  6355 ;;		 -> CAN_transmit@tempSIDH(1), 
  6356 ;;  passedInSIDL    2   11[BANK0 ] PTR unsigned char 
  6357 ;;		 -> CAN_transmit@tempSIDL(1), 
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;  wipSIDL         1   17[BANK0 ] unsigned char 
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  1    wreg      void 
  6362 ;; Registers used:
  6363 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6369 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6370 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6371 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6372 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6373 ;;Total ram usage:       18 bytes
  6374 ;; Hardware stack levels used: 1
  6375 ;; Hardware stack levels required when called: 5
  6376 ;; This function calls:
  6377 ;;		Nothing
  6378 ;; This function is called by:
  6379 ;;		_CAN_transmit
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           	psect	text41
  6384   001F56                     __ptext41:
  6385                           	callstack 0
  6386   001F56                     _convertCANid2Reg:
  6387                           	callstack 24
  6388   001F56                     
  6389                           ;mcc_generated_files/ecan.c: 412:     if (canIdType == 2) {
  6390   001F56  0E02               	movlw	2
  6391   001F58  0100               	movlb	0	; () banked
  6392   001F5A  1964               	xorwf	convertCANid2Reg@canIdType& (0+255),w,b
  6393   001F5C  A4D8               	btfss	status,2,c
  6394   001F5E  EFB3  F00F         	goto	u2871
  6395   001F62  EFB5  F00F         	goto	u2870
  6396   001F66                     u2871:
  6397   001F66  EF38  F010         	goto	l5044
  6398   001F6A                     u2870:
  6399   001F6A                     
  6400                           ; BSR set to: 0
  6401                           ;mcc_generated_files/ecan.c: 415:         *passedInEIDL = 0xFF & tempPassedInID;
  6402   001F6A  C067  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  6403   001F6E  C068  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  6404   001F72  C060  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  6405   001F76                     
  6406                           ; BSR set to: 0
  6407                           ;mcc_generated_files/ecan.c: 416:         tempPassedInID = tempPassedInID >> 8;
  6408   001F76  C060  F06D         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  6409   001F7A  C061  F06E         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  6410   001F7E  C062  F06F         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  6411   001F82  C063  F070         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  6412   001F86  C06E  F06D         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  6413   001F8A  C06F  F06E         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  6414   001F8E  C070  F06F         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  6415   001F92  6B70               	clrf	(??_convertCANid2Reg+3)& (0+255),b
  6416   001F94  C06D  F060         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  6417   001F98  C06E  F061         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  6418   001F9C  C06F  F062         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  6419   001FA0  C070  F063         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  6420   001FA4                     
  6421                           ; BSR set to: 0
  6422                           ;mcc_generated_files/ecan.c: 419:         *passedInEIDH = 0xFF & tempPassedInID;
  6423   001FA4  C065  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  6424   001FA8  C066  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  6425   001FAC  C060  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  6426                           
  6427                           ;mcc_generated_files/ecan.c: 420:         tempPassedInID = tempPassedInID >> 8;
  6428   001FB0  C060  F06D         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  6429   001FB4  C061  F06E         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  6430   001FB8  C062  F06F         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  6431   001FBC  C063  F070         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  6432   001FC0  C06E  F06D         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  6433   001FC4  C06F  F06E         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  6434   001FC8  C070  F06F         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  6435   001FCC  6B70               	clrf	(??_convertCANid2Reg+3)& (0+255),b
  6436   001FCE  C06D  F060         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  6437   001FD2  C06E  F061         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  6438   001FD6  C06F  F062         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  6439   001FDA  C070  F063         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  6440   001FDE                     
  6441                           ; BSR set to: 0
  6442                           ;mcc_generated_files/ecan.c: 424:         wipSIDL = 0x03 & tempPassedInID;
  6443   001FDE  5160               	movf	convertCANid2Reg@tempPassedInID& (0+255),w,b
  6444   001FE0  0B03               	andlw	3
  6445   001FE2  6F71               	movwf	convertCANid2Reg@wipSIDL& (0+255),b
  6446   001FE4                     
  6447                           ; BSR set to: 0
  6448                           ;mcc_generated_files/ecan.c: 425:         tempPassedInID = tempPassedInID << 3;
  6449   001FE4  C060  F06D         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  6450   001FE8  C061  F06E         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  6451   001FEC  C062  F06F         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  6452   001FF0  C063  F070         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  6453   001FF4  0E03               	movlw	3
  6454   001FF6                     u2885:
  6455   001FF6  90D8               	bcf	status,0,c
  6456   001FF8  376D               	rlcf	??_convertCANid2Reg& (0+255),f,b
  6457   001FFA  376E               	rlcf	(??_convertCANid2Reg+1)& (0+255),f,b
  6458   001FFC  376F               	rlcf	(??_convertCANid2Reg+2)& (0+255),f,b
  6459   001FFE  3770               	rlcf	(??_convertCANid2Reg+3)& (0+255),f,b
  6460   002000  2EE8               	decfsz	wreg,f,c
  6461   002002  EFFB  F00F         	goto	u2885
  6462   002006  C06D  F060         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  6463   00200A  C06E  F061         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  6464   00200E  C06F  F062         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  6465   002012  C070  F063         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  6466   002016                     
  6467                           ; BSR set to: 0
  6468                           ;mcc_generated_files/ecan.c: 426:         wipSIDL = (0xE0 & tempPassedInID) + wipSIDL;
  6469   002016  5160               	movf	convertCANid2Reg@tempPassedInID& (0+255),w,b
  6470   002018  0BE0               	andlw	224
  6471   00201A  2571               	addwf	convertCANid2Reg@wipSIDL& (0+255),w,b
  6472   00201C  6F71               	movwf	convertCANid2Reg@wipSIDL& (0+255),b
  6473   00201E                     
  6474                           ; BSR set to: 0
  6475                           ;mcc_generated_files/ecan.c: 427:         wipSIDL = (uint8_t)(wipSIDL + 0x08);
  6476   00201E  5171               	movf	convertCANid2Reg@wipSIDL& (0+255),w,b
  6477   002020  0F08               	addlw	8
  6478   002022  6F71               	movwf	convertCANid2Reg@wipSIDL& (0+255),b
  6479   002024                     
  6480                           ; BSR set to: 0
  6481                           ;mcc_generated_files/ecan.c: 428:         *passedInSIDL = (uint8_t)(0xEB & wipSIDL);
  6482   002024  5171               	movf	convertCANid2Reg@wipSIDL& (0+255),w,b
  6483   002026  0BEB               	andlw	235
  6484   002028  C06B  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  6485   00202C  C06C  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  6486   002030  6EDF               	movwf	indf2,c
  6487   002032                     l5040:
  6488                           
  6489                           ; BSR set to: 0
  6490                           ;mcc_generated_files/ecan.c: 431:         tempPassedInID = tempPassedInID >> 8;
  6491   002032  C060  F06D         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  6492   002036  C061  F06E         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  6493   00203A  C062  F06F         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  6494   00203E  C063  F070         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  6495   002042  C06E  F06D         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  6496   002046  C06F  F06E         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  6497   00204A  C070  F06F         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  6498   00204E  6B70               	clrf	(??_convertCANid2Reg+3)& (0+255),b
  6499   002050  C06D  F060         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  6500   002054  C06E  F061         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  6501   002058  C06F  F062         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  6502   00205C  C070  F063         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  6503   002060                     
  6504                           ; BSR set to: 0
  6505                           ;mcc_generated_files/ecan.c: 432:         *passedInSIDH = 0xFF & tempPassedInID;
  6506   002060  C069  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  6507   002064  C06A  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  6508   002068  C060  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  6509                           
  6510                           ;mcc_generated_files/ecan.c: 433:     }
  6511   00206C  EF65  F010         	goto	l387
  6512   002070                     l5044:
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;mcc_generated_files/ecan.c: 435:     {;mcc_generated_files/ecan.c: 436:         *passed
      +                          InEIDH = 0;
  6516   002070  C065  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  6517   002074  C066  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  6518   002078  0E00               	movlw	0
  6519   00207A  6EDF               	movwf	indf2,c
  6520                           
  6521                           ;mcc_generated_files/ecan.c: 437:         *passedInEIDL = 0;
  6522   00207C  C067  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  6523   002080  C068  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  6524   002084  0E00               	movlw	0
  6525   002086  6EDF               	movwf	indf2,c
  6526   002088                     
  6527                           ; BSR set to: 0
  6528                           ;mcc_generated_files/ecan.c: 438:         tempPassedInID = tempPassedInID << 5;
  6529   002088  C060  F06D         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  6530   00208C  C061  F06E         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  6531   002090  C062  F06F         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  6532   002094  C063  F070         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  6533   002098  0E05               	movlw	5
  6534   00209A                     u2895:
  6535   00209A  90D8               	bcf	status,0,c
  6536   00209C  376D               	rlcf	??_convertCANid2Reg& (0+255),f,b
  6537   00209E  376E               	rlcf	(??_convertCANid2Reg+1)& (0+255),f,b
  6538   0020A0  376F               	rlcf	(??_convertCANid2Reg+2)& (0+255),f,b
  6539   0020A2  3770               	rlcf	(??_convertCANid2Reg+3)& (0+255),f,b
  6540   0020A4  2EE8               	decfsz	wreg,f,c
  6541   0020A6  EF4D  F010         	goto	u2895
  6542   0020AA  C06D  F060         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  6543   0020AE  C06E  F061         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  6544   0020B2  C06F  F062         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  6545   0020B6  C070  F063         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  6546   0020BA                     
  6547                           ; BSR set to: 0
  6548                           ;mcc_generated_files/ecan.c: 439:         *passedInSIDL = 0xFF & tempPassedInID;
  6549   0020BA  C06B  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  6550   0020BE  C06C  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  6551   0020C2  C060  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  6552   0020C6  EF19  F010         	goto	l5040
  6553   0020CA                     l387:
  6554                           
  6555                           ; BSR set to: 0
  6556   0020CA  0012               	return		;funcret
  6557   0020CC                     __end_of_convertCANid2Reg:
  6558                           	callstack 0
  6559                           
  6560 ;; *************** function _INTERRUPT_InterruptManager *****************
  6561 ;; Defined at:
  6562 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;		None
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;		None
  6567 ;; Return value:  Size  Location     Type
  6568 ;;                  1    wreg      void 
  6569 ;; Registers used:
  6570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6571 ;; Tracked objects:
  6572 ;;		On entry : 0/0
  6573 ;;		On exit  : 0/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6578 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6579 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6580 ;;Total ram usage:        6 bytes
  6581 ;; Hardware stack levels used: 1
  6582 ;; Hardware stack levels required when called: 4
  6583 ;; This function calls:
  6584 ;;		_ECAN_RXB0I_ISR
  6585 ;;		_ECAN_WAKI_ISR
  6586 ;;		_INT0_ISR
  6587 ;;		_PIN_MANAGER_IOC
  6588 ;;		_TMR1_ISR
  6589 ;;		_TMR2_ISR
  6590 ;;		_TMR3_ISR
  6591 ;; This function is called by:
  6592 ;;		Interrupt level 2
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           	psect	intcode
  6597   000008                     __pintcode:
  6598                           	callstack 0
  6599   000008                     _INTERRUPT_InterruptManager:
  6600                           	callstack 16
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;incstack = 0
  6604   000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6605   00000A  CFFA F025          	movff	pclath,??_INTERRUPT_InterruptManager
  6606   00000E  CFFB F026          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6607   000012  CFE1 F027          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
  6608   000016  CFE2 F028          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
  6609   00001A  CFD9 F029          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
  6610   00001E  CFDA F02A          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
  6611   000022                     
  6612                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.INT0IE == 1 && INTCONbit
      +                          s.INT0IF == 1)
  6613   000022  A8F2               	btfss	242,4,c	;volatile
  6614   000024  EF16  F000         	goto	i2u211_41
  6615   000028  EF18  F000         	goto	i2u211_40
  6616   00002C                     i2u211_41:
  6617   00002C  EF23  F000         	goto	i2l38
  6618   000030                     i2u211_40:
  6619   000030  A2F2               	btfss	242,1,c	;volatile
  6620   000032  EF1D  F000         	goto	i2u212_41
  6621   000036  EF1F  F000         	goto	i2u212_40
  6622   00003A                     i2u212_41:
  6623   00003A  EF23  F000         	goto	i2l38
  6624   00003E                     i2u212_40:
  6625   00003E                     
  6626                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         INT0_ISR();
  6627   00003E  ECF5  F017         	call	_INT0_ISR	;wreg free
  6628                           
  6629                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  6630   000042  EF96  F000         	goto	i2l54
  6631   000046                     i2l38:
  6632   000046  A6F2               	btfss	242,3,c	;volatile
  6633   000048  EF28  F000         	goto	i2u213_41
  6634   00004C  EF2A  F000         	goto	i2u213_40
  6635   000050                     i2u213_41:
  6636   000050  EF35  F000         	goto	i2l40
  6637   000054                     i2u213_40:
  6638   000054  A0F2               	btfss	242,0,c	;volatile
  6639   000056  EF2F  F000         	goto	i2u214_41
  6640   00005A  EF31  F000         	goto	i2u214_40
  6641   00005E                     i2u214_41:
  6642   00005E  EF35  F000         	goto	i2l40
  6643   000062                     i2u214_40:
  6644   000062                     
  6645                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         PIN_MANAGER_IOC();
  6646   000062  ECFF  F017         	call	_PIN_MANAGER_IOC	;wreg free
  6647                           
  6648                           ;mcc_generated_files/interrupt_manager.c: 68:     }
  6649   000066  EF96  F000         	goto	i2l54
  6650   00006A                     i2l40:
  6651   00006A  ACF2               	btfss	242,6,c	;volatile
  6652   00006C  EF3A  F000         	goto	i2u215_41
  6653   000070  EF3C  F000         	goto	i2u215_40
  6654   000074                     i2u215_41:
  6655   000074  EF96  F000         	goto	i2l48
  6656   000078                     i2u215_40:
  6657   000078                     
  6658                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         if(PIE5bits.WAKIE == 1 && PIR5bits.WAKIF == 1)
  6659   000078  AC76               	btfss	118,6,c	;volatile
  6660   00007A  EF41  F000         	goto	i2u216_41
  6661   00007E  EF43  F000         	goto	i2u216_40
  6662   000082                     i2u216_41:
  6663   000082  EF4E  F000         	goto	i2l43
  6664   000086                     i2u216_40:
  6665   000086  AC77               	btfss	119,6,c	;volatile
  6666   000088  EF48  F000         	goto	i2u217_41
  6667   00008C  EF4A  F000         	goto	i2u217_40
  6668   000090                     i2u217_41:
  6669   000090  EF4E  F000         	goto	i2l43
  6670   000094                     i2u217_40:
  6671   000094                     
  6672                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             ECAN_WAKI_ISR();
  6673   000094  EC66  F017         	call	_ECAN_WAKI_ISR	;wreg free
  6674                           
  6675                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  6676   000098  EF96  F000         	goto	i2l54
  6677   00009C                     i2l43:
  6678   00009C  A076               	btfss	118,0,c	;volatile
  6679   00009E  EF53  F000         	goto	i2u218_41
  6680   0000A2  EF55  F000         	goto	i2u218_40
  6681   0000A6                     i2u218_41:
  6682   0000A6  EF60  F000         	goto	i2l45
  6683   0000AA                     i2u218_40:
  6684   0000AA  A077               	btfss	119,0,c	;volatile
  6685   0000AC  EF5A  F000         	goto	i2u219_41
  6686   0000B0  EF5C  F000         	goto	i2u219_40
  6687   0000B4                     i2u219_41:
  6688   0000B4  EF60  F000         	goto	i2l45
  6689   0000B8                     i2u219_40:
  6690   0000B8                     
  6691                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             ECAN_RXB0I_ISR();
  6692   0000B8  EC75  F017         	call	_ECAN_RXB0I_ISR	;wreg free
  6693                           
  6694                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  6695   0000BC  EF96  F000         	goto	i2l54
  6696   0000C0                     i2l45:
  6697   0000C0  A2A0               	btfss	160,1,c	;volatile
  6698   0000C2  EF65  F000         	goto	i2u220_41
  6699   0000C6  EF67  F000         	goto	i2u220_40
  6700   0000CA                     i2u220_41:
  6701   0000CA  EF72  F000         	goto	i2l47
  6702   0000CE                     i2u220_40:
  6703   0000CE  A2A1               	btfss	161,1,c	;volatile
  6704   0000D0  EF6C  F000         	goto	i2u221_41
  6705   0000D4  EF6E  F000         	goto	i2u221_40
  6706   0000D8                     i2u221_41:
  6707   0000D8  EF72  F000         	goto	i2l47
  6708   0000DC                     i2u221_40:
  6709   0000DC                     
  6710                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR3_ISR();
  6711   0000DC  EC11  F016         	call	_TMR3_ISR	;wreg free
  6712                           
  6713                           ;mcc_generated_files/interrupt_manager.c: 82:         }
  6714   0000E0  EF96  F000         	goto	i2l54
  6715   0000E4                     i2l47:
  6716   0000E4  A29D               	btfss	157,1,c	;volatile
  6717   0000E6  EF77  F000         	goto	i2u222_41
  6718   0000EA  EF79  F000         	goto	i2u222_40
  6719   0000EE                     i2u222_41:
  6720   0000EE  EF84  F000         	goto	i2l49
  6721   0000F2                     i2u222_40:
  6722   0000F2  A29E               	btfss	158,1,c	;volatile
  6723   0000F4  EF7E  F000         	goto	i2u223_41
  6724   0000F8  EF80  F000         	goto	i2u223_40
  6725   0000FC                     i2u223_41:
  6726   0000FC  EF84  F000         	goto	i2l49
  6727   000100                     i2u223_40:
  6728   000100                     
  6729                           ;mcc_generated_files/interrupt_manager.c: 84:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 85:             TMR2_ISR();
  6730   000100  ECCB  F016         	call	_TMR2_ISR	;wreg free
  6731                           
  6732                           ;mcc_generated_files/interrupt_manager.c: 86:         }
  6733   000104  EF96  F000         	goto	i2l54
  6734   000108                     i2l49:
  6735   000108  A09D               	btfss	157,0,c	;volatile
  6736   00010A  EF89  F000         	goto	i2u224_41
  6737   00010E  EF8B  F000         	goto	i2u224_40
  6738   000112                     i2u224_41:
  6739   000112  EF96  F000         	goto	i2l48
  6740   000116                     i2u224_40:
  6741   000116  A09E               	btfss	158,0,c	;volatile
  6742   000118  EF90  F000         	goto	i2u225_41
  6743   00011C  EF92  F000         	goto	i2u225_40
  6744   000120                     i2u225_41:
  6745   000120  EF96  F000         	goto	i2l48
  6746   000124                     i2u225_40:
  6747   000124                     
  6748                           ;mcc_generated_files/interrupt_manager.c: 88:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 89:             TMR1_ISR();
  6749   000124  ECA7  F017         	call	_TMR1_ISR	;wreg free
  6750                           
  6751                           ;mcc_generated_files/interrupt_manager.c: 90:         }
  6752   000128  EF96  F000         	goto	i2l54
  6753   00012C                     i2l48:
  6754   00012C                     i2l54:
  6755   00012C  C02A  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
  6756   000130  C029  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
  6757   000134  C028  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
  6758   000138  C027  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
  6759   00013C  C026  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6760   000140  C025  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6761   000144  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6762   000146  0011               	retfie		f
  6763   000148                     __end_of_INTERRUPT_InterruptManager:
  6764                           	callstack 0
  6765                           
  6766 ;; *************** function _TMR3_ISR *****************
  6767 ;; Defined at:
  6768 ;;		line 157 in file "mcc_generated_files/tmr3.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;		None
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;		None
  6773 ;; Return value:  Size  Location     Type
  6774 ;;                  1    wreg      void 
  6775 ;; Registers used:
  6776 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6786 ;;Total ram usage:        0 bytes
  6787 ;; Hardware stack levels used: 1
  6788 ;; Hardware stack levels required when called: 2
  6789 ;; This function calls:
  6790 ;;		_TMR3_CallBack
  6791 ;;		_TMR3_WriteTimer
  6792 ;; This function is called by:
  6793 ;;		_INTERRUPT_InterruptManager
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           	psect	text43
  6798   002C22                     __ptext43:
  6799                           	callstack 0
  6800   002C22                     _TMR3_ISR:
  6801                           	callstack 17
  6802   002C22                     
  6803                           ;mcc_generated_files/tmr3.c: 159:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 162:     PIR2bits.TMR3IF = 0;
  6804   002C22  92A1               	bcf	161,1,c	;volatile
  6805   002C24                     
  6806                           ;mcc_generated_files/tmr3.c: 163:     TMR3_WriteTimer(timer3ReloadVal);
  6807   002C24  C03B  F001         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
  6808   002C28  C03C  F002         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
  6809   002C2C  EC08  F017         	call	_TMR3_WriteTimer	;wreg free
  6810   002C30                     
  6811                           ;mcc_generated_files/tmr3.c: 166:     if (++CountCallBack >= 11)
  6812   002C30  4A3F               	infsnz	TMR3_ISR@CountCallBack^0,f,c	;volatile
  6813   002C32  2A40               	incf	(TMR3_ISR@CountCallBack+1)^0,f,c	;volatile
  6814   002C34  5040               	movf	(TMR3_ISR@CountCallBack+1)^0,w,c	;volatile
  6815   002C36  E109               	bnz	i2u198_40
  6816   002C38  0E0B               	movlw	11
  6817   002C3A  5C3F               	subwf	TMR3_ISR@CountCallBack^0,w,c	;volatile
  6818   002C3C  A0D8               	btfss	status,0,c
  6819   002C3E  EF23  F016         	goto	i2u198_41
  6820   002C42  EF25  F016         	goto	i2u198_40
  6821   002C46                     i2u198_41:
  6822   002C46  EF2B  F016         	goto	i2l489
  6823   002C4A                     i2u198_40:
  6824   002C4A                     
  6825                           ;mcc_generated_files/tmr3.c: 167:     {;mcc_generated_files/tmr3.c: 169:         TMR3_Ca
      +                          llBack();
  6826   002C4A  EC43  F016         	call	_TMR3_CallBack	;wreg free
  6827   002C4E                     
  6828                           ;mcc_generated_files/tmr3.c: 172:         CountCallBack = 0;
  6829   002C4E  0E00               	movlw	0
  6830   002C50  6E40               	movwf	(TMR3_ISR@CountCallBack+1)^0,c	;volatile
  6831   002C52  0E00               	movlw	0
  6832   002C54  6E3F               	movwf	TMR3_ISR@CountCallBack^0,c	;volatile
  6833   002C56                     i2l489:
  6834   002C56  0012               	return		;funcret
  6835   002C58                     __end_of_TMR3_ISR:
  6836                           	callstack 0
  6837                           
  6838 ;; *************** function _TMR3_WriteTimer *****************
  6839 ;; Defined at:
  6840 ;;		line 120 in file "mcc_generated_files/tmr3.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;  timerVal        2    0[COMRAM] unsigned short 
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;		None
  6845 ;; Return value:  Size  Location     Type
  6846 ;;                  1    wreg      void 
  6847 ;; Registers used:
  6848 ;;		wreg, status,2
  6849 ;; Tracked objects:
  6850 ;;		On entry : 0/0
  6851 ;;		On exit  : 0/0
  6852 ;;		Unchanged: 0/0
  6853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6854 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6857 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6858 ;;Total ram usage:        2 bytes
  6859 ;; Hardware stack levels used: 1
  6860 ;; This function calls:
  6861 ;;		Nothing
  6862 ;; This function is called by:
  6863 ;;		_TMR3_ISR
  6864 ;;		_TMR3_Reload
  6865 ;; This function uses a non-reentrant model
  6866 ;;
  6867                           
  6868                           	psect	text44
  6869   002E10                     __ptext44:
  6870                           	callstack 0
  6871   002E10                     _TMR3_WriteTimer:
  6872                           	callstack 18
  6873   002E10                     
  6874                           ;mcc_generated_files/tmr3.c: 120: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 121: {;mcc_generated_files/tmr3.c: 122:     if (T3CONbits.nT3SYNC == 1)
  6875   002E10  A4B1               	btfss	177,2,c	;volatile
  6876   002E12  EF0D  F017         	goto	i2u187_41
  6877   002E16  EF0F  F017         	goto	i2u187_40
  6878   002E1A                     i2u187_41:
  6879   002E1A  EF17  F017         	goto	i2l3866
  6880   002E1E                     i2u187_40:
  6881   002E1E                     
  6882                           ;mcc_generated_files/tmr3.c: 123:     {;mcc_generated_files/tmr3.c: 125:         T3CONbi
      +                          ts.TMR3ON = 0;
  6883   002E1E  90B1               	bcf	177,0,c	;volatile
  6884   002E20                     
  6885                           ;mcc_generated_files/tmr3.c: 128:         TMR3H = (uint8_t)(timerVal >> 8);
  6886   002E20  5002               	movf	(TMR3_WriteTimer@timerVal+1)^0,w,c
  6887   002E22  6EB3               	movwf	179,c	;volatile
  6888   002E24                     
  6889                           ;mcc_generated_files/tmr3.c: 129:         TMR3L = (uint8_t)timerVal;
  6890   002E24  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
  6891   002E28                     
  6892                           ;mcc_generated_files/tmr3.c: 132:         T3CONbits.TMR3ON =1;
  6893   002E28  80B1               	bsf	177,0,c	;volatile
  6894                           
  6895                           ;mcc_generated_files/tmr3.c: 133:     }
  6896   002E2A  EF1B  F017         	goto	i2l474
  6897   002E2E                     i2l3866:
  6898                           
  6899                           ;mcc_generated_files/tmr3.c: 135:     {;mcc_generated_files/tmr3.c: 137:         TMR3H =
      +                           (uint8_t)(timerVal >> 8);
  6900   002E2E  5002               	movf	(TMR3_WriteTimer@timerVal+1)^0,w,c
  6901   002E30  6EB3               	movwf	179,c	;volatile
  6902   002E32                     
  6903                           ;mcc_generated_files/tmr3.c: 138:         TMR3L = (uint8_t)timerVal;
  6904   002E32  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
  6905   002E36                     i2l474:
  6906   002E36  0012               	return		;funcret
  6907   002E38                     __end_of_TMR3_WriteTimer:
  6908                           	callstack 0
  6909                           
  6910 ;; *************** function _TMR3_CallBack *****************
  6911 ;; Defined at:
  6912 ;;		line 176 in file "mcc_generated_files/tmr3.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;		None
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;		None
  6917 ;; Return value:  Size  Location     Type
  6918 ;;                  1    wreg      void 
  6919 ;; Registers used:
  6920 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6930 ;;Total ram usage:        0 bytes
  6931 ;; Hardware stack levels used: 1
  6932 ;; Hardware stack levels required when called: 1
  6933 ;; This function calls:
  6934 ;;		Absolute function
  6935 ;;		_Clignotant_PWM
  6936 ;;		_TMR3_DefaultInterruptHandler
  6937 ;; This function is called by:
  6938 ;;		_TMR3_ISR
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           
  6942                           	psect	text45
  6943   002C86                     __ptext45:
  6944                           	callstack 0
  6945   002C86                     _TMR3_CallBack:
  6946                           	callstack 17
  6947   002C86                     
  6948                           ;mcc_generated_files/tmr3.c: 179:     if(TMR3_InterruptHandler)
  6949   002C86  5039               	movf	_TMR3_InterruptHandler^0,w,c
  6950   002C88  103A               	iorwf	(_TMR3_InterruptHandler+1)^0,w,c
  6951   002C8A  B4D8               	btfsc	status,2,c
  6952   002C8C  EF4A  F016         	goto	i2u60_41
  6953   002C90  EF4C  F016         	goto	i2u60_40
  6954   002C94                     i2u60_41:
  6955   002C94  EF59  F016         	goto	i2l493
  6956   002C98                     i2u60_40:
  6957   002C98                     
  6958                           ;mcc_generated_files/tmr3.c: 180:     {;mcc_generated_files/tmr3.c: 181:         TMR3_In
      +                          terruptHandler();
  6959   002C98  D802               	call	i2u61_48
  6960   002C9A  EF59  F016         	goto	i2u61_49
  6961   002C9E                     i2u61_48:
  6962   002C9E  0005               	push	
  6963   002CA0  6EFA               	movwf	pclath,c
  6964   002CA2  5039               	movf	_TMR3_InterruptHandler^0,w,c
  6965   002CA4  6EFD               	movwf	tosl,c
  6966   002CA6  503A               	movf	(_TMR3_InterruptHandler+1)^0,w,c
  6967   002CA8  6EFE               	movwf	tosh,c
  6968   002CAA  50F8               	movf	tblptru,w,c
  6969   002CAC  6EFF               	movwf	tosu,c
  6970   002CAE  50FA               	movf	pclath,w,c
  6971   002CB0  0012               	return		;indir
  6972   002CB2                     i2u61_49:
  6973   002CB2                     i2l493:
  6974   002CB2  0012               	return		;funcret
  6975   002CB4                     __end_of_TMR3_CallBack:
  6976                           	callstack 0
  6977                           
  6978 ;; *************** function _Clignotant_PWM *****************
  6979 ;; Defined at:
  6980 ;;		line 255 in file "main.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;		None
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;		None
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  1    wreg      void 
  6987 ;; Registers used:
  6988 ;;		wreg, status,2
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6998 ;;Total ram usage:        0 bytes
  6999 ;; Hardware stack levels used: 1
  7000 ;; This function calls:
  7001 ;;		Nothing
  7002 ;; This function is called by:
  7003 ;;		_main
  7004 ;;		_TMR3_CallBack
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           	psect	text46
  7009   002F20                     __ptext46:
  7010                           	callstack 0
  7011   002F20                     _Clignotant_PWM:
  7012                           	callstack 17
  7013   002F20                     
  7014                           ;main.c: 256:     pwm_Switch = !pwm_Switch;
  7015   002F20  5049               	movf	_pwm_Switch^0,w,c
  7016   002F22  B4D8               	btfsc	status,2,c
  7017   002F24  EF96  F017         	goto	i2u50_41
  7018   002F28  EF99  F017         	goto	i2u50_40
  7019   002F2C                     i2u50_41:
  7020   002F2C  0E01               	movlw	1
  7021   002F2E  EF9A  F017         	goto	i2u51_40
  7022   002F32                     i2u50_40:
  7023   002F32  0E00               	movlw	0
  7024   002F34                     i2u51_40:
  7025   002F34  6E49               	movwf	_pwm_Switch^0,c
  7026   002F36  0012               	return		;funcret
  7027   002F38                     __end_of_Clignotant_PWM:
  7028                           	callstack 0
  7029                           
  7030 ;; *************** function _TMR3_DefaultInterruptHandler *****************
  7031 ;; Defined at:
  7032 ;;		line 189 in file "mcc_generated_files/tmr3.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;		None
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;		None
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  1    wreg      void 
  7039 ;; Registers used:
  7040 ;;		None
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;Total ram usage:        0 bytes
  7051 ;; Hardware stack levels used: 1
  7052 ;; This function calls:
  7053 ;;		Nothing
  7054 ;; This function is called by:
  7055 ;;		_TMR3_Initialize
  7056 ;;		_TMR3_CallBack
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           	psect	text47
  7061   003006                     __ptext47:
  7062                           	callstack 0
  7063   003006                     _TMR3_DefaultInterruptHandler:
  7064                           	callstack 17
  7065   003006  0012               	return		;funcret
  7066   003008                     __end_of_TMR3_DefaultInterruptHandler:
  7067                           	callstack 0
  7068                           
  7069 ;; *************** function _TMR2_ISR *****************
  7070 ;; Defined at:
  7071 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;		None
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      void 
  7078 ;; Registers used:
  7079 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7089 ;;Total ram usage:        0 bytes
  7090 ;; Hardware stack levels used: 1
  7091 ;; Hardware stack levels required when called: 2
  7092 ;; This function calls:
  7093 ;;		_TMR2_CallBack
  7094 ;; This function is called by:
  7095 ;;		_INTERRUPT_InterruptManager
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           	psect	text48
  7100   002D96                     __ptext48:
  7101                           	callstack 0
  7102   002D96                     _TMR2_ISR:
  7103                           	callstack 17
  7104   002D96                     
  7105                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  7106   002D96  929E               	bcf	158,1,c	;volatile
  7107   002D98                     
  7108                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 38)
  7109   002D98  4A3D               	infsnz	TMR2_ISR@CountCallBack^0,f,c	;volatile
  7110   002D9A  2A3E               	incf	(TMR2_ISR@CountCallBack+1)^0,f,c	;volatile
  7111   002D9C  503E               	movf	(TMR2_ISR@CountCallBack+1)^0,w,c	;volatile
  7112   002D9E  E109               	bnz	i2u199_40
  7113   002DA0  0E26               	movlw	38
  7114   002DA2  5C3D               	subwf	TMR2_ISR@CountCallBack^0,w,c	;volatile
  7115   002DA4  A0D8               	btfss	status,0,c
  7116   002DA6  EFD7  F016         	goto	i2u199_41
  7117   002DAA  EFD9  F016         	goto	i2u199_40
  7118   002DAE                     i2u199_41:
  7119   002DAE  EFDF  F016         	goto	i2l995
  7120   002DB2                     i2u199_40:
  7121   002DB2                     
  7122                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  7123   002DB2  EC5A  F016         	call	_TMR2_CallBack	;wreg free
  7124   002DB6                     
  7125                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  7126   002DB6  0E00               	movlw	0
  7127   002DB8  6E3E               	movwf	(TMR2_ISR@CountCallBack+1)^0,c	;volatile
  7128   002DBA  0E00               	movlw	0
  7129   002DBC  6E3D               	movwf	TMR2_ISR@CountCallBack^0,c	;volatile
  7130   002DBE                     i2l995:
  7131   002DBE  0012               	return		;funcret
  7132   002DC0                     __end_of_TMR2_ISR:
  7133                           	callstack 0
  7134                           
  7135 ;; *************** function _TMR2_CallBack *****************
  7136 ;; Defined at:
  7137 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;		None
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;		None
  7142 ;; Return value:  Size  Location     Type
  7143 ;;                  1    wreg      void 
  7144 ;; Registers used:
  7145 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7146 ;; Tracked objects:
  7147 ;;		On entry : 0/0
  7148 ;;		On exit  : 0/0
  7149 ;;		Unchanged: 0/0
  7150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7155 ;;Total ram usage:        0 bytes
  7156 ;; Hardware stack levels used: 1
  7157 ;; Hardware stack levels required when called: 1
  7158 ;; This function calls:
  7159 ;;		Absolute function
  7160 ;;		_Lock_Blink
  7161 ;;		_TMR2_DefaultInterruptHandler
  7162 ;; This function is called by:
  7163 ;;		_TMR2_ISR
  7164 ;; This function uses a non-reentrant model
  7165 ;;
  7166                           
  7167                           	psect	text49
  7168   002CB4                     __ptext49:
  7169                           	callstack 0
  7170   002CB4                     _TMR2_CallBack:
  7171                           	callstack 17
  7172   002CB4                     
  7173                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  7174   002CB4  502B               	movf	_TMR2_InterruptHandler^0,w,c
  7175   002CB6  102C               	iorwf	(_TMR2_InterruptHandler+1)^0,w,c
  7176   002CB8  B4D8               	btfsc	status,2,c
  7177   002CBA  EF61  F016         	goto	i2u195_41
  7178   002CBE  EF63  F016         	goto	i2u195_40
  7179   002CC2                     i2u195_41:
  7180   002CC2  EF70  F016         	goto	i2l999
  7181   002CC6                     i2u195_40:
  7182   002CC6                     
  7183                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  7184   002CC6  D802               	call	i2u196_48
  7185   002CC8  EF70  F016         	goto	i2u196_49
  7186   002CCC                     i2u196_48:
  7187   002CCC  0005               	push	
  7188   002CCE  6EFA               	movwf	pclath,c
  7189   002CD0  502B               	movf	_TMR2_InterruptHandler^0,w,c
  7190   002CD2  6EFD               	movwf	tosl,c
  7191   002CD4  502C               	movf	(_TMR2_InterruptHandler+1)^0,w,c
  7192   002CD6  6EFE               	movwf	tosh,c
  7193   002CD8  50F8               	movf	tblptru,w,c
  7194   002CDA  6EFF               	movwf	tosu,c
  7195   002CDC  50FA               	movf	pclath,w,c
  7196   002CDE  0012               	return		;indir
  7197   002CE0                     i2u196_49:
  7198   002CE0                     i2l999:
  7199   002CE0  0012               	return		;funcret
  7200   002CE2                     __end_of_TMR2_CallBack:
  7201                           	callstack 0
  7202                           
  7203 ;; *************** function _Lock_Blink *****************
  7204 ;; Defined at:
  7205 ;;		line 237 in file "main.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;		None
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;		None
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      void 
  7212 ;; Registers used:
  7213 ;;		wreg, status,2, status,0
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7221 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7222 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7223 ;;Total ram usage:        1 bytes
  7224 ;; Hardware stack levels used: 1
  7225 ;; This function calls:
  7226 ;;		Nothing
  7227 ;; This function is called by:
  7228 ;;		_main
  7229 ;;		_TMR2_CallBack
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           	psect	text50
  7234   002750                     __ptext50:
  7235                           	callstack 0
  7236   002750                     _Lock_Blink:
  7237                           	callstack 17
  7238   002750                     
  7239                           ;main.c: 239:     if (cligneLock != vLock) {
  7240   002750  0100               	movlb	0	; () banked
  7241   002752  51EB               	movf	_vLock& (0+255),w,b
  7242   002754  184D               	xorwf	_cligneLock^0,w,c
  7243   002756  B4D8               	btfsc	status,2,c
  7244   002758  EFB0  F013         	goto	i2u176_41
  7245   00275C  EFB2  F013         	goto	i2u176_40
  7246   002760                     i2u176_41:
  7247   002760  EFB6  F013         	goto	i2l823
  7248   002764                     i2u176_40:
  7249   002764                     
  7250                           ; BSR set to: 0
  7251                           ;main.c: 240:         threeLock = 3 * 2;
  7252   002764  0E06               	movlw	6
  7253   002766  6E4C               	movwf	_threeLock^0,c
  7254   002768                     
  7255                           ; BSR set to: 0
  7256                           ;main.c: 241:         cligneLock = vLock;
  7257   002768  C0EB  F04D         	movff	_vLock,_cligneLock
  7258   00276C                     i2l823:
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;main.c: 244:     if ((threeLock) > 0) {
  7262   00276C  504C               	movf	_threeLock^0,w,c
  7263   00276E  B4D8               	btfsc	status,2,c
  7264   002770  EFBC  F013         	goto	i2u177_41
  7265   002774  EFBE  F013         	goto	i2u177_40
  7266   002778                     i2u177_41:
  7267   002778  EFE6  F013         	goto	i2l830
  7268   00277C                     i2u177_40:
  7269   00277C                     
  7270                           ; BSR set to: 0
  7271                           ;main.c: 245:         threeLock--;
  7272   00277C  064C               	decf	_threeLock^0,f,c
  7273   00277E                     
  7274                           ; BSR set to: 0
  7275   00277E  B48B               	btfsc	139,2,c	;volatile
  7276   002780  EFC4  F013         	goto	i2u178_41
  7277   002784  EFC7  F013         	goto	i2u178_40
  7278   002788                     i2u178_41:
  7279   002788  0E01               	movlw	1
  7280   00278A  EFC8  F013         	goto	i2u178_46
  7281   00278E                     i2u178_40:
  7282   00278E  0E00               	movlw	0
  7283   002790                     i2u178_46:
  7284   002790  0AFF               	xorlw	255
  7285   002792  6E01               	movwf	??_Lock_Blink^0,c
  7286   002794  4601               	rlncf	??_Lock_Blink^0,f,c
  7287   002796  4601               	rlncf	??_Lock_Blink^0,f,c
  7288   002798  508B               	movf	139,w,c	;volatile
  7289   00279A  1801               	xorwf	??_Lock_Blink^0,w,c
  7290   00279C  0BFB               	andlw	-5
  7291   00279E  1801               	xorwf	??_Lock_Blink^0,w,c
  7292   0027A0  6E8B               	movwf	139,c	;volatile
  7293   0027A2                     
  7294                           ; BSR set to: 0
  7295   0027A2  B68B               	btfsc	139,3,c	;volatile
  7296   0027A4  EFD6  F013         	goto	i2u179_41
  7297   0027A8  EFD9  F013         	goto	i2u179_40
  7298   0027AC                     i2u179_41:
  7299   0027AC  0E01               	movlw	1
  7300   0027AE  EFDA  F013         	goto	i2u179_46
  7301   0027B2                     i2u179_40:
  7302   0027B2  0E00               	movlw	0
  7303   0027B4                     i2u179_46:
  7304   0027B4  0AFF               	xorlw	255
  7305   0027B6  6E01               	movwf	??_Lock_Blink^0,c
  7306   0027B8  4601               	rlncf	??_Lock_Blink^0,f,c
  7307   0027BA  4601               	rlncf	??_Lock_Blink^0,f,c
  7308   0027BC  4601               	rlncf	??_Lock_Blink^0,f,c
  7309   0027BE  508B               	movf	139,w,c	;volatile
  7310   0027C0  1801               	xorwf	??_Lock_Blink^0,w,c
  7311   0027C2  0BF7               	andlw	-9
  7312   0027C4  1801               	xorwf	??_Lock_Blink^0,w,c
  7313   0027C6  6E8B               	movwf	139,c	;volatile
  7314   0027C8  EFE8  F013         	goto	i2l834
  7315   0027CC                     i2l830:
  7316                           
  7317                           ; BSR set to: 0
  7318   0027CC  948B               	bcf	139,2,c	;volatile
  7319   0027CE                     
  7320                           ; BSR set to: 0
  7321   0027CE  968B               	bcf	139,3,c	;volatile
  7322   0027D0                     i2l834:
  7323                           
  7324                           ; BSR set to: 0
  7325   0027D0  0012               	return		;funcret
  7326   0027D2                     __end_of_Lock_Blink:
  7327                           	callstack 0
  7328                           
  7329 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  7330 ;; Defined at:
  7331 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;		None
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;		None
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  1    wreg      void 
  7338 ;; Registers used:
  7339 ;;		None
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7349 ;;Total ram usage:        0 bytes
  7350 ;; Hardware stack levels used: 1
  7351 ;; This function calls:
  7352 ;;		Nothing
  7353 ;; This function is called by:
  7354 ;;		_TMR2_Initialize
  7355 ;;		_TMR2_CallBack
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359                           	psect	text51
  7360   003008                     __ptext51:
  7361                           	callstack 0
  7362   003008                     _TMR2_DefaultInterruptHandler:
  7363                           	callstack 17
  7364   003008  0012               	return		;funcret
  7365   00300A                     __end_of_TMR2_DefaultInterruptHandler:
  7366                           	callstack 0
  7367                           
  7368 ;; *************** function _TMR1_ISR *****************
  7369 ;; Defined at:
  7370 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  7371 ;; Parameters:    Size  Location     Type
  7372 ;;		None
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;		None
  7375 ;; Return value:  Size  Location     Type
  7376 ;;                  1    wreg      void 
  7377 ;; Registers used:
  7378 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7379 ;; Tracked objects:
  7380 ;;		On entry : 0/0
  7381 ;;		On exit  : 0/0
  7382 ;;		Unchanged: 0/0
  7383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7388 ;;Total ram usage:        0 bytes
  7389 ;; Hardware stack levels used: 1
  7390 ;; Hardware stack levels required when called: 2
  7391 ;; This function calls:
  7392 ;;		_TMR1_CallBack
  7393 ;;		_TMR1_WriteTimer
  7394 ;; This function is called by:
  7395 ;;		_INTERRUPT_InterruptManager
  7396 ;; This function uses a non-reentrant model
  7397 ;;
  7398                           
  7399                           	psect	text52
  7400   002F4E                     __ptext52:
  7401                           	callstack 0
  7402   002F4E                     _TMR1_ISR:
  7403                           	callstack 17
  7404   002F4E                     
  7405                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  7406   002F4E  909E               	bcf	158,0,c	;volatile
  7407   002F50                     
  7408                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  7409   002F50  C037  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  7410   002F54  C038  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  7411   002F58  EC1C  F017         	call	_TMR1_WriteTimer	;wreg free
  7412   002F5C                     
  7413                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  7414   002F5C  EC71  F016         	call	_TMR1_CallBack	;wreg free
  7415   002F60  0012               	return		;funcret
  7416   002F62                     __end_of_TMR1_ISR:
  7417                           	callstack 0
  7418                           
  7419 ;; *************** function _TMR1_CallBack *****************
  7420 ;; Defined at:
  7421 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;		None
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;		None
  7426 ;; Return value:  Size  Location     Type
  7427 ;;                  1    wreg      void 
  7428 ;; Registers used:
  7429 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7439 ;;Total ram usage:        0 bytes
  7440 ;; Hardware stack levels used: 1
  7441 ;; Hardware stack levels required when called: 1
  7442 ;; This function calls:
  7443 ;;		Absolute function
  7444 ;;		_TMR1_DefaultInterruptHandler
  7445 ;;		_TTCAN_20ms
  7446 ;; This function is called by:
  7447 ;;		_TMR1_ISR
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451                           	psect	text53
  7452   002CE2                     __ptext53:
  7453                           	callstack 0
  7454   002CE2                     _TMR1_CallBack:
  7455                           	callstack 17
  7456   002CE2                     
  7457                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  7458   002CE2  5035               	movf	_TMR1_InterruptHandler^0,w,c
  7459   002CE4  1036               	iorwf	(_TMR1_InterruptHandler+1)^0,w,c
  7460   002CE6  B4D8               	btfsc	status,2,c
  7461   002CE8  EF78  F016         	goto	i2u188_41
  7462   002CEC  EF7A  F016         	goto	i2u188_40
  7463   002CF0                     i2u188_41:
  7464   002CF0  EF87  F016         	goto	i2l558
  7465   002CF4                     i2u188_40:
  7466   002CF4                     
  7467                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  7468   002CF4  D802               	call	i2u189_48
  7469   002CF6  EF87  F016         	goto	i2u189_49
  7470   002CFA                     i2u189_48:
  7471   002CFA  0005               	push	
  7472   002CFC  6EFA               	movwf	pclath,c
  7473   002CFE  5035               	movf	_TMR1_InterruptHandler^0,w,c
  7474   002D00  6EFD               	movwf	tosl,c
  7475   002D02  5036               	movf	(_TMR1_InterruptHandler+1)^0,w,c
  7476   002D04  6EFE               	movwf	tosh,c
  7477   002D06  50F8               	movf	tblptru,w,c
  7478   002D08  6EFF               	movwf	tosu,c
  7479   002D0A  50FA               	movf	pclath,w,c
  7480   002D0C  0012               	return		;indir
  7481   002D0E                     i2u189_49:
  7482   002D0E                     i2l558:
  7483   002D0E  0012               	return		;funcret
  7484   002D10                     __end_of_TMR1_CallBack:
  7485                           	callstack 0
  7486                           
  7487 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  7488 ;; Defined at:
  7489 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;		None
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;		None
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  1    wreg      void 
  7496 ;; Registers used:
  7497 ;;		None
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7507 ;;Total ram usage:        0 bytes
  7508 ;; Hardware stack levels used: 1
  7509 ;; This function calls:
  7510 ;;		Nothing
  7511 ;; This function is called by:
  7512 ;;		_TMR1_Initialize
  7513 ;;		_TMR1_CallBack
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517                           	psect	text54
  7518   00300A                     __ptext54:
  7519                           	callstack 0
  7520   00300A                     _TMR1_DefaultInterruptHandler:
  7521                           	callstack 17
  7522   00300A  0012               	return		;funcret
  7523   00300C                     __end_of_TMR1_DefaultInterruptHandler:
  7524                           	callstack 0
  7525                           
  7526 ;; *************** function _TTCAN_20ms *****************
  7527 ;; Defined at:
  7528 ;;		line 386 in file "main.c"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;		None
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;		None
  7533 ;; Return value:  Size  Location     Type
  7534 ;;                  1    wreg      void 
  7535 ;; Registers used:
  7536 ;;		wreg, status,2, status,0
  7537 ;; Tracked objects:
  7538 ;;		On entry : 0/0
  7539 ;;		On exit  : 0/0
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7544 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7545 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7546 ;;Total ram usage:        1 bytes
  7547 ;; Hardware stack levels used: 1
  7548 ;; This function calls:
  7549 ;;		Nothing
  7550 ;; This function is called by:
  7551 ;;		_main
  7552 ;;		_TMR1_CallBack
  7553 ;; This function uses a non-reentrant model
  7554 ;;
  7555                           
  7556                           	psect	text55
  7557   002D6A                     __ptext55:
  7558                           	callstack 0
  7559   002D6A                     _TTCAN_20ms:
  7560                           	callstack 17
  7561   002D6A                     
  7562                           ;main.c: 387:     compteurTTCAN++;
  7563   002D6A  0100               	movlb	0	; () banked
  7564   002D6C  4BE4               	infsnz	_compteurTTCAN& (0+255),f,b
  7565   002D6E  2BE5               	incf	(_compteurTTCAN+1)& (0+255),f,b
  7566   002D70                     
  7567                           ; BSR set to: 0
  7568   002D70  BA89               	btfsc	137,5,c	;volatile
  7569   002D72  EFBD  F016         	goto	i2u180_41
  7570   002D76  EFC0  F016         	goto	i2u180_40
  7571   002D7A                     i2u180_41:
  7572   002D7A  0E01               	movlw	1
  7573   002D7C  EFC1  F016         	goto	i2u180_46
  7574   002D80                     i2u180_40:
  7575   002D80  0E00               	movlw	0
  7576   002D82                     i2u180_46:
  7577   002D82  0AFF               	xorlw	255
  7578   002D84  6E01               	movwf	??_TTCAN_20ms^0,c
  7579   002D86  3A01               	swapf	??_TTCAN_20ms^0,f,c
  7580   002D88  4601               	rlncf	??_TTCAN_20ms^0,f,c
  7581   002D8A  5089               	movf	137,w,c	;volatile
  7582   002D8C  1801               	xorwf	??_TTCAN_20ms^0,w,c
  7583   002D8E  0BDF               	andlw	-33
  7584   002D90  1801               	xorwf	??_TTCAN_20ms^0,w,c
  7585   002D92  6E89               	movwf	137,c	;volatile
  7586   002D94                     
  7587                           ; BSR set to: 0
  7588   002D94  0012               	return		;funcret
  7589   002D96                     __end_of_TTCAN_20ms:
  7590                           	callstack 0
  7591                           
  7592 ;; *************** function _PIN_MANAGER_IOC *****************
  7593 ;; Defined at:
  7594 ;;		line 94 in file "mcc_generated_files/pin_manager.c"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;		None
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;		None
  7599 ;; Return value:  Size  Location     Type
  7600 ;;                  1    wreg      void 
  7601 ;; Registers used:
  7602 ;;		None
  7603 ;; Tracked objects:
  7604 ;;		On entry : 0/0
  7605 ;;		On exit  : 0/0
  7606 ;;		Unchanged: 0/0
  7607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7612 ;;Total ram usage:        0 bytes
  7613 ;; Hardware stack levels used: 1
  7614 ;; This function calls:
  7615 ;;		Nothing
  7616 ;; This function is called by:
  7617 ;;		_INTERRUPT_InterruptManager
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621                           	psect	text56
  7622   002FFE                     __ptext56:
  7623                           	callstack 0
  7624   002FFE                     _PIN_MANAGER_IOC:
  7625                           	callstack 19
  7626   002FFE                     
  7627                           ;mcc_generated_files/pin_manager.c: 97:     INTCONbits.RBIF = 0;
  7628   002FFE  90F2               	bcf	242,0,c	;volatile
  7629   003000  0012               	return		;funcret
  7630   003002                     __end_of_PIN_MANAGER_IOC:
  7631                           	callstack 0
  7632                           
  7633 ;; *************** function _INT0_ISR *****************
  7634 ;; Defined at:
  7635 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;		None
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;		None
  7640 ;; Return value:  Size  Location     Type
  7641 ;;                  1    wreg      void 
  7642 ;; Registers used:
  7643 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7644 ;; Tracked objects:
  7645 ;;		On entry : 0/0
  7646 ;;		On exit  : 0/0
  7647 ;;		Unchanged: 0/0
  7648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7653 ;;Total ram usage:        0 bytes
  7654 ;; Hardware stack levels used: 1
  7655 ;; Hardware stack levels required when called: 2
  7656 ;; This function calls:
  7657 ;;		_INT0_CallBack
  7658 ;; This function is called by:
  7659 ;;		_INTERRUPT_InterruptManager
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663                           	psect	text57
  7664   002FEA                     __ptext57:
  7665                           	callstack 0
  7666   002FEA                     _INT0_ISR:
  7667                           	callstack 17
  7668   002FEA                     
  7669                           ;mcc_generated_files/ext_int.c: 34:     (INTCONbits.INT0IF = 0);
  7670   002FEA  92F2               	bcf	242,1,c	;volatile
  7671   002FEC                     
  7672                           ;mcc_generated_files/ext_int.c: 37:     INT0_CallBack();
  7673   002FEC  EC88  F016         	call	_INT0_CallBack	;wreg free
  7674   002FF0  0012               	return		;funcret
  7675   002FF2                     __end_of_INT0_ISR:
  7676                           	callstack 0
  7677                           
  7678 ;; *************** function _INT0_CallBack *****************
  7679 ;; Defined at:
  7680 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  7681 ;; Parameters:    Size  Location     Type
  7682 ;;		None
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;		None
  7685 ;; Return value:  Size  Location     Type
  7686 ;;                  1    wreg      void 
  7687 ;; Registers used:
  7688 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7689 ;; Tracked objects:
  7690 ;;		On entry : 0/0
  7691 ;;		On exit  : 0/0
  7692 ;;		Unchanged: 0/0
  7693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7698 ;;Total ram usage:        0 bytes
  7699 ;; Hardware stack levels used: 1
  7700 ;; Hardware stack levels required when called: 1
  7701 ;; This function calls:
  7702 ;;		Absolute function
  7703 ;;		_GetADC_LuxINT
  7704 ;;		_INT0_DefaultInterruptHandler
  7705 ;; This function is called by:
  7706 ;;		_INT0_ISR
  7707 ;; This function uses a non-reentrant model
  7708 ;;
  7709                           
  7710                           	psect	text58
  7711   002D10                     __ptext58:
  7712                           	callstack 0
  7713   002D10                     _INT0_CallBack:
  7714                           	callstack 17
  7715   002D10                     
  7716                           ;mcc_generated_files/ext_int.c: 44:     if(INT0_InterruptHandler)
  7717   002D10  502D               	movf	_INT0_InterruptHandler^0,w,c
  7718   002D12  102E               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
  7719   002D14  B4D8               	btfsc	status,2,c
  7720   002D16  EF8F  F016         	goto	i2u190_41
  7721   002D1A  EF91  F016         	goto	i2u190_40
  7722   002D1E                     i2u190_41:
  7723   002D1E  EF9E  F016         	goto	i2l673
  7724   002D22                     i2u190_40:
  7725   002D22                     
  7726                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          0_InterruptHandler();
  7727   002D22  D802               	call	i2u191_48
  7728   002D24  EF9E  F016         	goto	i2u191_49
  7729   002D28                     i2u191_48:
  7730   002D28  0005               	push	
  7731   002D2A  6EFA               	movwf	pclath,c
  7732   002D2C  502D               	movf	_INT0_InterruptHandler^0,w,c
  7733   002D2E  6EFD               	movwf	tosl,c
  7734   002D30  502E               	movf	(_INT0_InterruptHandler+1)^0,w,c
  7735   002D32  6EFE               	movwf	tosh,c
  7736   002D34  50F8               	movf	tblptru,w,c
  7737   002D36  6EFF               	movwf	tosu,c
  7738   002D38  50FA               	movf	pclath,w,c
  7739   002D3A  0012               	return		;indir
  7740   002D3C                     i2u191_49:
  7741   002D3C                     i2l673:
  7742   002D3C  0012               	return		;funcret
  7743   002D3E                     __end_of_INT0_CallBack:
  7744                           	callstack 0
  7745                           
  7746 ;; *************** function _GetADC_LuxINT *****************
  7747 ;; Defined at:
  7748 ;;		line 394 in file "main.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;		None
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;		None
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  1    wreg      void 
  7755 ;; Registers used:
  7756 ;;		wreg, status,2
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7766 ;;Total ram usage:        0 bytes
  7767 ;; Hardware stack levels used: 1
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		_main
  7772 ;;		_INT0_CallBack
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           	psect	text59
  7777   002FF2                     __ptext59:
  7778                           	callstack 0
  7779   002FF2                     _GetADC_LuxINT:
  7780                           	callstack 17
  7781   002FF2                     
  7782                           ;main.c: 395:     test_Lux_Int = 1;
  7783   002FF2  0E01               	movlw	1
  7784   002FF4  0100               	movlb	0	; () banked
  7785   002FF6  6FE7               	movwf	_test_Lux_Int& (0+255),b
  7786   002FF8                     
  7787                           ; BSR set to: 0
  7788   002FF8  0012               	return		;funcret
  7789   002FFA                     __end_of_GetADC_LuxINT:
  7790                           	callstack 0
  7791                           
  7792 ;; *************** function _INT0_DefaultInterruptHandler *****************
  7793 ;; Defined at:
  7794 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;		None
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;		None
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  1    wreg      void 
  7801 ;; Registers used:
  7802 ;;		None
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7812 ;;Total ram usage:        0 bytes
  7813 ;; Hardware stack levels used: 1
  7814 ;; This function calls:
  7815 ;;		Nothing
  7816 ;; This function is called by:
  7817 ;;		_EXT_INT_Initialize
  7818 ;;		_INT0_CallBack
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           	psect	text60
  7823   00300C                     __ptext60:
  7824                           	callstack 0
  7825   00300C                     _INT0_DefaultInterruptHandler:
  7826                           	callstack 17
  7827   00300C  0012               	return		;funcret
  7828   00300E                     __end_of_INT0_DefaultInterruptHandler:
  7829                           	callstack 0
  7830                           
  7831 ;; *************** function _ECAN_WAKI_ISR *****************
  7832 ;; Defined at:
  7833 ;;		line 461 in file "mcc_generated_files/ecan.c"
  7834 ;; Parameters:    Size  Location     Type
  7835 ;;		None
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;		None
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  1    wreg      void 
  7840 ;; Registers used:
  7841 ;;		wreg, pcl, pclath, pclatu, tosl, cstack
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7851 ;;Total ram usage:        0 bytes
  7852 ;; Hardware stack levels used: 1
  7853 ;; Hardware stack levels required when called: 1
  7854 ;; This function calls:
  7855 ;;		Absolute function
  7856 ;;		_WakeUpDefaultInterruptHandler
  7857 ;; This function is called by:
  7858 ;;		_INTERRUPT_InterruptManager
  7859 ;; This function uses a non-reentrant model
  7860 ;;
  7861                           
  7862                           	psect	text61
  7863   002ECC                     __ptext61:
  7864                           	callstack 0
  7865   002ECC                     _ECAN_WAKI_ISR:
  7866                           	callstack 18
  7867   002ECC                     
  7868                           ;mcc_generated_files/ecan.c: 463:     WakeUpInterruptHandler();
  7869   002ECC  D802               	call	i2u71_48
  7870   002ECE  EF73  F017         	goto	i2u71_49
  7871   002ED2                     i2u71_48:
  7872   002ED2  0005               	push	
  7873   002ED4  6EFA               	movwf	pclath,c
  7874   002ED6  5041               	movf	_WakeUpInterruptHandler^0,w,c
  7875   002ED8  6EFD               	movwf	tosl,c
  7876   002EDA  5042               	movf	(_WakeUpInterruptHandler+1)^0,w,c
  7877   002EDC  6EFE               	movwf	tosh,c
  7878   002EDE  50F8               	movf	tblptru,w,c
  7879   002EE0  6EFF               	movwf	tosu,c
  7880   002EE2  50FA               	movf	pclath,w,c
  7881   002EE4  0012               	return		;indir
  7882   002EE6                     i2u71_49:
  7883   002EE6                     
  7884                           ;mcc_generated_files/ecan.c: 464:     PIR5bits.WAKIF = 0;
  7885   002EE6  9C77               	bcf	119,6,c	;volatile
  7886   002EE8  0012               	return		;funcret
  7887   002EEA                     __end_of_ECAN_WAKI_ISR:
  7888                           	callstack 0
  7889                           
  7890 ;; *************** function _WakeUpDefaultInterruptHandler *****************
  7891 ;; Defined at:
  7892 ;;		line 65 in file "mcc_generated_files/ecan.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;		None
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;		None
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  1    wreg      void 
  7899 ;; Registers used:
  7900 ;;		None
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7910 ;;Total ram usage:        0 bytes
  7911 ;; Hardware stack levels used: 1
  7912 ;; This function calls:
  7913 ;;		Nothing
  7914 ;; This function is called by:
  7915 ;;		_ECAN_Initialize
  7916 ;;		_ECAN_WAKI_ISR
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           	psect	text62
  7921   00300E                     __ptext62:
  7922                           	callstack 0
  7923   00300E                     _WakeUpDefaultInterruptHandler:
  7924                           	callstack 18
  7925   00300E  0012               	return		;funcret
  7926   003010                     __end_of_WakeUpDefaultInterruptHandler:
  7927                           	callstack 0
  7928                           
  7929 ;; *************** function _ECAN_RXB0I_ISR *****************
  7930 ;; Defined at:
  7931 ;;		line 450 in file "mcc_generated_files/ecan.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;		None
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;		None
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  1    wreg      void 
  7938 ;; Registers used:
  7939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7949 ;;Total ram usage:        0 bytes
  7950 ;; Hardware stack levels used: 1
  7951 ;; Hardware stack levels required when called: 3
  7952 ;; This function calls:
  7953 ;;		Absolute function
  7954 ;;		_RXB0DefaultInterruptHandler
  7955 ;;		_receptionTTCAN
  7956 ;; This function is called by:
  7957 ;;		_INTERRUPT_InterruptManager
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           	psect	text63
  7962   002EEA                     __ptext63:
  7963                           	callstack 0
  7964   002EEA                     _ECAN_RXB0I_ISR:
  7965                           	callstack 16
  7966   002EEA                     
  7967                           ;mcc_generated_files/ecan.c: 452:     RXB0InterruptHandler();
  7968   002EEA  D802               	call	i2u197_48
  7969   002EEC  EF82  F017         	goto	i2u197_49
  7970   002EF0                     i2u197_48:
  7971   002EF0  0005               	push	
  7972   002EF2  6EFA               	movwf	pclath,c
  7973   002EF4  5043               	movf	_RXB0InterruptHandler^0,w,c
  7974   002EF6  6EFD               	movwf	tosl,c
  7975   002EF8  5044               	movf	(_RXB0InterruptHandler+1)^0,w,c
  7976   002EFA  6EFE               	movwf	tosh,c
  7977   002EFC  50F8               	movf	tblptru,w,c
  7978   002EFE  6EFF               	movwf	tosu,c
  7979   002F00  50FA               	movf	pclath,w,c
  7980   002F02  0012               	return		;indir
  7981   002F04                     i2u197_49:
  7982   002F04                     
  7983                           ;mcc_generated_files/ecan.c: 453:     PIR5bits.RXB0IF = 0;
  7984   002F04  9077               	bcf	119,0,c	;volatile
  7985   002F06  0012               	return		;funcret
  7986   002F08                     __end_of_ECAN_RXB0I_ISR:
  7987                           	callstack 0
  7988                           
  7989 ;; *************** function _RXB0DefaultInterruptHandler *****************
  7990 ;; Defined at:
  7991 ;;		line 64 in file "mcc_generated_files/ecan.c"
  7992 ;; Parameters:    Size  Location     Type
  7993 ;;		None
  7994 ;; Auto vars:     Size  Location     Type
  7995 ;;		None
  7996 ;; Return value:  Size  Location     Type
  7997 ;;                  1    wreg      void 
  7998 ;; Registers used:
  7999 ;;		None
  8000 ;; Tracked objects:
  8001 ;;		On entry : 0/0
  8002 ;;		On exit  : 0/0
  8003 ;;		Unchanged: 0/0
  8004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8009 ;;Total ram usage:        0 bytes
  8010 ;; Hardware stack levels used: 1
  8011 ;; This function calls:
  8012 ;;		Nothing
  8013 ;; This function is called by:
  8014 ;;		_ECAN_Initialize
  8015 ;;		_ECAN_RXB0I_ISR
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019                           	psect	text64
  8020   003010                     __ptext64:
  8021                           	callstack 0
  8022   003010                     _RXB0DefaultInterruptHandler:
  8023                           	callstack 18
  8024   003010  0012               	return		;funcret
  8025   003012                     __end_of_RXB0DefaultInterruptHandler:
  8026                           	callstack 0
  8027                           
  8028 ;; *************** function _receptionTTCAN *****************
  8029 ;; Defined at:
  8030 ;;		line 373 in file "main.c"
  8031 ;; Parameters:    Size  Location     Type
  8032 ;;		None
  8033 ;; Auto vars:     Size  Location     Type
  8034 ;;  Message_recu   14   22[COMRAM] struct .
  8035 ;; Return value:  Size  Location     Type
  8036 ;;                  1    wreg      void 
  8037 ;; Registers used:
  8038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8039 ;; Tracked objects:
  8040 ;;		On entry : 0/0
  8041 ;;		On exit  : 0/0
  8042 ;;		Unchanged: 0/0
  8043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8045 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8046 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8047 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8048 ;;Total ram usage:       15 bytes
  8049 ;; Hardware stack levels used: 1
  8050 ;; Hardware stack levels required when called: 2
  8051 ;; This function calls:
  8052 ;;		_CAN_receive
  8053 ;;		_TMR1_Reload
  8054 ;; This function is called by:
  8055 ;;		_main
  8056 ;;		_ECAN_RXB0I_ISR
  8057 ;; This function uses a non-reentrant model
  8058 ;;
  8059                           
  8060                           	psect	text65
  8061   00284A                     __ptext65:
  8062                           	callstack 0
  8063   00284A                     _receptionTTCAN:
  8064                           	callstack 16
  8065   00284A                     
  8066                           ;main.c: 374:     uCAN_MSG Message_recu;;main.c: 375:     CAN_receive(&Message_recu);
  8067   00284A  0E17               	movlw	low receptionTTCAN@Message_recu
  8068   00284C  6E14               	movwf	CAN_receive@tempCanMsg^0,c
  8069   00284E  0E00               	movlw	high receptionTTCAN@Message_recu
  8070   002850  6E15               	movwf	(CAN_receive@tempCanMsg+1)^0,c
  8071   002852  EC87  F00D         	call	_CAN_receive	;wreg free
  8072   002856                     
  8073                           ;main.c: 377:     if (Message_recu.frame.id == 0x00) {
  8074   002856  5018               	movf	(receptionTTCAN@Message_recu+1)^0,w,c
  8075   002858  1019               	iorwf	(receptionTTCAN@Message_recu+2)^0,w,c
  8076   00285A  101A               	iorwf	(receptionTTCAN@Message_recu+3)^0,w,c
  8077   00285C  101B               	iorwf	(receptionTTCAN@Message_recu+4)^0,w,c
  8078   00285E  A4D8               	btfss	status,2,c
  8079   002860  EF34  F014         	goto	i2u192_41
  8080   002864  EF36  F014         	goto	i2u192_40
  8081   002868                     i2u192_41:
  8082   002868  EF51  F014         	goto	i2l3894
  8083   00286C                     i2u192_40:
  8084   00286C                     
  8085                           ;main.c: 378:         compteurTTCAN = 0;
  8086   00286C  0E00               	movlw	0
  8087   00286E  0100               	movlb	0	; () banked
  8088   002870  6FE5               	movwf	(_compteurTTCAN+1)& (0+255),b
  8089   002872  0E00               	movlw	0
  8090   002874  6FE4               	movwf	_compteurTTCAN& (0+255),b
  8091   002876                     
  8092                           ; BSR set to: 0
  8093   002876  BA89               	btfsc	137,5,c	;volatile
  8094   002878  EF40  F014         	goto	i2u193_41
  8095   00287C  EF43  F014         	goto	i2u193_40
  8096   002880                     i2u193_41:
  8097   002880  0E01               	movlw	1
  8098   002882  EF44  F014         	goto	i2u193_46
  8099   002886                     i2u193_40:
  8100   002886  0E00               	movlw	0
  8101   002888                     i2u193_46:
  8102   002888  0AFF               	xorlw	255
  8103   00288A  6E16               	movwf	??_receptionTTCAN^0,c
  8104   00288C  3A16               	swapf	??_receptionTTCAN^0,f,c
  8105   00288E  4616               	rlncf	??_receptionTTCAN^0,f,c
  8106   002890  5089               	movf	137,w,c	;volatile
  8107   002892  1816               	xorwf	??_receptionTTCAN^0,w,c
  8108   002894  0BDF               	andlw	-33
  8109   002896  1816               	xorwf	??_receptionTTCAN^0,w,c
  8110   002898  6E89               	movwf	137,c	;volatile
  8111   00289A                     
  8112                           ; BSR set to: 0
  8113                           ;main.c: 380:         TMR1_Reload();
  8114   00289A  ECC1  F017         	call	_TMR1_Reload	;wreg free
  8115                           
  8116                           ;main.c: 381:     } else {
  8117   00289E  EF5A  F014         	goto	i2l940
  8118   0028A2                     i2l3894:
  8119                           
  8120                           ;main.c: 382:         Lux_EXT_Rx = Message_recu;
  8121   0028A2  EE20  F017         	lfsr	2,receptionTTCAN@Message_recu
  8122   0028A6  EE10  F0CE         	lfsr	1,_Lux_EXT_Rx
  8123   0028AA  0E0D               	movlw	13
  8124   0028AC                     i2u194_41:
  8125   0028AC  CFDB FFE3          	movff	plusw2,plusw1
  8126   0028B0  06E8               	decf	wreg,f,c
  8127   0028B2  E2FC               	bc	i2u194_41
  8128   0028B4                     i2l940:
  8129   0028B4  0012               	return		;funcret
  8130   0028B6                     __end_of_receptionTTCAN:
  8131                           	callstack 0
  8132                           
  8133 ;; *************** function _TMR1_Reload *****************
  8134 ;; Defined at:
  8135 ;;		line 142 in file "mcc_generated_files/tmr1.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;		None
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;		None
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1    wreg      void 
  8142 ;; Registers used:
  8143 ;;		wreg, status,2, cstack
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8153 ;;Total ram usage:        0 bytes
  8154 ;; Hardware stack levels used: 1
  8155 ;; Hardware stack levels required when called: 1
  8156 ;; This function calls:
  8157 ;;		_TMR1_WriteTimer
  8158 ;; This function is called by:
  8159 ;;		_receptionTTCAN
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text66
  8164   002F82                     __ptext66:
  8165                           	callstack 0
  8166   002F82                     _TMR1_Reload:
  8167                           	callstack 16
  8168   002F82                     
  8169                           ;mcc_generated_files/tmr1.c: 144:     TMR1_WriteTimer(timer1ReloadVal);
  8170   002F82  C037  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  8171   002F86  C038  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  8172   002F8A  EC1C  F017         	call	_TMR1_WriteTimer	;wreg free
  8173   002F8E  0012               	return		;funcret
  8174   002F90                     __end_of_TMR1_Reload:
  8175                           	callstack 0
  8176                           
  8177 ;; *************** function _TMR1_WriteTimer *****************
  8178 ;; Defined at:
  8179 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;  timerVal        2    0[COMRAM] unsigned short 
  8182 ;; Auto vars:     Size  Location     Type
  8183 ;;		None
  8184 ;; Return value:  Size  Location     Type
  8185 ;;                  1    wreg      void 
  8186 ;; Registers used:
  8187 ;;		wreg, status,2
  8188 ;; Tracked objects:
  8189 ;;		On entry : 0/0
  8190 ;;		On exit  : 0/0
  8191 ;;		Unchanged: 0/0
  8192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8196 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8197 ;;Total ram usage:        2 bytes
  8198 ;; Hardware stack levels used: 1
  8199 ;; This function calls:
  8200 ;;		Nothing
  8201 ;; This function is called by:
  8202 ;;		_TMR1_Reload
  8203 ;;		_TMR1_ISR
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           
  8207                           	psect	text67
  8208   002E38                     __ptext67:
  8209                           	callstack 0
  8210   002E38                     _TMR1_WriteTimer:
  8211                           	callstack 18
  8212   002E38                     
  8213                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  8214   002E38  A4CD               	btfss	205,2,c	;volatile
  8215   002E3A  EF21  F017         	goto	i2u165_41
  8216   002E3E  EF23  F017         	goto	i2u165_40
  8217   002E42                     i2u165_41:
  8218   002E42  EF2B  F017         	goto	i2l3514
  8219   002E46                     i2u165_40:
  8220   002E46                     
  8221                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  8222   002E46  90CD               	bcf	205,0,c	;volatile
  8223   002E48                     
  8224                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  8225   002E48  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  8226   002E4A  6ECF               	movwf	207,c	;volatile
  8227   002E4C                     
  8228                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  8229   002E4C  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  8230   002E50                     
  8231                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  8232   002E50  80CD               	bsf	205,0,c	;volatile
  8233                           
  8234                           ;mcc_generated_files/tmr1.c: 133:     }
  8235   002E52  EF2F  F017         	goto	i2l542
  8236   002E56                     i2l3514:
  8237                           
  8238                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  8239   002E56  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  8240   002E58  6ECF               	movwf	207,c	;volatile
  8241   002E5A                     
  8242                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  8243   002E5A  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  8244   002E5E                     i2l542:
  8245   002E5E  0012               	return		;funcret
  8246   002E60                     __end_of_TMR1_WriteTimer:
  8247                           	callstack 0
  8248                           
  8249 ;; *************** function _CAN_receive *****************
  8250 ;; Defined at:
  8251 ;;		line 249 in file "mcc_generated_files/ecan.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;  tempCanMsg      2   19[COMRAM] PTR struct .
  8254 ;;		 -> receptionTTCAN@Message_recu(14), 
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;  returnValue     1    0        unsigned char 
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  1    wreg      unsigned char 
  8259 ;; Registers used:
  8260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8270 ;;Total ram usage:        2 bytes
  8271 ;; Hardware stack levels used: 1
  8272 ;; Hardware stack levels required when called: 1
  8273 ;; This function calls:
  8274 ;;		_convertReg2ExtendedCANid
  8275 ;;		_convertReg2StandardCANid
  8276 ;; This function is called by:
  8277 ;;		_receptionTTCAN
  8278 ;; This function uses a non-reentrant model
  8279 ;;
  8280                           
  8281                           	psect	text68
  8282   001B0E                     __ptext68:
  8283                           	callstack 0
  8284   001B0E                     _CAN_receive:
  8285                           	callstack 16
  8286   001B0E                     
  8287                           ;mcc_generated_files/ecan.c: 254:     if (RXB0CONbits.RXFUL != 0)
  8288   001B0E  AE60               	btfss	96,7,c	;volatile
  8289   001B10  EF8C  F00D         	goto	i2u172_41
  8290   001B14  EF8E  F00D         	goto	i2u172_40
  8291   001B18                     i2u172_41:
  8292   001B18  EF18  F00E         	goto	i2l352
  8293   001B1C                     i2u172_40:
  8294   001B1C                     
  8295                           ;mcc_generated_files/ecan.c: 255:     {;mcc_generated_files/ecan.c: 256:         if ((RX
      +                          B0SIDL & 0x08) == 0x08)
  8296   001B1C  A662               	btfss	98,3,c	;volatile
  8297   001B1E  EF93  F00D         	goto	i2u173_41
  8298   001B22  EF95  F00D         	goto	i2u173_40
  8299   001B26                     i2u173_41:
  8300   001B26  EFB4  F00D         	goto	i2l3638
  8301   001B2A                     i2u173_40:
  8302   001B2A                     
  8303                           ;mcc_generated_files/ecan.c: 257:         {;mcc_generated_files/ecan.c: 259:            
      +                           tempCanMsg->frame.idType = (uint8_t) 2;
  8304   001B2A  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  8305   001B2E  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  8306   001B32  0E02               	movlw	2
  8307   001B34  6EDF               	movwf	indf2,c
  8308   001B36                     
  8309                           ;mcc_generated_files/ecan.c: 260:             tempCanMsg->frame.id = convertReg2Extended
      +                          CANid(RXB0EIDH, RXB0EIDL, RXB0SIDH, RXB0SIDL);
  8310   001B36  CF64 F001          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  8311   001B3A  CF61 F002          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  8312   001B3E  CF62 F003          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  8313   001B42  5063               	movf	99,w,c	;volatile
  8314   001B44  EC0D  F011         	call	_convertReg2ExtendedCANid
  8315   001B48  EE20 F001          	lfsr	2,1
  8316   001B4C  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8317   001B4E  26D9               	addwf	fsr2l,f,c
  8318   001B50  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8319   001B52  22DA               	addwfc	fsr2h,f,c
  8320   001B54  C001  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  8321   001B58  C002  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  8322   001B5C  C003  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  8323   001B60  C004  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  8324                           
  8325                           ;mcc_generated_files/ecan.c: 261:         }
  8326   001B64  EFCD  F00D         	goto	i2l3642
  8327   001B68                     i2l3638:
  8328                           
  8329                           ;mcc_generated_files/ecan.c: 263:         {;mcc_generated_files/ecan.c: 265:            
      +                           tempCanMsg->frame.idType = (uint8_t) 1;
  8330   001B68  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  8331   001B6C  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  8332   001B70  0E01               	movlw	1
  8333   001B72  6EDF               	movwf	indf2,c
  8334   001B74                     
  8335                           ;mcc_generated_files/ecan.c: 266:             tempCanMsg->frame.id = convertReg2Standard
      +                          CANid(RXB0SIDH, RXB0SIDL);
  8336   001B74  CF62 F001          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  8337   001B78  5061               	movf	97,w,c	;volatile
  8338   001B7A  ECE9  F013         	call	_convertReg2StandardCANid
  8339   001B7E  EE20 F001          	lfsr	2,1
  8340   001B82  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8341   001B84  26D9               	addwf	fsr2l,f,c
  8342   001B86  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8343   001B88  22DA               	addwfc	fsr2h,f,c
  8344   001B8A  C001  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  8345   001B8E  C002  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  8346   001B92  C003  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  8347   001B96  C004  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  8348   001B9A                     i2l3642:
  8349                           
  8350                           ;mcc_generated_files/ecan.c: 269:         tempCanMsg->frame.dlc = RXB0DLC;
  8351   001B9A  EE20 F005          	lfsr	2,5
  8352   001B9E  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8353   001BA0  26D9               	addwf	fsr2l,f,c
  8354   001BA2  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8355   001BA4  22DA               	addwfc	fsr2h,f,c
  8356   001BA6  CF65 FFDF          	movff	3941,indf2	;volatile
  8357   001BAA                     
  8358                           ;mcc_generated_files/ecan.c: 270:         tempCanMsg->frame.data0 = RXB0D0;
  8359   001BAA  EE20 F006          	lfsr	2,6
  8360   001BAE  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8361   001BB0  26D9               	addwf	fsr2l,f,c
  8362   001BB2  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8363   001BB4  22DA               	addwfc	fsr2h,f,c
  8364   001BB6  CF66 FFDF          	movff	3942,indf2	;volatile
  8365   001BBA                     
  8366                           ;mcc_generated_files/ecan.c: 271:         tempCanMsg->frame.data1 = RXB0D1;
  8367   001BBA  EE20 F007          	lfsr	2,7
  8368   001BBE  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8369   001BC0  26D9               	addwf	fsr2l,f,c
  8370   001BC2  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8371   001BC4  22DA               	addwfc	fsr2h,f,c
  8372   001BC6  CF67 FFDF          	movff	3943,indf2	;volatile
  8373   001BCA                     
  8374                           ;mcc_generated_files/ecan.c: 272:         tempCanMsg->frame.data2 = RXB0D2;
  8375   001BCA  EE20 F008          	lfsr	2,8
  8376   001BCE  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8377   001BD0  26D9               	addwf	fsr2l,f,c
  8378   001BD2  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8379   001BD4  22DA               	addwfc	fsr2h,f,c
  8380   001BD6  CF68 FFDF          	movff	3944,indf2	;volatile
  8381   001BDA                     
  8382                           ;mcc_generated_files/ecan.c: 273:         tempCanMsg->frame.data3 = RXB0D3;
  8383   001BDA  EE20 F009          	lfsr	2,9
  8384   001BDE  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8385   001BE0  26D9               	addwf	fsr2l,f,c
  8386   001BE2  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8387   001BE4  22DA               	addwfc	fsr2h,f,c
  8388   001BE6  CF69 FFDF          	movff	3945,indf2	;volatile
  8389   001BEA                     
  8390                           ;mcc_generated_files/ecan.c: 274:         tempCanMsg->frame.data4 = RXB0D4;
  8391   001BEA  EE20 F00A          	lfsr	2,10
  8392   001BEE  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8393   001BF0  26D9               	addwf	fsr2l,f,c
  8394   001BF2  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8395   001BF4  22DA               	addwfc	fsr2h,f,c
  8396   001BF6  CF6A FFDF          	movff	3946,indf2	;volatile
  8397   001BFA                     
  8398                           ;mcc_generated_files/ecan.c: 275:         tempCanMsg->frame.data5 = RXB0D5;
  8399   001BFA  EE20 F00B          	lfsr	2,11
  8400   001BFE  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8401   001C00  26D9               	addwf	fsr2l,f,c
  8402   001C02  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8403   001C04  22DA               	addwfc	fsr2h,f,c
  8404   001C06  CF6B FFDF          	movff	3947,indf2	;volatile
  8405   001C0A                     
  8406                           ;mcc_generated_files/ecan.c: 276:         tempCanMsg->frame.data6 = RXB0D6;
  8407   001C0A  EE20 F00C          	lfsr	2,12
  8408   001C0E  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8409   001C10  26D9               	addwf	fsr2l,f,c
  8410   001C12  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8411   001C14  22DA               	addwfc	fsr2h,f,c
  8412   001C16  CF6C FFDF          	movff	3948,indf2	;volatile
  8413   001C1A                     
  8414                           ;mcc_generated_files/ecan.c: 277:         tempCanMsg->frame.data7 = RXB0D7;
  8415   001C1A  EE20 F00D          	lfsr	2,13
  8416   001C1E  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8417   001C20  26D9               	addwf	fsr2l,f,c
  8418   001C22  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8419   001C24  22DA               	addwfc	fsr2h,f,c
  8420   001C26  CF6D FFDF          	movff	3949,indf2	;volatile
  8421   001C2A                     
  8422                           ;mcc_generated_files/ecan.c: 278:         RXB0CONbits.RXFUL = 0;
  8423   001C2A  9E60               	bcf	96,7,c	;volatile
  8424   001C2C                     i2l3662:
  8425                           
  8426                           ;mcc_generated_files/ecan.c: 280:     }
  8427   001C2C  EFAB  F00E         	goto	i2l359
  8428   001C30                     i2l352:
  8429   001C30  010F               	movlb	15	; () banked
  8430   001C32  AF30               	btfss	48,7,b	;volatile
  8431   001C34  EF1E  F00E         	goto	i2u174_41
  8432   001C38  EF20  F00E         	goto	i2u174_40
  8433   001C3C                     i2u174_41:
  8434   001C3C  EFAB  F00E         	goto	i2l359
  8435   001C40                     i2u174_40:
  8436   001C40                     
  8437                           ; BSR set to: 15
  8438                           ;mcc_generated_files/ecan.c: 282:     {;mcc_generated_files/ecan.c: 283:         if ((RX
      +                          B1SIDL & 0x08) == 0x08)
  8439   001C40  A732               	btfss	50,3,b	;volatile
  8440   001C42  EF25  F00E         	goto	i2u175_41
  8441   001C46  EF27  F00E         	goto	i2u175_40
  8442   001C4A                     i2u175_41:
  8443   001C4A  EF46  F00E         	goto	i2l3670
  8444   001C4E                     i2u175_40:
  8445   001C4E                     
  8446                           ; BSR set to: 15
  8447                           ;mcc_generated_files/ecan.c: 284:         {;mcc_generated_files/ecan.c: 286:            
      +                           tempCanMsg->frame.idType = (uint8_t) 2;
  8448   001C4E  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  8449   001C52  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  8450   001C56  0E02               	movlw	2
  8451   001C58  6EDF               	movwf	indf2,c
  8452   001C5A                     
  8453                           ; BSR set to: 15
  8454                           ;mcc_generated_files/ecan.c: 287:             tempCanMsg->frame.id = convertReg2Extended
      +                          CANid(RXB1EIDH, RXB1EIDL, RXB1SIDH, RXB1SIDL);
  8455   001C5A  CF34 F001          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  8456   001C5E  CF31 F002          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  8457   001C62  CF32 F003          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  8458   001C66  5133               	movf	51,w,b	;volatile
  8459   001C68  EC0D  F011         	call	_convertReg2ExtendedCANid
  8460   001C6C  EE20 F001          	lfsr	2,1
  8461   001C70  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8462   001C72  26D9               	addwf	fsr2l,f,c
  8463   001C74  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8464   001C76  22DA               	addwfc	fsr2h,f,c
  8465   001C78  C001  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  8466   001C7C  C002  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  8467   001C80  C003  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  8468   001C84  C004  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  8469                           
  8470                           ;mcc_generated_files/ecan.c: 288:         }
  8471   001C88  EF5F  F00E         	goto	i2l3674
  8472   001C8C                     i2l3670:
  8473                           
  8474                           ; BSR set to: 15
  8475                           ;mcc_generated_files/ecan.c: 290:         {;mcc_generated_files/ecan.c: 292:            
      +                           tempCanMsg->frame.idType = (uint8_t) 1;
  8476   001C8C  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  8477   001C90  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  8478   001C94  0E01               	movlw	1
  8479   001C96  6EDF               	movwf	indf2,c
  8480   001C98                     
  8481                           ; BSR set to: 15
  8482                           ;mcc_generated_files/ecan.c: 293:             tempCanMsg->frame.id = convertReg2Standard
      +                          CANid(RXB1SIDH, RXB1SIDL);
  8483   001C98  CF32 F001          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  8484   001C9C  5131               	movf	49,w,b	;volatile
  8485   001C9E  ECE9  F013         	call	_convertReg2StandardCANid
  8486   001CA2  EE20 F001          	lfsr	2,1
  8487   001CA6  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8488   001CA8  26D9               	addwf	fsr2l,f,c
  8489   001CAA  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8490   001CAC  22DA               	addwfc	fsr2h,f,c
  8491   001CAE  C001  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  8492   001CB2  C002  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  8493   001CB6  C003  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  8494   001CBA  C004  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  8495   001CBE                     i2l3674:
  8496                           
  8497                           ;mcc_generated_files/ecan.c: 296:         tempCanMsg->frame.dlc = RXB1DLC;
  8498   001CBE  EE20 F005          	lfsr	2,5
  8499   001CC2  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8500   001CC4  26D9               	addwf	fsr2l,f,c
  8501   001CC6  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8502   001CC8  22DA               	addwfc	fsr2h,f,c
  8503   001CCA  CF35 FFDF          	movff	3893,indf2	;volatile
  8504   001CCE                     
  8505                           ;mcc_generated_files/ecan.c: 297:         tempCanMsg->frame.data0 = RXB1D0;
  8506   001CCE  EE20 F006          	lfsr	2,6
  8507   001CD2  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8508   001CD4  26D9               	addwf	fsr2l,f,c
  8509   001CD6  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8510   001CD8  22DA               	addwfc	fsr2h,f,c
  8511   001CDA  CF36 FFDF          	movff	3894,indf2	;volatile
  8512   001CDE                     
  8513                           ;mcc_generated_files/ecan.c: 298:         tempCanMsg->frame.data1 = RXB1D1;
  8514   001CDE  EE20 F007          	lfsr	2,7
  8515   001CE2  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8516   001CE4  26D9               	addwf	fsr2l,f,c
  8517   001CE6  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8518   001CE8  22DA               	addwfc	fsr2h,f,c
  8519   001CEA  CF37 FFDF          	movff	3895,indf2	;volatile
  8520   001CEE                     
  8521                           ;mcc_generated_files/ecan.c: 299:         tempCanMsg->frame.data2 = RXB1D2;
  8522   001CEE  EE20 F008          	lfsr	2,8
  8523   001CF2  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8524   001CF4  26D9               	addwf	fsr2l,f,c
  8525   001CF6  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8526   001CF8  22DA               	addwfc	fsr2h,f,c
  8527   001CFA  CF38 FFDF          	movff	3896,indf2	;volatile
  8528   001CFE                     
  8529                           ;mcc_generated_files/ecan.c: 300:         tempCanMsg->frame.data3 = RXB1D3;
  8530   001CFE  EE20 F009          	lfsr	2,9
  8531   001D02  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8532   001D04  26D9               	addwf	fsr2l,f,c
  8533   001D06  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8534   001D08  22DA               	addwfc	fsr2h,f,c
  8535   001D0A  CF39 FFDF          	movff	3897,indf2	;volatile
  8536   001D0E                     
  8537                           ;mcc_generated_files/ecan.c: 301:         tempCanMsg->frame.data4 = RXB1D4;
  8538   001D0E  EE20 F00A          	lfsr	2,10
  8539   001D12  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8540   001D14  26D9               	addwf	fsr2l,f,c
  8541   001D16  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8542   001D18  22DA               	addwfc	fsr2h,f,c
  8543   001D1A  CF3A FFDF          	movff	3898,indf2	;volatile
  8544   001D1E                     
  8545                           ;mcc_generated_files/ecan.c: 302:         tempCanMsg->frame.data5 = RXB1D5;
  8546   001D1E  EE20 F00B          	lfsr	2,11
  8547   001D22  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8548   001D24  26D9               	addwf	fsr2l,f,c
  8549   001D26  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8550   001D28  22DA               	addwfc	fsr2h,f,c
  8551   001D2A  CF3B FFDF          	movff	3899,indf2	;volatile
  8552   001D2E                     
  8553                           ;mcc_generated_files/ecan.c: 303:         tempCanMsg->frame.data6 = RXB1D6;
  8554   001D2E  EE20 F00C          	lfsr	2,12
  8555   001D32  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8556   001D34  26D9               	addwf	fsr2l,f,c
  8557   001D36  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8558   001D38  22DA               	addwfc	fsr2h,f,c
  8559   001D3A  CF3C FFDF          	movff	3900,indf2	;volatile
  8560   001D3E                     
  8561                           ;mcc_generated_files/ecan.c: 304:         tempCanMsg->frame.data7 = RXB1D7;
  8562   001D3E  EE20 F00D          	lfsr	2,13
  8563   001D42  5014               	movf	CAN_receive@tempCanMsg^0,w,c
  8564   001D44  26D9               	addwf	fsr2l,f,c
  8565   001D46  5015               	movf	(CAN_receive@tempCanMsg+1)^0,w,c
  8566   001D48  22DA               	addwfc	fsr2h,f,c
  8567   001D4A  CF3D FFDF          	movff	3901,indf2	;volatile
  8568   001D4E                     
  8569                           ;mcc_generated_files/ecan.c: 305:         RXB1CONbits.RXFUL = 0;
  8570   001D4E  010F               	movlb	15	; () banked
  8571   001D50  9F30               	bcf	48,7,b	;volatile
  8572   001D52  EF16  F00E         	goto	i2l3662
  8573   001D56                     i2l359:
  8574   001D56  0012               	return		;funcret
  8575   001D58                     __end_of_CAN_receive:
  8576                           	callstack 0
  8577                           
  8578 ;; *************** function _convertReg2StandardCANid *****************
  8579 ;; Defined at:
  8580 ;;		line 395 in file "mcc_generated_files/ecan.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;  tempRXBn_SID    1    wreg     unsigned char 
  8583 ;;  tempRXBn_SID    1    0[COMRAM] unsigned char 
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;  tempRXBn_SID    1    6[COMRAM] unsigned char 
  8586 ;;  ConvertedID     4   11[COMRAM] unsigned long 
  8587 ;;  returnValue     4    7[COMRAM] unsigned long 
  8588 ;; Return value:  Size  Location     Type
  8589 ;;                  4    0[COMRAM] unsigned long 
  8590 ;; Registers used:
  8591 ;;		wreg, status,2, status,0
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8597 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8598 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8599 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8600 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8601 ;;Total ram usage:       15 bytes
  8602 ;; Hardware stack levels used: 1
  8603 ;; This function calls:
  8604 ;;		Nothing
  8605 ;; This function is called by:
  8606 ;;		_CAN_receive
  8607 ;; This function uses a non-reentrant model
  8608 ;;
  8609                           
  8610                           	psect	text69
  8611   0027D2                     __ptext69:
  8612                           	callstack 0
  8613   0027D2                     _convertReg2StandardCANid:
  8614                           	callstack 16
  8615                           
  8616                           ;incstack = 0
  8617                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
  8618   0027D2  6E07               	movwf	convertReg2StandardCANid@tempRXBn_SIDH^0,c
  8619   0027D4                     
  8620                           ;mcc_generated_files/ecan.c: 398:     uint32_t ConvertedID;;mcc_generated_files/ecan.c: 
      +                          402:     ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  8621   0027D4  5007               	movf	convertReg2StandardCANid@tempRXBn_SIDH^0,w,c
  8622   0027D6  6E05               	movwf	??_convertReg2StandardCANid^0,c
  8623   0027D8  6A06               	clrf	(??_convertReg2StandardCANid+1)^0,c
  8624   0027DA  90D8               	bcf	status,0,c
  8625   0027DC  3605               	rlcf	??_convertReg2StandardCANid^0,f,c
  8626   0027DE  3606               	rlcf	(??_convertReg2StandardCANid+1)^0,f,c
  8627   0027E0  90D8               	bcf	status,0,c
  8628   0027E2  3605               	rlcf	??_convertReg2StandardCANid^0,f,c
  8629   0027E4  3606               	rlcf	(??_convertReg2StandardCANid+1)^0,f,c
  8630   0027E6  90D8               	bcf	status,0,c
  8631   0027E8  3605               	rlcf	??_convertReg2StandardCANid^0,f,c
  8632   0027EA  3606               	rlcf	(??_convertReg2StandardCANid+1)^0,f,c
  8633   0027EC  C005  F00C         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
  8634   0027F0  C006  F00D         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
  8635   0027F4  0E00               	movlw	0
  8636   0027F6  BE0D               	btfsc	(convertReg2StandardCANid@ConvertedID+1)^0,7,c
  8637   0027F8  0EFF               	movlw	-1
  8638   0027FA  6E0E               	movwf	(convertReg2StandardCANid@ConvertedID+2)^0,c
  8639   0027FC  6E0F               	movwf	(convertReg2StandardCANid@ConvertedID+3)^0,c
  8640   0027FE                     
  8641                           ;mcc_generated_files/ecan.c: 403:     ConvertedID = ConvertedID + (uint32_t)(tempRXBn_SI
      +                          DL >> 5);
  8642   0027FE  C001  F005         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
  8643   002802  0E05               	movlw	5
  8644   002804  6E06               	movwf	(??_convertReg2StandardCANid+1)^0,c
  8645   002806                     i2u164_45:
  8646   002806  90D8               	bcf	status,0,c
  8647   002808  3205               	rrcf	??_convertReg2StandardCANid^0,f,c
  8648   00280A  2E06               	decfsz	(??_convertReg2StandardCANid+1)^0,f,c
  8649   00280C  EF03  F014         	goto	i2u164_45
  8650   002810  5005               	movf	??_convertReg2StandardCANid^0,w,c
  8651   002812  240C               	addwf	convertReg2StandardCANid@ConvertedID^0,w,c
  8652   002814  6E0C               	movwf	convertReg2StandardCANid@ConvertedID^0,c
  8653   002816  0E00               	movlw	0
  8654   002818  200D               	addwfc	(convertReg2StandardCANid@ConvertedID+1)^0,w,c
  8655   00281A  6E0D               	movwf	(convertReg2StandardCANid@ConvertedID+1)^0,c
  8656   00281C  0E00               	movlw	0
  8657   00281E  200E               	addwfc	(convertReg2StandardCANid@ConvertedID+2)^0,w,c
  8658   002820  6E0E               	movwf	(convertReg2StandardCANid@ConvertedID+2)^0,c
  8659   002822  0E00               	movlw	0
  8660   002824  200F               	addwfc	(convertReg2StandardCANid@ConvertedID+3)^0,w,c
  8661   002826  6E0F               	movwf	(convertReg2StandardCANid@ConvertedID+3)^0,c
  8662   002828                     
  8663                           ;mcc_generated_files/ecan.c: 404:     returnValue = ConvertedID;
  8664   002828  C00C  F008         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
  8665   00282C  C00D  F009         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
  8666   002830  C00E  F00A         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
  8667   002834  C00F  F00B         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
  8668   002838                     
  8669                           ;mcc_generated_files/ecan.c: 405:     return (returnValue);
  8670   002838  C008  F001         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
  8671   00283C  C009  F002         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
  8672   002840  C00A  F003         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
  8673   002844  C00B  F004         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
  8674   002848  0012               	return		;funcret
  8675   00284A                     __end_of_convertReg2StandardCANid:
  8676                           	callstack 0
  8677                           
  8678 ;; *************** function _convertReg2ExtendedCANid *****************
  8679 ;; Defined at:
  8680 ;;		line 374 in file "mcc_generated_files/ecan.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;  tempRXBn_EID    1    wreg     unsigned char 
  8683 ;;  tempRXBn_EID    1    0[COMRAM] unsigned char 
  8684 ;;  tempRXBn_SID    1    1[COMRAM] unsigned char 
  8685 ;;  tempRXBn_SID    1    2[COMRAM] unsigned char 
  8686 ;; Auto vars:     Size  Location     Type
  8687 ;;  tempRXBn_EID    1    8[COMRAM] unsigned char 
  8688 ;;  ConvertedID     4   15[COMRAM] unsigned long 
  8689 ;;  returnValue     4    9[COMRAM] unsigned long 
  8690 ;;  CAN_standard    1   14[COMRAM] unsigned char 
  8691 ;;  CAN_standard    1   13[COMRAM] unsigned char 
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  4    0[COMRAM] unsigned long 
  8694 ;; Registers used:
  8695 ;;		wreg, status,2, status,0
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8701 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8702 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8703 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8704 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8705 ;;Total ram usage:       19 bytes
  8706 ;; Hardware stack levels used: 1
  8707 ;; This function calls:
  8708 ;;		Nothing
  8709 ;; This function is called by:
  8710 ;;		_CAN_receive
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714                           	psect	text70
  8715   00221A                     __ptext70:
  8716                           	callstack 0
  8717   00221A                     _convertReg2ExtendedCANid:
  8718                           	callstack 16
  8719                           
  8720                           ;incstack = 0
  8721                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
  8722   00221A  6E09               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH^0,c
  8723   00221C                     
  8724                           ;mcc_generated_files/ecan.c: 377:     uint32_t ConvertedID = 0;
  8725   00221C  0E00               	movlw	0
  8726   00221E  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  8727   002220  0E00               	movlw	0
  8728   002222  6E11               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  8729   002224  0E00               	movlw	0
  8730   002226  6E12               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  8731   002228  0E00               	movlw	0
  8732   00222A  6E13               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  8733   00222C                     
  8734                           ;mcc_generated_files/ecan.c: 378:     uint8_t CAN_standardLo_ID_lo2bits;;mcc_generated_f
      +                          iles/ecan.c: 379:     uint8_t CAN_standardLo_ID_hi3bits;;mcc_generated_files/ecan.c: 381
      +                          :     CAN_standardLo_ID_lo2bits = (uint8_t)(tempRXBn_SIDL & 0x03);
  8735   00222C  5003               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL^0,w,c
  8736   00222E  0B03               	andlw	3
  8737   002230  6E0E               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits^0,c
  8738   002232                     
  8739                           ;mcc_generated_files/ecan.c: 382:     CAN_standardLo_ID_hi3bits = (uint8_t)(tempRXBn_SID
      +                          L >> 5);
  8740   002232  3803               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL^0,w,c
  8741   002234  42E8               	rrncf	wreg,f,c
  8742   002236  0B07               	andlw	7
  8743   002238  6E0F               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits^0,c
  8744   00223A                     
  8745                           ;mcc_generated_files/ecan.c: 383:     ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  8746   00223A  5002               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH^0,w,c
  8747   00223C  6E05               	movwf	??_convertReg2ExtendedCANid^0,c
  8748   00223E  6A06               	clrf	(??_convertReg2ExtendedCANid+1)^0,c
  8749   002240  90D8               	bcf	status,0,c
  8750   002242  3605               	rlcf	??_convertReg2ExtendedCANid^0,f,c
  8751   002244  3606               	rlcf	(??_convertReg2ExtendedCANid+1)^0,f,c
  8752   002246  90D8               	bcf	status,0,c
  8753   002248  3605               	rlcf	??_convertReg2ExtendedCANid^0,f,c
  8754   00224A  3606               	rlcf	(??_convertReg2ExtendedCANid+1)^0,f,c
  8755   00224C  90D8               	bcf	status,0,c
  8756   00224E  3605               	rlcf	??_convertReg2ExtendedCANid^0,f,c
  8757   002250  3606               	rlcf	(??_convertReg2ExtendedCANid+1)^0,f,c
  8758   002252  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  8759   002256  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  8760   00225A  0E00               	movlw	0
  8761   00225C  BE11               	btfsc	(convertReg2ExtendedCANid@ConvertedID+1)^0,7,c
  8762   00225E  0EFF               	movlw	-1
  8763   002260  6E12               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  8764   002262  6E13               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  8765   002264                     
  8766                           ;mcc_generated_files/ecan.c: 384:     ConvertedID = ConvertedID + CAN_standardLo_ID_hi3b
      +                          its;
  8767   002264  500F               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits^0,w,c
  8768   002266  2410               	addwf	convertReg2ExtendedCANid@ConvertedID^0,w,c
  8769   002268  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  8770   00226A  0E00               	movlw	0
  8771   00226C  2011               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)^0,w,c
  8772   00226E  6E11               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  8773   002270  0E00               	movlw	0
  8774   002272  2012               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)^0,w,c
  8775   002274  6E12               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  8776   002276  0E00               	movlw	0
  8777   002278  2013               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)^0,w,c
  8778   00227A  6E13               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  8779   00227C                     
  8780                           ;mcc_generated_files/ecan.c: 385:     ConvertedID = (ConvertedID << 2);
  8781   00227C  C010  F005         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
  8782   002280  C011  F006         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
  8783   002284  C012  F007         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
  8784   002288  C013  F008         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
  8785   00228C  0E02               	movlw	2
  8786   00228E                     i2u163_45:
  8787   00228E  90D8               	bcf	status,0,c
  8788   002290  3605               	rlcf	??_convertReg2ExtendedCANid^0,f,c
  8789   002292  3606               	rlcf	(??_convertReg2ExtendedCANid+1)^0,f,c
  8790   002294  3607               	rlcf	(??_convertReg2ExtendedCANid+2)^0,f,c
  8791   002296  3608               	rlcf	(??_convertReg2ExtendedCANid+3)^0,f,c
  8792   002298  2EE8               	decfsz	wreg,f,c
  8793   00229A  EF47  F011         	goto	i2u163_45
  8794   00229E  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  8795   0022A2  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  8796   0022A6  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  8797   0022AA  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  8798   0022AE                     
  8799                           ;mcc_generated_files/ecan.c: 386:     ConvertedID = ConvertedID + CAN_standardLo_ID_lo2b
      +                          its;
  8800   0022AE  500E               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits^0,w,c
  8801   0022B0  2410               	addwf	convertReg2ExtendedCANid@ConvertedID^0,w,c
  8802   0022B2  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  8803   0022B4  0E00               	movlw	0
  8804   0022B6  2011               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)^0,w,c
  8805   0022B8  6E11               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  8806   0022BA  0E00               	movlw	0
  8807   0022BC  2012               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)^0,w,c
  8808   0022BE  6E12               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  8809   0022C0  0E00               	movlw	0
  8810   0022C2  2013               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)^0,w,c
  8811   0022C4  6E13               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  8812                           
  8813                           ;mcc_generated_files/ecan.c: 387:     ConvertedID = (ConvertedID << 8);
  8814   0022C6  C010  F006         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  8815   0022CA  C011  F007         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  8816   0022CE  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  8817   0022D2  6A05               	clrf	??_convertReg2ExtendedCANid^0,c
  8818   0022D4  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  8819   0022D8  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  8820   0022DC  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  8821   0022E0  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  8822   0022E4                     
  8823                           ;mcc_generated_files/ecan.c: 388:     ConvertedID = ConvertedID + tempRXBn_EIDH;
  8824   0022E4  5009               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH^0,w,c
  8825   0022E6  2410               	addwf	convertReg2ExtendedCANid@ConvertedID^0,w,c
  8826   0022E8  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  8827   0022EA  0E00               	movlw	0
  8828   0022EC  2011               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)^0,w,c
  8829   0022EE  6E11               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  8830   0022F0  0E00               	movlw	0
  8831   0022F2  2012               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)^0,w,c
  8832   0022F4  6E12               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  8833   0022F6  0E00               	movlw	0
  8834   0022F8  2013               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)^0,w,c
  8835   0022FA  6E13               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  8836   0022FC                     
  8837                           ;mcc_generated_files/ecan.c: 389:     ConvertedID = (ConvertedID << 8);
  8838   0022FC  C010  F006         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  8839   002300  C011  F007         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  8840   002304  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  8841   002308  6A05               	clrf	??_convertReg2ExtendedCANid^0,c
  8842   00230A  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  8843   00230E  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  8844   002312  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  8845   002316  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  8846                           
  8847                           ;mcc_generated_files/ecan.c: 390:     ConvertedID = ConvertedID + tempRXBn_EIDL;
  8848   00231A  5001               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL^0,w,c
  8849   00231C  2410               	addwf	convertReg2ExtendedCANid@ConvertedID^0,w,c
  8850   00231E  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID^0,c
  8851   002320  0E00               	movlw	0
  8852   002322  2011               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)^0,w,c
  8853   002324  6E11               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)^0,c
  8854   002326  0E00               	movlw	0
  8855   002328  2012               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)^0,w,c
  8856   00232A  6E12               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)^0,c
  8857   00232C  0E00               	movlw	0
  8858   00232E  2013               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)^0,w,c
  8859   002330  6E13               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)^0,c
  8860   002332                     
  8861                           ;mcc_generated_files/ecan.c: 391:     returnValue = ConvertedID;
  8862   002332  C010  F00A         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
  8863   002336  C011  F00B         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
  8864   00233A  C012  F00C         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
  8865   00233E  C013  F00D         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
  8866   002342                     
  8867                           ;mcc_generated_files/ecan.c: 392:     return (returnValue);
  8868   002342  C00A  F001         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
  8869   002346  C00B  F002         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
  8870   00234A  C00C  F003         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
  8871   00234E  C00D  F004         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
  8872   002352  0012               	return		;funcret
  8873   002354                     __end_of_convertReg2ExtendedCANid:
  8874                           	callstack 0
  8875                           
  8876                           	psect	text71
  8877   000000                     __ptext71:
  8878                           	callstack 0
  8879   000000                     
  8880                           	psect	rparam
  8881   000000                     
  8882                           	psect	temp
  8883   00004E                     btemp:
  8884                           	callstack 0
  8885   00004E                     	ds	1
  8886   000000                     int$flags	set	btemp
  8887   000000                     wtemp8	set	btemp+1
  8888   000000                     ttemp5	set	btemp+1
  8889   000000                     ttemp6	set	btemp+4
  8890   000000                     ttemp7	set	btemp+8
  8891                           
  8892                           	psect	idloc
  8893                           
  8894                           ;Config register IDLOC0 @ 0x200000
  8895                           ;	unspecified, using default values
  8896   200000                     	org	2097152
  8897   200000  FF                 	db	255
  8898                           
  8899                           ;Config register IDLOC1 @ 0x200001
  8900                           ;	unspecified, using default values
  8901   200001                     	org	2097153
  8902   200001  FF                 	db	255
  8903                           
  8904                           ;Config register IDLOC2 @ 0x200002
  8905                           ;	unspecified, using default values
  8906   200002                     	org	2097154
  8907   200002  FF                 	db	255
  8908                           
  8909                           ;Config register IDLOC3 @ 0x200003
  8910                           ;	unspecified, using default values
  8911   200003                     	org	2097155
  8912   200003  FF                 	db	255
  8913                           
  8914                           ;Config register IDLOC4 @ 0x200004
  8915                           ;	unspecified, using default values
  8916   200004                     	org	2097156
  8917   200004  FF                 	db	255
  8918                           
  8919                           ;Config register IDLOC5 @ 0x200005
  8920                           ;	unspecified, using default values
  8921   200005                     	org	2097157
  8922   200005  FF                 	db	255
  8923                           
  8924                           ;Config register IDLOC6 @ 0x200006
  8925                           ;	unspecified, using default values
  8926   200006                     	org	2097158
  8927   200006  FF                 	db	255
  8928                           
  8929                           ;Config register IDLOC7 @ 0x200007
  8930                           ;	unspecified, using default values
  8931   200007                     	org	2097159
  8932   200007  FF                 	db	255
  8933                           
  8934                           	psect	config
  8935                           
  8936                           ;Config register CONFIG1L @ 0x300000
  8937                           ;	VREG Sleep Enable bit
  8938                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
  8939                           ;	LF-INTOSC Low-power Enable bit
  8940                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  8941                           ;	SOSC Power Selection and mode Configuration bits
  8942                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  8943                           ;	Extended Instruction Set
  8944                           ;	XINST = OFF, Disabled
  8945   300000                     	org	3145728
  8946   300000  15                 	db	21
  8947                           
  8948                           ;Config register CONFIG1H @ 0x300001
  8949                           ;	Oscillator
  8950                           ;	FOSC = HS2, HS oscillator (High power, 16 MHz - 25 MHz)
  8951                           ;	PLL x4 Enable bit
  8952                           ;	PLLCFG = OFF, Disabled
  8953                           ;	Fail-Safe Clock Monitor
  8954                           ;	FCMEN = OFF, Disabled
  8955                           ;	Internal External Oscillator Switch Over Mode
  8956                           ;	IESO = OFF, Disabled
  8957   300001                     	org	3145729
  8958   300001  02                 	db	2
  8959                           
  8960                           ;Config register CONFIG2L @ 0x300002
  8961                           ;	Power Up Timer
  8962                           ;	PWRTEN = OFF, Disabled
  8963                           ;	Brown Out Detect
  8964                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
  8965                           ;	Brown-out Reset Voltage bits
  8966                           ;	BORV = 3, 1.8V
  8967                           ;	BORMV Power level
  8968                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  8969   300002                     	org	3145730
  8970   300002  7F                 	db	127
  8971                           
  8972                           ;Config register CONFIG2H @ 0x300003
  8973                           ;	Watchdog Timer
  8974                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  8975                           ;	Watchdog Postscaler
  8976                           ;	WDTPS = 1048576, 1:1048576
  8977   300003                     	org	3145731
  8978   300003  7C                 	db	124
  8979                           
  8980                           ; Padding undefined space
  8981   300004                     	org	3145732
  8982   300004  FF                 	db	255
  8983                           
  8984                           ;Config register CONFIG3H @ 0x300005
  8985                           ;	ECAN Mux bit
  8986                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
  8987                           ;	MSSP address masking
  8988                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
  8989                           ;	Master Clear Enable
  8990                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
  8991   300005                     	org	3145733
  8992   300005  89                 	db	137
  8993                           
  8994                           ;Config register CONFIG4L @ 0x300006
  8995                           ;	Stack Overflow Reset
  8996                           ;	STVREN = ON, Enabled
  8997                           ;	Boot Block Size
  8998                           ;	BBSIZ = BB2K, 2K word Boot Block size
  8999   300006                     	org	3145734
  9000   300006  91                 	db	145
  9001                           
  9002                           ; Padding undefined space
  9003   300007                     	org	3145735
  9004   300007  FF                 	db	255
  9005                           
  9006                           ;Config register CONFIG5L @ 0x300008
  9007                           ;	Code Protect 00800-01FFF
  9008                           ;	CP0 = OFF, Disabled
  9009                           ;	Code Protect 02000-03FFF
  9010                           ;	CP1 = OFF, Disabled
  9011                           ;	Code Protect 04000-05FFF
  9012                           ;	CP2 = OFF, Disabled
  9013                           ;	Code Protect 06000-07FFF
  9014                           ;	CP3 = OFF, Disabled
  9015   300008                     	org	3145736
  9016   300008  0F                 	db	15
  9017                           
  9018                           ;Config register CONFIG5H @ 0x300009
  9019                           ;	Code Protect Boot
  9020                           ;	CPB = OFF, Disabled
  9021                           ;	Data EE Read Protect
  9022                           ;	CPD = OFF, Disabled
  9023   300009                     	org	3145737
  9024   300009  C0                 	db	192
  9025                           
  9026                           ;Config register CONFIG6L @ 0x30000A
  9027                           ;	Table Write Protect 00800-01FFF
  9028                           ;	WRT0 = OFF, Disabled
  9029                           ;	Table Write Protect 02000-03FFF
  9030                           ;	WRT1 = OFF, Disabled
  9031                           ;	Table Write Protect 04000-05FFF
  9032                           ;	WRT2 = OFF, Disabled
  9033                           ;	Table Write Protect 06000-07FFF
  9034                           ;	WRT3 = OFF, Disabled
  9035   30000A                     	org	3145738
  9036   30000A  0F                 	db	15
  9037                           
  9038                           ;Config register CONFIG6H @ 0x30000B
  9039                           ;	Config. Write Protect
  9040                           ;	WRTC = OFF, Disabled
  9041                           ;	Table Write Protect Boot
  9042                           ;	WRTB = OFF, Disabled
  9043                           ;	Data EE Write Protect
  9044                           ;	WRTD = OFF, Disabled
  9045   30000B                     	org	3145739
  9046   30000B  E0                 	db	224
  9047                           
  9048                           ;Config register CONFIG7L @ 0x30000C
  9049                           ;	Table Read Protect 00800-01FFF
  9050                           ;	EBTR0 = OFF, Disabled
  9051                           ;	Table Read Protect 02000-03FFF
  9052                           ;	EBTR1 = OFF, Disabled
  9053                           ;	Table Read Protect 04000-05FFF
  9054                           ;	EBTR2 = OFF, Disabled
  9055                           ;	Table Read Protect 06000-07FFF
  9056                           ;	EBTR3 = OFF, Disabled
  9057   30000C                     	org	3145740
  9058   30000C  0F                 	db	15
  9059                           
  9060                           ;Config register CONFIG7H @ 0x30000D
  9061                           ;	Table Read Protect Boot
  9062                           ;	EBTRB = OFF, Disabled
  9063   30000D                     	org	3145741
  9064   30000D  40                 	db	64
  9065                           tosu	equ	0xFFF
  9066                           tosh	equ	0xFFE
  9067                           tosl	equ	0xFFD
  9068                           stkptr	equ	0xFFC
  9069                           pclatu	equ	0xFFB
  9070                           pclath	equ	0xFFA
  9071                           pcl	equ	0xFF9
  9072                           tblptru	equ	0xFF8
  9073                           tblptrh	equ	0xFF7
  9074                           tblptrl	equ	0xFF6
  9075                           tablat	equ	0xFF5
  9076                           prodh	equ	0xFF4
  9077                           prodl	equ	0xFF3
  9078                           indf0	equ	0xFEF
  9079                           postinc0	equ	0xFEE
  9080                           postdec0	equ	0xFED
  9081                           preinc0	equ	0xFEC
  9082                           plusw0	equ	0xFEB
  9083                           fsr0h	equ	0xFEA
  9084                           fsr0l	equ	0xFE9
  9085                           wreg	equ	0xFE8
  9086                           indf1	equ	0xFE7
  9087                           postinc1	equ	0xFE6
  9088                           postdec1	equ	0xFE5
  9089                           preinc1	equ	0xFE4
  9090                           plusw1	equ	0xFE3
  9091                           fsr1h	equ	0xFE2
  9092                           fsr1l	equ	0xFE1
  9093                           bsr	equ	0xFE0
  9094                           indf2	equ	0xFDF
  9095                           postinc2	equ	0xFDE
  9096                           postdec2	equ	0xFDD
  9097                           preinc2	equ	0xFDC
  9098                           plusw2	equ	0xFDB
  9099                           fsr2h	equ	0xFDA
  9100                           fsr2l	equ	0xFD9
  9101                           status	equ	0xFD8

Data Sizes:
    Strings     152
    Constant    0
    Data        3
    BSS         94
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      77
    BANK0           160    110     158
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2769$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S2769$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 65
		 -> STR_4(CODE[35]), STR_3(CODE[52]), STR_2(CODE[52]), STR_1(CODE[65]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 65
		 -> STR_4(CODE[35]), STR_3(CODE[52]), STR_2(CODE[52]), STR_1(CODE[65]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 65
		 -> STR_4(CODE[35]), STR_3(CODE[52]), STR_2(CODE[52]), STR_1(CODE[65]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 65
		 -> STR_4(CODE[35]), STR_3(CODE[52]), STR_2(CODE[52]), STR_1(CODE[65]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2804$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 65
		 -> STR_4(CODE[35]), STR_3(CODE[52]), STR_2(CODE[52]), STR_1(CODE[65]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Lock_Blink(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Lock_Blink(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> GetADC_LuxINT(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> GetADC_LuxINT(), INT0_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TTCAN_20ms(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TTCAN_20ms(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clignotant_PWM(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clignotant_PWM(), Absolute function(), TMR3_DefaultInterruptHandler(), 

    ECAN_SetWakeUpInterruptHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> WakeUpDefaultInterruptHandler(), 

    WakeUpInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), WakeUpDefaultInterruptHandler(), 

    ECAN_SetRXB0InterruptHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> receptionTTCAN(), RXB0DefaultInterruptHandler(), 

    RXB0InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> receptionTTCAN(), Absolute function(), RXB0DefaultInterruptHandler(), 

    convertCANid2Reg@passedInSIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDH(BANK0[1]), 

    convertCANid2Reg@passedInSIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDL(BANK0[1]), 

    convertCANid2Reg@passedInEIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDH(BANK0[1]), 

    convertCANid2Reg@passedInEIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDL(BANK0[1]), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> receptionTTCAN@Message_recu(COMRAM[14]), 

    CAN_transmit@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> Lux_check_Tx(BANK0[14]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR3_ISR->_TMR3_WriteTimer
    _TMR2_CallBack->_Lock_Blink
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR1_CallBack->_TTCAN_20ms
    _ECAN_RXB0I_ISR->_receptionTTCAN
    _receptionTTCAN->_CAN_receive
    _TMR1_Reload->_TMR1_WriteTimer
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _main in BANK0

    _main->_printf
    _printCAN->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->___wmul
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _ECAN_Initialize->_ECAN_SetRXB0InterruptHandler
    _ECAN_Initialize->_ECAN_SetWakeUpInterruptHandler
    _CAN_transmit->_convertCANid2Reg

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   24475
                                            106 BANK0      4     4      0
                       _CAN_transmit
                            _CligneL
                            _CligneR
               _Default_Output_State
       _ECAN_SetRXB0InterruptHandler
                       _Etat_LUX_EXT
           _INT0_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
           _TMR3_SetInterruptHandler
                           _printCAN
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printCAN                                             0     0      0    8748
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10    8748
                                             94 BANK0     12     2     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    8295
                                             86 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           27    21      6    7801
                                             61 BANK0     25    19      6
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4125
                                             29 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2713
                                             18 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1326
                                             11 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     826
                                              2 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                              1 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              0 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1404
                                              6 BANK0      9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     281
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1539
                    _ECAN_Initialize
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0     211
                                              2 BANK0      2     2      0
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     211
                                              2 BANK0      2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0     332
                                              2 BANK0      1     1      0
       _ECAN_SetRXB0InterruptHandler
     _ECAN_SetWakeUpInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ECAN_SetWakeUpInterruptHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ECAN_SetRXB0InterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Etat_LUX_EXT                                         2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Default_Output_State                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CligneR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CligneL                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_transmit                                         7     5      2    4385
                                             18 BANK0      7     5      2
                   _convertCANid2Reg
 ---------------------------------------------------------------------------------
 (2) _convertCANid2Reg                                    18     5     13    2425
                                              0 BANK0     18     5     13
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          6     6      0    2583
                                             36 COMRAM     6     6      0
                     _ECAN_RXB0I_ISR
                      _ECAN_WAKI_ISR
                           _INT0_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR3_ISR                                            0     0      0     240
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR3_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR3_CallBack                                       0     0      0       0
                   Absolute function *
                     _Clignotant_PWM *
       _TMR3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _Clignotant_PWM                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR2_ISR                                            0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR2_CallBack                                       0     0      0       0
                   Absolute function *
                         _Lock_Blink *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _Lock_Blink                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR1_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                         _TTCAN_20ms *
 ---------------------------------------------------------------------------------
 (14) _TTCAN_20ms                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _PIN_MANAGER_IOC                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
                      _GetADC_LuxINT *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _GetADC_LuxINT                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ECAN_WAKI_ISR                                       0     0      0       0
                   Absolute function *
      _WakeUpDefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _WakeUpDefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ECAN_RXB0I_ISR                                      0     0      0    2103
                   Absolute function *
        _RXB0DefaultInterruptHandler *
                     _receptionTTCAN *
 ---------------------------------------------------------------------------------
 (13) _receptionTTCAN                                     15    15      0    2103
                                             21 COMRAM    15    15      0
                        _CAN_receive
                        _TMR1_Reload
 ---------------------------------------------------------------------------------
 (14) _TMR1_Reload                                         0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _CAN_receive                                         3     1      2    1744
                                             19 COMRAM     2     0      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (15) _convertReg2StandardCANid                           15    11      4     266
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (15) _convertReg2ExtendedCANid                           19    15      4     821
                                              0 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 (13) _RXB0DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_transmit
     _convertCANid2Reg
   _CligneL
   _CligneR
   _Default_Output_State
   _ECAN_SetRXB0InterruptHandler
   _Etat_LUX_EXT
   _INT0_SetInterruptHandler
   _SYSTEM_Initialize
     _ECAN_Initialize
       _ECAN_SetRXB0InterruptHandler
       _ECAN_SetWakeUpInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _TMR3_SetInterruptHandler
   _printCAN
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
               _fputs
                 _fputc
   _printf

 _INTERRUPT_InterruptManager (ROOT)
   _ECAN_RXB0I_ISR
     Absolute function(Fake) *
     _RXB0DefaultInterruptHandler *
     _receptionTTCAN *
       _CAN_receive
         _convertReg2ExtendedCANid
         _convertReg2StandardCANid
       _TMR1_Reload
         _TMR1_WriteTimer
   _ECAN_WAKI_ISR
     Absolute function(Fake) *
     _WakeUpDefaultInterruptHandler *
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _GetADC_LuxINT *
       _INT0_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TTCAN_20ms *
     _TMR1_WriteTimer
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _Lock_Blink *
       _TMR2_DefaultInterruptHandler *
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _Clignotant_PWM *
       _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      53        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      52        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      51        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      50        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      49        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      48        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      47        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      46        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      45        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6E      9E       5       98.8%
BITBIGSFRllllll     9A      0       0      42        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      4D       1       81.9%
BITBANK14           41      0       0      54        0.0%
BANK14              41      0       0      23        0.0%
BITBIGSFRhlh        1D      0       0      25        0.0%
BITBIGSFRlllhhh     1D      0       0      38        0.0%
BITBIGSFRlhhhhl     16      0       0      27        0.0%
BITBIGSFRhh          D      0       0      24        0.0%
BITBIGSFRlhlllh      B      0       0      34        0.0%
BITBIGSFRlhllhl      6      0       0      33        0.0%
BITBIGSFRlhllhh      5      0       0      32        0.0%
BITBIGSFRlhhlll      5      0       0      29        0.0%
BITBIGSFRlhllll      5      0       0      35        0.0%
BITBIGSFRllhhh       3      0       0      36        0.0%
BITBIGSFRlhhllh      2      0       0      28        0.0%
BITBIGSFRlllhhl      2      0       0      41        0.0%
BITBIGSFRlllhhl      2      0       0      40        0.0%
BITBIGSFRlllhhh      2      0       0      39        0.0%
BITBIGSFRllhll       2      0       0      37        0.0%
BITBIGSFRllllll      2      0       0      43        0.0%
BITBIGSFRlhllhh      1      0       0      31        0.0%
BITBIGSFRlhlh        1      0       0      30        0.0%
BITBIGSFRhll         1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10B      44        0.0%
DATA                 0      0     10B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Oct 06 11:58:06 2022

                 __end_of_TMR2_SetInterruptHandler 2FA4                             __end_of_receptionTTCAN 28B6  
                                   ??_Etat_LUX_EXT 0060                                                 l33 2FFC  
                                               l79 2D68                                ___wmul@multiplicand 0062  
                     __end_of_Default_Output_State 2A38                                                l335 2534  
                                              l431 2F72                                                l344 11DE  
                                              l346 1304                                                l460 2BE6  
                                              l428 2EAA                                                l349 142E  
                                              l390 2FE8                                                l607 2BAC  
                                              l631 2F0C                                                l528 2C20  
                                              l640 2F80                                                l561 2FAC  
                                              l634 2F1E                                                l387 20CA  
                                              l900 29E0                                                l396 2FDE  
                                              l652 2FCA                                                l902 29E2  
                                              l655 2FC0                                                l904 29E4  
                                              l496 2F98                                                l921 2928  
                                              l913 291E                                                l809 1A2C  
                                              l842 299C                                                l906 29E6  
                                              l658 2FD4                                                l682 2F4C  
                                              l931 2938                                                l915 2920  
                                              l908 2A36                                                l924 292E  
                                              l676 2FB6                                                l853 29DC  
                                              l845 29A2                                                l861 28DE  
                                              l933 297A                                                l926 2930  
                                              l919 2926                                                l951 2E84  
                                              l848 29A8                                                l864 28E4  
                                              l929 2936                                                l858 28D8  
                                              l869 2918                                                l974 2ECA  
                                              l898 29DE                                                _PR2 000FCB  
            ECAN_SetWakeUpInterruptHandler@handler 0060                         ??_INT0_SetInterruptHandler 0062  
                                  _timer1ReloadVal 0037                                                _pad 2608  
                                  _TMR2_Initialize 2EAC                                                tosl 000FFD  
                                              wreg 000FE8                                         _TXSTA1bits 000FAC  
                                    _INT0_CallBack 2D10                         ??_convertReg2StandardCANid 0005  
                                             l1002 2FA2                                               l1008 2E0E  
                                  _timer3ReloadVal 003B                                               l1453 2444  
                                             l1446 2424                                               l1463 2606  
                                             l1711 2650                                               l5000 2446  
                                             l1456 25E6                                               l1721 1D90  
                                             l5010 2504                                               l5002 244A  
                                             l1714 2694                                               l1731 1F54  
                                             l1723 1D98                                               l5020 1F56  
                                             l5012 2506                                               l5004 245E  
                                             l5100 2B8C                                               l1716 26B6  
                                             l5030 1FDE                                               l5022 1F56  
                                             l5014 2514                                               l5006 24F4  
                                             l5102 2B9A                                               l1822 274E  
                                             l1830 2B20                                               l1807 2B68  
                                             l5040 2032                                               l5032 1FE4  
                                             l5024 1F6A                                               l5200 13D4  
                                             l5120 1112                                               l5112 109A  
                                             l5016 2516                                               l5008 2502  
                                             l5104 2BA8                                               l5042 2060  
                                             l5034 2016                                               l5026 1F76  
                                             l5202 13E8                                               l5130 1146  
                                             l5122 1116                                               l5114 10B0  
                                             l5018 251C                                               l5106 2DC0  
                                             l1771 2A88                                               l5036 201E  
                                             l5028 1FA4                                               l5044 2070  
                                             l5204 13FC                                               l5212 142A  
                                             l5140 11AA                                               l5132 115A  
                                             l5124 111A                                               l5116 10C0  
                                             l5060 2BBC                                               l5220 2E8E  
                                             l1764 17B6                                               l5108 2DCA  
                                             l5300 187C                                               l5046 2088  
                                             l5038 2024                                               l5206 1410  
                                             l5150 123A                                               l5142 11BE  
                                             l5134 116E                                               l5126 111E  
                                             l5118 110E                                               l5054 2F62  
                                             l5070 2EB4                                               l5062 2BD4  
                                             l5230 2EA2                                               l5222 2E92  
                                             l1686 2DE6                                               l5310 18C4  
                                             l5302 1898                                               l5048 20BA  
                                             l5208 1424                                               l5160 125E  
                                             l5152 123E                                               l5144 11D2  
                                             l5136 1182                                               l5128 1132  
                                             l5080 2F3C                                               l5072 2EB6  
                                             l5064 2BD6                                               l5056 2BAE  
                                             l5232 2EA6                                               l5224 2E96  
                                             l5216 2E86                                               l5312 18CC  
                                             l5304 18A8                                               l1793 2210  
                                             l5170 12C2                                               l5162 1272  
                                             l5154 1242                                               l5146 11D4  
                                             l5138 1196                                               l5250 297C  
                                             l5234 29E8                                               l5242 293E  
                                             l5082 2F4A                                               l5090 2C0E  
                                             l5074 2EB8                                               l5066 2BE2  
                                             l5058 2BBA                                               l5226 2E9A  
                                             l5218 2E8A                                               l5322 18FC  
                                             l5314 18DC                                               l5306 18B0  
                                             l5180 1312                                               l5172 12D6  
                                             l5164 1286                                               l5156 1246  
                                             l5148 11EC                                               l5260 29D8  
                                             l5252 298C                                               l5092 2C10  
                                             l5084 2BE8                                               l5076 2EC6  
                                             l5068 2EAC                                               l5228 2E9E  
                                             l1796 2218                                               l4700 273C  
                                             l5236 2E60                                               l5340 19B8  
                                             l5324 190C                                               l5316 18E4  
                                             l5308 18C0                                               l5190 1370  
                                             l5182 1360                                               l5174 12EA  
                                             l5166 129A                                               l5158 124A  
                                             l5254 29AA                                               l5270 2902  
                                             l5262 28B6                                               l5238 291A  
                                             l5078 2F38                                               l5094 2C1C  
                                             l5086 2BF4                                               l4710 2B00  
                                             l5350 19EC                                               l5342 19C0  
                                             l5326 1914                                               l5318 18F4  
                                             l5334 192C                                               ?_pad 0072  
                                             l1799 2C84                                               l5192 1384  
                                             l5184 1364                                               l5176 12FE  
                                             l5168 12AE                                               l5256 29BE  
                                             l5272 2914                                               l5264 28C6  
                                             l5096 2B6A                                               l5088 2BF6  
                                             l4712 2DE8                                               l4720 2360  
                                             l4704 2ADA                                               l4800 1DC8  
                                             l5360 1A1C                                               l5352 19F4  
                                             l5344 19D0                                               l5336 198C  
                                             l5328 1924                                               l5280 1806  
                                             l5194 1398                                               l5186 1368  
                                             l5258 29C6                                               l5266 28E6  
                                             l5098 2B7E                                               l4714 2E06  
                                             l4730 23BC                                               l4722 2380  
                                             l4706 2AE8                                               l4810 1E5C  
                                             l4802 1DD2                                               l5362 1A24  
                                             l5354 1A04                                               l5346 19D4  
                                             l5338 19A8                                               l5370 1A38  
                                             l5290 1834                                               l5282 180A  
                                             l5274 17B8                                               l5196 13AC  
                                             l5188 136C                                               l5268 28FA  
                                             l4732 23EA                                               l4724 2388  
                                             l4740 2536                                               l4708 2AFA  
                                             l4820 1F26                                               l4804 1DD8  
                                             l4812 1EC0                                               l4900 15E6  
                                             l5380 1ADA                                               l5348 19DC  
                                             l5372 1AA0                                               l5292 1838  
                                             l5284 181C                                               l5276 1802  
                                             l5198 13C0                                               l4734 240A  
                                             l4726 239C                                               l4718 2354  
                                             l4750 25AE                                               l4742 2556  
                                             l4814 1ED4                                               l4822 1F34  
                                             l4806 1E50                                               l4902 15EE  
                                             l4910 1628                                               l5374 1AAC  
                                             l5366 1A30                                               l5358 1A0C  
                                             l5294 183C                                               l5286 1820  
                                             l5278 1804                                               l4840 2146  
                                             l4832 20E6                                               l4736 240C  
                                             l4728 23AA                                               l4752 25CE  
                                             l4744 255E                                               l4760 262C  
                                             l4816 1EF2                                               l4808 1E56  
                                             l4920 16FE                                               l4912 1648  
                                             l4904 15F6                                               l5384 1AE4  
                                             l5296 1866                                               l5288 1824  
                                             l4850 21E2                                               l4842 217A  
                                             l4834 2102                                               l4826 20CC  
                                             l4738 241E                                               l4754 25E0  
                                             l4746 2572                                               l4690 26B8  
                                             l4770 2676                                               l4762 263C  
                                             l4818 1F0C                                               l4922 171E  
                                             l4914 1688                                               l4930 177A  
                                             l5378 1ABC                                               l4780 2B28  
                                             l4852 21F4                                               l4836 2136  
                                             l4828 20E2                                               l4748 2580  
                                             l4684 2F0C                                               l4692 26CC  
                                             l4772 26A2                                               l4764 2648  
                                             l4756 2608                                               l4908 15FE  
                                             l4860 1454                                               l5820 194A  
                                             l4774 2C58                                               l4782 2B3C  
                                             l4838 213E                                               l4686 2F1A  
                                             l4694 26DE                                               l4766 265C  
                                             l4758 2618                                               l4790 1D58  
                                             l4918 16D4                                               l4870 1482  
                                             l4862 1462                                               l4934 178C  
                                             l5830 1A64                                               l5822 197E  
                                             l4784 2B5E                                               l4848 21B2  
                                             l4688 2F78                                               l4696 26E8  
                                             l4768 2670                                               l4792 1D68  
                                             l5840 176C                                               l4928 174E  
                                             l4880 14E6                                               l4872 1494  
                                             l4864 1470                                               l5832 1AFC  
                                             l5824 1958                                               l4970 2FA4  
                                             l4786 2B62                                               l4778 2B22  
                                             l5842 2164                                               l4698 2706  
                                             l4794 1D6A                                               l4890 157C  
                                             l4882 150A                                               l5834 14C6  
                                             l4866 1474                                               l4858 1430  
                                             l5826 1A56                                               l5844 2954  
                                             l4964 2FE0                                               l4972 2FC2  
                                             l4980 2F9A                                               l4796 1D84  
                                             l5836 1612                                               l4884 1540  
                                             l4876 14A0                                               l4868 1480  
                                             l5828 1A92                                               l4966 2FD6  
                                             l4974 2FB8                                               l4798 1DC0  
                                             l5838 16E8                                               l4894 158A  
                                             l4886 154E                                               l4878 14D4  
                                             l4982 2A38                                               l4976 2FCC  
                                             l4992 2FFA                                               l4968 2F90  
                                             l4896 15C4                                               l4888 155C  
                                             l4984 2A44                                               l4978 2FAE  
                                             l4994 2D3E                                               l4898 15D4  
                                             l4986 2A62                                               l4996 2D64  
                                             l4988 2A7E                                               l4998 2D66  
                                             STR_1 1001                                               STR_2 1042  
                                             STR_3 1042                                               STR_4 1076  
                     ?_RXB0DefaultInterruptHandler 0001                                               u3000 2914  
                                             u3001 2910                                               u3010 1878  
                                             u3011 1874                                               u3100 19EC  
                                             u3020 18A8                                               u3101 19E8  
                                             u3021 18A4                                               _LATA 000F89  
                                             u3110 1A04                                               u3030 18C0  
                                             _LATB 000F8A                                               u3111 1A00  
                                             u3031 18BC                                               _LATC 000F8B  
                                             u3120 1A1C                                               u3040 18DC  
                                             u3121 1A18                                               u3041 18D8  
                                             u3130 1ABC                                               u3050 18F4  
                                             u3131 1AB8                                               u3051 18F0  
                                             u2500 273C                                               u3140 1ADA  
                                             u3060 190C                                               u2501 2738  
                                             u3141 1AD6                                               u3061 1908  
                                             u2510 2B20                                               u3070 1924  
                                             u2511 2B1C                                               u3071 1920  
                                             u2600 263C                                               u3080 19B8  
                                             u2521 235A                                               u2601 2638  
                                             u3081 19B4                                               u2530 2380  
                                             u2610 2694                                               u3090 19D0  
                                             u2531 237C                                               u2611 2690  
                                             u3091 19CC                                               u2540 23AA  
                                             u2460 2F1A                                               u2620 26A2  
                                             u2700 1EF2                                               u2541 23A6  
                                             u2461 2F16                                               u2621 269E  
                                             u2701 1EEE                                               u2630 2C7E  
                                             u2550 23EA                                               u2470 26CC  
                                             u2710 1F0C                                               u2631 2C78  
                                             u2551 23E6                                               u2471 26C8  
                                             u2711 1F08                                               u2640 2C80  
                                             u2560 2556                                               u2480 26DE  
                                             u2720 1F26                                               u2800 150A  
                                             u2561 2552                                               u2481 26DA  
                                             u2721 1F22                                               u2801 1506  
                                             u2650 2B3C                                               u2570 2580  
                                             u2490 2706                                               u2730 1F34  
                                             u2810 154E                                               u2651 2B38  
                                             u2571 257C                                               u2491 2702  
                                             u2731 1F30                                               u2811 154A  
                                             u2900 10C0                                               u2660 2B5E  
                                             u2740 2102                                               u2580 25AE  
                                             u2820 15C4                                               u2901 10BC  
                                             u2661 2B5A                                               u2741 20FE  
                                             u2581 25AA                                               u2821 15C0  
                                             u2910 11EC                                               u2750 2132  
                                             u2590 2618                                               u2670 1D68  
                                             u2830 1644                                               u2911 11E8  
                                             u2751 212E                                               u2591 2614  
                                             u2671 1D64                                               u2831 1640  
                                             u2920 1312                                               u2760 21E2  
                                             u2680 1D84                                               u2840 2A7E  
                                             u2921 130E                                               u2761 21DE  
                                             u2681 1D80                                               u2841 2A7A  
                                             u2930 298C                                               u2850 245E  
                                             u2770 21F4                                               u2690 1ED4  
                                             u2931 2988                                               u2851 245A  
                                             u2771 21F0                                               u2691 1ED0  
                                             u2940 299C                                               u2860 2534  
                                             u2780 1454                                               u2941 2998  
                                             u2861 2530                                               u2781 1450  
                                             u2870 1F6A                                               u2950 29BE  
                                             u2790 14E6                                               u2871 1F66  
                                             u2951 29BA                                               u2791 14E2  
                                             u2960 29D8                                               u2961 29D4  
                                             u2970 28C6                                               u2971 28C2  
                                             u2980 28D8                                               u2885 1FF6  
                                             u2981 28D4                                               u2990 28FA  
                                             u2895 209A                                               u2991 28F6  
                                             i2l40 006A                                               i2l43 009C  
                                             i2l45 00C0                                               i2l54 012C  
                                             i2l38 0046                                               i2l47 00E4  
                                             i2l48 012C                                               i2l49 0108  
                                             i2l82 3000                                               _TMR2 000FCC  
                                             _WPUB 000F5B                                      _EUSART1_Write 2F08  
                                    _compteurTTCAN 00E4                                               _dbuf 0100  
                                             _vKey 00EA                                               _atoi 20CC  
                                             _main 17B8                       convertCANid2Reg@passedInEIDH 0065  
                     convertCANid2Reg@passedInEIDL 0067                                               _prec 00E2  
                                             pad@i 0079                                               pad@p 0076  
                                             fsr1h 000FE2                                               fsr2h 000FDA  
                                             indf2 000FDF                                               fsr1l 000FE1  
                                             pad@w 007B                                               fsr2l 000FD9  
                                             btemp 004E                                               _utoa 1D58  
                     convertCANid2Reg@passedInSIDH 0069                       convertCANid2Reg@passedInSIDL 006B  
                          CAN_transmit@returnValue 0074                                               prodh 000FF4  
                                             prodl 000FF3                                               start 0148  
                                  _TMR3_Initialize 2BAE                                    __end_of_CligneL 29DE  
                                  __end_of_CligneR 291A                         ??_TMR1_SetInterruptHandler 0062  
                                     ___param_bank 000000                                    ?_receptionTTCAN 0001  
                                            ??_pad 0078                                  fp__Clignotant_PWM 0000  
                                 __end_of_INT0_ISR 2FF2                      __end_of_OSCILLATOR_Initialize 2F74  
                                            ?_atoi 0066                                              ?_main 0001  
                                            ?_utoa 007D                                    __end_of___lodiv 2446  
                                            _T1CON 000FCD                                              _T2CON 000FCA  
                                            _T3CON 000FB1                                    __end_of___lomod 2608  
                                            i2l323 3010                                              i2l326 300E  
                                            i2l352 1C30                                              i2l382 2848  
                                            i2l542 2E5E                                              i2l359 1D56  
                                            i2l545 2F8E                                              i2l393 2F06  
                                            i2l554 2F60                                              i2l474 2E36  
                                            i2l379 2352                                              i2l564 300A  
                                            i2l493 2CB2                                              i2l558 2D0E  
                                            i2l830 27CC                                              i2l399 2EE8  
                                            i2l823 276C                                              i2l832 27CE  
                                            i2l673 2D3C                                              i2l489 2C56  
                                            i2l834 27D0                                              i2l499 3006  
                                            i2l940 28B4                                              i2l669 2FF0  
                                            i2l837 2F36                                              i2l679 300C  
                                            i2l945 2D94                                              i2l948 2FF8  
                                            i2l995 2DBE                                              i2l999 2CE0  
                                     vfpfcnvrt@fmt 009F                                              _TMR1H 000FCF  
                                            _TMR1L 000FCE                                              _TMR3H 000FB3  
                                            _TMR3L 000FB2                                              _TRISA 000F92  
                                            _TRISB 000F93                                     ?_INT0_CallBack 0001  
                                            _TRISC 000F94                          ?_TMR3_SetInterruptHandler 0060  
                            CAN_receive@tempCanMsg 0014                                              _idCAN 00DC  
                                 __end_of_TMR1_ISR 2F62                                   __end_of_TMR2_ISR 2DC0  
                                      ?_TTCAN_20ms 0001                                   __end_of_TMR3_ISR 2C58  
                             __end_of_CAN_transmit 1430                     ??_TMR3_DefaultInterruptHandler 0001  
                          __end_of_PIN_MANAGER_IOC 3002                                              _flags 00E6  
                                            _vLock 00EB                                              _fputc 26B8  
                                            _fputs 2ADA                                    __end_of_isdigit 2C86  
                                            atoi@n 006D                                              pad@fp 0072  
                                            atoi@s 0066                                              _width 00E0  
                                            _putch 2F74                                    __end_of_isspace 2B6A  
                                   ?_EUSART1_Write 0001                            __end_of_TMR1_Initialize 2C22  
                                            pclath 000FFA                                              pclatu 000FFB  
                                            tablat 000FF5                                              plusw1 000FE3  
                                            plusw2 000FDB                      ??_RXB0DefaultInterruptHandler 0001  
                                            ttemp5 004F                                              ttemp6 0052  
                                            ttemp7 0056                                              utoa@d 007F  
              convertReg2ExtendedCANid@ConvertedID 0010                                              utoa@i 009B  
                                            utoa@n 0093                                              utoa@p 008F  
                                            utoa@w 0091                                              status 000FD8  
                                            wtemp8 004F                               CAN_transmit@tempEIDH 0075  
                             CAN_transmit@tempEIDL 0076                                   ___lodiv@dividend 0060  
                             CAN_transmit@tempSIDH 0077                               CAN_transmit@tempSIDL 0078  
               _EUSART1_DefaultFramingErrorHandler 000000                                    _TMR1_WriteTimer 2E38  
                                  __initialization 2A8A                                   fp__GetADC_LuxINT 0000  
                                     __end_of_atoi 221A                         __end_of_EUSART1_Initialize 2BAE  
                                     __end_of_main 1B0E                                         _Lock_Blink 2750  
                                     __end_of_utoa 1F56                            __end_of_TMR2_Initialize 2ECC  
                      ?_INTERRUPT_InterruptManager 0001                                             ??_atoi 0068  
                         _TMR2_SetInterruptHandler 2F9A                                             ??_main 00CA  
                                           ??_utoa 0087                                      __activetblptr 000002  
                            _TMR3_InterruptHandler 0039                                   ___lodiv@quotient 0070  
                  ??_WakeUpDefaultInterruptHandler 0001                                  ??_ECAN_Initialize 0062  
                                           _CANCON 000F6F                                             ?_fputc 0062  
                                           ?_fputs 006B                                             _ANCON0 000F5D  
                                           _ANCON1 000F5C                                             _CIOCON 000F70  
                                           ?_putch 0001                                             _T1GCON 000FAA  
                                           _T3GCON 000FB0                            TMR1_WriteTimer@timerVal 0001  
                                           i2l1005 3008                            __end_of_TMR3_Initialize 2BE8  
                                           i2l2420 2C98                                             i2l4100 0054  
                                           i2l4110 00AA                                             i2l4102 0062  
                                           i2l2272 2F20                                             i2l4120 0100  
                                           i2l4112 00B8                                             i2l4104 0078  
                                           i2l2418 2C86                                             i2l4122 0116  
                                           i2l4114 00CE                                             i2l4106 0086  
                                           i2l3500 2838                                             i2l2460 2EE6  
                                           i2l4124 0124                                             i2l4116 00DC  
                                           i2l4108 0094                                             i2l3510 2E4C  
                                           i2l4118 00F2                                             i2l3512 2E50  
                                           i2l3504 2E38                                             i2l2456 2FFE  
                                           i2l3506 2E46                                             i2l3514 2E56  
                                           i2l2458 2ECC                                             i2l3516 2E5A  
                                           i2l3508 2E48                                             i2l3470 222C  
                                           i2l3630 1B0E                                             i2l3702 2F82  
                                           i2l4094 0022                                             i2l3480 22AE  
                                           i2l3472 2232                                             i2l3640 1B74  
                                           i2l3632 1B1C                                             i2l3720 277C  
                                           i2l4096 0030                                             i2l3482 22E4  
                                           i2l3474 223A                                             i2l3650 1BDA  
                                           i2l3642 1B9A                                             i2l3634 1B2A  
                                           i2l3730 2FF2                                             i2l3722 277E  
                                           i2l3714 2750                                             i2l4098 003E  
                                           i2l3484 22FC                                             i2l3476 2264  
                                           i2l3468 221C                                             i2l3492 27D4  
                                           i2l3660 1C2A                                             i2l3652 1BEA  
                                           i2l3644 1BAA                                             i2l3636 1B36  
                                           i2l3628 1B0E                                             i2l3900 2FEA  
                                           i2l3724 27A2                                             i2l3716 2764  
                                           i2l3486 2332                                             i2l3478 227C  
                                           i2l3494 27D4                                             i2l3670 1C8C  
                                           i2l3662 1C2C                                             i2l3654 1BFA  
                                           i2l3646 1BBA                                             i2l3638 1B68  
                                           i2l3902 2FEC                                             i2l3726 2D6A  
                                           i2l3718 2768                                             i2l3910 2C24  
                                           i2l3488 2342                                             i2l3496 27FE  
                                           i2l3680 1CEE                                             i2l3672 1C98  
                                           i2l3664 1C40                                             i2l3656 1C0A  
                                           i2l3648 1BCA                                             i2l3904 2EEA  
                                           i2l3728 2D70                                             i2l3920 2D98  
                                           i2l3912 2C30                                             i2l3498 2828  
                                           i2l3690 1D3E                                             i2l3682 1CFE  
                                           i2l3674 1CBE                                             i2l3666 1C4E  
                                           i2l3658 1C1A                                             i2l3906 2F04  
                                           i2l3930 2F5C                                             i2l3922 2DB2  
                                           i2l3914 2C4A                                             i2l3692 1D4E  
                                           i2l3684 1D0E                                             i2l3676 1CCE  
                                           i2l3668 1C5A                                             i2l3924 2DB6  
                                           i2l3860 2E20                                             i2l3916 2C4E  
                                           i2l3908 2C22                                             i2l3686 1D1E  
                                           i2l3678 1CDE                                             i2l3870 2CE2  
                                           i2l3926 2F4E                                             i2l3918 2D96  
                                           i2l3862 2E24                                             i2l3688 1D2E  
                                           i2l3872 2CF4                                             i2l3928 2F50  
                                           i2l3864 2E28                                             i2l3856 2E10  
                                           i2l3890 2876                                             i2l3874 2D10  
                                           i2l3858 2E1E                                             i2l3866 2E2E  
                                           i2l3892 289A                                             i2l3884 284A  
                                           i2l3876 2D22                                             i2l3868 2E32  
                                           i2l3894 28A2                                             i2l3886 2856  
                                           i2l3888 286C                                             i2l3896 2CB4  
                                           i2l3898 2CC6                               __end_of_Etat_LUX_EXT 297C  
                                           _RCREG1 000FAE                                             _RCSTA1 000FAB  
                                           _OSCCON 000FD3                                             _RXB0D0 000F66  
                                        ??_CligneL 0060                                             _RXB0D1 000F67  
                                           _RXB0D2 000F68                                             _RXB0D3 000F69  
                                           _RXB1D0 000F36                                             _RXB0D4 000F6A  
                                           _RXB1D1 000F37                                             _RXB0D5 000F6B  
                                           _RXB1D2 000F38                                             _RXB0D6 000F6C  
                                        ??_CligneR 0060                                             _RXB1D3 000F39  
                                           _RXB0D7 000F6D                                             _RXB1D4 000F3A  
                                           _RXB1D5 000F3B                                             _RXB1D6 000F3C  
                                           _RXB1D7 000F3D                                      vfpfcnvrt@done 00B1  
                                       _Lux_EXT_Rx 00CE                                             _SPBRG1 000FAF  
                                           _TXB0D0 000F26                                             _TXB0D1 000F27  
                                           _TXB0D2 000F28                                             _TXB0D3 000F29  
                                           _TXB1D0 000F16                                             _TXB0D4 000F2A  
                                           _TXB1D1 000F17                                             _TXB0D5 000F2B  
                                           _TXB1D2 000F18                                             _TXB0D6 000F2C  
                                           _TXB1D3 000F19                                             _TXB0D7 000F2D  
                                           _TXB2D0 000F06                                             _TXB1D4 000F1A  
                                           _TXB2D1 000F07                                             _TXB1D5 000F1B  
                                           _TXB2D2 000F08                                             _TXB1D6 000F1C  
                                           _TXB2D3 000F09                                             _TXB1D7 000F1D  
                                           _TXB2D4 000F0A                                             _TXB2D5 000F0B  
                                           _TXB2D6 000F0C                                             _TXB2D7 000F0D  
                                           _TXREG1 000FAD                               _Default_Output_State 29DE  
                                           _TXSTA1 000FAC                                    _TMR3_WriteTimer 2E10  
             __end_of_TMR1_DefaultInterruptHandler 300C                       _TMR1_DefaultInterruptHandler 300A  
                                     vfprintf@cfmt 00BC                                       ?_TMR1_Reload 0001  
                                           ___wmul 2DE8                                          ??___lodiv 0070  
                                        ??___lomod 0070                           ?_EUSART1_SetErrorHandler 0060  
                                           _vStart 00EC                                             clear_0 2AAE  
                                           clear_1 2ABA                                             clear_2 2AC6  
                                           isa$std 000001                                             _printf 2DC0  
                                           pad@buf 0074                   ??_EUSART1_SetOverrunErrorHandler 0062  
                  ?_EUSART1_SetOverrunErrorHandler 0060                                    ??_INT0_CallBack 0001  
             __end_of_ECAN_SetRXB0InterruptHandler 2FEA                       _ECAN_SetRXB0InterruptHandler 2FE0  
                                           fputc@c 0062                                             fputs@c 006F  
                                           fputs@i 0070                                       __pdataCOMRAM 004B  
                                           fputs@s 006B                                          ??_isdigit 0062  
                                 __end_of_printCAN 2E86                                       __mediumconst 0000  
                                        ??_isspace 0062                   __end_of_convertReg2StandardCANid 284A  
                                           tblptrh 000FF7                                             tblptrl 000FF6  
                                           tblptru 000FF8                                      _GetADC_LuxINT 2FF2  
                                 __end_of_vfprintf 2A8A                                    ??_EUSART1_Write 0060  
                                           utoa@fp 007D           TMR2_SetInterruptHandler@InterruptHandler 0060  
         INT0_SetInterruptHandler@InterruptHandler 0060           TMR1_SetInterruptHandler@InterruptHandler 0060  
         TMR3_SetInterruptHandler@InterruptHandler 0060                                   ?_PIN_MANAGER_IOC 0001  
                          __end_of_TMR1_WriteTimer 2E60                              __end_of_TMR1_CallBack 2D10  
              ECAN_SetRXB0InterruptHandler@handler 0060                                   ?_TMR1_Initialize 0001  
                                _SYSTEM_Initialize 2E86                                         __accesstop 0060  
                          __end_of__initialization 2ACC                                          ?_INT0_ISR 0001  
                            ?_Default_Output_State 0001                              __end_of_TMR2_CallBack 2CE2  
                               ?_SYSTEM_Initialize 0001                           _convertReg2ExtendedCANid 221A  
                                    ___rparam_used 000001                              __end_of_TMR3_CallBack 2CB4  
                                   __pcstackCOMRAM 0001                                ??_SYSTEM_Initialize 0064  
                                      ?_Lock_Blink 0001                                          ?_TMR1_ISR 0001  
                                        ?_TMR2_ISR 0001                    fp__TMR1_DefaultInterruptHandler 0000  
                    ?_TMR1_DefaultInterruptHandler 0001                                          ?_TMR3_ISR 0001  
                                   _Clignotant_PWM 2F20                                      __end_of_fputc 2750  
                                    __end_of_fputs 2B22                                      __end_of_putch 2F82  
                                 ?_TMR2_Initialize 0001                              TMR3_ISR@CountCallBack 003F  
                    ?_ECAN_SetRXB0InterruptHandler 0060                                     ?_GetADC_LuxINT 0001  
                                    _ECAN_WAKI_ISR 2ECC              convertReg2StandardCANid@tempRXBn_SIDH 0007  
            convertReg2StandardCANid@tempRXBn_SIDL 0001                                            ??_fputc 0066  
                        __end_of_SYSTEM_Initialize 2EAC                                            ??_fputs 006F  
                          __end_of_TMR3_WriteTimer 2E38                                            ??_putch 0061  
                                       __pbssBANK0 00CE                                         __pbssBANK1 0100  
            __end_of_WakeUpDefaultInterruptHandler 3010                      _WakeUpDefaultInterruptHandler 300E  
                                       _changeLeft 0047                                   ?_TMR3_Initialize 0001  
                             _RXB0InterruptHandler 0043                              _INT0_InterruptHandler 002D  
                                       ??_INT0_ISR 0001                                         __pnvCOMRAM 002B  
                                 ??_receptionTTCAN 0016                                         _delayRight 0046  
                  __end_of_EUSART1_SetErrorHandler 2FD6                             __end_of_Clignotant_PWM 2F38  
                 __end_of_TMR3_SetInterruptHandler 2F9A                                       _CAN_transmit 109A  
                                          ?___wmul 0060                                         ??_TMR1_ISR 0003  
                                       ??_TMR2_ISR 0002                                         ??_TMR3_ISR 0003  
                                       _cligneLeft 00E9                                         _cligneLock 004D  
                                          _ECANCON 000F72                                            _CANSTAT 000F6E  
                 ??_ECAN_SetWakeUpInterruptHandler 0062                    ?_ECAN_SetWakeUpInterruptHandler 0060  
                                          ?_printf 00BE                                            _BRGCON1 000E43  
                                          _BRGCON2 000E44                                            _BRGCON3 000E45  
           __end_of_EUSART1_SetFramingErrorHandler 2FCC                     _EUSART1_SetFramingErrorHandler 2FC2  
                                          _REFOCON 000F9A                                            _OSCCON2 000FD2  
                                   ?_ECAN_WAKI_ISR 0001                                       ??_TTCAN_20ms 0001  
                                          i2u50_40 2F32                                            i2u50_41 2F2C  
                                          _RXB0DLC 000F65                                            i2u51_40 2F34  
                                          _RXB1DLC 000F35                                            i2u60_40 2C98  
                                          i2u60_41 2C94                                            _RXB0CON 000F60  
                                          i2u61_48 2C9E                                            i2u61_49 2CB2  
                                          _OSCTUNE 000F9B                                            i2u71_48 2ED2  
                                          i2u71_49 2EE6                                            _SPBRGH1 000F7D  
                                          _TXB0DLC 000F25                                            _TXB1DLC 000F15  
                                          _TXB2DLC 000F05                                   ?_TMR1_WriteTimer 0001  
                                 ___lomod@dividend 0060                             ??_Default_Output_State 0060  
                                          _CligneL 297C                                            _CligneR 28B6  
                        ?_INT0_SetInterruptHandler 0060                                            __Hparam 0000  
                                          __Lparam 0000                         ??_TMR2_SetInterruptHandler 0062  
                                  ?_Clignotant_PWM 0001                          ?_convertReg2StandardCANid 0001  
                                        ?_printCAN 0001                                            ___lodiv 2354  
                                  _ECAN_Initialize 2446                                            ___lomod 2536  
                               __end_of_TTCAN_20ms 2D96                                          ?_vfprintf 00B6  
                                     __psmallconst 1000                                            __pcinit 2A8A  
                                     _Etat_LUX_EXT 291A                                            __ramtop 1000  
                                          __ptext0 17B8                                            __ptext1 2E60  
                                          __ptext2 2DC0                                            __ptext3 2A38  
                                          __ptext4 1430                                            __ptext5 1D58  
                                          __ptext6 2608                                            __ptext7 2ADA  
                                          __ptext8 26B8                                            __ptext9 2F74  
                   ??_TMR1_DefaultInterruptHandler 0001                                    ??_GetADC_LuxINT 0001  
                                        _T1CONbits 000FCD                              _OSCILLATOR_Initialize 2F62  
                                        _T2CONbits 000FCA                                            _isdigit 2C58  
                                        _T3CONbits 000FB1                                 _EUSART1_Initialize 2B6A  
                                 _convertCANid2Reg 1F56                           ??_PIN_MANAGER_Initialize 0060  
                                          _isspace 2B22                          ?_TMR1_SetInterruptHandler 0060  
                                          atoi@neg 006B                               end_of_initialization 2ACC  
                                 ?_TMR3_WriteTimer 0001                             _WakeUpInterruptHandler 0041  
                              ?_EUSART1_Initialize 0001                                            fputc@fp 0064  
                                    __Lmediumconst 0000                        _EUSART1_OverrunErrorHandler 0031  
                                          fputs@fp 006D                                      ??_CAN_receive 0016  
                 fp__WakeUpDefaultInterruptHandler 0000                     ?_WakeUpDefaultInterruptHandler 0001  
                                __end_of_vfpfcnvrt 17B8                                         ??_printCAN 00CA  
                                          postdec2 000FDD                                            postinc0 000FEE  
                                          postinc1 000FE6                                            postinc2 000FDE  
                                 vfpfcnvrt@convarg 00A9                                         ??_vfprintf 00BC  
                             ??_EUSART1_Initialize 0062                           _TMR3_SetInterruptHandler 2F90  
                                  ??_ECAN_WAKI_ISR 0001                                         _pwm_Switch 0049  
                           CAN_transmit@tempCanMsg 0072                         ??_convertReg2ExtendedCANid 0005  
                              EUSART1_Write@txData 0060                __end_of_RXB0DefaultInterruptHandler 3012  
                      _RXB0DefaultInterruptHandler 3010                            __end_of_ECAN_Initialize 2536  
                                     ??_Lock_Blink 0001                       __end_of_INTERRUPT_Initialize 2FFE  
                              __end_of_CAN_receive 1D58               __end_of_TMR2_DefaultInterruptHandler 300A  
                     _TMR2_DefaultInterruptHandler 3008               __end_of_INT0_DefaultInterruptHandler 300E  
                     _INT0_DefaultInterruptHandler 300C                                        vfpfcnvrt@ap 00A1  
                                      vfpfcnvrt@cp 00B4                                        vfpfcnvrt@fp 009D  
                                   __end_of___wmul 2E10                                      __pidataCOMRAM 3002  
                           ?_OSCILLATOR_Initialize 0001                                     __end_of_printf 2DE8  
                            __end_of_INT0_CallBack 2D3E                                start_initialization 2A8A  
                                  ___lodiv@divisor 0068                                    ___lodiv@counter 0078  
                                      __end_of_pad 26B8                                        putch@txData 0061  
                            __end_of_EUSART1_Write 2F20                                 __end_of_Lock_Blink 27D2  
                                    fp__TTCAN_20ms 0000                convertReg2StandardCANid@returnValue 0008  
                                      vfprintf@fmt 00B8                                           ??___wmul 0064  
                                   _ECAN_RXB0I_ISR 2EEA                         __end_of_EXT_INT_Initialize 2F4E  
                  fp__TMR2_DefaultInterruptHandler 0000                      ?_TMR2_DefaultInterruptHandler 0001  
                  fp__INT0_DefaultInterruptHandler 0000                      ?_INT0_DefaultInterruptHandler 0001  
                                         ??_printf 00C8                                        _changeRight 0045  
                                      __pbssCOMRAM 003D                   __end_of_INT0_SetInterruptHandler 2FB8  
                                    __pcstackBANK0 0060             __end_of_ECAN_SetWakeUpInterruptHandler 2FE0  
                   _ECAN_SetWakeUpInterruptHandler 2FD6                   ??_EUSART1_SetFramingErrorHandler 0062  
                  ?_EUSART1_SetFramingErrorHandler 0060                                           ?_CligneL 0001  
                                         ?_CligneR 0001                                   ??_Clignotant_PWM 0001  
                                      _CAN_receive 1B0E                                   ?_ECAN_Initialize 0001  
                                        _delayLeft 0048                             _PIN_MANAGER_Initialize 2D3E  
                           __end_of_ECAN_RXB0I_ISR 2F08                           __end_of_convertCANid2Reg 20CC  
                                        __pintcode 0008                   __end_of_TMR1_SetInterruptHandler 2FAE  
                                         ?___lodiv 0060                                           ?___lomod 0060  
                     ??_INTERRUPT_InterruptManager 0025                                        _cligneRight 00E8  
                                  ___lomod@divisor 0068                                        __smallconst 1000  
                                  ___lomod@counter 0070                                           _BAUDCON1 000FA7  
                                      _COMSTATbits 000F71                 _EUSART1_DefaultOverrunErrorHandler 000000  
                                         ?_isdigit 0060                               _EUSART1_ErrorHandler 002F  
                                         ?_isspace 0060                   __end_of_convertReg2ExtendedCANid 2354  
                          _EUSART1_SetErrorHandler 2FCC                     convertCANid2Reg@tempPassedInID 0060  
                             _INTERRUPT_Initialize 2FFA                                      _TMR1_CallBack 2CE2  
                                         _INT0_ISR 2FEA                                     ___wmul@product 0064  
                                         _LATAbits 000F89            EUSART1_SetErrorHandler@interruptHandler 0060  
                                         _LATCbits 000F8B                                      _TMR2_CallBack 2CB4  
                                         _PIE1bits 000F9D                                           _PIE2bits 000FA0  
                                         _PIE5bits 000F76                                           i2u211_40 0030  
                                         i2u211_41 002C                                           i2u220_40 00CE  
                                         i2u212_40 003E                                           i2u220_41 00CA  
                                         i2u212_41 003A                                           i2u221_40 00DC  
                                         i2u213_40 0054                                           i2u221_41 00D8  
                                         i2u213_41 0050                                           i2u222_40 00F2  
                                         i2u214_40 0062                                           i2u222_41 00EE  
                                         i2u214_41 005E                                           i2u223_40 0100  
                                         i2u215_40 0078                                           i2u223_41 00FC  
                                         i2u215_41 0074                                           i2u224_40 0116  
                                         i2u216_40 0086                                           i2u224_41 0112  
                                         i2u216_41 0082                                           i2u225_40 0124  
                                         i2u217_40 0094                                           i2u225_41 0120  
                                         i2u217_41 0090                                           i2u218_40 00AA  
                                         i2u218_41 00A6                                           i2u219_40 00B8  
                                         i2u219_41 00B4                                           i2u163_45 228E  
                                         i2u172_40 1B1C                                           i2u180_40 2D80  
                                         i2u172_41 1B18                                           i2u180_41 2D7A  
                                         i2u164_45 2806                                           i2u180_46 2D82  
                                         i2u173_40 1B2A                                           i2u165_40 2E46  
                                         i2u173_41 1B26                                           i2u165_41 2E42  
                                         i2u174_40 1C40                                           i2u190_40 2D22  
                                         i2u174_41 1C3C                                           i2u190_41 2D1E  
                                         i2u175_40 1C4E                                           i2u175_41 1C4A  
                                         i2u192_40 286C                                           i2u191_48 2D28  
                                         i2u176_40 2764                                           i2u192_41 2868  
                                         i2u191_49 2D3C                                           i2u176_41 2760  
                                         i2u193_40 2886                                           i2u177_40 277C  
                                         i2u193_41 2880                                           i2u177_41 2778  
                                         _PIR1bits 000F9E                                           i2u193_46 2888  
                                         i2u178_40 278E                                           i2u194_41 28AC  
                                         i2u178_41 2788                                           i2u178_46 2790  
                                         i2u179_40 27B2                                           i2u195_40 2CC6  
                                         i2u187_40 2E1E                                           i2u179_41 27AC  
                                         i2u195_41 2CC2                                           i2u187_41 2E1A  
                                  ?_ECAN_RXB0I_ISR 0001                                           _PIR2bits 000FA1  
                                         i2u179_46 27B4                                           i2u188_40 2CF4  
                                         i2u188_41 2CF0                                           i2u196_48 2CCC  
                                         i2u196_49 2CE0                                           i2u197_48 2EF0  
                                         i2u189_48 2CFA                                           i2u198_40 2C4A  
                                         i2u197_49 2F04                                           i2u189_49 2D0E  
                                         i2u198_41 2C46                                           i2u199_40 2DB2  
                                         i2u199_41 2DAE                         ??_TMR3_SetInterruptHandler 0062  
                                    _TMR3_CallBack 2C86                                           _PIR5bits 000F77  
                                         _RXB0EIDH 000F63                                           _RXB0EIDL 000F64  
                                         _RXB1EIDH 000F33                                           _RXB1EIDL 000F34  
                                         _RCONbits 000FD0                                      ??_TMR1_Reload 0003  
                                        _lux_State 00ED                                           _RXB0SIDH 000F61  
                                         _RXB0SIDL 000F62                                           _RXF0EIDH 000EE2  
                                         _RXB1SIDH 000F31                                           _RXF0EIDL 000EE3  
                                         _RXB1SIDL 000F32                                           _RXF1EIDH 000EE6  
                                         _RXF1EIDL 000EE7                                           _RXF2EIDH 000EEA  
                                         _RXF2EIDL 000EEB                                           _RXF3EIDH 000EEE  
                                         _RXF3EIDL 000EEF                                           _RXF4EIDH 000EF2  
                                         _RXF4EIDL 000EF3                                           _RXF5EIDH 000EF6  
                                         _RXF5EIDL 000EF7                                           _RXF0SIDH 000EE0  
                                         _RXF0SIDL 000EE1                                           _RXF1SIDH 000EE4  
                                         _TXB0EIDH 000F23                                           _TXB0EIDL 000F24  
                                         _RXF1SIDL 000EE5                                           _RXF2SIDH 000EE8  
                                         _TXB1EIDH 000F13                                           _TXB1EIDL 000F14  
                                         _RXF2SIDL 000EE9                                          _threeLock 004C  
                                         _RXF3SIDH 000EEC                                           _TXB2EIDH 000F03  
                                         _TXB2EIDL 000F04                                           _RXF3SIDL 000EED  
                                         _RXF4SIDH 000EF0                                           _RXF4SIDL 000EF1  
                                         _RXF5SIDH 000EF4                                           _RXF5SIDL 000EF5  
                                         _TMR1_ISR 2F4E                                           _TMR2_ISR 2D96  
                                         _RXM0EIDH 000EFA                                           _RXM0EIDL 000EFB  
                                         _TMR3_ISR 2C22                                           _RXM1EIDH 000EFE  
                                         _TXB0SIDH 000F21                                           _RXM1EIDL 000EFF  
                                         _TXB0SIDL 000F22                                           _TXB1SIDH 000F11  
                                         _TXB1SIDL 000F12                                           _TXB2SIDH 000F01  
                                         _TXB2SIDL 000F02                                           _RXM0SIDH 000EF8  
                                         _RXM0SIDL 000EF9                                           _RXM1SIDH 000EFC  
                                         _RXM1SIDL 000EFD                                  ??_PIN_MANAGER_IOC 0001  
                                        _vfpfcnvrt 1430                     fp__RXB0DefaultInterruptHandler 0000  
                                fp__receptionTTCAN 0000                                  ??_TMR1_Initialize 0062  
                                    fp__Lock_Blink 0000                                  ___wmul@multiplier 0060  
                       receptionTTCAN@Message_recu 0017                              __end_of_GetADC_LuxINT 2FFA  
                   ??_TMR2_DefaultInterruptHandler 0001                     ??_INT0_DefaultInterruptHandler 0001  
                        ?_TMR2_SetInterruptHandler 0060                                       _isspace$2887 0064  
                                       vfpfcnvrt@c 00B3                                        _INTCON2bits 000FF1  
                            ?_INTERRUPT_Initialize 0001                           _INT0_SetInterruptHandler 2FAE  
                                   ?_TMR1_CallBack 0001                                  ??_TMR2_Initialize 0062  
                                   ?_TMR2_CallBack 0001                           _convertReg2StandardCANid 27D2  
            convertReg2ExtendedCANid@tempRXBn_EIDH 0009              convertReg2ExtendedCANid@tempRXBn_EIDL 0001  
            convertReg2ExtendedCANid@tempRXBn_SIDH 0002              convertReg2ExtendedCANid@tempRXBn_SIDL 0003  
                                   ?_TMR3_CallBack 0001                                           __Hrparam 0000  
                                       vfprintf@ap 00BA                                           __Lrparam 0000  
                                       vfprintf@fp 00B6                          convertCANid2Reg@canIdType 0064  
                          ??_OSCILLATOR_Initialize 0060                                         ?_vfpfcnvrt 009D  
                                ??_TMR3_Initialize 0062                           _TMR1_SetInterruptHandler 2FA4  
convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 000F                                           _dataCAN0 00EF  
                                         _dataCAN1 00EE                                __end_of_TMR1_Reload 2F90  
                            _TMR1_InterruptHandler 0035                          ??_EUSART1_SetErrorHandler 0062  
                      _EUSART1_DefaultErrorHandler 000000  convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 000E  
                          convertCANid2Reg@wipSIDL 0071                                       _Lux_check_Tx 00F0  
                            __end_of_ECAN_WAKI_ISR 2EEA                                           __ptext10 2F08  
                                         __ptext11 2536                                           __ptext20 2EAC  
                                         __ptext12 2354                                           __ptext21 2F9A  
                                         __ptext13 20CC                                         _T1GCONbits 000FAA  
                                         __ptext30 2FB8                                           __ptext22 2BE8  
                                         __ptext14 2B22                                           __ptext31 2FC2  
                                         __ptext23 2FA4                                           __ptext15 2C58  
                                         __ptext40 109A                                           __ptext32 2FCC  
                                         __ptext24 2D3E                                           __ptext16 2DE8  
                                         __ptext41 1F56                                           __ptext33 2446  
                                         __ptext25 2F62                                           __ptext17 2E86  
                                         __ptext50 2750                                           __ptext34 2FD6  
                                         __ptext26 2FFA                                           __ptext18 2BAE  
                                         __ptext51 3008                                           __ptext43 2C22  
                                         __ptext35 2FE0                                           __ptext27 2F38  
                                         __ptext19 2F90                                           __ptext60 300C  
                                         __ptext52 2F4E                                           __ptext44 2E10  
                                         __ptext36 291A                                           __ptext28 2FAE  
                                         __ptext61 2ECC                                           __ptext53 2CE2  
                                         __ptext45 2C86                                           __ptext37 29DE  
                                         __ptext29 2B6A                                           __ptext70 221A  
                                         __ptext62 300E                                           __ptext54 300A  
                                         __ptext46 2F20                                           __ptext38 28B6  
                                         __ptext71 0000                                           __ptext63 2EEA  
                                         __ptext55 2D6A                                           __ptext47 3006  
                                         __ptext39 297C                                           __ptext64 3010  
                                         __ptext56 2FFE                                           __ptext48 2D96  
                                         __ptext65 284A                                           __ptext57 2FEA  
                                         __ptext49 2CB4                                           __ptext66 2F82  
                                         __ptext58 2D10                                           __ptext67 2E38  
                                         __ptext59 2FF2                                           __ptext68 1B0E  
                                         __ptext69 27D2                                         _T3GCONbits 000FB0  
                          TMR3_WriteTimer@timerVal 0001                convertReg2StandardCANid@ConvertedID 000C  
                   ??_ECAN_SetRXB0InterruptHandler 0062                convertReg2ExtendedCANid@returnValue 000A  
                                         _timerCAN 004B     EUSART1_SetOverrunErrorHandler@interruptHandler 0060  
                                         _printCAN 2E60                                           isa$xinst 000000  
                        ?_convertReg2ExtendedCANid 0001                                      ?_CAN_transmit 0072  
                                         int$flags 004E                                           _vfprintf 2A38  
               __end_of_INTERRUPT_InterruptManager 0148                         _INTERRUPT_InterruptManager 0008  
                                        printf@fmt 00BE                                  ??_TMR1_WriteTimer 0003  
             __end_of_TMR3_DefaultInterruptHandler 3008                       _TMR3_DefaultInterruptHandler 3006  
                      _EUSART1_FramingErrorHandler 0033                                        _RXB0CONbits 000F60  
                                      _RXB1CONbits 000F30                                         _INTCONbits 000FF2  
                                         isdigit@c 0060                             ??_INTERRUPT_Initialize 0060  
                                  ??_TMR1_CallBack 0002                                 _EXT_INT_Initialize 2F38  
                                         intlevel2 0000                                    ??_TMR2_CallBack 0002  
                                         isspace@c 0060                            ?_PIN_MANAGER_Initialize 0001  
                                  ??_TMR3_CallBack 0001                                ?_EXT_INT_Initialize 0001  
           __end_of_EUSART1_SetOverrunErrorHandler 2FC2                     _EUSART1_SetOverrunErrorHandler 2FB8  
                                      _TXB0CONbits 000F20                                         _RCSTA1bits 000FAB  
                                     ?_CAN_receive 0014                                        _TXB1CONbits 000F10  
                                      _TXB2CONbits 000F00                                       _test_Lux_Int 00E7  
                                   ??_CAN_transmit 0074                                  ?_convertCANid2Reg 0060  
                                      _TMR1_Reload 2F82                                           printf@ap 00C8  
   EUSART1_SetFramingErrorHandler@interruptHandler 0060                                 ??_convertCANid2Reg 006D  
                                      ??_vfpfcnvrt 00A3                                     _receptionTTCAN 284A  
                                ??_TMR3_WriteTimer 0003                                      ?_Etat_LUX_EXT 0001  
                               _eusart1RxLastError 004A                               ??_EXT_INT_Initialize 0062  
                  fp__TMR3_DefaultInterruptHandler 0000                      ?_TMR3_DefaultInterruptHandler 0001  
                            TMR2_ISR@CountCallBack 003D                                         _TTCAN_20ms 2D6A  
                   __end_of_PIN_MANAGER_Initialize 2D6A                                   ??_ECAN_RXB0I_ISR 0025  
                                  _PIN_MANAGER_IOC 2FFE                              _TMR2_InterruptHandler 002B  
                                  _TMR1_Initialize 2BE8  
